(provide 'ac-php-comm-tags-data)

(defvar ac-php-comm-tags-data-list
  '
(((#1="Imagick" (("m" "writeImagesFile" "writeImagesFile(<#resource $filehandle#>)" "S" "bool" "Imagick" "public") ("m" "writeImages" "writeImages(<#string $filename#>,<#bool $adjoin#>)" "S" "bool" "Imagick" "public") ("m" "writeImageFile" "writeImageFile(<#resource $filehandle#>)" "S" "bool" "Imagick" "public") ("m" "writeImage" "writeImage(<#string $filename = NULL#>)" "S" "bool" "Imagick" "public") ("m" "whiteThresholdImage" "whiteThresholdImage(<#mixed $threshold#>)" "S" "bool" "Imagick" "public") ("m" "waveImage" "waveImage(<#float $amplitude#>,<#float $length#>)" "S" "bool" "Imagick" "public") ("m" "vignetteImage" "vignetteImage(<#float $blackPoint#>,<#float $whitePoint#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "valid" "valid(<##>)" "S" "bool" "Imagick" "public") ("m" "unsharpMaskImage" "unsharpMaskImage(<#float $radius#>,<#float $sigma#>,<#float $amount#>,<#float $threshold#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "uniqueImageColors" "uniqueImageColors(<##>)" "S" "bool" "Imagick" "public") ("m" "trimImage" "trimImage(<#float $fuzz#>)" "S" "bool" "Imagick" "public") ("m" "transverseImage" "transverseImage(<##>)" "S" "bool" "Imagick" "public") ("m" "transposeImage" "transposeImage(<##>)" "S" "bool" "Imagick" "public") ("m" "transparentPaintImage" "transparentPaintImage(<#mixed $target#>,<#float $alpha#>,<#float $fuzz#>,<#bool $invert#>)" "S" "bool" "Imagick" "public") ("m" "transformImageColorspace" "transformImageColorspace(<#int $colorspace#>)" "S" "bool" "Imagick" "public") ("m" "transformImage" "transformImage(<#string $crop#>,<#string $geometry#>)" "S" "Imagick" "Imagick" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "Imagick" "public") ("m" "tintImage" "tintImage(<#mixed $tint#>,<#mixed $opacity#>)" "S" "bool" "Imagick" "public") ("m" "thumbnailImage" "thumbnailImage(<#int $columns#>,<#int $rows#>,<#bool $bestfit = false#>,<#bool $fill = false#>)" "S" "bool" "Imagick" "public") ("m" "thresholdImage" "thresholdImage(<#float $threshold#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "textureImage" "textureImage(<#Imagick $texture_wand#>)" "S" "bool" "Imagick" "public") ("m" "swirlImage" "swirlImage(<#float $degrees#>)" "S" "bool" "Imagick" "public") ("m" "subImageMatch" "subImageMatch(<#Imagick $Imagick#>,<#array &$offset#>,<#float &$similarity#>)" "S" "Imagick" "Imagick" "public") ("m" "stripImage" "stripImage(<##>)" "S" "bool" "Imagick" "public") ("m" "stereoImage" "stereoImage(<#Imagick $offset_wand#>)" "S" "bool" "Imagick" "public") ("m" "steganoImage" "steganoImage(<#Imagick $watermark_wand#>,<#int $offset#>)" "S" "Imagick" "Imagick" "public") ("m" "statisticImage" "statisticImage(<#int $type#>,<#int $width#>,<#int $height#>,<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "spreadImage" "spreadImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "spliceImage" "spliceImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "sparseColorImage" "sparseColorImage(<#int $SPARSE_METHOD#>,<#array $arguments#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "solarizeImage" "solarizeImage(<#int $threshold#>)" "S" "bool" "Imagick" "public") ("m" "smushImages" "smushImages(<#string $stack#>,<#string $offset#>)" "S" "Imagick" "Imagick" "public") ("m" "sketchImage" "sketchImage(<#float $radius#>,<#float $sigma#>,<#float $angle#>)" "S" "bool" "Imagick" "public") ("m" "sigmoidalContrastImage" "sigmoidalContrastImage(<#bool $sharpen#>,<#float $alpha#>,<#float $beta#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "shearImage" "shearImage(<#mixed $background#>,<#float $x_shear#>,<#float $y_shear#>)" "S" "bool" "Imagick" "public") ("m" "shaveImage" "shaveImage(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "sharpenImage" "sharpenImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "shadowImage" "shadowImage(<#float $opacity#>,<#float $sigma#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "shadeImage" "shadeImage(<#bool $gray#>,<#float $azimuth#>,<#float $elevation#>)" "S" "bool" "Imagick" "public") ("m" "setType" "setType(<#int $image_type#>)" "S" "bool" "Imagick" "public") ("m" "setSizeOffset" "setSizeOffset(<#int $columns#>,<#int $rows#>,<#int $offset#>)" "S" "bool" "Imagick" "public") ("m" "setSize" "setSize(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "setSamplingFactors" "setSamplingFactors(<#array $factors#>)" "S" "bool" "Imagick" "public") ("m" "setResourceLimit" "setResourceLimit(<#int $type#>,<#int $limit#>)" "S" "bool" "Imagick" "public") ("m" "setResolution" "setResolution(<#float $x_resolution#>,<#float $y_resolution#>)" "S" "bool" "Imagick" "public") ("m" "setRegistry" "setRegistry(<#string $key#>,<#string $value#>)" "S" "void" "Imagick" "public") ("m" "setProgressMonitor" "setProgressMonitor(<#callable $callback#>)" "S" "void" "Imagick" "public") ("m" "setPointSize" "setPointSize(<#float $point_size#>)" "S" "bool" "Imagick" "public") ("m" "setPage" "setPage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "setOption" "setOption(<#string $key#>,<#string $value#>)" "S" "bool" "Imagick" "public") ("m" "setLastIterator" "setLastIterator(<##>)" "S" "bool" "Imagick" "public") ("m" "setIteratorIndex" "setIteratorIndex(<#int $index#>)" "S" "bool" "Imagick" "public") ("m" "setInterlaceScheme" "setInterlaceScheme(<#int $interlace_scheme#>)" "S" "bool" "Imagick" "public") ("m" "setImageWhitePoint" "setImageWhitePoint(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageVirtualPixelMethod" "setImageVirtualPixelMethod(<#int $method#>)" "S" "bool" "Imagick" "public") ("m" "setImageUnits" "setImageUnits(<#int $units#>)" "S" "bool" "Imagick" "public") ("m" "setImageType" "setImageType(<#int $image_type#>)" "S" "bool" "Imagick" "public") ("m" "setImageTicksPerSecond" "setImageTicksPerSecond(<#int $ticks_per_second#>)" "S" "bool" "Imagick" "public") ("m" "setImageScene" "setImageScene(<#int $scene#>)" "S" "bool" "Imagick" "public") ("m" "setImageResolution" "setImageResolution(<#float $x_resolution#>,<#float $y_resolution#>)" "S" "bool" "Imagick" "public") ("m" "setImageRenderingIntent" "setImageRenderingIntent(<#int $rendering_intent#>)" "S" "bool" "Imagick" "public") ("m" "setImageRedPrimary" "setImageRedPrimary(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageProperty" "setImageProperty(<#string $name#>,<#string $value#>)" "S" "bool" "Imagick" "public") ("m" "setImageProfile" "setImageProfile(<#string $name#>,<#string $profile#>)" "S" "bool" "Imagick" "public") ("m" "setImagePage" "setImagePage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageOrientation" "setImageOrientation(<#int $orientation#>)" "S" "bool" "Imagick" "public") ("m" "setImageOpacity" "setImageOpacity(<#float $opacity#>)" "S" "bool" "Imagick" "public") ("m" "setImageMatteColor" "setImageMatteColor(<#mixed $matte#>)" "S" "bool" "Imagick" "public") ("m" "setImageMatte" "setImageMatte(<#bool $matte#>)" "S" "bool" "Imagick" "public") ("m" "setImageIterations" "setImageIterations(<#int $iterations#>)" "S" "bool" "Imagick" "public") ("m" "setImageInterpolateMethod" "setImageInterpolateMethod(<#int $method#>)" "S" "bool" "Imagick" "public") ("m" "setImageInterlaceScheme" "setImageInterlaceScheme(<#int $interlace_scheme#>)" "S" "bool" "Imagick" "public") ("m" "setImageIndex" "setImageIndex(<#int $index#>)" "S" "bool" "Imagick" "public") ("m" "setImageGreenPrimary" "setImageGreenPrimary(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageGravity" "setImageGravity(<#int $gravity#>)" "S" "bool" "Imagick" "public") ("m" "setImageGamma" "setImageGamma(<#float $gamma#>)" "S" "bool" "Imagick" "public") ("m" "setImageFormat" "setImageFormat(<#string $format#>)" "S" "bool" "Imagick" "public") ("m" "setImageFilename" "setImageFilename(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "setImageExtent" "setImageExtent(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "setImageDispose" "setImageDispose(<#int $dispose#>)" "S" "bool" "Imagick" "public") ("m" "setImageDepth" "setImageDepth(<#int $depth#>)" "S" "bool" "Imagick" "public") ("m" "setImageDelay" "setImageDelay(<#int $delay#>)" "S" "bool" "Imagick" "public") ("m" "setImageCompressionQuality" "setImageCompressionQuality(<#int $quality#>)" "S" "bool" "Imagick" "public") ("m" "setImageCompression" "setImageCompression(<#int $compression#>)" "S" "bool" "Imagick" "public") ("m" "setImageCompose" "setImageCompose(<#int $compose#>)" "S" "bool" "Imagick" "public") ("m" "setImageColorspace" "setImageColorspace(<#int $colorspace#>)" "S" "bool" "Imagick" "public") ("m" "setImageColormapColor" "setImageColormapColor(<#int $index#>,<#ImagickPixel $color#>)" "S" "bool" "Imagick" "public") ("m" "setImageClipMask" "setImageClipMask(<#Imagick $clip_mask#>)" "S" "bool" "Imagick" "public") ("m" "setImageChannelDepth" "setImageChannelDepth(<#int $channel#>,<#int $depth#>)" "S" "bool" "Imagick" "public") ("m" "setImageBorderColor" "setImageBorderColor(<#mixed $border#>)" "S" "bool" "Imagick" "public") ("m" "setImageBluePrimary" "setImageBluePrimary(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageBiasQuantum" "setImageBiasQuantum(<#string $bias#>)" "S" "void" "Imagick" "public") ("m" "setImageBias" "setImageBias(<#float $bias#>)" "S" "bool" "Imagick" "public") ("m" "setImageBackgroundColor" "setImageBackgroundColor(<#mixed $background#>)" "S" "bool" "Imagick" "public") ("m" "setImageAttribute" "setImageAttribute(<#string $key#>,<#string $value#>)" "S" "void" "Imagick" "public") ("m" "setImageArtifact" "setImageArtifact(<#string $artifact#>,<#string $value#>)" "S" "bool" "Imagick" "public") ("m" "setImageAlphaChannel" "setImageAlphaChannel(<#int $mode#>)" "S" "bool" "Imagick" "public") ("m" "setImage" "setImage(<#Imagick $replace#>)" "S" "bool" "Imagick" "public") ("m" "setGravity" "setGravity(<#int $gravity#>)" "S" "bool" "Imagick" "public") ("m" "setFormat" "setFormat(<#string $format#>)" "S" "bool" "Imagick" "public") ("m" "setFont" "setFont(<#string $font#>)" "S" "bool" "Imagick" "public") ("m" "setFirstIterator" "setFirstIterator(<##>)" "S" "bool" "Imagick" "public") ("m" "setFilename" "setFilename(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "setCompressionQuality" "setCompressionQuality(<#int $quality#>)" "S" "bool" "Imagick" "public") ("m" "setCompression" "setCompression(<#int $compression#>)" "S" "bool" "Imagick" "public") ("m" "setColorspace" "setColorspace(<#int $COLORSPACE#>)" "S" "bool" "Imagick" "public") ("m" "setBackgroundColor" "setBackgroundColor(<#mixed $background#>)" "S" "bool" "Imagick" "public") ("m" "sepiaToneImage" "sepiaToneImage(<#float $threshold#>)" "S" "bool" "Imagick" "public") ("m" "separateImageChannel" "separateImageChannel(<#int $channel#>)" "S" "bool" "Imagick" "public") ("m" "selectiveBlurImage" "selectiveBlurImage(<#float $radius#>,<#float $sigma#>,<#float $threshold#>,<#int $CHANNEL#>)" "S" "void" "Imagick" "public") ("m" "segmentImage" "segmentImage(<#int $COLORSPACE#>,<#float $cluster_threshold#>,<#float $smooth_threshold#>,<#bool $verbose = false#>)" "S" "bool" "Imagick" "public") ("m" "scaleImage" "scaleImage(<#int $cols#>,<#int $rows#>,<#bool $bestfit = false#>)" "S" "bool" "Imagick" "public") ("m" "sampleImage" "sampleImage(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "roundCorners" "roundCorners(<#float $x_rounding#>,<#float $y_rounding#>,<#float $stroke_width = 10#>,<#float $displace = 5#>,<#float $size_correction = -6#>)" "S" "bool" "Imagick" "public") ("m" "rotationalBlurImage" "rotationalBlurImage(<#string $angle#>,<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "rotateImage" "rotateImage(<#mixed $background#>,<#float $degrees#>)" "S" "bool" "Imagick" "public") ("m" "rollImage" "rollImage(<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "resizeImage" "resizeImage(<#int $columns#>,<#int $rows#>,<#int $filter#>,<#float $blur#>,<#bool $bestfit = false#>)" "S" "bool" "Imagick" "public") ("m" "resetImagePage" "resetImagePage(<#string $page#>)" "S" "bool" "Imagick" "public") ("m" "resampleImage" "resampleImage(<#float $x_resolution#>,<#float $y_resolution#>,<#int $filter#>,<#float $blur#>)" "S" "bool" "Imagick" "public") ("m" "render" "render(<##>)" "S" "bool" "Imagick" "public") ("m" "removeImageProfile" "removeImageProfile(<#string $name#>)" "S" "string" "Imagick" "public") ("m" "removeImage" "removeImage(<##>)" "S" "bool" "Imagick" "public") ("m" "remapImage" "remapImage(<#Imagick $replacement#>,<#int $DITHER#>)" "S" "bool" "Imagick" "public") ("m" "reduceNoiseImage" "reduceNoiseImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "recolorImage" "recolorImage(<#array $matrix#>)" "S" "bool" "Imagick" "public") ("m" "readImages" "readImages(<#string $filenames#>)" "S" "Imagick" "Imagick" "public") ("m" "readImageFile" "readImageFile(<#resource $filehandle#>,<#string $fileName = null#>)" "S" "bool" "Imagick" "public") ("m" "readImageBlob" "readImageBlob(<#string $image#>,<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "readImage" "readImage(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "randomThresholdImage" "randomThresholdImage(<#float $low#>,<#float $high#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "raiseImage" "raiseImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>,<#bool $raise#>)" "S" "bool" "Imagick" "public") ("m" "radialBlurImage" "radialBlurImage(<#float $angle#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "queryFormats" "queryFormats(<#string $pattern = \"*\"#>)" "S" "array" "Imagick" "public") ("m" "queryFonts" "queryFonts(<#string $pattern = \"*\"#>)" "S" "array" "Imagick" "public") ("m" "queryFontMetrics" "queryFontMetrics(<#ImagickDraw $properties#>,<#string $text#>,<#bool $multiline#>)" "S" "array" "Imagick" "public") ("m" "quantizeImages" "quantizeImages(<#int $numberColors#>,<#int $colorspace#>,<#int $treedepth#>,<#bool $dither#>,<#bool $measureError#>)" "S" "bool" "Imagick" "public") ("m" "quantizeImage" "quantizeImage(<#int $numberColors#>,<#int $colorspace#>,<#int $treedepth#>,<#bool $dither#>,<#bool $measureError#>)" "S" "bool" "Imagick" "public") ("m" "profileImage" "profileImage(<#string $name#>,<#string $profile#>)" "S" "bool" "Imagick" "public") ("m" "previousImage" "previousImage(<##>)" "S" "bool" "Imagick" "public") ("m" "previewImages" "previewImages(<#int $preview#>)" "S" "bool" "Imagick" "public") ("m" "posterizeImage" "posterizeImage(<#int $levels#>,<#bool $dither#>)" "S" "bool" "Imagick" "public") ("m" "polaroidImage" "polaroidImage(<#ImagickDraw $properties#>,<#float $angle#>)" "S" "bool" "Imagick" "public") ("m" "pingImageFile" "pingImageFile(<#resource $filehandle#>,<#string $fileName#>)" "S" "bool" "Imagick" "public") ("m" "pingImageBlob" "pingImageBlob(<#string $image#>)" "S" "bool" "Imagick" "public") ("m" "pingImage" "pingImage(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "paintTransparentImage" "paintTransparentImage(<#mixed $target#>,<#float $alpha#>,<#float $fuzz#>)" "S" "bool" "Imagick" "public") ("m" "paintOpaqueImage" "paintOpaqueImage(<#mixed $target#>,<#mixed $fill#>,<#float $fuzz#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "paintFloodfillImage" "paintFloodfillImage(<#mixed $fill#>,<#float $fuzz#>,<#mixed $bordercolor#>,<#int $x#>,<#int $y#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "orderedPosterizeImage" "orderedPosterizeImage(<#string $threshold_map#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "optimizeImageLayers" "optimizeImageLayers(<##>)" "S" "bool" "Imagick" "public") ("m" "opaquePaintImage" "opaquePaintImage(<#mixed $target#>,<#mixed $fill#>,<#float $fuzz#>,<#bool $invert#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "oilPaintImage" "oilPaintImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "normalizeImage" "normalizeImage(<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "nextImage" "nextImage(<##>)" "S" "bool" "Imagick" "public") ("m" "newPseudoImage" "newPseudoImage(<#int $columns#>,<#int $rows#>,<#string $pseudoString#>)" "S" "bool" "Imagick" "public") ("m" "newImage" "newImage(<#int $cols#>,<#int $rows#>,<#mixed $background#>,<#string $format#>)" "S" "bool" "Imagick" "public") ("m" "negateImage" "negateImage(<#bool $gray#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "motionBlurImage" "motionBlurImage(<#float $radius#>,<#float $sigma#>,<#float $angle#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "mosaicImages" "mosaicImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "morphology" "morphology(<#int $morphologyMethod#>,<#int $iterations#>,<#ImagickKernel $ImagickKernel#>,<#string $CHANNEL#>)" "S" "void" "Imagick" "public") ("m" "morphImages" "morphImages(<#int $number_frames#>)" "S" "Imagick" "Imagick" "public") ("m" "montageImage" "montageImage(<#ImagickDraw $draw#>,<#string $tile_geometry#>,<#string $thumbnail_geometry#>,<#int $mode#>,<#string $frame#>)" "S" "Imagick" "Imagick" "public") ("m" "modulateImage" "modulateImage(<#float $brightness#>,<#float $saturation#>,<#float $hue#>)" "S" "bool" "Imagick" "public") ("m" "minifyImage" "minifyImage(<##>)" "S" "bool" "Imagick" "public") ("m" "mergeImageLayers" "mergeImageLayers(<#int $layer_method#>)" "S" "Imagick" "Imagick" "public") ("m" "medianFilterImage" "medianFilterImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "matteFloodfillImage" "matteFloodfillImage(<#float $alpha#>,<#float $fuzz#>,<#mixed $bordercolor#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "mapImage" "mapImage(<#Imagick $map#>,<#bool $dither#>)" "S" "bool" "Imagick" "public") ("m" "magnifyImage" "magnifyImage(<##>)" "S" "bool" "Imagick" "public") ("m" "listRegistry" "listRegistry(<##>)" "S" "array" "Imagick" "public") ("m" "liquidRescaleImage" "liquidRescaleImage(<#int $width#>,<#int $height#>,<#float $delta_x#>,<#float $rigidity#>)" "S" "bool" "Imagick" "public") ("m" "linearStretchImage" "linearStretchImage(<#float $blackPoint#>,<#float $whitePoint#>)" "S" "bool" "Imagick" "public") ("m" "levelImage" "levelImage(<#float $blackPoint#>,<#float $gamma#>,<#float $whitePoint#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "labelImage" "labelImage(<#string $label#>)" "S" "bool" "Imagick" "public") ("m" "inverseFourierTransformImage" "inverseFourierTransformImage(<#string $complement#>,<#string $magnitude#>)" "S" "void" "Imagick" "public") ("m" "importImagePixels" "importImagePixels(<#int $x#>,<#int $y#>,<#int $width#>,<#int $height#>,<#string $map#>,<#int $storage#>,<#array $pixels#>)" "S" "bool" "Imagick" "public") ("m" "implodeImage" "implodeImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "identifyImage" "identifyImage(<#bool $appendRawOutput = false#>)" "S" "array" "Imagick" "public") ("m" "identifyFormat" "identifyFormat(<#string $embedText#>)" "S" "string" "Imagick" "public") ("m" "hasPreviousImage" "hasPreviousImage(<##>)" "S" "bool" "Imagick" "public") ("m" "hasNextImage" "hasNextImage(<##>)" "S" "bool" "Imagick" "public") ("m" "haldClutImage" "haldClutImage(<#Imagick $clut#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "getVersion" "getVersion(<##>)" "S" "array" "Imagick" "public") ("m" "getSizeOffset" "getSizeOffset(<##>)" "S" "int" "Imagick" "public") ("m" "getSize" "getSize(<##>)" "S" "array" "Imagick" "public") ("m" "getSamplingFactors" "getSamplingFactors(<##>)" "S" "array" "Imagick" "public") ("m" "getResourceLimit" "getResourceLimit(<#int $type#>)" "S" "int" "Imagick" "public") ("m" "getResource" "getResource(<#int $type#>)" "S" "int" "Imagick" "public") ("m" "getReleaseDate" "getReleaseDate(<##>)" "S" "string" "Imagick" "public") ("m" "getRegistry" "getRegistry(<#string $key#>)" "S" "string" "Imagick" "public") ("m" "getQuantumRange" "getQuantumRange(<##>)" "S" "array" "Imagick" "public") ("m" "getQuantumDepth" "getQuantumDepth(<##>)" "S" "array" "Imagick" "public") ("m" "getQuantum" "getQuantum(<##>)" "S" "int" "Imagick" "public") ("m" "getPointSize" "getPointSize(<##>)" "S" "float" "Imagick" "public") ("m" "getPixelRegionIterator" "getPixelRegionIterator(<#int $x#>,<#int $y#>,<#int $columns#>,<#int $rows#>)" "S" "ImagickPixelIterator" "Imagick" "public") ("m" "getPixelIterator" "getPixelIterator(<##>)" "S" "ImagickPixelIterator" "Imagick" "public") ("m" "getPage" "getPage(<##>)" "S" "array" "Imagick" "public") ("m" "getPackageName" "getPackageName(<##>)" "S" "string" "Imagick" "public") ("m" "getOption" "getOption(<#string $key#>)" "S" "string" "Imagick" "public") ("m" "getNumberImages" "getNumberImages(<##>)" "S" "int" "Imagick" "public") ("m" "getIteratorIndex" "getIteratorIndex(<##>)" "S" "int" "Imagick" "public") ("m" "getInterlaceScheme" "getInterlaceScheme(<##>)" "S" "int" "Imagick" "public") ("m" "getImageWidth" "getImageWidth(<##>)" "S" "int" "Imagick" "public") ("m" "getImageWhitePoint" "getImageWhitePoint(<##>)" "S" "array" "Imagick" "public") ("m" "getImageVirtualPixelMethod" "getImageVirtualPixelMethod(<##>)" "S" "int" "Imagick" "public") ("m" "getImageUnits" "getImageUnits(<##>)" "S" "int" "Imagick" "public") ("m" "getImageType" "getImageType(<##>)" "S" "int" "Imagick" "public") ("m" "getImageTotalInkDensity" "getImageTotalInkDensity(<##>)" "S" "float" "Imagick" "public") ("m" "getImageTicksPerSecond" "getImageTicksPerSecond(<##>)" "S" "int" "Imagick" "public") ("m" "getImageSize" "getImageSize(<##>)" "S" "int" "Imagick" "public") ("m" "getImageSignature" "getImageSignature(<##>)" "S" "string" "Imagick" "public") ("m" "getImageScene" "getImageScene(<##>)" "S" "int" "Imagick" "public") ("m" "getImagesBlob" "getImagesBlob(<##>)" "S" "string" "Imagick" "public") ("m" "getImageResolution" "getImageResolution(<##>)" "S" "array" "Imagick" "public") ("m" "getImageRenderingIntent" "getImageRenderingIntent(<##>)" "S" "int" "Imagick" "public") ("m" "getImageRegion" "getImageRegion(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "Imagick" "Imagick" "public") ("m" "getImageRedPrimary" "getImageRedPrimary(<##>)" "S" "array" "Imagick" "public") ("m" "getImageProperty" "getImageProperty(<#string $name#>)" "S" "string" "Imagick" "public") ("m" "getImageProperties" "getImageProperties(<#string $pattern = \"*\"#>,<#bool $only_names = true#>)" "S" "array" "Imagick" "public") ("m" "getImageProfiles" "getImageProfiles(<#string $pattern = \"*\"#>,<#bool $only_names = true#>)" "S" "array" "Imagick" "public") ("m" "getImageProfile" "getImageProfile(<#string $name#>)" "S" "string" "Imagick" "public") ("m" "getImagePixelColor" "getImagePixelColor(<#int $x#>,<#int $y#>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImagePage" "getImagePage(<##>)" "S" "array" "Imagick" "public") ("m" "getImageOrientation" "getImageOrientation(<##>)" "S" "int" "Imagick" "public") ("m" "getImageMimeType" "getImageMimeType(<##>)" "S" "string" "Imagick" "public") ("m" "getImageMatteColor" "getImageMatteColor(<##>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageMatte" "getImageMatte(<##>)" "S" "bool" "Imagick" "public") ("m" "getImageMagickLicense" "getImageMagickLicense(<##>)" "S" "string" "Imagick" "public") ("m" "getImageLength" "getImageLength(<##>)" "S" "int" "Imagick" "public") ("m" "getImageIterations" "getImageIterations(<##>)" "S" "int" "Imagick" "public") ("m" "getImageInterpolateMethod" "getImageInterpolateMethod(<##>)" "S" "int" "Imagick" "public") ("m" "getImageInterlaceScheme" "getImageInterlaceScheme(<##>)" "S" "int" "Imagick" "public") ("m" "getImageIndex" "getImageIndex(<##>)" "S" "int" "Imagick" "public") ("m" "getImageHistogram" "getImageHistogram(<##>)" "S" "array" "Imagick" "public") ("m" "getImageHeight" "getImageHeight(<##>)" "S" "int" "Imagick" "public") ("m" "getImageGreenPrimary" "getImageGreenPrimary(<##>)" "S" "array" "Imagick" "public") ("m" "getImageGravity" "getImageGravity(<##>)" "S" "int" "Imagick" "public") ("m" "getImageGeometry" "getImageGeometry(<##>)" "S" "array" "Imagick" "public") ("m" "getImageGamma" "getImageGamma(<##>)" "S" "float" "Imagick" "public") ("m" "getImageFormat" "getImageFormat(<##>)" "S" "string" "Imagick" "public") ("m" "getImageFilename" "getImageFilename(<##>)" "S" "string" "Imagick" "public") ("m" "getImageExtrema" "getImageExtrema(<##>)" "S" "array" "Imagick" "public") ("m" "getImageDistortion" "getImageDistortion(<#MagickWand $reference#>,<#int $metric#>)" "S" "float" "Imagick" "public") ("m" "getImageDispose" "getImageDispose(<##>)" "S" "int" "Imagick" "public") ("m" "getImageDepth" "getImageDepth(<##>)" "S" "int" "Imagick" "public") ("m" "getImageDelay" "getImageDelay(<##>)" "S" "int" "Imagick" "public") ("m" "getImageCompressionQuality" "getImageCompressionQuality(<##>)" "S" "int" "Imagick" "public") ("m" "getImageCompression" "getImageCompression(<##>)" "S" "int" "Imagick" "public") ("m" "getImageCompose" "getImageCompose(<##>)" "S" "int" "Imagick" "public") ("m" "getImageColorspace" "getImageColorspace(<##>)" "S" "int" "Imagick" "public") ("m" "getImageColors" "getImageColors(<##>)" "S" "int" "Imagick" "public") ("m" "getImageColormapColor" "getImageColormapColor(<#int $index#>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageClipMask" "getImageClipMask(<##>)" "S" "Imagick" "Imagick" "public") ("m" "getImageChannelStatistics" "getImageChannelStatistics(<##>)" "S" "array" "Imagick" "public") ("m" "getImageChannelRange" "getImageChannelRange(<#int $channel#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelMean" "getImageChannelMean(<#int $channel#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelKurtosis" "getImageChannelKurtosis(<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelExtrema" "getImageChannelExtrema(<#int $channel#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelDistortions" "getImageChannelDistortions(<#Imagick $reference#>,<#int $metric#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "float" "Imagick" "public") ("m" "getImageChannelDistortion" "getImageChannelDistortion(<#Imagick $reference#>,<#int $channel#>,<#int $metric#>)" "S" "float" "Imagick" "public") ("m" "getImageChannelDepth" "getImageChannelDepth(<#int $channel#>)" "S" "int" "Imagick" "public") ("m" "getImageBorderColor" "getImageBorderColor(<##>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageBluePrimary" "getImageBluePrimary(<##>)" "S" "array" "Imagick" "public") ("m" "getImageBlob" "getImageBlob(<##>)" "S" "string" "Imagick" "public") ("m" "getImageBackgroundColor" "getImageBackgroundColor(<##>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageAttribute" "getImageAttribute(<#string $key#>)" "S" "string" "Imagick" "public") ("m" "getImageArtifact" "getImageArtifact(<#string $artifact#>)" "S" "string" "Imagick" "public") ("m" "getImageAlphaChannel" "getImageAlphaChannel(<##>)" "S" "int" "Imagick" "public") ("m" "getImage" "getImage(<##>)" "S" "Imagick" "Imagick" "public") ("m" "getHomeURL" "getHomeURL(<##>)" "S" "string" "Imagick" "public") ("m" "getGravity" "getGravity(<##>)" "S" "int" "Imagick" "public") ("m" "getFormat" "getFormat(<##>)" "S" "string" "Imagick" "public") ("m" "getFont" "getFont(<##>)" "S" "string" "Imagick" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "Imagick" "public") ("m" "getCopyright" "getCopyright(<##>)" "S" "string" "Imagick" "public") ("m" "getCompressionQuality" "getCompressionQuality(<##>)" "S" "int" "Imagick" "public") ("m" "getCompression" "getCompression(<##>)" "S" "int" "Imagick" "public") ("m" "getColorspace" "getColorspace(<##>)" "S" "int" "Imagick" "public") ("m" "gaussianBlurImage" "gaussianBlurImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "gammaImage" "gammaImage(<#float $gamma#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "fxImage" "fxImage(<#string $expression#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "Imagick" "Imagick" "public") ("m" "functionImage" "functionImage(<#int $function#>,<#array $arguments#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "frameImage" "frameImage(<#mixed $matte_color#>,<#int $width#>,<#int $height#>,<#int $inner_bevel#>,<#int $outer_bevel#>)" "S" "bool" "Imagick" "public") ("m" "forwardFourierTransformimage" "forwardFourierTransformimage(<#bool $magnitude#>)" "S" "void" "Imagick" "public") ("m" "flopImage" "flopImage(<##>)" "S" "bool" "Imagick" "public") ("m" "floodFillPaintImage" "floodFillPaintImage(<#mixed $fill#>,<#float $fuzz#>,<#mixed $target#>,<#int $x#>,<#int $y#>,<#bool $invert#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "flipImage" "flipImage(<##>)" "S" "bool" "Imagick" "public") ("m" "flattenImages" "flattenImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "filter" "filter(<#ImagickKernel $ImagickKernel#>,<#int $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "extentImage" "extentImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "exportImagePixels" "exportImagePixels(<#int $x#>,<#int $y#>,<#int $width#>,<#int $height#>,<#string $map#>,<#int $STORAGE#>)" "S" "array" "Imagick" "public") ("m" "evaluateImage" "evaluateImage(<#int $op#>,<#float $constant#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "equalizeImage" "equalizeImage(<##>)" "S" "bool" "Imagick" "public") ("m" "enhanceImage" "enhanceImage(<##>)" "S" "bool" "Imagick" "public") ("m" "encipherImage" "encipherImage(<#string $passphrase#>)" "S" "bool" "Imagick" "public") ("m" "embossImage" "embossImage(<#float $radius#>,<#float $sigma#>)" "S" "bool" "Imagick" "public") ("m" "edgeImage" "edgeImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "drawImage" "drawImage(<#ImagickDraw $draw#>)" "S" "bool" "Imagick" "public") ("m" "distortImage" "distortImage(<#int $method#>,<#array $arguments#>,<#bool $bestfit#>)" "S" "bool" "Imagick" "public") ("m" "displayImages" "displayImages(<#string $servername#>)" "S" "bool" "Imagick" "public") ("m" "displayImage" "displayImage(<#string $servername#>)" "S" "bool" "Imagick" "public") ("m" "destroy" "destroy(<##>)" "S" "bool" "Imagick" "public") ("m" "despeckleImage" "despeckleImage(<##>)" "S" "bool" "Imagick" "public") ("m" "deskewImage" "deskewImage(<#float $threshold#>)" "S" "bool" "Imagick" "public") ("m" "deleteImageProperty" "deleteImageProperty(<#string $name#>)" "S" "void" "Imagick" "public") ("m" "deleteImageArtifact" "deleteImageArtifact(<#string $artifact#>)" "S" "bool" "Imagick" "public") ("m" "deconstructImages" "deconstructImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "decipherImage" "decipherImage(<#string $passphrase#>)" "S" "bool" "Imagick" "public") ("m" "cycleColormapImage" "cycleColormapImage(<#int $displace#>)" "S" "bool" "Imagick" "public") ("m" "current" "current(<##>)" "S" "Imagick" "Imagick" "public") ("m" "cropThumbnailImage" "cropThumbnailImage(<#int $width#>,<#int $height#>)" "S" "bool" "Imagick" "public") ("m" "cropImage" "cropImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "count" "count(<#string $mode#>)" "S" "void" "Imagick" "public") ("m" "convolveImage" "convolveImage(<#array $kernel#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "contrastStretchImage" "contrastStretchImage(<#float $black_point#>,<#float $white_point#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "contrastImage" "contrastImage(<#bool $sharpen#>)" "S" "bool" "Imagick" "public") ("m" "__construct" "__construct(<#mixed $files#>)" #519="S" "void" "Imagick" "public") ("m" "compositeImage" "compositeImage(<#Imagick $composite_object#>,<#int $composite#>,<#int $x#>,<#int $y#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "compareImages" "compareImages(<#Imagick $compare#>,<#int $metric#>)" "S" "array" "Imagick" "public") ("m" "compareImageLayers" "compareImageLayers(<#int $method#>)" "S" "Imagick" "Imagick" "public") ("m" "compareImageChannels" "compareImageChannels(<#Imagick $image#>,<#int $channelType#>,<#int $metricType#>)" "S" "array" "Imagick" "public") ("m" "commentImage" "commentImage(<#string $comment#>)" "S" "bool" "Imagick" "public") ("m" "combineImages" "combineImages(<#int $channelType#>)" "S" "Imagick" "Imagick" "public") ("m" "colorMatrixImage" "colorMatrixImage(<#string $color_matrix = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "colorizeImage" "colorizeImage(<#mixed $colorize#>,<#mixed $opacity#>)" "S" "bool" "Imagick" "public") ("m" "colorFloodfillImage" "colorFloodfillImage(<#mixed $fill#>,<#float $fuzz#>,<#mixed $bordercolor#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "coalesceImages" "coalesceImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "clutImage" "clutImage(<#Imagick $lookup_table#>,<#float $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "clone_" "clone_(<##>)" "S" "Imagick" "Imagick" "public") ("m" "clipPathImage" "clipPathImage(<#string $pathname#>,<#bool $inside#>)" "S" "bool" "Imagick" "public") ("m" "clipImagePath" "clipImagePath(<#string $pathname#>,<#string $inside#>)" "S" "void" "Imagick" "public") ("m" "clipImage" "clipImage(<##>)" "S" "bool" "Imagick" "public") ("m" "clear" "clear(<##>)" "S" "bool" "Imagick" "public") ("m" "clampImage" "clampImage(<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "chopImage" "chopImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "charcoalImage" "charcoalImage(<#float $radius#>,<#float $sigma#>)" "S" "bool" "Imagick" "public") ("m" "brightnessContrastImage" "brightnessContrastImage(<#string $brightness#>,<#string $contrast#>,<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "borderImage" "borderImage(<#mixed $bordercolor#>,<#int $width#>,<#int $height#>)" "S" "bool" "Imagick" "public") ("m" "blurImage" "blurImage(<#float $radius#>,<#float $sigma#>,<#int $channel#>)" "S" "bool" "Imagick" "public") ("m" "blueShiftImage" "blueShiftImage(<#float $factor = 1.5#>)" "S" "void" "Imagick" "public") ("m" "blackThresholdImage" "blackThresholdImage(<#mixed $threshold#>)" "S" "bool" "Imagick" "public") ("m" "averageImages" "averageImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "autoLevelImage" "autoLevelImage(<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "appendImages" "appendImages(<#bool $stack = false#>)" "S" "Imagick" "Imagick" "public") ("m" "annotateImage" "annotateImage(<#ImagickDraw $draw_settings#>,<#float $x#>,<#float $y#>,<#float $angle#>,<#string $text#>)" "S" "bool" "Imagick" "public") ("m" "animateImages" "animateImages(<#string $x_server#>)" "S" "bool" "Imagick" "public") ("m" "affineTransformImage" "affineTransformImage(<#ImagickDraw $matrix#>)" "S" "bool" "Imagick" "public") ("m" "addNoiseImage" "addNoiseImage(<#int $noise_type#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "addImage" "addImage(<#Imagick $source#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveThresholdImage" "adaptiveThresholdImage(<#int $width#>,<#int $height#>,<#int $offset#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveSharpenImage" "adaptiveSharpenImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveResizeImage" "adaptiveResizeImage(<#int $columns#>,<#int $rows#>,<#bool $bestfit = false#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveBlurImage" "adaptiveBlurImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" #1# "public"))) (#3="DatePeriod" (("m" "__construct" "__construct(<#string $isostr#>,<#int $options#>)" #518="S" "void" "DatePeriod" "public") ("m" "__construct" "__construct(<#DateTimeInterface $start#>,<#DateInterval $interval#>,<#DateTimeInterface $end#>,<#int $options#>)" "S" "void" "DatePeriod" "public") ("m" "__construct" "__construct(<#DateTimeInterface $start#>,<#DateInterval $interval#>,<#int $recurrences#>,<#int $options#>)" "S" "void" "DatePeriod" "public") ("d" #2="EXCLUDE_START_DATE" #2# "S" "integer" #3# "public"))) (#12="DateInterval" (("m" "format" "format(<#string $format#>)" "S" "string" "DateInterval" "public") ("m" "createFromDateString" "createFromDateString(<#string $time#>)" "S" "DateInterval" "DateInterval" "public") ("m" "__construct" "__construct(<#string $interval_spec#>)" #517="S" "void" "DateInterval" "public") ("p" #4="days" #4# "S" "mixed" "DateInterval" "public") ("p" #5="invert" #5# "S" "integer" "DateInterval" "public") ("p" #6="s" #6# "S" "integer" "DateInterval" "public") ("p" #7="i" #7# "S" "integer" "DateInterval" "public") ("p" #8="h" #8# "S" "integer" "DateInterval" "public") ("p" #9="d" #9# "S" "integer" "DateInterval" "public") ("p" #10="m" #10# "S" "integer" "DateInterval" "public") ("p" #11="y" #11# "S" "integer" #12# "public"))) (#27="DateTimeZone" (("m" "listIdentifiers" "listIdentifiers(<#int $what = DateTimeZone::ALL#>,<#string $country = NULL#>)" "S" "array" "DateTimeZone" "public") ("m" "listAbbreviations" "listAbbreviations(<##>)" "S" "array" "DateTimeZone" "public") ("m" "getTransitions" "getTransitions(<#int $timestamp_begin#>,<#int $timestamp_end#>)" "S" "array" "DateTimeZone" "public") ("m" "getOffset" "getOffset(<#DateTime $datetime#>)" "S" "int" "DateTimeZone" "public") ("m" "getName" "getName(<##>)" "S" "string" "DateTimeZone" "public") ("m" "getLocation" "getLocation(<##>)" "S" "array" "DateTimeZone" "public") ("m" "__construct" "__construct(<#string $timezone#>)" #516="S" "void" "DateTimeZone" "public") ("d" #13="PER_COUNTRY" #13# "S" "integer" "DateTimeZone" "public") ("d" #14="ALL_WITH_BC" #14# "S" "integer" "DateTimeZone" "public") ("d" #15="ALL" #15# "S" "integer" "DateTimeZone" "public") ("d" #16="UTC" #16# "S" "integer" "DateTimeZone" "public") ("d" #17="PACIFIC" #17# "S" "integer" "DateTimeZone" "public") ("d" #18="INDIAN" #18# "S" "integer" "DateTimeZone" "public") ("d" #19="EUROPE" #19# "S" "integer" "DateTimeZone" "public") ("d" #20="AUSTRALIA" #20# "S" "integer" "DateTimeZone" "public") ("d" #21="ATLANTIC" #21# "S" "integer" "DateTimeZone" "public") ("d" #22="ASIA" #22# "S" "integer" "DateTimeZone" "public") ("d" #23="ARCTIC" #23# "S" "integer" "DateTimeZone" "public") ("d" #24="ANTARCTICA" #24# "S" "integer" "DateTimeZone" "public") ("d" #25="AMERICA" #25# "S" "integer" "DateTimeZone" "public") ("d" #26="AFRICA" #26# "S" "integer" #27# "public"))) (#28="DateTimeInterface" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "DateTimeInterface" "public") ("m" "getTimezone" "getTimezone(<##>)" "S" "DateTimeZone" "DateTimeInterface" "public") ("m" "getTimestamp" "getTimestamp(<##>)" "S" "int" "DateTimeInterface" "public") ("m" "getOffset" "getOffset(<##>)" "S" "int" "DateTimeInterface" "public") ("m" "format" "format(<#string $format#>)" "S" "string" "DateTimeInterface" "public") ("m" "diff" "diff(<#DateTimeInterface $datetime2#>,<#bool $absolute = false#>)" "S" "DateInterval" #28# "public"))) (#29="DateTimeImmutable" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "DateTimeImmutable" "public") ("m" "getTimezone" "getTimezone(<##>)" "S" "DateTimeZone" "DateTimeImmutable" "public") ("m" "getTimestamp" "getTimestamp(<##>)" "S" "int" "DateTimeImmutable" "public") ("m" "getOffset" "getOffset(<##>)" "S" "int" "DateTimeImmutable" "public") ("m" "format" "format(<#string $format#>)" "S" "string" "DateTimeImmutable" "public") ("m" "diff" "diff(<#DateTimeInterface $datetime2#>,<#bool $absolute = false#>)" "S" "DateInterval" "DateTimeImmutable" "public") ("m" "sub" "sub(<#DateInterval $interval#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTimezone" "setTimezone(<#DateTimeZone $timezone#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTimestamp" "setTimestamp(<#int $unixtimestamp#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTime" "setTime(<#int $hour#>,<#int $minute#>,<#int $second = 0#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setISODate" "setISODate(<#int $year#>,<#int $week#>,<#int $day = 1#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setDate" "setDate(<#int $year#>,<#int $month#>,<#int $day#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "__set_state" "__set_state(<#array $array#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "modify" "modify(<#string $modify#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "getLastErrors" "getLastErrors(<##>)" "S" "array" "DateTimeImmutable" "public") ("m" "createFromMutable" "createFromMutable(<#DateTime $datetime#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "createFromFormat" "createFromFormat(<#string $format#>,<#string $time#>,<#DateTimeZone $timezone#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "add" "add(<#DateInterval $interval#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "__construct" "__construct(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #515="S" "void" #29# "public"))) (#41="DateTime" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "DateTime" "public") ("m" "getTimezone" "getTimezone(<##>)" "S" "DateTimeZone" "DateTime" "public") ("m" "getTimestamp" "getTimestamp(<##>)" "S" "int" "DateTime" "public") ("m" "getOffset" "getOffset(<##>)" "S" "int" "DateTime" "public") ("m" "format" "format(<#string $format#>)" "S" "string" "DateTime" "public") ("m" "diff" "diff(<#DateTimeInterface $datetime2#>,<#bool $absolute = false#>)" "S" "DateInterval" "DateTime" "public") ("m" "sub" "sub(<#DateInterval $interval#>)" "S" "DateTime" "DateTime" "public") ("m" "setTimezone" "setTimezone(<#DateTimeZone $timezone#>)" "S" "DateTime" "DateTime" "public") ("m" "setTimestamp" "setTimestamp(<#int $unixtimestamp#>)" "S" "DateTime" "DateTime" "public") ("m" "setTime" "setTime(<#int $hour#>,<#int $minute#>,<#int $second = 0#>)" "S" "DateTime" "DateTime" "public") ("m" "setISODate" "setISODate(<#int $year#>,<#int $week#>,<#int $day = 1#>)" "S" "DateTime" "DateTime" "public") ("m" "setDate" "setDate(<#int $year#>,<#int $month#>,<#int $day#>)" "S" "DateTime" "DateTime" "public") ("m" "__set_state" "__set_state(<#array $array#>)" "S" "DateTime" "DateTime" "public") ("m" "modify" "modify(<#string $modify#>)" "S" "DateTime" "DateTime" "public") ("m" "getLastErrors" "getLastErrors(<##>)" "S" "array" "DateTime" "public") ("m" "createFromFormat" "createFromFormat(<#string $format#>,<#string $time#>,<#DateTimeZone $timezone#>)" "S" "DateTime" "DateTime" "public") ("m" "add" "add(<#DateInterval $interval#>)" "S" "DateTime" "DateTime" "public") ("m" "__construct" "__construct(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #514="S" "void" "DateTime" "public") ("d" #30="W3C" #30# "S" "string" "DateTime" "public") ("d" #31="RSS" #31# "S" "string" "DateTime" "public") ("d" #32="RFC3339" #32# "S" "string" "DateTime" "public") ("d" #33="RFC2822" #33# "S" "string" "DateTime" "public") ("d" #34="RFC1123" #34# "S" "string" "DateTime" "public") ("d" #35="RFC1036" #35# "S" "string" "DateTime" "public") ("d" #36="RFC850" #36# "S" "string" "DateTime" "public") ("d" #37="RFC822" #37# "S" "string" "DateTime" "public") ("d" #38="ISO8601" #38# "S" "string" "DateTime" "public") ("d" #39="COOKIE" #39# "S" "string" "DateTime" "public") ("d" #40="ATOM" #40# "S" "string" #41# "public"))) (#44="PDOException" (("p" #42="code" #42# "S" "string" "PDOException" "protected") ("p" #43="errorInfo" #43# "S" "array" #44# "public"))) (#46="PDOStatement" (("m" "setFetchMode" "setFetchMode(<#int $mode#>)" "S" "bool" "PDOStatement" "public") ("m" "setAttribute" "setAttribute(<#int $attribute#>,<#mixed $value#>)" "S" "bool" "PDOStatement" "public") ("m" "rowCount" "rowCount(<##>)" "S" "int" "PDOStatement" "public") ("m" "nextRowset" "nextRowset(<##>)" "S" "bool" "PDOStatement" "public") ("m" "getColumnMeta" "getColumnMeta(<#int $column#>)" "S" "array" "PDOStatement" "public") ("m" "getAttribute" "getAttribute(<#int $attribute#>)" "S" "mixed" "PDOStatement" "public") ("m" "fetchObject" "fetchObject(<#string $class_name = \"stdClass\"#>,<#array $ctor_args#>)" "S" "mixed" "PDOStatement" "public") ("m" "fetchColumn" "fetchColumn(<#int $column_number = 0#>)" "S" "mixed" "PDOStatement" "public") ("m" "fetchAll" "fetchAll(<#)#>)" "S" "array" "PDOStatement" "public") ("m" "fetch" "fetch(<#int $fetch_style#>,<#int $cursor_orientation = PDO::FETCH_ORI_NEXT#>,<#int $cursor_offset = 0#>)" "S" "mixed" "PDOStatement" "public") ("m" "execute" "execute(<#array $input_parameters#>)" "S" "bool" "PDOStatement" "public") ("m" "errorInfo" "errorInfo(<##>)" "S" "array" "PDOStatement" "public") ("m" "errorCode" "errorCode(<##>)" "S" "string" "PDOStatement" "public") ("m" "debugDumpParams" "debugDumpParams(<##>)" "S" "void" "PDOStatement" "public") ("m" "columnCount" "columnCount(<##>)" "S" "int" "PDOStatement" "public") ("m" "closeCursor" "closeCursor(<##>)" "S" "bool" "PDOStatement" "public") ("m" "bindValue" "bindValue(<#mixed $parameter#>,<#mixed $value#>,<#int $data_type = PDO::PARAM_STR#>)" "S" "bool" "PDOStatement" "public") ("m" "bindParam" "bindParam(<#mixed $parameter#>,<#mixed &$variable#>,<#int $data_type = PDO::PARAM_STR#>,<#int $length#>,<#mixed $driver_options#>)" "S" "bool" "PDOStatement" "public") ("m" "bindColumn" "bindColumn(<#mixed $column#>,<#mixed &$param#>,<#int $type#>,<#int $maxlen#>,<#mixed $driverdata#>)" "S" "bool" "PDOStatement" "public") ("p" #45="queryString" #45# "S" "string" #46# "public"))) (#47="PDO" (("m" "setAttribute" "setAttribute(<#int $attribute#>,<#mixed $value#>)" "S" "bool" "PDO" "public") ("m" "rollBack" "rollBack(<##>)" "S" "bool" "PDO" "public") ("m" "quote" "quote(<#string $string#>,<#int $parameter_type = PDO::PARAM_STR#>)" "S" "string" "PDO" "public") ("m" "query" "query(<#string $statement#>)" "S" "PDOStatement" "PDO" "public") ("m" "prepare" "prepare(<#)#>)" "S" "PDOStatement" "PDO" "public") ("m" "lastInsertId" "lastInsertId(<#string $name = NULL#>)" "S" "string" "PDO" "public") ("m" "inTransaction" "inTransaction(<##>)" "S" "bool" "PDO" "public") ("m" "getAvailableDrivers" "getAvailableDrivers(<##>)" "S" "array" "PDO" "public") ("m" "getAttribute" "getAttribute(<#int $attribute#>)" "S" "mixed" "PDO" "public") ("m" "exec" "exec(<#string $statement#>)" "S" "int" "PDO" "public") ("m" "errorInfo" "errorInfo(<##>)" "S" "array" "PDO" "public") ("m" "errorCode" "errorCode(<##>)" "S" "mixed" "PDO" "public") ("m" "commit" "commit(<##>)" "S" "bool" "PDO" "public") ("m" "beginTransaction" "beginTransaction(<##>)" "S" "bool" "PDO" "public") ("m" "__construct" "__construct(<#string $dsn#>,<#string $username#>,<#string $password#>,<#array $options#>)" #513="S" "void" #47# "public"))) (#48="SQLite3Result" (("m" "reset" "reset(<##>)" "S" "bool" "SQLite3Result" "public") ("m" "numColumns" "numColumns(<##>)" "S" "int" "SQLite3Result" "public") ("m" "finalize" "finalize(<##>)" "S" "bool" "SQLite3Result" "public") ("m" "fetchArray" "fetchArray(<#int $mode = SQLITE3_BOTH#>)" "S" "array" "SQLite3Result" "public") ("m" "columnType" "columnType(<#int $column_number#>)" "S" "int" "SQLite3Result" "public") ("m" "columnName" "columnName(<#int $column_number#>)" "S" "string" #48# "public"))) (#49="SQLite3Stmt" (("m" "reset" "reset(<##>)" "S" "bool" "SQLite3Stmt" "public") ("m" "paramCount" "paramCount(<##>)" "S" "int" "SQLite3Stmt" "public") ("m" "execute" "execute(<##>)" "S" "SQLite3Result" "SQLite3Stmt" "public") ("m" "close" "close(<##>)" "S" "bool" "SQLite3Stmt" "public") ("m" "clear" "clear(<##>)" "S" "bool" "SQLite3Stmt" "public") ("m" "bindValue" "bindValue(<#string $sql_param#>,<#mixed $value#>,<#int $type#>)" "S" "bool" "SQLite3Stmt" "public") ("m" "bindParam" "bindParam(<#string $sql_param#>,<#mixed &$param#>,<#int $type#>)" "S" "bool" #49# "public"))) (#50="SQLite3" (("m" "version" "version(<##>)" "S" "array" "SQLite3" "public") ("m" "querySingle" "querySingle(<#string $query#>,<#bool $entire_row = false#>)" "S" "mixed" "SQLite3" "public") ("m" "query" "query(<#string $query#>)" "S" "SQLite3Result" "SQLite3" "public") ("m" "prepare" "prepare(<#string $query#>)" "S" "SQLite3Stmt" "SQLite3" "public") ("m" "open" "open(<#string $filename#>,<#int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE#>,<#string $encryption_key#>)" "S" "void" "SQLite3" "public") ("m" "loadExtension" "loadExtension(<#string $shared_library#>)" "S" "bool" "SQLite3" "public") ("m" "lastInsertRowID" "lastInsertRowID(<##>)" "S" "int" "SQLite3" "public") ("m" "lastErrorMsg" "lastErrorMsg(<##>)" "S" "string" "SQLite3" "public") ("m" "lastErrorCode" "lastErrorCode(<##>)" "S" "int" "SQLite3" "public") ("m" "exec" "exec(<#string $query#>)" "S" "bool" "SQLite3" "public") ("m" "escapeString" "escapeString(<#string $value#>)" "S" "string" "SQLite3" "public") ("m" "createFunction" "createFunction(<#string $name#>,<#mixed $callback#>,<#int $argument_count = -1#>)" "S" "bool" "SQLite3" "public") ("m" "createCollation" "createCollation(<#string $name#>,<#callable $callback#>)" "S" "bool" "SQLite3" "public") ("m" "createAggregate" "createAggregate(<#string $name#>,<#mixed $step_callback#>,<#mixed $final_callback#>,<#int $argument_count = -1#>)" "S" "bool" "SQLite3" "public") ("m" "__construct" "__construct(<#string $filename#>,<#int $flags#>,<#string $encryption_key#>)" #512="S" "void" "SQLite3" "public") ("m" "close" "close(<##>)" "S" "bool" "SQLite3" "public") ("m" "changes" "changes(<##>)" "S" "int" "SQLite3" "public") ("m" "busyTimeout" "busyTimeout(<#int $msecs#>)" "S" "bool" #50# "public"))) (#52="mysqli_sql_exception" (("p" #51="sqlstate" #51# "S" "string" #52# "protected"))) (#56="mysqli_warning" (("m" "next" "next(<##>)" "S" "void" "mysqli_warning" "public") ("m" "__construct" "__construct(<##>)" #511="S" "void" "mysqli_warning" "public") ("p" #53="errno" #53# "S" "int" "mysqli_warning" "public") ("p" #54="sqlstate" #54# "S" "int" "mysqli_warning" "public") ("p" #55="message" #55# "S" "string" #56# "public"))) (#63="mysqli_driver" (("m" "embedded_server_start" "embedded_server_start(<#bool $start#>,<#array $arguments#>,<#array $groups#>)" "S" "bool" "mysqli_driver" "public") ("m" "embedded_server_end" "embedded_server_end(<##>)" "S" "void" "mysqli_driver" "public") ("p" #57="report_mode" #57# "S" "int" "mysqli_driver" "public") ("p" #58="reconnect" #58# "S" "bool" "mysqli_driver" "public") ("p" #59="embedded" #59# "S" "string" "mysqli_driver" "public") ("p" #60="driver_version" #60# "S" "string" "mysqli_driver" "public") ("p" #61="client_version" #61# "S" "string" "mysqli_driver" "public") ("p" #62="client_info" #62# "S" "string" #63# "public"))) (#68="mysqli_result" (("m" "free" "free(<##>)" "S" "void" "mysqli_result" "public") ("m" "field_seek" "field_seek(<#int $fieldnr#>)" "S" "bool" "mysqli_result" "public") ("m" "fetch_row" "fetch_row(<##>)" "S" "mixed" "mysqli_result" "public") ("m" "fetch_object" "fetch_object(<#string $class_name = \"stdClass\"#>,<#array $params#>)" "S" "object" "mysqli_result" "public") ("m" "fetch_fields" "fetch_fields(<##>)" "S" "array" "mysqli_result" "public") ("m" "fetch_field" "fetch_field(<##>)" "S" "object" "mysqli_result" "public") ("m" "fetch_field_direct" "fetch_field_direct(<#int $fieldnr#>)" "S" "object" "mysqli_result" "public") ("m" "fetch_assoc" "fetch_assoc(<##>)" "S" "array" "mysqli_result" "public") ("m" "fetch_array" "fetch_array(<#int $resulttype = MYSQLI_BOTH#>)" "S" "mixed" "mysqli_result" "public") ("m" "fetch_all" "fetch_all(<#int $resulttype = MYSQLI_NUM#>)" "S" "mixed" "mysqli_result" "public") ("m" "data_seek" "data_seek(<#int $offset#>)" "S" "bool" "mysqli_result" "public") ("p" #64="num_rows" #64# "S" "int" "mysqli_result" "public") ("p" #65="lengths" #65# "S" "array" "mysqli_result" "public") ("p" #66="field_count" #66# "S" "int" "mysqli_result" "public") ("p" #67="current_field" #67# "S" "int" #68# "public"))) (#78="mysqli_stmt" (("m" "store_result" "store_result(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "send_long_data" "send_long_data(<#int $param_nr#>,<#string $data#>)" "S" "bool" "mysqli_stmt" "public") ("m" "result_metadata" "result_metadata(<##>)" "S" "mysqli_result" "mysqli_stmt" "public") ("m" "reset" "reset(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "prepare" "prepare(<#string $query#>)" "S" "mixed" "mysqli_stmt" "public") ("m" "get_warnings" "get_warnings(<#mysqli_stmt $stmt#>)" "S" "object" "mysqli_stmt" "public") ("m" "get_result" "get_result(<##>)" "S" "mysqli_result" "mysqli_stmt" "public") ("m" "free_result" "free_result(<##>)" "S" "void" "mysqli_stmt" "public") ("m" "fetch" "fetch(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "execute" "execute(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "data_seek" "data_seek(<#int $offset#>)" "S" "void" "mysqli_stmt" "public") ("m" "close" "close(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "bind_result" "bind_result(<#mixed &$var1#>,<#mixed $__args__#>)" "S" "bool" "mysqli_stmt" "public") ("m" "bind_param" "bind_param(<#string $types#>,<#mixed &$var1#>,<#mixed $__args__#>)" "S" "bool" "mysqli_stmt" "public") ("m" "attr_set" "attr_set(<#int $attr#>,<#int $mode#>)" "S" "bool" "mysqli_stmt" "public") ("m" "attr_get" "attr_get(<#int $attr#>)" "S" "int" "mysqli_stmt" "public") ("m" "__construct" "__construct(<#mysqli $link#>,<#string $query#>)" #510="S" "void" "mysqli_stmt" "public") ("p" #69="sqlstate" #69# "S" "string" "mysqli_stmt" "public") ("p" #70="param_count" #70# "S" "int" "mysqli_stmt" "public") ("p" #71="num_rows" #71# "S" "int" "mysqli_stmt" "public") ("p" #72="insert_id" #72# "S" "int" "mysqli_stmt" "public") ("p" #73="field_count" #73# "S" "int" "mysqli_stmt" "public") ("p" #74="error" #74# "S" "string" "mysqli_stmt" "public") ("p" #75="error_list" #75# "S" "array" "mysqli_stmt" "public") ("p" #76="errno" #76# "S" "int" "mysqli_stmt" "public") ("p" #77="affected_rows" #77# "S" "int" #78# "public"))) (#98="mysqli" (("m" "use_result" "use_result(<##>)" "S" "mysqli_result" "mysqli" "public") ("m" "store_result" "store_result(<#int $option#>)" "S" "mysqli_result" "mysqli" "public") ("m" "stmt_init" "stmt_init(<##>)" "S" "mysqli_stmt" "mysqli" "public") ("m" "stat" "stat(<##>)" "S" "string" "mysqli" "public") ("m" "ssl_set" "ssl_set(<#string $key#>,<#string $cert#>,<#string $ca#>,<#string $capath#>,<#string $cipher#>)" "S" "bool" "mysqli" "public") ("m" "set_local_infile_handler" "set_local_infile_handler(<#mysqli $link#>,<#callable $read_func#>)" "S" "bool" "mysqli" "public") ("m" "set_charset" "set_charset(<#string $charset#>)" "S" "bool" "mysqli" "public") ("m" "send_query" "send_query(<#string $query#>)" "S" "bool" "mysqli" "public") ("m" "select_db" "select_db(<#string $dbname#>)" "S" "bool" "mysqli" "public") ("m" "rpl_query_type" "rpl_query_type(<#string $query#>)" "S" "int" "mysqli" "public") ("m" "rollback" "rollback(<#int $flags#>,<#string $name#>)" "S" "bool" "mysqli" "public") ("m" "refresh" "refresh(<#int $options#>)" "S" "bool" "mysqli" "public") ("m" "reap_async_query" "reap_async_query(<##>)" "S" "mysqli_result" "mysqli" "public") ("m" "real_query" "real_query(<#string $query#>)" "S" "bool" "mysqli" "public") ("m" "escape_string" "escape_string(<#string $escapestr#>)" "S" "string" "mysqli" "public") ("m" "real_connect" "real_connect(<#string $host#>,<#string $username#>,<#string $passwd#>,<#string $dbname#>,<#int $port#>,<#string $socket#>,<#int $flags#>)" "S" "bool" "mysqli" "public") ("m" "query" "query(<#string $query#>,<#int $resultmode = MYSQLI_STORE_RESULT#>)" "S" "mixed" "mysqli" "public") ("m" "prepare" "prepare(<#string $query#>)" "S" "mysqli_stmt" "mysqli" "public") ("m" "poll" "poll(<#array &$read#>,<#array &$error#>,<#array &$reject#>,<#int $sec#>,<#int $usec#>)" "S" "int" "mysqli" "public") ("m" "ping" "ping(<##>)" "S" "bool" "mysqli" "public") ("m" "options" "options(<#int $option#>,<#mixed $value#>)" "S" "bool" "mysqli" "public") ("m" "next_result" "next_result(<##>)" "S" "bool" "mysqli" "public") ("m" "multi_query" "multi_query(<#string $query#>)" "S" "bool" "mysqli" "public") ("m" "more_results" "more_results(<##>)" "S" "bool" "mysqli" "public") ("m" "kill" "kill(<#int $processid#>)" "S" "bool" "mysqli" "public") ("m" "init" "init(<##>)" "S" "mysqli" "mysqli" "public") ("m" "get_warnings" "get_warnings(<##>)" "S" "mysqli_warning" "mysqli" "public") ("m" "get_connection_stats" "get_connection_stats(<##>)" "S" "bool" "mysqli" "public") ("m" "get_client_info" "get_client_info(<##>)" "S" "string" "mysqli" "public") ("m" "get_charset" "get_charset(<##>)" "S" "object" "mysqli" "public") ("m" "dump_debug_info" "dump_debug_info(<##>)" "S" "bool" "mysqli" "public") ("m" "debug" "debug(<#string $message#>)" "S" "bool" "mysqli" "public") ("m" "commit" "commit(<#int $flags#>,<#string $name#>)" "S" "bool" "mysqli" "public") ("m" "close" "close(<##>)" "S" "bool" "mysqli" "public") ("m" "character_set_name" "character_set_name(<##>)" "S" "string" "mysqli" "public") ("m" "change_user" "change_user(<#string $user#>,<#string $password#>,<#string $database#>)" "S" "bool" "mysqli" "public") ("m" "autocommit" "autocommit(<#bool $mode#>)" "S" "bool" "mysqli" "public") ("m" "__construct" "__construct(<#\"mysqli.default_socket\")'#>)" #509="S" "void" "mysqli" "public") ("p" #79="warning_count" #79# "S" "int" "mysqli" "public") ("p" #80="thread_id" #80# "S" "int" "mysqli" "public") ("p" #81="sqlstate" #81# "S" "string" "mysqli" "public") ("p" #82="insert_id" #82# "S" "mixed" "mysqli" "public") ("p" #83="info" #83# "S" "string" "mysqli" "public") ("p" #84="server_version" #84# "S" "int" "mysqli" "public") ("p" #85="server_info" #85# "S" "string" "mysqli" "public") ("p" #86="protocol_version" #86# "S" "string" "mysqli" "public") ("p" #87="host_info" #87# "S" "string" "mysqli" "public") ("p" #88="client_version" #88# "S" "int" "mysqli" "public") ("p" #89="field_count" #89# "S" "int" "mysqli" "public") ("p" #90="error" #90# "S" "string" "mysqli" "public") ("p" #91="error_list" #91# "S" "array" "mysqli" "public") ("p" #92="errno" #92# "S" "int" "mysqli" "public") ("p" #93="connect_error" #93# "S" "string" "mysqli" "public") ("p" #94="connect_errno" #94# "S" "int" "mysqli" "public") ("p" #95="client_version" #95# "S" "int" "mysqli" "public") ("p" #96="client_info" #96# "S" "string" "mysqli" "public") ("p" #97="affected_rows" #97# "S" "int" #98# "public"))) (#114="HttpResponse" (("m" "status" "status(<#int $status#>)" "S" "bool" "HttpResponse" "public") ("m" "setThrottleDelay" "setThrottleDelay(<#float $seconds#>)" "S" "bool" "HttpResponse" "public") ("m" "setStream" "setStream(<#resource $stream#>)" "S" "bool" "HttpResponse" "public") ("m" "setLastModified" "setLastModified(<#int $timestamp#>)" "S" "bool" "HttpResponse" "public") ("m" "setHeader" "setHeader(<#string $name#>,<#mixed $value#>,<#bool $replace = true#>)" "S" "bool" "HttpResponse" "public") ("m" "setGzip" "setGzip(<#bool $gzip#>)" "S" "bool" "HttpResponse" "public") ("m" "setFile" "setFile(<#string $file#>)" "S" "bool" "HttpResponse" "public") ("m" "setETag" "setETag(<#string $etag#>)" "S" "bool" "HttpResponse" "public") ("m" "setData" "setData(<#mixed $data#>)" "S" "bool" "HttpResponse" "public") ("m" "setContentType" "setContentType(<#string $content_type#>)" "S" "bool" "HttpResponse" "public") ("m" "setContentDisposition" "setContentDisposition(<#string $filename#>,<#bool $inline = false#>)" "S" "bool" "HttpResponse" "public") ("m" "setCacheControl" "setCacheControl(<#string $control#>,<#int $max_age = 0#>,<#bool $must_revalidate = true#>)" "S" "bool" "HttpResponse" "public") ("m" "setCache" "setCache(<#bool $cache#>)" "S" "bool" "HttpResponse" "public") ("m" "setBufferSize" "setBufferSize(<#int $bytes#>)" "S" "bool" "HttpResponse" "public") ("m" "send" "send(<#bool $clean_ob = true#>)" "S" "bool" "HttpResponse" "public") ("m" "redirect" "redirect(<#string $url#>,<#array $params#>,<#bool $session = false#>,<#int $status#>)" "S" "void" "HttpResponse" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpResponse" "public") ("m" "getThrottleDelay" "getThrottleDelay(<##>)" "S" "float" "HttpResponse" "public") ("m" "getStream" "getStream(<##>)" "S" "resource" "HttpResponse" "public") ("m" "getRequestHeaders" "getRequestHeaders(<##>)" "S" "array" "HttpResponse" "public") ("m" "getRequestBodyStream" "getRequestBodyStream(<##>)" "S" "resource" "HttpResponse" "public") ("m" "getRequestBody" "getRequestBody(<##>)" "S" "string" "HttpResponse" "public") ("m" "getLastModified" "getLastModified(<##>)" "S" "int" "HttpResponse" "public") ("m" "getHeader" "getHeader(<#string $name#>)" "S" "mixed" "HttpResponse" "public") ("m" "getGzip" "getGzip(<##>)" "S" "bool" "HttpResponse" "public") ("m" "getFile" "getFile(<##>)" "S" "string" "HttpResponse" "public") ("m" "getETag" "getETag(<##>)" "S" "string" "HttpResponse" "public") ("m" "getData" "getData(<##>)" "S" "string" "HttpResponse" "public") ("m" "getContentType" "getContentType(<##>)" "S" "string" "HttpResponse" "public") ("m" "getContentDisposition" "getContentDisposition(<##>)" "S" "string" "HttpResponse" "public") ("m" "getCacheControl" "getCacheControl(<##>)" "S" "string" "HttpResponse" "public") ("m" "getCache" "getCache(<##>)" "S" "bool" "HttpResponse" "public") ("m" "getBufferSize" "getBufferSize(<##>)" "S" "int" "HttpResponse" "public") ("m" "capture" "capture(<##>)" "S" "void" "HttpResponse" "public") ("d" #99="REDIRECT_TEMP" #99# "S" "integer" "HttpResponse" "public") ("d" #100="REDIRECT_PROXY" #100# "S" "integer" "HttpResponse" "public") ("d" #101="REDIRECT_POST" #101# "S" "integer" "HttpResponse" "public") ("d" #102="REDIRECT_FOUND" #102# "S" "integer" "HttpResponse" "public") ("d" #103="REDIRECT_PERM" #103# "S" "integer" "HttpResponse" "public") ("d" #104="REDIRECT" #104# "S" "integer" "HttpResponse" "public") ("p" #105="throttleDelay" #105# "S" "double" "HttpResponse" "protected") ("p" #106="bufferSize" #106# "S" "integer" "HttpResponse" "protected") ("p" #107="contentDisposition" #107# "S" "string" "HttpResponse" "protected") ("p" #108="contentType" #108# "S" "string" "HttpResponse" "protected") ("p" #109="cacheControl" #109# "S" "string" "HttpResponse" "protected") ("p" #110="lastModified" #110# "S" "integer" "HttpResponse" "protected") ("p" #111="eTag" #111# "S" "string" "HttpResponse" "protected") ("p" #112="gzip" #112# "S" "boolean" "HttpResponse" "protected") ("p" #113="cache" #113# "S" "boolean" #114# "protected"))) (#115="HttpRequestPool" (("m" "socketSelect" "socketSelect(<#float $timeout = 0#>)" "S" "bool" "HttpRequestPool" "protected") ("m" "socketPerform" "socketPerform(<##>)" "S" "bool" "HttpRequestPool" "protected") ("m" "send" "send(<##>)" "S" "bool" "HttpRequestPool" "public") ("m" "reset" "reset(<##>)" "S" "void" "HttpRequestPool" "public") ("m" "getFinishedRequests" "getFinishedRequests(<##>)" "S" "array" "HttpRequestPool" "public") ("m" "getAttachedRequests" "getAttachedRequests(<##>)" "S" "array" "HttpRequestPool" "public") ("m" "detach" "detach(<#HttpRequest $request#>)" "S" "bool" "HttpRequestPool" "public") ("m" "__destruct" "__destruct(<##>)" "S" "void" "HttpRequestPool" "public") ("m" "__construct" "__construct(<#HttpRequest $request#>,<#HttpRequest $__args__#>)" #508="S" "void" "HttpRequestPool" "public") ("m" "attach" "attach(<#HttpRequest $request#>)" "S" "bool" #115# "public"))) (#162="HttpRequest" (("m" "setUrl" "setUrl(<#string $url#>)" "S" "bool" "HttpRequest" "public") ("m" "setSslOptions" "setSslOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "setRawPostData" "setRawPostData(<#string $raw_post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setQueryData" "setQueryData(<#mixed $query_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setPutFile" "setPutFile(<#string $file = \"\"#>)" "S" "bool" "HttpRequest" "public") ("m" "setPutData" "setPutData(<#string $put_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setPostFiles" "setPostFiles(<#array $post_files#>)" "S" "bool" "HttpRequest" "public") ("m" "setPostFields" "setPostFields(<#array $post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setOptions" "setOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "setMethod" "setMethod(<#int $request_method#>)" "S" "bool" "HttpRequest" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "bool" "HttpRequest" "public") ("m" "setCookies" "setCookies(<#array $cookies#>)" "S" "bool" "HttpRequest" "public") ("m" "setContentType" "setContentType(<#string $content_type#>)" "S" "bool" "HttpRequest" "public") ("m" "setBody" "setBody(<#string $request_body_data#>)" "S" "bool" "HttpRequest" "public") ("m" "send" "send(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "resetCookies" "resetCookies(<#bool $session_only = false#>)" "S" "bool" "HttpRequest" "public") ("m" "getUrl" "getUrl(<##>)" "S" "string" "HttpRequest" "public") ("m" "getSslOptions" "getSslOptions(<##>)" "S" "array" "HttpRequest" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpRequest" "public") ("m" "getResponseMessage" "getResponseMessage(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getResponseInfo" "getResponseInfo(<#string $name#>)" "S" "mixed" "HttpRequest" "public") ("m" "getResponseHeader" "getResponseHeader(<#string $name#>)" "S" "mixed" "HttpRequest" "public") ("m" "getResponseData" "getResponseData(<##>)" "S" "array" "HttpRequest" "public") ("m" "getResponseCookies" "getResponseCookies(<#int $flags = 0#>,<#array $allowed_extras#>)" "S" "array" "HttpRequest" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpRequest" "public") ("m" "getResponseBody" "getResponseBody(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRequestMessage" "getRequestMessage(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getRawResponseMessage" "getRawResponseMessage(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRawRequestMessage" "getRawRequestMessage(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRawPostData" "getRawPostData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getQueryData" "getQueryData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPutFile" "getPutFile(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPutData" "getPutData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPostFiles" "getPostFiles(<##>)" "S" "array" "HttpRequest" "public") ("m" "getPostFields" "getPostFields(<##>)" "S" "array" "HttpRequest" "public") ("m" "getOptions" "getOptions(<##>)" "S" "array" "HttpRequest" "public") ("m" "getMethod" "getMethod(<##>)" "S" "int" "HttpRequest" "public") ("m" "getHistory" "getHistory(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpRequest" "public") ("m" "getCookies" "getCookies(<##>)" "S" "array" "HttpRequest" "public") ("m" "getContentType" "getContentType(<##>)" "S" "string" "HttpRequest" "public") ("m" "enableCookies" "enableCookies(<##>)" "S" "bool" "HttpRequest" "public") ("m" "__construct" "__construct(<#string $url#>,<#int $request_method = HTTP_METH_GET#>,<#array $options#>)" #507="S" "void" "HttpRequest" "public") ("m" "clearHistory" "clearHistory(<##>)" "S" "void" "HttpRequest" "public") ("m" "addSslOptions" "addSslOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "addRawPostData" "addRawPostData(<#string $raw_post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addQueryData" "addQueryData(<#array $query_params#>)" "S" "bool" "HttpRequest" "public") ("m" "addPutData" "addPutData(<#string $put_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addPostFile" "addPostFile(<#string $name#>,<#string $file#>,<#string $content_type = \"application/x-octetstream\"#>)" "S" "bool" "HttpRequest" "public") ("m" "addPostFields" "addPostFields(<#array $post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>)" "S" "bool" "HttpRequest" "public") ("m" "addCookies" "addCookies(<#array $cookies#>)" "S" "bool" "HttpRequest" "public") ("p" #116="recordHistory" #116# "S" "boolean" "HttpRequest" "public") ("d" #117="IPRESOLVE_ANY" #117# "S" "integer" "HttpRequest" "public") ("d" #118="IPRESOLVE_V6" #118# "S" "integer" "HttpRequest" "public") ("d" #119="IPRESOLVE_V4" #119# "S" "integer" "HttpRequest" "public") ("d" #120="SSL_VERSION_ANY" #120# "S" "integer" "HttpRequest" "public") ("d" #121="SSL_VERSION_SSLv3" #121# "S" "integer" "HttpRequest" "public") ("d" #122="SSL_VERSION_SSLv2" #122# "S" "integer" "HttpRequest" "public") ("d" #123="SSL_VERSION_TLSv1" #123# "S" "integer" "HttpRequest" "public") ("d" #124="PROXY_HTTP" #124# "S" "integer" "HttpRequest" "public") ("d" #125="PROXY_SOCKS5" #125# "S" "integer" "HttpRequest" "public") ("d" #126="PROXY_SOCKS4" #126# "S" "integer" "HttpRequest" "public") ("d" #127="AUTH_ANY" #127# "S" "integer" "HttpRequest" "public") ("d" #128="AUTH_GSSNEG" #128# "S" "integer" "HttpRequest" "public") ("d" #129="AUTH_NTLM" #129# "S" "integer" "HttpRequest" "public") ("d" #130="AUTH_DIGEST" #130# "S" "integer" "HttpRequest" "public") ("d" #131="AUTH_BASIC" #131# "S" "integer" "HttpRequest" "public") ("d" #132="VERSION_ANY" #132# "S" "integer" "HttpRequest" "public") ("d" #133="VERSION_1_1" #133# "S" "integer" "HttpRequest" "public") ("d" #134="VERSION_1_0" #134# "S" "integer" "HttpRequest" "public") ("d" #135="METH_ACL" #135# "S" "integer" "HttpRequest" "public") ("d" #136="METH_MKACTIVITY" #136# "S" "integer" "HttpRequest" "public") ("d" #137="METH_BASELINE_CONTROL" #137# "S" "integer" "HttpRequest" "public") ("d" #138="METH_MERGE" #138# "S" "integer" "HttpRequest" "public") ("d" #139="METH_LABEL" #139# "S" "integer" "HttpRequest" "public") ("d" #140="METH_UPDATE" #140# "S" "integer" "HttpRequest" "public") ("d" #141="METH_MKWORKSPACE" #141# "S" "integer" "HttpRequest" "public") ("d" #142="METH_UNCHECKOUT" #142# "S" "integer" "HttpRequest" "public") ("d" #143="METH_CHECKIN" #143# "S" "integer" "HttpRequest" "public") ("d" #144="METH_CHECKOUT" #144# "S" "integer" "HttpRequest" "public") ("d" #145="METH_REPORT" #145# "S" "integer" "HttpRequest" "public") ("d" #146="METH_VERSION_CONTROL" #146# "S" "integer" "HttpRequest" "public") ("d" #147="METH_UNLOCK" #147# "S" "integer" "HttpRequest" "public") ("d" #148="METH_LOCK" #148# "S" "integer" "HttpRequest" "public") ("d" #149="METH_MOVE" #149# "S" "integer" "HttpRequest" "public") ("d" #150="METH_COPY" #150# "S" "integer" "HttpRequest" "public") ("d" #151="METH_MKCOL" #151# "S" "integer" "HttpRequest" "public") ("d" #152="METH_PROPPATCH" #152# "S" "integer" "HttpRequest" "public") ("d" #153="METH_PROPFIND" #153# "S" "integer" "HttpRequest" "public") ("d" #154="METH_CONNECT" #154# "S" "integer" "HttpRequest" "public") ("d" #155="METH_TRACE" #155# "S" "integer" "HttpRequest" "public") ("d" #156="METH_OPTIONS" #156# "S" "integer" "HttpRequest" "public") ("d" #157="METH_DELETE" #157# "S" "integer" "HttpRequest" "public") ("d" #158="METH_PUT" #158# "S" "integer" "HttpRequest" "public") ("d" #159="METH_POST" #159# "S" "integer" "HttpRequest" "public") ("d" #160="METH_HEAD" #160# "S" "integer" "HttpRequest" "public") ("d" #161="METH_GET" #161# "S" "integer" #162# "public"))) (#169="HttpQueryString" (("m" "xlate" "xlate(<#string $ie#>,<#string $oe#>)" "S" "bool" "HttpQueryString" "public") ("m" "toString" "toString(<##>)" "S" "string" "HttpQueryString" "public") ("m" "toArray" "toArray(<##>)" "S" "array" "HttpQueryString" "public") ("m" "singleton" "singleton(<#bool $global = true#>)" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "set" "set(<#mixed $params#>)" "S" "string" "HttpQueryString" "public") ("m" "mod" "mod(<#mixed $params#>)" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "get" "get(<#string $key#>,<#mixed $type = 0#>,<#mixed $defval = NULL#>,<#bool $delete = false#>)" "S" "mixed" "HttpQueryString" "public") ("m" "__construct" "__construct(<#bool $global = true#>,<#mixed $add#>)" #506="S" "void" "HttpQueryString" "public") ("d" #163="TYPE_OBJECT" #163# "S" "int" "HttpQueryString" "public") ("d" #164="TYPE_ARRAY" #164# "S" "int" "HttpQueryString" "public") ("d" #165="TYPE_STRING" #165# "S" "int" "HttpQueryString" "public") ("d" #166="TYPE_FLOAT" #166# "S" "int" "HttpQueryString" "public") ("d" #167="TYPE_INT" #167# "S" "int" "HttpQueryString" "public") ("d" #168="TYPE_BOOL" #168# "S" "int" #169# "public"))) (#194="HttpMessage" (("m" "toString" "toString(<#bool $include_parent = false#>)" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" "toMessageTypeObject(<##>)" "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "setType(<#int $type#>)" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "setResponseStatus(<#string $status#>)" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "setResponseCode(<#int $code#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "setRequestUrl(<#string $url#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "setRequestMethod(<#string $method#>)" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "setHttpVersion(<#string $version#>)" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "void" "HttpMessage" "public") ("m" "setBody" "setBody(<#string $body#>)" "S" "void" "HttpMessage" "public") ("m" "send" "send(<##>)" "S" "bool" "HttpMessage" "public") ("m" "reverse" "reverse(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "prepend(<#HttpMessage $message#>,<#bool $top = true#>)" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpMessage" "public") ("m" "getType" "getType(<##>)" "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpMessage" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" "getRequestUrl(<##>)" "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" "getRequestMethod(<##>)" "S" "string" "HttpMessage" "public") ("m" "getParentMessage" "getParentMessage(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" "getHttpVersion(<##>)" "S" "string" "HttpMessage" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpMessage" "public") ("m" "getHeader" "getHeader(<#string $header#>)" "S" "string" "HttpMessage" "public") ("m" "getBody" "getBody(<##>)" "S" "string" "HttpMessage" "public") ("m" "fromString" "fromString(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "fromEnv(<#int $message_type#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "factory(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" "detach(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "__construct(<#string $message#>)" #505="S" "void" "HttpMessage" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>,<#bool $append = false#>)" "S" "void" "HttpMessage" "public") ("d" #170="TYPE_RESPONSE" #170# "S" "int" "HttpMessage" "public") ("d" #171="TYPE_REQUEST" #171# "S" "int" "HttpMessage" "public") ("d" #172="TYPE_NONE" #172# "S" "int" "HttpMessage" "public") ("p" #173="parentMessage" #173# "S" "HttpMessage" "HttpMessage" "protected") ("p" #174="responseStatus" #174# "S" "string" "HttpMessage" "protected") ("p" #175="responseCode" #175# "S" "int" "HttpMessage" "protected") ("p" #176="string" #176# "S" "requestUrl" "HttpMessage" "protected") ("p" #177="requestMethod" #177# "S" "string" "HttpMessage" "protected") ("p" #178="headers" #178# "S" "array" "HttpMessage" "protected") ("p" #179="httpVersion" #179# "S" "float" "HttpMessage" "protected") ("p" #180="body" #180# "S" "string" "HttpMessage" "protected") ("p" #181="type" #181# "S" "int" "HttpMessage" "protected") ("m" "toString" "toString(<#bool $include_parent = false#>)" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" "toMessageTypeObject(<##>)" "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "setType(<#int $type#>)" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "setResponseStatus(<#string $status#>)" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "setResponseCode(<#int $code#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "setRequestUrl(<#string $url#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "setRequestMethod(<#string $method#>)" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "setHttpVersion(<#string $version#>)" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "void" "HttpMessage" "public") ("m" "setBody" "setBody(<#string $body#>)" "S" "void" "HttpMessage" "public") ("m" "send" "send(<##>)" "S" "bool" "HttpMessage" "public") ("m" "reverse" "reverse(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "prepend(<#HttpMessage $message#>,<#bool $top = true#>)" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpMessage" "public") ("m" "getType" "getType(<##>)" "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpMessage" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" "getRequestUrl(<##>)" "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" "getRequestMethod(<##>)" "S" "string" "HttpMessage" "public") ("m" "getParentMessage" "getParentMessage(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" "getHttpVersion(<##>)" "S" "string" "HttpMessage" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpMessage" "public") ("m" "getHeader" "getHeader(<#string $header#>)" "S" "string" "HttpMessage" "public") ("m" "getBody" "getBody(<##>)" "S" "string" "HttpMessage" "public") ("m" "fromString" "fromString(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "fromEnv(<#int $message_type#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "factory(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" "detach(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "__construct(<#string $message#>)" "S" "void" "HttpMessage" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>,<#bool $append = false#>)" "S" "void" "HttpMessage" "public") ("p" #182="parentMessage" #182# "S" "HttpMessage" "HttpMessage" "protected") ("p" #183="responseStatus" #183# "S" "string" "HttpMessage" "protected") ("p" #184="responseCode" #184# "S" "int" "HttpMessage" "protected") ("p" #185="requestUrl" #185# "S" "string" "HttpMessage" "protected") ("p" #186="requestMethod" #186# "S" "string" "HttpMessage" "protected") ("p" #187="headers" #187# "S" "array" "HttpMessage" "protected") ("p" #188="httpVersion" #188# "S" "float" "HttpMessage" "protected") ("p" #189="body" #189# "S" "string" "HttpMessage" "protected") ("p" #190="type" #190# "S" "int" "HttpMessage" "protected") ("d" #191="TYPE_RESPONSE" #191# "S" "int" "HttpMessage" "public") ("d" #192="TYPE_REQUEST" #192# "S" "int" "HttpMessage" "public") ("d" #193="TYPE_NONE" #193# "S" "int" #194# "public"))) (#198="HttpInflateStream" (("m" "update" "update(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "flush" "flush(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "finish" "finish(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "factory" "factory(<#int $flags = 0#>,<#string $class_name = \"HttpInflateStream\"#>)" "S" "HttpInflateStream" "HttpInflateStream" "public") ("m" "__construct" "__construct(<#int $flags = 0#>)" #504="S" "void" "HttpInflateStream" "public") ("d" #195="FLUSH_FULL" #195# "S" "int" "HttpInflateStream" "public") ("d" #196="FLUSH_SYNC" #196# "S" "int" "HttpInflateStream" "public") ("d" #197="FLUSH_NONE" #197# "S" "int" #198# "public"))) (#213="HttpDeflateStream" (("m" "update" "update(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "flush" "flush(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "finish" "finish(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "factory" "factory(<#int $flags = 0#>,<#string $class_name = \"HttpDeflateStream\"#>)" "S" "HttpDeflateStream" "HttpDeflateStream" "public") ("m" "__construct" "__construct(<#int $flags = 0#>)" #503="S" "void" "HttpDeflateStream" "public") ("d" #199="FLUSH_FULL" #199# "S" "int" "HttpDeflateStream" "public") ("d" #200="FLUSH_SYNC" #200# "S" "int" "HttpDeflateStream" "public") ("d" #201="FLUSH_NONE" #201# "S" "int" "HttpDeflateStream" "public") ("d" #202="STRATEGY_FIXED" #202# "S" "int" "HttpDeflateStream" "public") ("d" #203="STRATEGY_RLE" #203# "S" "int" "HttpDeflateStream" "public") ("d" #204="STRATEGY_HUFF" #204# "S" "int" "HttpDeflateStream" "public") ("d" #205="STRATEGY_FILT" #205# "S" "int" "HttpDeflateStream" "public") ("d" #206="STRATEGY_DEF" #206# "S" "int" "HttpDeflateStream" "public") ("d" #207="LEVEL_MAX" #207# "S" "int" "HttpDeflateStream" "public") ("d" #208="LEVEL_MIN" #208# "S" "int" "HttpDeflateStream" "public") ("d" #209="LEVEL_DEF" #209# "S" "int" "HttpDeflateStream" "public") ("d" #210="TYPE_RAW" #210# "S" "int" "HttpDeflateStream" "public") ("d" #211="TYPE_ZLIB" #211# "S" "int" "HttpDeflateStream" "public") ("d" #212="TYPE_GZIP" #212# "S" "int" #213# "public"))) (#214="Memcache" (("m" "setServerParams" "setServerParams(<#string $host#>,<#int $port = 11211#>,<#int $timeout#>,<#int $retry_interval = false#>,<#bool $status#>,<#callback $failure_callback#>)" "S" "bool" "Memcache" "public") ("m" "setCompressThreshold" "setCompressThreshold(<#int $threshold#>,<#float $min_savings#>)" "S" "bool" "Memcache" "public") ("m" "set" "set(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" "Memcache" "public") ("m" "replace" "replace(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" "Memcache" "public") ("m" "pconnect" "pconnect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "mixed" "Memcache" "public") ("m" "increment" "increment(<#string $key#>,<#int $value = 1#>)" "S" "int" "Memcache" "public") ("m" "getVersion" "getVersion(<##>)" "S" "string" "Memcache" "public") ("m" "getStats" "getStats(<#string $type#>,<#int $slabid#>,<#int $limit = 100#>)" "S" "array" "Memcache" "public") ("m" "getServerStatus" "getServerStatus(<#string $host#>,<#int $port = 11211#>)" "S" "int" "Memcache" "public") ("m" "getExtendedStats" "getExtendedStats(<#string $type#>,<#int $slabid#>,<#int $limit = 100#>)" "S" "array" "Memcache" "public") ("m" "get" "get(<#string $key#>,<#int &$flags#>)" "S" "string" "Memcache" "public") ("m" "flush" "flush(<##>)" "S" "bool" "Memcache" "public") ("m" "delete" "delete(<#string $key#>,<#int $timeout = 0#>)" "S" "bool" "Memcache" "public") ("m" "decrement" "decrement(<#string $key#>,<#int $value = 1#>)" "S" "int" "Memcache" "public") ("m" "connect" "connect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "bool" "Memcache" "public") ("m" "close" "close(<##>)" "S" "bool" "Memcache" "public") ("m" "addServer" "addServer(<#string $host#>,<#int $port = 11211#>,<#bool $persistent#>,<#int $weight#>,<#int $timeout#>,<#int $retry_interval#>,<#bool $status#>,<#callback $failure_callback#>,<#int $timeoutms#>)" "S" "bool" "Memcache" "public") ("m" "add" "add(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" #214# "public"))) (#250="XMLReader" (("m" "xml" "xml(<#string $source#>,<#string $encoding#>,<#int $options = 0#>)" "S" "bool" "XMLReader" "public") ("m" "setSchema" "setSchema(<#string $filename#>)" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchemaSource" "setRelaxNGSchemaSource(<#string $source#>)" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchema" "setRelaxNGSchema(<#string $filename#>)" "S" "bool" "XMLReader" "public") ("m" "setParserProperty" "setParserProperty(<#int $property#>,<#bool $value#>)" "S" "bool" "XMLReader" "public") ("m" "readString" "readString(<##>)" "S" "string" "XMLReader" "public") ("m" "readOuterXML" "readOuterXML(<##>)" "S" "string" "XMLReader" "public") ("m" "readInnerXML" "readInnerXML(<##>)" "S" "string" "XMLReader" "public") ("m" "read" "read(<##>)" "S" "bool" "XMLReader" "public") ("m" "open" "open(<#string $URI#>,<#string $encoding#>,<#int $options = 0#>)" "S" "bool" "XMLReader" "public") ("m" "next" "next(<#string $localname#>)" "S" "bool" "XMLReader" "public") ("m" "moveToNextAttribute" "moveToNextAttribute(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToFirstAttribute" "moveToFirstAttribute(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToElement" "moveToElement(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNs" "moveToAttributeNs(<#string $localName#>,<#string $namespaceURI#>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNo" "moveToAttributeNo(<#int $index#>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttribute" "moveToAttribute(<#string $name#>)" "S" "bool" "XMLReader" "public") ("m" "lookupNamespace" "lookupNamespace(<#string $prefix#>)" "S" "string" "XMLReader" "public") ("m" "isValid" "isValid(<##>)" "S" "bool" "XMLReader" "public") ("m" "getParserProperty" "getParserProperty(<#int $property#>)" "S" "bool" "XMLReader" "public") ("m" "getAttributeNs" "getAttributeNs(<#string $localName#>,<#string $namespaceURI#>)" "S" "string" "XMLReader" "public") ("m" "getAttributeNo" "getAttributeNo(<#int $index#>)" "S" "string" "XMLReader" "public") ("m" "getAttribute" "getAttribute(<#string $name#>)" "S" "string" "XMLReader" "public") ("m" "expand" "expand(<#DOMNode $basenode#>)" "S" "DOMNode" "XMLReader" "public") ("m" "close" "close(<##>)" "S" "bool" "XMLReader" "public") ("p" #215="xmlLang" #215# "S" "string" "XMLReader" "public") ("p" #216="value" #216# "S" "string" "XMLReader" "public") ("p" #217="prefix" #217# "S" "string" "XMLReader" "public") ("p" #218="nodeType" #218# "S" "int" "XMLReader" "public") ("p" #219="namespaceURI" #219# "S" "string" "XMLReader" "public") ("p" #220="name" #220# "S" "string" "XMLReader" "public") ("p" #221="localName" #221# "S" "string" "XMLReader" "public") ("p" #222="isEmptyElement" #222# "S" "bool" "XMLReader" "public") ("p" #223="isDefault" #223# "S" "bool" "XMLReader" "public") ("p" #224="hasValue" #224# "S" "bool" "XMLReader" "public") ("p" #225="hasAttributes" #225# "S" "bool" "XMLReader" "public") ("p" #226="depth" #226# "S" "int" "XMLReader" "public") ("p" #227="attributeCount" #227# "S" "int" "XMLReader" "public") ("d" #228="SUBST_ENTITIES" #228# "S" "int" "XMLReader" "public") ("d" #229="VALIDATE" #229# "S" "int" "XMLReader" "public") ("d" #230="DEFAULTATTRS" #230# "S" "int" "XMLReader" "public") ("d" #231="LOADDTD" #231# "S" "int" "XMLReader" "public") ("d" #232="XML_DECLARATION" #232# "S" "int" "XMLReader" "public") ("d" #233="END_ENTITY" #233# "S" "int" "XMLReader" "public") ("d" #234="END_ELEMENT" #234# "S" "int" "XMLReader" "public") ("d" #235="SIGNIFICANT_WHITESPACE" #235# "S" "int" "XMLReader" "public") ("d" #236="WHITESPACE" #236# "S" "int" "XMLReader" "public") ("d" #237="NOTATION" #237# "S" "int" "XMLReader" "public") ("d" #238="DOC_FRAGMENT" #238# "S" "int" "XMLReader" "public") ("d" #239="DOC_TYPE" #239# "S" "int" "XMLReader" "public") ("d" #240="DOC" #240# "S" "int" "XMLReader" "public") ("d" #241="COMMENT" #241# "S" "int" "XMLReader" "public") ("d" #242="PI" #242# "S" "int" "XMLReader" "public") ("d" #243="ENTITY" #243# "S" "int" "XMLReader" "public") ("d" #244="ENTITY_REF" #244# "S" "int" "XMLReader" "public") ("d" #245="CDATA" #245# "S" "int" "XMLReader" "public") ("d" #246="TEXT" #246# "S" "int" "XMLReader" "public") ("d" #247="ATTRIBUTE" #247# "S" "int" "XMLReader" "public") ("d" #248="ELEMENT" #248# "S" "int" "XMLReader" "public") ("d" #249="NONE" #249# "S" "int" #250# "public"))) (#251="SimpleXMLIterator" (("m" "valid" "valid(<##>)" "S" "bool" "SimpleXMLIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SimpleXMLIterator" "public") ("m" "next" "next(<##>)" "S" "void" "SimpleXMLIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "SimpleXMLIterator" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "SimpleXMLIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "SimpleXMLIterator" "SimpleXMLIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" #251# "public"))) (#252="SimpleXMLElement" (("m" "xpath" "xpath(<#string $path#>)" "S" "array" "SimpleXMLElement" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "SimpleXMLElement" "public") ("m" "registerXPathNamespace" "registerXPathNamespace(<#string $prefix#>,<#string $ns#>)" "S" "bool" "SimpleXMLElement" "public") ("m" "getNamespaces" "getNamespaces(<#bool $recursive = false#>)" "S" "array" "SimpleXMLElement" "public") ("m" "getName" "getName(<##>)" "S" "string" "SimpleXMLElement" "public") ("m" "getDocNamespaces" "getDocNamespaces(<#bool $recursive = false#>,<#bool $from_root = true#>)" "S" "array" "SimpleXMLElement" "public") ("m" "count" "count(<##>)" "S" "int" "SimpleXMLElement" "public") ("m" "children" "children(<#string $ns#>,<#bool $is_prefix = false#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "attributes" "attributes(<#string $ns = NULL#>,<#bool $is_prefix = false#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "asXML" "asXML(<#string $filename#>)" "S" "mixed" "SimpleXMLElement" "public") ("m" "addChild" "addChild(<#string $name#>,<#string $value#>,<#string $namespace#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "addAttribute" "addAttribute(<#string $name#>,<#string $value#>,<#string $namespace#>)" "S" "void" "SimpleXMLElement" "public") ("m" "__construct" "__construct(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #502="S" "void" #252# "public"))) (#254="SplString" (("d" #253="__default" #253# "S" "string" #254# "public"))) (#258="SplBool" (("d" #255="true" #255# "S" "boolean" "SplBool" "public") ("d" #256="false" #256# "S" "boolean" "SplBool" "public") ("d" #257="__default" #257# "S" "boolean" #258# "public"))) (#260="SplEnum" (("m" "getConstList" "getConstList(<#bool $include_default = false#>)" "S" "array" "SplEnum" "public") ("d" #259="__default" #259# "S" "NULL" #260# "public"))) (#262="SplFloat" (("d" #261="__default" #261# "S" "float" #262# "public"))) (#264="SplInt" (("d" #263="__default" #263# "S" "integer" #264# "public"))) (#266="SplType" (("m" "__construct" "__construct(<#mixed $initial_value#>,<#bool $strict#>)" #501="S" "void" "SplType" "public") ("d" #265="__default" #265# "S" "NULL" #266# "public"))) (#267="ZipArchive" (("m" "unchangeName" "unchangeName(<#string $name#>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeIndex" "unchangeIndex(<#int $index#>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeArchive" "unchangeArchive(<##>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeAll" "unchangeAll(<##>)" "S" "bool" "ZipArchive" "public") ("m" "statName" "statName(<#string $name#>,<#int $flags#>)" "S" "array" "ZipArchive" "public") ("m" "statIndex" "statIndex(<#int $index#>,<#int $flags#>)" "S" "array" "ZipArchive" "public") ("m" "setPassword" "setPassword(<#string $password#>)" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesName" "setExternalAttributesName(<#string $name#>,<#int $opsys#>,<#int $attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesIndex" "setExternalAttributesIndex(<#int $index#>,<#int $opsys#>,<#int $attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "setCompressionName" "setCompressionName(<#string $name#>,<#int $comp_method#>,<#int $comp_flags = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "setCompressionIndex" "setCompressionIndex(<#int $index#>,<#int $comp_method#>,<#int $comp_flags = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "setCommentName" "setCommentName(<#string $name#>,<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "setCommentIndex" "setCommentIndex(<#int $index#>,<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "setArchiveComment" "setArchiveComment(<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "renameName" "renameName(<#string $name#>,<#string $newname#>)" "S" "bool" "ZipArchive" "public") ("m" "renameIndex" "renameIndex(<#int $index#>,<#string $newname#>)" "S" "bool" "ZipArchive" "public") ("m" "open" "open(<#string $filename#>,<#int $flags#>)" "S" "mixed" "ZipArchive" "public") ("m" "locateName" "locateName(<#string $name#>,<#int $flags#>)" "S" "int" "ZipArchive" "public") ("m" "getStream" "getStream(<#string $name#>)" "S" "resource" "ZipArchive" "public") ("m" "getStatusString" "getStatusString(<##>)" "S" "string" "ZipArchive" "public") ("m" "getNameIndex" "getNameIndex(<#int $index#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getFromName" "getFromName(<#string $name#>,<#int $length = 0#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getFromIndex" "getFromIndex(<#int $index#>,<#int $length = 0#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getExternalAttributesName" "getExternalAttributesName(<#string $name#>,<#int &$opsys#>,<#int &$attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "GetExternalAttributesIndex" "GetExternalAttributesIndex(<#int $index#>,<#int &$opsys#>,<#int &$attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "getCommentName" "getCommentName(<#string $name#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getCommentIndex" "getCommentIndex(<#int $index#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getArchiveComment" "getArchiveComment(<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "extractTo" "extractTo(<#string $destination#>,<#mixed $entries#>)" "S" "bool" "ZipArchive" "public") ("m" "deleteName" "deleteName(<#string $name#>)" "S" "bool" "ZipArchive" "public") ("m" "deleteIndex" "deleteIndex(<#int $index#>)" "S" "bool" "ZipArchive" "public") ("m" "close" "close(<##>)" "S" "bool" "ZipArchive" "public") ("m" "addPattern" "addPattern(<#)#>)" "S" "bool" "ZipArchive" "public") ("m" "addGlob" "addGlob(<#)#>)" "S" "bool" "ZipArchive" "public") ("m" "addFromString" "addFromString(<#string $localname#>,<#string $contents#>)" "S" "bool" "ZipArchive" "public") ("m" "addFile" "addFile(<#string $filename#>,<#string $localname = NULL#>,<#int $start = 0#>,<#int $length = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "addEmptyDir" "addEmptyDir(<#string $dirname#>)" "S" "bool" #267# "public"))) (#269="DOMXPath" (("m" "registerPhpFunctions" "registerPhpFunctions(<#mixed $restrict#>)" "S" "void" "DOMXPath" "public") ("m" "registerNamespace" "registerNamespace(<#string $prefix#>,<#string $namespaceURI#>)" "S" "bool" "DOMXPath" "public") ("m" "query" "query(<#string $expression#>,<#DOMNode $contextnode#>,<#bool $registerNodeNS = true#>)" "S" "DOMNodeList" "DOMXPath" "public") ("m" "evaluate" "evaluate(<#string $expression#>,<#DOMNode $contextnode#>,<#bool $registerNodeNS = true#>)" "S" "mixed" "DOMXPath" "public") ("m" "__construct" "__construct(<#DOMDocument $doc#>)" #500="S" "void" "DOMXPath" "public") ("p" #268="document" #268# "S" "DOMDocument" #269# "public"))) (#271="DOMText" (("m" "splitText" "splitText(<#int $offset#>)" "S" "DOMText" "DOMText" "public") ("m" "isWhitespaceInElementContent" "isWhitespaceInElementContent(<##>)" "S" "bool" "DOMText" "public") ("m" "__construct" "__construct(<#string $value#>)" #499="S" "void" "DOMText" "public") ("p" #270="wholeText" #270# "S" "string" #271# "public"))) (#274="DOMProcessingInstruction" (("m" "__construct" "__construct(<#string $name#>,<#string $value#>)" #498="S" "void" "DOMProcessingInstruction" "public") ("p" #272="data" #272# "S" "string" "DOMProcessingInstruction" "public") ("p" #273="target" #273# "S" "string" #274# "public"))) (#277="DOMNotation" (("p" #275="systemId" #275# "S" "string" "DOMNotation" "public") ("p" #276="publicId" #276# "S" "string" #277# "public"))) (#279="DOMNodeList" (("m" "item" "item(<#int $index#>)" "S" "DOMNode" "DOMNodeList" "public") ("p" #278="length" #278# "S" "int" #279# "public"))) (#296="DOMNode" (("m" "replaceChild" "replaceChild(<#DOMNode $newnode#>,<#DOMNode $oldnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "removeChild" "removeChild(<#DOMNode $oldnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "normalize" "normalize(<##>)" "S" "void" "DOMNode" "public") ("m" "lookupPrefix" "lookupPrefix(<#string $namespaceURI#>)" "S" "string" "DOMNode" "public") ("m" "lookupNamespaceURI" "lookupNamespaceURI(<#string $prefix#>)" "S" "string" "DOMNode" "public") ("m" "isSupported" "isSupported(<#string $feature#>,<#string $version#>)" "S" "bool" "DOMNode" "public") ("m" "isSameNode" "isSameNode(<#DOMNode $node#>)" "S" "bool" "DOMNode" "public") ("m" "isDefaultNamespace" "isDefaultNamespace(<#string $namespaceURI#>)" "S" "bool" "DOMNode" "public") ("m" "insertBefore" "insertBefore(<#DOMNode $newnode#>,<#DOMNode $refnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "hasChildNodes" "hasChildNodes(<##>)" "S" "bool" "DOMNode" "public") ("m" "hasAttributes" "hasAttributes(<##>)" "S" "bool" "DOMNode" "public") ("m" "getNodePath" "getNodePath(<##>)" "S" "string" "DOMNode" "public") ("m" "getLineNo" "getLineNo(<##>)" "S" "int" "DOMNode" "public") ("m" "cloneNode" "cloneNode(<#bool $deep#>)" "S" "DOMNode" "DOMNode" "public") ("m" "C14NFile" "C14NFile(<#string $uri#>,<#bool $exclusive#>,<#bool $with_comments#>,<#array $xpath#>,<#array $ns_prefixes#>)" "S" "int" "DOMNode" "public") ("m" "C14N" "C14N(<#bool $exclusive#>,<#bool $with_comments#>,<#array $xpath#>,<#array $ns_prefixes#>)" "S" "string" "DOMNode" "public") ("m" "appendChild" "appendChild(<#DOMNode $newnode#>)" "S" "DOMNode" "DOMNode" "public") ("p" #280="textContent" #280# "S" "string" "DOMNode" "public") ("p" #281="baseURI" #281# "S" "string" "DOMNode" "public") ("p" #282="localName" #282# "S" "string" "DOMNode" "public") ("p" #283="prefix" #283# "S" "string" "DOMNode" "public") ("p" #284="namespaceURI" #284# "S" "string" "DOMNode" "public") ("p" #285="ownerDocument" #285# "S" "DOMDocument" "DOMNode" "public") ("p" #286="attributes" #286# "S" "DOMNamedNodeMap" "DOMNode" "public") ("p" #287="nextSibling" #287# "S" "DOMNode" "DOMNode" "public") ("p" #288="previousSibling" #288# "S" "DOMNode" "DOMNode" "public") ("p" #289="lastChild" #289# "S" "DOMNode" "DOMNode" "public") ("p" #290="firstChild" #290# "S" "DOMNode" "DOMNode" "public") ("p" #291="childNodes" #291# "S" "DOMNodeList" "DOMNode" "public") ("p" #292="parentNode" #292# "S" "DOMNode" "DOMNode" "public") ("p" #293="nodeType" #293# "S" "int" "DOMNode" "public") ("p" #294="nodeValue" #294# "S" "string" "DOMNode" "public") ("p" #295="nodeName" #295# "S" "string" #296# "public"))) (#298="DOMNamedNodeMap" (("m" "item" "item(<#int $index#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItemNS" "getNamedItemNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItem" "getNamedItem(<#string $name#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("p" #297="length" #297# "S" "int" #298# "public"))) (#299="DOMImplementation" (("m" "hasFeature" "hasFeature(<#string $feature#>,<#string $version#>)" "S" "bool" "DOMImplementation" "public") ("m" "createDocumentType" "createDocumentType(<#string $qualifiedName = NULL#>,<#string $publicId = NULL#>,<#string $systemId = NULL#>)" "S" "DOMDocumentType" "DOMImplementation" "public") ("m" "createDocument" "createDocument(<#string $namespaceURI = NULL#>,<#string $qualifiedName = NULL#>,<#DOMDocumentType $doctype = NULL#>)" "S" "DOMDocument" "DOMImplementation" "public") ("m" "__construct" "__construct(<##>)" #497="S" "void" #299# "public"))) (#301="DOMException" (("p" #300="code" #300# "S" "int" #301# "public"))) (#302="DOMEntityReference" (("m" "__construct" "__construct(<#string $name#>)" #496="S" "void" #302# "public"))) (#309="DOMEntity" (("p" #303="version" #303# "S" "string" "DOMEntity" "public") ("p" #304="encoding" #304# "S" "string" "DOMEntity" "public") ("p" #305="actualEncoding" #305# "S" "string" "DOMEntity" "public") ("p" #306="notationName" #306# "S" "string" "DOMEntity" "public") ("p" #307="systemId" #307# "S" "string" "DOMEntity" "public") ("p" #308="publicId" #308# "S" "string" #309# "public"))) (#312="DOMElement" (("m" "setIdAttributeNS" "setIdAttributeNS(<#string $namespaceURI#>,<#string $localName#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setIdAttributeNode" "setIdAttributeNode(<#DOMAttr $attr#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setIdAttribute" "setIdAttribute(<#string $name#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setAttributeNS" "setAttributeNS(<#string $namespaceURI#>,<#string $qualifiedName#>,<#string $value#>)" "S" "void" "DOMElement" "public") ("m" "setAttributeNodeNS" "setAttributeNodeNS(<#DOMAttr $attr#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttributeNode" "setAttributeNode(<#DOMAttr $attr#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttribute" "setAttribute(<#string $name#>,<#string $value#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "removeAttributeNS" "removeAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "bool" "DOMElement" "public") ("m" "removeAttributeNode" "removeAttributeNode(<#DOMAttr $oldnode#>)" "S" "bool" "DOMElement" "public") ("m" "removeAttribute" "removeAttribute(<#string $name#>)" "S" "bool" "DOMElement" "public") ("m" "hasAttributeNS" "hasAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "bool" "DOMElement" "public") ("m" "hasAttribute" "hasAttribute(<#string $name#>)" "S" "bool" "DOMElement" "public") ("m" "getElementsByTagNameNS" "getElementsByTagNameNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNodeList" "DOMElement" "public") ("m" "getElementsByTagName" "getElementsByTagName(<#string $name#>)" "S" "DOMNodeList" "DOMElement" "public") ("m" "getAttributeNS" "getAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "string" "DOMElement" "public") ("m" "getAttributeNodeNS" "getAttributeNodeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttributeNode" "getAttributeNode(<#string $name#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttribute" "getAttribute(<#string $name#>)" "S" "string" "DOMElement" "public") ("m" "__construct" "__construct(<#string $name#>,<#string $value#>,<#string $namespaceURI#>)" #495="S" "void" "DOMElement" "public") ("p" #310="tagName" #310# "S" "string" "DOMElement" "public") ("p" #311="schemaTypeInfo" #311# "S" "bool" #312# "public"))) (#319="DOMDocumentType" (("p" #313="internalSubset" #313# "S" "string" "DOMDocumentType" "public") ("p" #314="notations" #314# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" #315="entities" #315# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" #316="name" #316# "S" "string" "DOMDocumentType" "public") ("p" #317="systemId" #317# "S" "string" "DOMDocumentType" "public") ("p" #318="publicId" #318# "S" "string" #319# "public"))) (#320="DOMDocumentFragment" (("m" "appendXML" "appendXML(<#string $data#>)" "S" "bool" #320# "public"))) (#340="DOMDocument" (("m" "xinclude" "xinclude(<#int $options#>)" "S" "int" "DOMDocument" "public") ("m" "validate" "validate(<##>)" "S" "bool" "DOMDocument" "public") ("m" "schemaValidateSource" "schemaValidateSource(<#string $source#>,<#int $flags#>)" "S" "bool" "DOMDocument" "public") ("m" "schemaValidate" "schemaValidate(<#string $filename#>,<#int $flags#>)" "S" "bool" "DOMDocument" "public") ("m" "saveXML" "saveXML(<#DOMNode $node#>,<#int $options#>)" "S" "string" "DOMDocument" "public") ("m" "saveHTMLFile" "saveHTMLFile(<#string $filename#>)" "S" "int" "DOMDocument" "public") ("m" "saveHTML" "saveHTML(<#DOMNode $node = NULL#>)" "S" "string" "DOMDocument" "public") ("m" "save" "save(<#string $filename#>,<#int $options#>)" "S" "int" "DOMDocument" "public") ("m" "relaxNGValidateSource" "relaxNGValidateSource(<#string $source#>)" "S" "bool" "DOMDocument" "public") ("m" "relaxNGValidate" "relaxNGValidate(<#string $filename#>)" "S" "bool" "DOMDocument" "public") ("m" "registerNodeClass" "registerNodeClass(<#string $baseclass#>,<#string $extendedclass#>)" "S" "bool" "DOMDocument" "public") ("m" "normalizeDocument" "normalizeDocument(<##>)" "S" "void" "DOMDocument" "public") ("m" "loadXML" "loadXML(<#string $source#>,<#int $options = 0#>)" "S" "mixed" "DOMDocument" "public") ("m" "loadHTMLFile" "loadHTMLFile(<#string $filename#>,<#int $options = 0#>)" "S" "bool" "DOMDocument" "public") ("m" "loadHTML" "loadHTML(<#string $source#>,<#int $options = 0#>)" "S" "bool" "DOMDocument" "public") ("m" "load" "load(<#string $filename#>,<#int $options = 0#>)" "S" "mixed" "DOMDocument" "public") ("m" "importNode" "importNode(<#DOMNode $importedNode#>,<#bool $deep#>)" "S" "DOMNode" "DOMDocument" "public") ("m" "getElementsByTagNameNS" "getElementsByTagNameNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementsByTagName" "getElementsByTagName(<#string $name#>)" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementById" "getElementById(<#string $elementId#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createTextNode" "createTextNode(<#string $content#>)" "S" "DOMText" "DOMDocument" "public") ("m" "createProcessingInstruction" "createProcessingInstruction(<#string $target#>,<#string $data#>)" "S" "DOMProcessingInstruction" "DOMDocument" "public") ("m" "createEntityReference" "createEntityReference(<#string $name#>)" "S" "DOMEntityReference" "DOMDocument" "public") ("m" "createElementNS" "createElementNS(<#string $namespaceURI#>,<#string $qualifiedName#>,<#string $value#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createElement" "createElement(<#string $name#>,<#string $value#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createDocumentFragment" "createDocumentFragment(<##>)" "S" "DOMDocumentFragment" "DOMDocument" "public") ("m" "createComment" "createComment(<#string $data#>)" "S" "DOMComment" "DOMDocument" "public") ("m" "createCDATASection" "createCDATASection(<#string $data#>)" "S" "DOMCDATASection" "DOMDocument" "public") ("m" "createAttributeNS" "createAttributeNS(<#string $namespaceURI#>,<#string $qualifiedName#>)" "S" "DOMAttr" "DOMDocument" "public") ("m" "createAttribute" "createAttribute(<#string $name#>)" "S" "DOMAttr" "DOMDocument" "public") ("m" "__construct" "__construct(<#string $version#>,<#string $encoding#>)" #494="S" "void" "DOMDocument" "public") ("p" #321="xmlVersion" #321# "S" "string" "DOMDocument" "public") ("p" #322="xmlStandalone" #322# "S" "bool" "DOMDocument" "public") ("p" #323="xmlEncoding" #323# "S" "string" "DOMDocument" "public") ("p" #324="version" #324# "S" "string" "DOMDocument" "public") ("p" #325="validateOnParse" #325# "S" "bool" "DOMDocument" "public") ("p" #326="substituteEntities" #326# "S" "bool" "DOMDocument" "public") ("p" #327="strictErrorChecking" #327# "S" "bool" "DOMDocument" "public") ("p" #328="standalone" #328# "S" "bool" "DOMDocument" "public") ("p" #329="resolveExternals" #329# "S" "bool" "DOMDocument" "public") ("p" #330="recover" #330# "S" "bool" "DOMDocument" "public") ("p" #331="preserveWhiteSpace" #331# "S" "bool" "DOMDocument" "public") ("p" #332="implementation" #332# "S" "DOMImplementation" "DOMDocument" "public") ("p" #333="formatOutput" #333# "S" "bool" "DOMDocument" "public") ("p" #334="encoding" #334# "S" "string" "DOMDocument" "public") ("p" #335="documentURI" #335# "S" "string" "DOMDocument" "public") ("p" #336="documentElement" #336# "S" "DOMElement" "DOMDocument" "public") ("p" #337="doctype" #337# "S" "DOMDocumentType" "DOMDocument" "public") ("p" #338="config" #338# "S" "DOMConfiguration" "DOMDocument" "public") ("p" #339="actualEncoding" #339# "S" "string" #340# "public"))) (#341="DOMComment" (("m" "__construct" "__construct(<#string $value#>)" #493="S" "void" #341# "public"))) (#344="DOMCharacterData" (("m" "substringData" "substringData(<#int $offset#>,<#int $count#>)" "S" "string" "DOMCharacterData" "public") ("m" "replaceData" "replaceData(<#int $offset#>,<#int $count#>,<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("m" "insertData" "insertData(<#int $offset#>,<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("m" "deleteData" "deleteData(<#int $offset#>,<#int $count#>)" "S" "void" "DOMCharacterData" "public") ("m" "appendData" "appendData(<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("p" #342="length" #342# "S" "int" "DOMCharacterData" "public") ("p" #343="data" #343# "S" "string" #344# "public"))) (#345="DOMCdataSection" (("m" "__construct" "__construct(<#string $value#>)" #492="S" "void" #345# "public"))) (#351="DOMAttr" (("m" "isId" "isId(<##>)" "S" "bool" "DOMAttr" "public") ("m" "__construct" "__construct(<#string $name#>,<#string $value#>)" #491="S" "void" "DOMAttr" "public") ("p" #346="value" #346# "S" "string" "DOMAttr" "public") ("p" #347="specified" #347# "S" "bool" "DOMAttr" "public") ("p" #348="schemaTypeInfo" #348# "S" "bool" "DOMAttr" "public") ("p" #349="ownerElement" #349# "S" "DOMElement" "DOMAttr" "public") ("p" #350="name" #350# "S" "string" #351# "public"))) (#352="SplSubject" (("m" "notify" "notify(<##>)" "S" "void" "SplSubject" "public") ("m" "detach" "detach(<#SplObserver $observer#>)" "S" "void" "SplSubject" "public") ("m" "attach" "attach(<#SplObserver $observer#>)" "S" "void" #352# "public"))) (#353="SplObserver" (("m" "update" "update(<#SplSubject $subject#>)" "S" "void" #353# "public"))) (#356="ArrayObject" (("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "ArrayObject" "public") ("m" "uksort" "uksort(<#callable $cmp_function#>)" "S" "void" "ArrayObject" "public") ("m" "uasort" "uasort(<#callable $cmp_function#>)" "S" "void" "ArrayObject" "public") ("m" "setIteratorClass" "setIteratorClass(<#string $iterator_class#>)" "S" "void" "ArrayObject" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "ArrayObject" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayObject" "public") ("m" "offsetUnset" "offsetUnset(<#mixed $index#>)" "S" "void" "ArrayObject" "public") ("m" "offsetSet" "offsetSet(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "ArrayObject" "public") ("m" "offsetGet" "offsetGet(<#mixed $index#>)" "S" "mixed" "ArrayObject" "public") ("m" "offsetExists" "offsetExists(<#mixed $index#>)" "S" "bool" "ArrayObject" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayObject" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayObject" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayObject" "public") ("m" "getIteratorClass" "getIteratorClass(<##>)" "S" "string" "ArrayObject" "public") ("m" "getIterator" "getIterator(<##>)" "S" "ArrayIterator" "ArrayObject" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "ArrayObject" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayObject" "public") ("m" "exchangeArray" "exchangeArray(<#mixed $input#>)" "S" "array" "ArrayObject" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayObject" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayObject" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" "ArrayObject" "public") ("m" "__construct" "__construct(<#mixed $input = null#>,<#int $flags = 0#>,<#string $iterator_class = \"ArrayIterator\"#>)" #490="S" "void" "ArrayObject" "public") ("d" #354="ARRAY_AS_PROPS" #354# "S" "integer" "ArrayObject" "public") ("d" #355="STD_PROP_LIST" #355# "S" "integer" #356# "public"))) (#357="SplTempFileObject" (("m" "__construct" "__construct(<#int $max_memory#>)" #489="S" "void" #357# "public"))) (#362="SplFileObject" (("m" "valid" "valid(<##>)" "S" "bool" "SplFileObject" "public") ("m" "__toString" "__toString(<##>)" "S" "void" "SplFileObject" "public") ("m" "setMaxLineLen" "setMaxLineLen(<#int $max_len#>)" "S" "void" "SplFileObject" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "SplFileObject" "public") ("m" "setCsvControl" "setCsvControl(<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = \"\\\"\"#>,<#string $escape = \"\\\\\"#>)" "S" "void" "SplFileObject" "public") ("m" "seek" "seek(<#int $line_pos#>)" "S" "void" "SplFileObject" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplFileObject" "public") ("m" "next" "next(<##>)" "S" "void" "SplFileObject" "public") ("m" "key" "key(<##>)" "S" "int" "SplFileObject" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "SplFileObject" "public") ("m" "getMaxLineLen" "getMaxLineLen(<##>)" "S" "int" "SplFileObject" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "SplFileObject" "public") ("m" "getCsvControl" "getCsvControl(<##>)" "S" "array" "SplFileObject" "public") ("m" "getChildren" "getChildren(<##>)" "S" "void" "SplFileObject" "public") ("m" "fwrite" "fwrite(<#string $str#>,<#int $length#>)" "S" "int" "SplFileObject" "public") ("m" "ftruncate" "ftruncate(<#int $size#>)" "S" "bool" "SplFileObject" "public") ("m" "ftell" "ftell(<##>)" "S" "int" "SplFileObject" "public") ("m" "fstat" "fstat(<##>)" "S" "array" "SplFileObject" "public") ("m" "fseek" "fseek(<#int $offset#>,<#int $whence = SEEK_SET#>)" "S" "int" "SplFileObject" "public") ("m" "fscanf" "fscanf(<#string $format#>,<#$args#>)" "S" "mixed" "SplFileObject" "public") ("m" "fread" "fread(<#int $length#>)" "S" "string" "SplFileObject" "public") ("m" "fputcsv" "fputcsv(<#array $fields#>,<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = '\"'#>,<#string $escape = \"\\\\\"#>)" "S" "int" "SplFileObject" "public") ("m" "fpassthru" "fpassthru(<##>)" "S" "int" "SplFileObject" "public") ("m" "flock" "flock(<#int $operation#>,<#int &$wouldblock#>)" "S" "bool" "SplFileObject" "public") ("m" "fgetss" "fgetss(<#string $allowable_tags#>)" "S" "string" "SplFileObject" "public") ("m" "fgets" "fgets(<##>)" "S" "string" "SplFileObject" "public") ("m" "fgetcsv" "fgetcsv(<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = \"\\\"\"#>,<#string $escape = \"\\\\\"#>)" "S" "array" "SplFileObject" "public") ("m" "fgetc" "fgetc(<##>)" "S" "string" "SplFileObject" "public") ("m" "fflush" "fflush(<##>)" "S" "bool" "SplFileObject" "public") ("m" "eof" "eof(<##>)" "S" "bool" "SplFileObject" "public") ("m" "current" "current(<##>)" "S" "string" "SplFileObject" "public") ("d" #358="READ_CSV" #358# "S" "integer" "SplFileObject" "public") ("d" #359="SKIP_EMPTY" #359# "S" "integer" "SplFileObject" "public") ("d" #360="READ_AHEAD" #360# "S" "integer" "SplFileObject" "public") ("d" #361="DROP_NEW_LINE" #361# "S" "integer" #362# "public"))) (#363="SplFileInfo" (("m" "__toString" "__toString(<##>)" "S" "void" "SplFileInfo" "public") ("m" "setInfoClass" "setInfoClass(<#string $class_name = \"SplFileInfo\"#>)" "S" "void" "SplFileInfo" "public") ("m" "setFileClass" "setFileClass(<#string $class_name = \"SplFileObject\"#>)" "S" "void" "SplFileInfo" "public") ("m" "openFile" "openFile(<#string $open_mode = \"r\"#>,<#bool $use_include_path = false#>,<#resource $context = NULL#>)" "S" "SplFileObject" "SplFileInfo" "public") ("m" "isWritable" "isWritable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isReadable" "isReadable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isLink" "isLink(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isFile" "isFile(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isExecutable" "isExecutable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isDir" "isDir(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "getType" "getType(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getRealPath" "getRealPath(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getPerms" "getPerms(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getPathname" "getPathname(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getPathInfo" "getPathInfo(<#string $class_name#>)" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getPath" "getPath(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getOwner" "getOwner(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getMTime" "getMTime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getLinkTarget" "getLinkTarget(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getInode" "getInode(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getGroup" "getGroup(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getFileInfo" "getFileInfo(<#string $class_name#>)" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getExtension" "getExtension(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getCTime" "getCTime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getBasename" "getBasename(<#string $suffix#>)" "S" "string" "SplFileInfo" "public") ("m" "getATime" "getATime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "__construct" "__construct(<#string $file_name#>)" #488="S" "void" #363# "public"))) (#487="UnexpectedValueException" nil) (#486="UnderflowException" nil) (#485="RuntimeException" nil) (#484="RangeException" nil) (#483="OverflowException" nil) (#482="OutOfRangeException" nil) (#481="OutOfBoundsException" nil) (#480="LengthException" nil) (#479="InvalidArgumentException" nil) (#478="DomainException" nil) (#477="BadMethodCallException" nil) (#476="BadFunctionCallException" nil) (#475="LogicException" nil) (#368="Exception" (("m" "__clone" "__clone(<##>)" "S" "private" "Exception" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "Exception" "public") ("m" "getTraceAsString" "getTraceAsString(<##>)" "S" "string" "Exception" "public") ("m" "getTrace" "getTrace(<##>)" "S" "array" "Exception" "public") ("m" "getLine" "getLine(<##>)" "S" "int" "Exception" "public") ("m" "getFile" "getFile(<##>)" "S" "string" "Exception" "public") ("m" "getCode" "getCode(<##>)" "S" "int" "Exception" "public") ("m" "getPrevious" "getPrevious(<##>)" "S" "Exception" "Exception" "public") ("m" "getMessage" "getMessage(<##>)" "S" "string" "Exception" "public") ("m" "__construct" "__construct(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474="S" "void" "Exception" "public") ("p" #364="line" #364# "S" "int" "Exception" "protected") ("p" #365="file" #365# "S" "string" "Exception" "protected") ("p" #366="code" #366# "S" "int" "Exception" "protected") ("p" #367="message" #367# "S" "string" #368# "protected"))) (#604="Traversable" nil) (#369="Iterator" (("m" "valid" "valid(<##>)" "S" "boolean" "Iterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "Iterator" "public") ("m" "next" "next(<##>)" "S" "void" "Iterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "Iterator" "public") ("m" "current" "current(<##>)" "S" "mixed" #369# "public"))) (#370="Countable" (("m" "count" "count(<##>)" "S" "int" #370# "public"))) (#371="RecursiveIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveIterator" #371# "public"))) (#378="RegexIterator" (("m" "setPregFlags" "setPregFlags(<#int $preg_flags#>)" "S" "void" "RegexIterator" "public") ("m" "setMode" "setMode(<#int $mode#>)" "S" "void" "RegexIterator" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "RegexIterator" "public") ("m" "getRegex" "getRegex(<##>)" "S" "string" "RegexIterator" "public") ("m" "getPregFlags" "getPregFlags(<##>)" "S" "int" "RegexIterator" "public") ("m" "getMode" "getMode(<##>)" "S" "int" "RegexIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "RegexIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" "RegexIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #473="S" "void" "RegexIterator" "public") ("d" #372="USE_KEY" #372# "S" "integer" "RegexIterator" "public") ("d" #373="REPLACE" #373# "S" "integer" "RegexIterator" "public") ("d" #374="SPLIT" #374# "S" "integer" "RegexIterator" "public") ("d" #375="ALL_MATCHES" #375# "S" "integer" "RegexIterator" "public") ("d" #376="GET_MATCH" #376# "S" "integer" "RegexIterator" "public") ("d" #377="MATCH" #377# "S" "integer" #378# "public"))) (#387="RecursiveTreeIterator" (("m" "valid" "valid(<##>)" "S" "bool" "RecursiveTreeIterator" "public") ("m" "setPrefixPart" "setPrefixPart(<#int $part#>,<#string $value#>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "nextElement" "nextElement(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "key" "key(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "getPrefix" "getPrefix(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "getPostfix" "getPostfix(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "getEntry" "getEntry(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "endIteration" "endIteration(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "endChildren" "endChildren(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "current" "current(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator_IteratorAggregate $it#>,<#int $flags = RecursiveTreeIterator::BYPASS_KEY#>,<#int $cit_flags = CachingIterator::CATCH_GET_CHILD#>,<#int $mode = RecursiveIteratorIterator::SELF_FIRST#>)" #472="S" "void" "RecursiveTreeIterator" "public") ("m" "callHasChildren" "callHasChildren(<##>)" "S" "bool" "RecursiveTreeIterator" "public") ("m" "callGetChildren" "callGetChildren(<##>)" "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginIteration" "beginIteration(<##>)" "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginChildren" "beginChildren(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("d" #379="PREFIX_RIGHT" #379# "S" "integer" "RecursiveTreeIterator" "public") ("d" #380="PREFIX_END_LAST" #380# "S" "integer" "RecursiveTreeIterator" "public") ("d" #381="PREFIX_END_HAS_NEXT" #381# "S" "integer" "RecursiveTreeIterator" "public") ("d" #382="PREFIX_MID_LAST" #382# "S" "integer" "RecursiveTreeIterator" "public") ("d" #383="PREFIX_MID_HAS_NEXT" #383# "S" "integer" "RecursiveTreeIterator" "public") ("d" #384="PREFIX_LEFT" #384# "S" "integer" "RecursiveTreeIterator" "public") ("d" #385="BYPASS_KEY" #385# "S" "integer" "RecursiveTreeIterator" "public") ("d" #386="BYPASS_CURRENT" #386# "S" "integer" #387# "public"))) (#388="RecursiveRegexIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveRegexIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveRegexIterator" "RecursiveRegexIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #471="S" "void" #388# "public"))) (#393="RecursiveIteratorIterator" (("m" "valid" "valid(<##>)" "S" "bool" "RecursiveIteratorIterator" "public") ("m" "setMaxDepth" "setMaxDepth(<#string $max_depth = -1#>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "nextElement" "nextElement(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getSubIterator" "getSubIterator(<#int $level#>)" "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "getMaxDepth" "getMaxDepth(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "iterator" "RecursiveIteratorIterator" "public") ("m" "getDepth" "getDepth(<##>)" "S" "int" "RecursiveIteratorIterator" "public") ("m" "endIteration" "endIteration(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "endChildren" "endChildren(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>,<#int $mode = RecursiveIteratorIterator::LEAVES_ONLY#>,<#int $flags = 0#>)" #470="S" "void" "RecursiveIteratorIterator" "public") ("m" "callHasChildren" "callHasChildren(<##>)" "S" "bool" "RecursiveIteratorIterator" "public") ("m" "callGetChildren" "callGetChildren(<##>)" "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "beginIteration" "beginIteration(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "beginChildren" "beginChildren(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("d" #389="CATCH_GET_CHILD" #389# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #390="CHILD_FIRST" #390# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #391="SELF_FIRST" #391# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #392="LEAVES_ONLY" #392# "S" "integer" #393# "public"))) (#394="RecursiveFilterIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveFilterIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveFilterIterator" "RecursiveFilterIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>)" #469="S" "void" #394# "public"))) (#395="RecursiveDirectoryIterator" (("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveDirectoryIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveDirectoryIterator" "public") ("m" "key" "key(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "hasChildren" "hasChildren(<#bool $allow_links = false#>)" "S" "bool" "RecursiveDirectoryIterator" "public") ("m" "getSubPathname" "getSubPathname(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getSubPath" "getSubPath(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "mixed" "RecursiveDirectoryIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #468="S" "void" #395# "public"))) (#396="RecursiveCallbackFilterIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "void" "RecursiveCallbackFilterIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveCallbackFilterIterator" "RecursiveCallbackFilterIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>,<#string $callback#>)" #467="S" "void" #396# "public"))) (#397="RecursiveCachingIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveCachingIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveCachingIterator" "RecursiveCachingIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #466="S" "void" #397# "public"))) (#398="RecursiveArrayIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveArrayIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveArrayIterator" #398# "public"))) (#399="ParentIterator" (("m" "rewind" "rewind(<##>)" "S" "void" "ParentIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ParentIterator" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "ParentIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "ParentIterator" "ParentIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>)" #465="S" "void" "ParentIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" #399# "public"))) (#400="NoRewindIterator" (("m" "valid" "valid(<##>)" "S" "bool" "NoRewindIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "NoRewindIterator" "public") ("m" "next" "next(<##>)" "S" "void" "NoRewindIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "NoRewindIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "iterator" "NoRewindIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "NoRewindIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #464="S" "void" #400# "public"))) (#405="MultipleIterator" (("m" "valid" "valid(<##>)" "S" "void" "MultipleIterator" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "MultipleIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "MultipleIterator" "public") ("m" "next" "next(<##>)" "S" "void" "MultipleIterator" "public") ("m" "key" "key(<##>)" "S" "array" "MultipleIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "MultipleIterator" "public") ("m" "detachIterator" "detachIterator(<#Iterator $iterator#>)" "S" "void" "MultipleIterator" "public") ("m" "current" "current(<##>)" "S" "array" "MultipleIterator" "public") ("m" "countIterators" "countIterators(<##>)" "S" "void" "MultipleIterator" "public") ("m" "containsIterator" "containsIterator(<#Iterator $iterator#>)" "S" "void" "MultipleIterator" "public") ("m" "attachIterator" "attachIterator(<#Iterator $iterator#>,<#string $infos#>)" "S" "void" "MultipleIterator" "public") ("m" "__construct" "__construct(<#int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC#>)" #463="S" "void" "MultipleIterator" "public") ("d" #401="MIT_KEYS_ASSOC" #401# "S" "integer" "MultipleIterator" "public") ("d" #402="MIT_KEYS_NUMERIC" #402# "S" "integer" "MultipleIterator" "public") ("d" #403="MIT_NEED_ALL" #403# "S" "integer" "MultipleIterator" "public") ("d" #404="MIT_NEED_ANY" #404# "S" "integer" #405# "public"))) (#406="LimitIterator" (("m" "valid" "valid(<##>)" "S" "bool" "LimitIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "int" "LimitIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "LimitIterator" "public") ("m" "next" "next(<##>)" "S" "void" "LimitIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "LimitIterator" "public") ("m" "getPosition" "getPosition(<##>)" "S" "int" "LimitIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "LimitIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "LimitIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#int $offset = 0#>,<#int $count = -1#>)" #462="S" "void" #406# "public"))) (#407="InfiniteIterator" (("m" "next" "next(<##>)" "S" "void" "InfiniteIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #461="S" "void" #407# "public"))) (#408="GlobIterator" (("m" "count" "count(<##>)" "S" "int" "GlobIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #460="S" "void" #408# "public"))) (#409="FilterIterator" (("m" "valid" "valid(<##>)" "S" "bool" "FilterIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "FilterIterator" "public") ("m" "next" "next(<##>)" "S" "void" "FilterIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "FilterIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "FilterIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "FilterIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #459="S" "void" "FilterIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" #409# "public"))) (#421="FilesystemIterator" (("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "FilesystemIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "FilesystemIterator" "public") ("m" "next" "next(<##>)" "S" "void" "FilesystemIterator" "public") ("m" "key" "key(<##>)" "S" "string" "FilesystemIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "FilesystemIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "FilesystemIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS#>)" #458="S" "void" "FilesystemIterator" "public") ("d" #410="UNIX_PATHS" #410# "S" "integer" "FilesystemIterator" "public") ("d" #411="SKIP_DOTS" #411# "S" "integer" "FilesystemIterator" "public") ("d" #412="NEW_CURRENT_AND_KEY" #412# "S" "integer" "FilesystemIterator" "public") ("d" #413="KEY_MODE_MASK" #413# "S" "integer" "FilesystemIterator" "public") ("d" #414="FOLLOW_SYMLINKS" #414# "S" "integer" "FilesystemIterator" "public") ("d" #415="KEY_AS_FILENAME" #415# "S" "integer" "FilesystemIterator" "public") ("d" #416="KEY_AS_PATHNAME" #416# "S" "integer" "FilesystemIterator" "public") ("d" #417="CURRENT_MODE_MASK" #417# "S" "integer" "FilesystemIterator" "public") ("d" #418="CURRENT_AS_SELF" #418# "S" "integer" "FilesystemIterator" "public") ("d" #419="CURRENT_AS_FILEINFO" #419# "S" "integer" "FilesystemIterator" "public") ("d" #420="CURRENT_AS_PATHNAME" #420# "S" "integer" #421# "public"))) (#422="EmptyIterator" (("m" "valid" "valid(<##>)" "S" "void" "EmptyIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "EmptyIterator" "public") ("m" "next" "next(<##>)" "S" "void" "EmptyIterator" "public") ("m" "key" "key(<##>)" "S" "void" "EmptyIterator" "public") ("m" "current" "current(<##>)" "S" "void" #422# "public"))) (#423="DirectoryIterator" (("m" "valid" "valid(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "DirectoryIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "DirectoryIterator" "public") ("m" "next" "next(<##>)" "S" "void" "DirectoryIterator" "public") ("m" "key" "key(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "isWritable" "isWritable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isReadable" "isReadable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isLink" "isLink(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isFile" "isFile(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isExecutable" "isExecutable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isDot" "isDot(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isDir" "isDir(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "getType" "getType(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getPerms" "getPerms(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getPathname" "getPathname(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getPath" "getPath(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getOwner" "getOwner(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getMTime" "getMTime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getInode" "getInode(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getGroup" "getGroup(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getExtension" "getExtension(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getCTime" "getCTime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getBasename" "getBasename(<#string $suffix#>)" "S" "string" "DirectoryIterator" "public") ("m" "getATime" "getATime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "current" "current(<##>)" "S" "DirectoryIterator" "DirectoryIterator" "public") ("m" "__construct" "__construct(<#string $path#>)" #457="S" "void" #423# "public"))) (#424="CallbackFilterIterator" (("m" "accept" "accept(<##>)" "S" "string" "CallbackFilterIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#callable $callback#>)" #456="S" "void" #424# "public"))) (#431="CachingIterator" (("m" "valid" "valid(<##>)" "S" "void" "CachingIterator" "public") ("m" "__toString" "__toString(<##>)" "S" "void" "CachingIterator" "public") ("m" "setFlags" "setFlags(<#bitmask $flags#>)" "S" "void" "CachingIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "CachingIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "CachingIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "next" "next(<##>)" "S" "void" "CachingIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "CachingIterator" "public") ("m" "hasNext" "hasNext(<##>)" "S" "void" "CachingIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "CachingIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "CachingIterator" "public") ("m" "getCache" "getCache(<##>)" "S" "array" "CachingIterator" "public") ("m" "current" "current(<##>)" "S" "void" "CachingIterator" "public") ("m" "count" "count(<##>)" "S" "int" "CachingIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #455="S" "void" "CachingIterator" "public") ("d" #425="FULL_CACHE" #425# "S" "void" "CachingIterator" "public") ("d" #426="TOSTRING_USE_INNER" #426# "S" "void" "CachingIterator" "public") ("d" #427="TOSTRING_USE_CURRENT" #427# "S" "void" "CachingIterator" "public") ("d" #428="TOSTRING_USE_KEY" #428# "S" "void" "CachingIterator" "public") ("d" #429="CATCH_GET_CHILD" #429# "S" "void" "CachingIterator" "public") ("d" #430="CALL_TOSTRING" #430# "S" "void" #431# "public"))) (#432="SeekableIterator" (("m" "seek" "seek(<#int $position#>)" "S" "void" "SeekableIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" #432# "public"))) (#433="ArrayIterator" (("m" "valid" "valid(<##>)" "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "string" "ArrayIterator" "public") ("m" "uksort" "uksort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "uasort" "uasort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "setFlags(<#string $flags#>)" "S" "void" "ArrayIterator" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "ArrayIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayIterator" "public") ("m" "__construct" "__construct(<#)#>,<#int $flags = 0#>)" #454="S" "void" "ArrayIterator" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" "ArrayIterator" "public") ("m" "valid" "valid(<##>)" "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "string" "ArrayIterator" "public") ("m" "uksort" "uksort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "uasort" "uasort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "setFlags(<#string $flags#>)" "S" "void" "ArrayIterator" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "ArrayIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayIterator" "public") ("m" "__construct" "__construct(<#)#>,<#int $flags = 0#>)" "S" "void" "ArrayIterator" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" #433# "public"))) (#434="OuterIterator" (("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "OuterIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" #434# "public"))) (#435="IteratorIterator" (("m" "valid" "valid(<##>)" "S" "bool" "IteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "IteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "IteratorIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Traversable" "IteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>)" #452="S" "void" "IteratorIterator" "public") ("m" "valid" "valid(<##>)" "S" "bool" "IteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "IteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "IteratorIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Traversable" "IteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>)" "S" nil #435# "public"))) (#436="SplObjectStorage" (("m" "valid" "valid(<##>)" "S" "bool" "SplObjectStorage" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "SplObjectStorage" "public") ("m" "setInfo" "setInfo(<#mixed $data#>)" "S" "void" "SplObjectStorage" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "SplObjectStorage" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplObjectStorage" "public") ("m" "removeAllExcept" "removeAllExcept(<#SplObjectStorage $storage#>)" "S" "void" "SplObjectStorage" "public") ("m" "removeAll" "removeAll(<#SplObjectStorage $storage#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetUnset" "offsetUnset(<#object $object#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetSet" "offsetSet(<#object $object#>,<#mixed $data = NULL#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetGet" "offsetGet(<#object $object#>)" "S" "mixed" "SplObjectStorage" "public") ("m" "offsetExists" "offsetExists(<#object $object#>)" "S" "bool" "SplObjectStorage" "public") ("m" "next" "next(<##>)" "S" "void" "SplObjectStorage" "public") ("m" "key" "key(<##>)" "S" "int" "SplObjectStorage" "public") ("m" "getInfo" "getInfo(<##>)" "S" "mixed" "SplObjectStorage" "public") ("m" "getHash" "getHash(<#object $object#>)" "S" "string" "SplObjectStorage" "public") ("m" "detach" "detach(<#object $object#>)" "S" "void" "SplObjectStorage" "public") ("m" "current" "current(<##>)" "S" "object" "SplObjectStorage" "public") ("m" "count" "count(<##>)" "S" "int" "SplObjectStorage" "public") ("m" "contains" "contains(<#object $object#>)" "S" "bool" "SplObjectStorage" "public") ("m" "attach" "attach(<#object $object#>,<#mixed $data = NULL#>)" "S" "void" "SplObjectStorage" "public") ("m" "addAll" "addAll(<#SplObjectStorage $storage#>)" "S" "void" #436# "public"))) (#437="SplFixedArray" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "SplFixedArray" "public") ("m" "valid" "valid(<##>)" "S" "bool" "SplFixedArray" "public") ("m" "toArray" "toArray(<##>)" "S" "array" "SplFixedArray" "public") ("m" "setSize" "setSize(<#int $size#>)" "S" "int" "SplFixedArray" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplFixedArray" "public") ("m" "offsetUnset" "offsetUnset(<#int $index#>)" "S" "void" "SplFixedArray" "public") ("m" "offsetSet" "offsetSet(<#int $index#>,<#mixed $newval#>)" "S" "void" "SplFixedArray" "public") ("m" "offsetGet" "offsetGet(<#int $index#>)" "S" "mixed" "SplFixedArray" "public") ("m" "offsetExists" "offsetExists(<#int $index#>)" "S" "bool" "SplFixedArray" "public") ("m" "next" "next(<##>)" "S" "void" "SplFixedArray" "public") ("m" "key" "key(<##>)" "S" "int" "SplFixedArray" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "SplFixedArray" "public") ("m" "fromArray" "fromArray(<#array $array#>,<#bool $save_indexes = true#>)" "S" "SplFixedArray" "SplFixedArray" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplFixedArray" "public") ("m" "count" "count(<##>)" "S" "int" "SplFixedArray" "public") ("m" "__construct" "__construct(<#int $size = 0#>)" #451="S" nil #437# "public"))) (#438="SplPriorityQueue" (("m" "valid" "valid(<##>)" "S" "bool" "SplPriorityQueue" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "setExtractFlags" "setExtractFlags(<#int $flags#>)" "S" "void" "SplPriorityQueue" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "recoverFromCorruption" "recoverFromCorruption(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "next" "next(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplPriorityQueue" "public") ("m" "insert" "insert(<#mixed $value#>,<#mixed $priority#>)" "S" "void" "SplPriorityQueue" "public") ("m" "extract" "extract(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "count" "count(<##>)" "S" "int" "SplPriorityQueue" "public") ("m" "compare" "compare(<#mixed $priority1#>,<#mixed $priority2#>)" "S" "int" "SplPriorityQueue" "public") ("m" "__construct" "__construct(<##>)" #450="S" nil #438# "public"))) (#439="SplMinHeap" (("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "int" #439# "protected"))) (#440="SplMaxHeap" (("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "int" #440# "protected"))) (#441="SplHeap" (("m" "valid" "valid(<##>)" "S" "bool" "SplHeap" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplHeap" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplHeap" "public") ("m" "recoverFromCorruption" "recoverFromCorruption(<##>)" "S" "void" "SplHeap" "public") ("m" "next" "next(<##>)" "S" "void" "SplHeap" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplHeap" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplHeap" "public") ("m" "insert" "insert(<#mixed $value#>)" "S" "void" "SplHeap" "public") ("m" "extract" "extract(<##>)" "S" "mixed" "SplHeap" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplHeap" "public") ("m" "count" "count(<##>)" "S" "int" "SplHeap" "public") ("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "protected" "SplHeap" "public") ("m" "__construct" "__construct(<##>)" #449="S" nil #441# "public"))) (#442="SplQueue" (("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplQueue" "public") ("m" "enqueue" "enqueue(<#mixed $value#>)" "S" "void" "SplQueue" "public") ("m" "dequeue" "dequeue(<##>)" "S" "mixed" "SplQueue" "public") ("m" "__construct" "__construct(<##>)" #448="S" nil #442# "public"))) (#443="SplStack" (("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplStack" "public") ("m" "__construct" "__construct(<##>)" #447="S" nil #443# "public"))) (#444="SplDoublyLinkedList" (("m" "valid" "valid(<##>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "unshift" "unshift(<#mixed $value#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "shift" "shift(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "SplDoublyLinkedList" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "push" "push(<#mixed $value#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "prev" "prev(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "pop" "pop(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetUnset" "offsetUnset(<#mixed $index#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetSet" "offsetSet(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetGet" "offsetGet(<#mixed $index#>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetExists" "offsetExists(<#mixed $index#>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "next" "next(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "getIteratorMode" "getIteratorMode(<##>)" "S" "int" "SplDoublyLinkedList" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "count" "count(<##>)" "S" "int" "SplDoublyLinkedList" "public") ("m" "bottom" "bottom(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "add" "add(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "__construct" "__construct(<##>)" #445="S" nil #444# "public")))) ((#446="f" "SplDoublyLinkedList(" "SplDoublyLinkedList(<##>)" #445# #649="SplDoublyLinkedList") (#446# "SplStack(" "SplStack(<##>)" #447# #648="SplStack") (#446# "SplQueue(" "SplQueue(<##>)" #448# #647="SplQueue") (#446# "SplHeap(" "SplHeap(<##>)" #449# #646="SplHeap") (#446# "SplMaxHeap(" "SplMaxHeap(<##>)" #449# #645="SplMaxHeap") (#446# "SplMinHeap(" "SplMinHeap(<##>)" #449# #644="SplMinHeap") (#446# "SplPriorityQueue(" "SplPriorityQueue(<##>)" #450# #643="SplPriorityQueue") (#446# "SplFixedArray(" "SplFixedArray(<#int $size = 0#>)" #451# #642="SplFixedArray") (#453="f" "SplObjectStorage(" "SplObjectStorage()" #641="S" #640="SplObjectStorage") (#446# "IteratorIterator(" "IteratorIterator(<#Traversable $iterator#>)" #452# #639="IteratorIterator") (#453# "OuterIterator(" "OuterIterator()" #638="S" #637="OuterIterator") (#446# "ArrayIterator(" "ArrayIterator(<#)#>,<#int $flags = 0#>)" #454# #636="ArrayIterator") (#453# "SeekableIterator(" "SeekableIterator()" #635="S" #634="SeekableIterator") (#446# "ArrayIterator(" "ArrayIterator(<#)#>,<#int $flags = 0#>)" #454# #633="ArrayIterator") (#446# "CachingIterator(" "CachingIterator(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #455# #632="CachingIterator") (#446# "CallbackFilterIterator(" "CallbackFilterIterator(<#Iterator $iterator#>,<#callable $callback#>)" #456# #631="CallbackFilterIterator") (#446# "DirectoryIterator(" "DirectoryIterator(<#string $path#>)" #457# #630="DirectoryIterator") (#453# "EmptyIterator(" "EmptyIterator()" #629="S" #628="EmptyIterator") (#446# "FilesystemIterator(" "FilesystemIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS#>)" #458# #627="FilesystemIterator") (#446# "FilterIterator(" "FilterIterator(<#Iterator $iterator#>)" #459# #626="FilterIterator") (#446# "GlobIterator(" "GlobIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #460# #625="GlobIterator") (#446# "InfiniteIterator(" "InfiniteIterator(<#Iterator $iterator#>)" #461# #624="InfiniteIterator") (#446# "IteratorIterator(" "IteratorIterator(<#Traversable $iterator#>)" #452# #623="IteratorIterator") (#446# "LimitIterator(" "LimitIterator(<#Iterator $iterator#>,<#int $offset = 0#>,<#int $count = -1#>)" #462# #622="LimitIterator") (#446# "MultipleIterator(" "MultipleIterator(<#int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC#>)" #463# #621="MultipleIterator") (#446# "NoRewindIterator(" "NoRewindIterator(<#Iterator $iterator#>)" #464# #620="NoRewindIterator") (#446# "ParentIterator(" "ParentIterator(<#RecursiveIterator $iterator#>)" #465# #619="ParentIterator") (#446# "RecursiveArrayIterator(" "RecursiveArrayIterator(<#)#>,<#int $flags = 0#>)" #454# #618="RecursiveArrayIterator") (#446# "RecursiveCachingIterator(" "RecursiveCachingIterator(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #466# #617="RecursiveCachingIterator") (#446# "RecursiveCallbackFilterIterator(" "RecursiveCallbackFilterIterator(<#RecursiveIterator $iterator#>,<#string $callback#>)" #467# #616="RecursiveCallbackFilterIterator") (#446# "RecursiveDirectoryIterator(" "RecursiveDirectoryIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #468# #615="RecursiveDirectoryIterator") (#446# "RecursiveFilterIterator(" "RecursiveFilterIterator(<#RecursiveIterator $iterator#>)" #469# #614="RecursiveFilterIterator") (#446# "RecursiveIteratorIterator(" "RecursiveIteratorIterator(<#Traversable $iterator#>,<#int $mode = RecursiveIteratorIterator::LEAVES_ONLY#>,<#int $flags = 0#>)" #470# #613="RecursiveIteratorIterator") (#446# "RecursiveRegexIterator(" "RecursiveRegexIterator(<#RecursiveIterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #471# #612="RecursiveRegexIterator") (#446# "RecursiveTreeIterator(" "RecursiveTreeIterator(<#RecursiveIterator_IteratorAggregate $it#>,<#int $flags = RecursiveTreeIterator::BYPASS_KEY#>,<#int $cit_flags = CachingIterator::CATCH_GET_CHILD#>,<#int $mode = RecursiveIteratorIterator::SELF_FIRST#>)" #472# #611="RecursiveTreeIterator") (#446# "RegexIterator(" "RegexIterator(<#Iterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #473# #610="RegexIterator") (#446# "Exception(" "Exception(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #603="Exception") (#446# "LogicException(" "LogicException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #475#) (#446# "BadFunctionCallException(" "BadFunctionCallException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #476#) (#446# "BadMethodCallException(" "BadMethodCallException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #477#) (#446# "DomainException(" "DomainException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #478#) (#446# "InvalidArgumentException(" "InvalidArgumentException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #479#) (#446# "LengthException(" "LengthException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #480#) (#446# "OutOfBoundsException(" "OutOfBoundsException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #481#) (#446# "OutOfRangeException(" "OutOfRangeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #482#) (#446# "OverflowException(" "OverflowException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #483#) (#446# "RangeException(" "RangeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #484#) (#446# "RuntimeException(" "RuntimeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #485#) (#446# "UnderflowException(" "UnderflowException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #486#) (#446# "UnexpectedValueException(" "UnexpectedValueException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #487#) (#446# "SplFileInfo(" "SplFileInfo(<#string $file_name#>)" #488# #602="SplFileInfo") (#446# "SplFileObject(" "SplFileObject(<#string $file_name#>)" #488# #601="SplFileObject") (#446# "SplTempFileObject(" "SplTempFileObject(<#int $max_memory#>)" #489# #600="SplTempFileObject") (#446# "ArrayObject(" "ArrayObject(<#mixed $input = null#>,<#int $flags = 0#>,<#string $iterator_class = \"ArrayIterator\"#>)" #490# #599="ArrayObject") (#453# "SplObserver(" "SplObserver()" #598="S" #597="SplObserver") (#453# "SplSubject(" "SplSubject()" #596="S" #595="SplSubject") (#446# "DOMAttr(" "DOMAttr(<#string $name#>,<#string $value#>)" #491# #594="DOMAttr") (#446# "DOMCdataSection(" "DOMCdataSection(<#string $value#>)" #492# #593="DOMCdataSection") (#453# "DOMCharacterData(" "DOMCharacterData()" #592="S" #591="DOMCharacterData") (#446# "DOMComment(" "DOMComment(<#string $value#>)" #493# #590="DOMComment") (#446# "DOMDocument(" "DOMDocument(<#string $version#>,<#string $encoding#>)" #494# #589="DOMDocument") (#453# "DOMDocumentFragment(" "DOMDocumentFragment()" #588="S" #587="DOMDocumentFragment") (#453# "DOMDocumentType(" "DOMDocumentType()" #586="S" #585="DOMDocumentType") (#446# "DOMElement(" "DOMElement(<#string $name#>,<#string $value#>,<#string $namespaceURI#>)" #495# #584="DOMElement") (#453# "DOMEntity(" "DOMEntity()" #583="S" #582="DOMEntity") (#446# "DOMEntityReference(" "DOMEntityReference(<#string $name#>)" #496# #581="DOMEntityReference") (#446# "DOMException(" "DOMException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #580="DOMException") (#446# "DOMImplementation(" "DOMImplementation(<##>)" #497# #579="DOMImplementation") (#453# "DOMNamedNodeMap(" "DOMNamedNodeMap()" #578="S" #577="DOMNamedNodeMap") (#453# "DOMNode(" "DOMNode()" #576="S" #575="DOMNode") (#453# "DOMNodeList(" "DOMNodeList()" #574="S" #573="DOMNodeList") (#453# "DOMNotation(" "DOMNotation()" #572="S" #571="DOMNotation") (#446# "DOMProcessingInstruction(" "DOMProcessingInstruction(<#string $name#>,<#string $value#>)" #498# #570="DOMProcessingInstruction") (#446# "DOMText(" "DOMText(<#string $value#>)" #499# #569="DOMText") (#446# "DOMXPath(" "DOMXPath(<#DOMDocument $doc#>)" #500# #568="DOMXPath") (#453# "ZipArchive(" "ZipArchive()" #567="S" #566="ZipArchive") (#446# "SplType(" "SplType(<#mixed $initial_value#>,<#bool $strict#>)" #501# #565="SplType") (#446# "SplInt(" "SplInt(<#mixed $initial_value#>,<#bool $strict#>)" #501# #564="SplInt") (#446# "SplFloat(" "SplFloat(<#mixed $initial_value#>,<#bool $strict#>)" #501# #563="SplFloat") (#446# "SplEnum(" "SplEnum(<#mixed $initial_value#>,<#bool $strict#>)" #501# #562="SplEnum") (#446# "SplBool(" "SplBool(<#mixed $initial_value#>,<#bool $strict#>)" #501# #561="SplBool") (#446# "SplString(" "SplString(<#mixed $initial_value#>,<#bool $strict#>)" #501# #560="SplString") (#446# "SimpleXMLElement(" "SimpleXMLElement(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #502# #559="SimpleXMLElement") (#446# "SimpleXMLIterator(" "SimpleXMLIterator(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #502# #558="SimpleXMLIterator") (#453# "XMLReader(" "XMLReader()" #557="S" #556="XMLReader") (#453# "Memcache(" "Memcache()" #555="S" #554="Memcache") (#446# "HttpDeflateStream(" "HttpDeflateStream(<#int $flags = 0#>)" #503# #553="HttpDeflateStream") (#446# "HttpInflateStream(" "HttpInflateStream(<#int $flags = 0#>)" #504# #552="HttpInflateStream") (#446# "HttpMessage(" "HttpMessage(<#string $message#>)" #505# #551="HttpMessage") (#446# "HttpMessage(" "HttpMessage(<#string $message#>)" #505# #550="HttpMessage") (#446# "HttpQueryString(" "HttpQueryString(<#bool $global = true#>,<#mixed $add#>)" #506# #549="HttpQueryString") (#446# "HttpRequest(" "HttpRequest(<#string $url#>,<#int $request_method = HTTP_METH_GET#>,<#array $options#>)" #507# #548="HttpRequest") (#446# "HttpRequestPool(" "HttpRequestPool(<#HttpRequest $request#>,<#HttpRequest $__args__#>)" #508# #547="HttpRequestPool") (#453# "HttpResponse(" "HttpResponse()" #546="S" #545="HttpResponse") (#446# "mysqli(" "mysqli(<#\"mysqli.default_socket\")'#>)" #509# #544="mysqli") (#446# "mysqli_stmt(" "mysqli_stmt(<#mysqli $link#>,<#string $query#>)" #510# #543="mysqli_stmt") (#453# "mysqli_result(" "mysqli_result()" #542="S" #541="mysqli_result") (#453# "mysqli_driver(" "mysqli_driver()" #540="S" #539="mysqli_driver") (#446# "mysqli_warning(" "mysqli_warning(<##>)" #511# #538="mysqli_warning") (#446# "mysqli_sql_exception(" "mysqli_sql_exception(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #537="mysqli_sql_exception") (#446# "SQLite3(" "SQLite3(<#string $filename#>,<#int $flags#>,<#string $encryption_key#>)" #512# #536="SQLite3") (#453# "SQLite3Stmt(" "SQLite3Stmt()" #535="S" #534="SQLite3Stmt") (#453# "SQLite3Result(" "SQLite3Result()" #533="S" #532="SQLite3Result") (#446# "PDO(" "PDO(<#string $dsn#>,<#string $username#>,<#string $password#>,<#array $options#>)" #513# #531="PDO") (#453# "PDOStatement(" "PDOStatement()" #530="S" #529="PDOStatement") (#446# "PDOException(" "PDOException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #528="PDOException") (#446# "DateTime(" "DateTime(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #514# #527="DateTime") (#446# "DateTimeImmutable(" "DateTimeImmutable(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #515# #526="DateTimeImmutable") (#453# "DateTimeInterface(" "DateTimeInterface()" #525="S" #524="DateTimeInterface") (#446# "DateTimeZone(" "DateTimeZone(<#string $timezone#>)" #516# #523="DateTimeZone") (#446# "DateInterval(" "DateInterval(<#string $interval_spec#>)" #517# #522="DateInterval") (#446# "DatePeriod(" "DatePeriod(<#string $isostr#>,<#int $options#>)" #518# #521="DatePeriod") (#446# "Imagick(" "Imagick(<#mixed $files#>)" #519# #520="Imagick") ("c" #520# "Imagick" "S" #520#) ("c" #521# "DatePeriod" "S" #521#) ("c" #522# "DateInterval" "S" #522#) ("c" #523# "DateTimeZone" "S" #523#) ("c" #524# "DateTimeInterface" #525# #524#) ("c" #526# "DateTimeImmutable" "S" #526#) ("c" #527# "DateTime" "S" #527#) ("c" #528# "PDOException" "S" #528#) ("c" #529# "PDOStatement" #530# #529#) ("c" #531# "PDO" "S" #531#) ("c" #532# "SQLite3Result" #533# #532#) ("c" #534# "SQLite3Stmt" #535# #534#) ("c" #536# "SQLite3" "S" #536#) ("c" #537# "mysqli_sql_exception" "S" #537#) ("c" #538# "mysqli_warning" "S" #538#) ("c" #539# "mysqli_driver" #540# #539#) ("c" #541# "mysqli_result" #542# #541#) ("c" #543# "mysqli_stmt" "S" #543#) ("c" #544# "mysqli" "S" #544#) ("c" #545# "HttpResponse" #546# #545#) ("c" #547# "HttpRequestPool" "S" #547#) ("c" #548# "HttpRequest" "S" #548#) ("c" #549# "HttpQueryString" "S" #549#) ("c" #550# "HttpMessage" "S" #550#) ("c" #551# "HttpMessage" "S" #551#) ("c" #552# "HttpInflateStream" "S" #552#) ("c" #553# "HttpDeflateStream" "S" #553#) ("c" #554# "Memcache" #555# #554#) ("c" #556# "XMLReader" #557# #556#) ("c" #558# "SimpleXMLIterator" "S" #558#) ("c" #559# "SimpleXMLElement" "S" #559#) ("c" #560# "SplString" "S" #560#) ("c" #561# "SplBool" "S" #561#) ("c" #562# "SplEnum" "S" #562#) ("c" #563# "SplFloat" "S" #563#) ("c" #564# "SplInt" "S" #564#) ("c" #565# "SplType" "S" #565#) ("c" #566# "ZipArchive" #567# #566#) ("c" #568# "DOMXPath" "S" #568#) ("c" #569# "DOMText" "S" #569#) ("c" #570# "DOMProcessingInstruction" "S" #570#) ("c" #571# "DOMNotation" #572# #571#) ("c" #573# "DOMNodeList" #574# #573#) ("c" #575# "DOMNode" #576# #575#) ("c" #577# "DOMNamedNodeMap" #578# #577#) ("c" #579# "DOMImplementation" "S" #579#) ("c" #580# "DOMException" "S" #580#) ("c" #581# "DOMEntityReference" "S" #581#) ("c" #582# "DOMEntity" #583# #582#) ("c" #584# "DOMElement" "S" #584#) ("c" #585# "DOMDocumentType" #586# #585#) ("c" #587# "DOMDocumentFragment" #588# #587#) ("c" #589# "DOMDocument" "S" #589#) ("c" #590# "DOMComment" "S" #590#) ("c" #591# "DOMCharacterData" #592# #591#) ("c" #593# "DOMCdataSection" "S" #593#) ("c" #594# "DOMAttr" "S" #594#) ("c" #595# "SplSubject" #596# #595#) ("c" #597# "SplObserver" #598# #597#) ("c" #599# "ArrayObject" "S" #599#) ("c" #600# "SplTempFileObject" "S" #600#) ("c" #601# "SplFileObject" "S" #601#) ("c" #602# "SplFileInfo" "S" #602#) ("c" #487# "UnexpectedValueException" "S" #487#) ("c" #486# "UnderflowException" "S" #486#) ("c" #485# "RuntimeException" "S" #485#) ("c" #484# "RangeException" "S" #484#) ("c" #483# "OverflowException" "S" #483#) ("c" #482# "OutOfRangeException" "S" #482#) ("c" #481# "OutOfBoundsException" "S" #481#) ("c" #480# "LengthException" "S" #480#) ("c" #479# "InvalidArgumentException" "S" #479#) ("c" #478# "DomainException" "S" #478#) ("c" #477# "BadMethodCallException" "S" #477#) ("c" #476# "BadFunctionCallException" "S" #476#) ("c" #475# "LogicException" "S" #475#) ("c" #603# "Exception" "S" #603#) ("i" #604# "Traversable" "S" #604#) ("i" #605="Iterator" "Iterator" "S" #605#) ("i" #606="SeekableIterator" "SeekableIterator" "S" #606#) ("i" #607="OuterIterator" "OuterIterator" "S" #607#) ("i" #608="Countable" "Countable" "S" #608#) ("i" #609="RecursiveIterator" "RecursiveIterator" "S" #609#) ("c" #610# "RegexIterator" "S" #610#) ("c" #611# "RecursiveTreeIterator" "S" #611#) ("c" #612# "RecursiveRegexIterator" "S" #612#) ("c" #613# "RecursiveIteratorIterator" "S" #613#) ("c" #614# "RecursiveFilterIterator" "S" #614#) ("c" #615# "RecursiveDirectoryIterator" "S" #615#) ("c" #616# "RecursiveCallbackFilterIterator" "S" #616#) ("c" #617# "RecursiveCachingIterator" "S" #617#) ("c" #618# "RecursiveArrayIterator" "S" #618#) ("c" #619# "ParentIterator" "S" #619#) ("c" #620# "NoRewindIterator" "S" #620#) ("c" #621# "MultipleIterator" "S" #621#) ("c" #622# "LimitIterator" "S" #622#) ("c" #623# "IteratorIterator" "S" #623#) ("c" #624# "InfiniteIterator" "S" #624#) ("c" #625# "GlobIterator" "S" #625#) ("c" #626# "FilterIterator" "S" #626#) ("c" #627# "FilesystemIterator" "S" #627#) ("c" #628# "EmptyIterator" #629# #628#) ("c" #630# "DirectoryIterator" "S" #630#) ("c" #631# "CallbackFilterIterator" "S" #631#) ("c" #632# "CachingIterator" "S" #632#) ("c" #633# "ArrayIterator" "S" #633#) ("c" #634# "SeekableIterator" #635# #634#) ("c" #636# "ArrayIterator" "S" #636#) ("c" #637# "OuterIterator" #638# #637#) ("c" #639# "IteratorIterator" "S" #639#) ("c" #640# "SplObjectStorage" #641# #640#) ("c" #642# "SplFixedArray" "S" #642#) ("c" #643# "SplPriorityQueue" "S" #643#) ("c" #644# "SplMinHeap" "S" #644#) ("c" #645# "SplMaxHeap" "S" #645#) ("c" #646# "SplHeap" "S" #646#) ("c" #647# "SplQueue" "S" #647#) ("c" #648# "SplStack" "S" #648#) ("c" #649# "SplDoublyLinkedList" "S" #649#) ("f" "zlib_get_coding_type(" "zlib_get_coding_type(<##>)" "S" "string") ("f" "zlib_encode(" "zlib_encode(<#string $data#>,<#string $encoding#>,<#string $level#>)" "S" "string") ("f" "zlib_decode(" "zlib_decode(<#string $data#>,<#string $max_decoded_len#>)" "S" "string") ("f" "zip_read(" "zip_read(<#resource $zip#>)" "S" "resource") ("f" "zip_open(" "zip_open(<#string $filename#>)" "S" "resource") ("f" "zip_entry_read(" "zip_entry_read(<#resource $zip_entry#>,<#int $length#>)" "S" "string") ("f" "zip_entry_open(" "zip_entry_open(<#resource $zip#>,<#resource $zip_entry#>,<#string $mode#>)" "S" "bool") ("f" "zip_entry_name(" "zip_entry_name(<#resource $zip_entry#>)" "S" "string") ("f" "zip_entry_filesize(" "zip_entry_filesize(<#resource $zip_entry#>)" "S" "int") ("f" "zip_entry_compressionmethod(" "zip_entry_compressionmethod(<#resource $zip_entry#>)" "S" "string") ("f" "zip_entry_compressedsize(" "zip_entry_compressedsize(<#resource $zip_entry#>)" "S" "int") ("f" "zip_entry_close(" "zip_entry_close(<#resource $zip_entry#>)" "S" "bool") ("f" "zip_close(" "zip_close(<#resource $zip#>)" "S" "void") ("f" "zend_version(" "zend_version(<##>)" "S" "string") ("f" "zend_thread_id(" "zend_thread_id(<##>)" "S" "int") ("f" "zend_logo_guid(" "zend_logo_guid(<##>)" "S" "string") ("f" "yp_order(" "yp_order(<#string $domain#>,<#string $map#>)" "S" "int") ("f" "yp_next(" "yp_next(<#string $domain#>,<#string $map#>,<#string $key#>)" "S" "array") ("f" "yp_match(" "yp_match(<#string $domain#>,<#string $map#>,<#string $key#>)" "S" "string") ("f" "yp_master(" "yp_master(<#string $domain#>,<#string $map#>)" "S" "string") ("f" "yp_get_default_domain(" "yp_get_default_domain(<##>)" "S" "string") ("f" "yp_first(" "yp_first(<#string $domain#>,<#string $map#>)" "S" "array") ("f" "yp_err_string(" "yp_err_string(<#int $errorcode#>)" "S" "string") ("f" "yp_errno(" "yp_errno(<##>)" "S" "int") ("f" "yp_cat(" "yp_cat(<#string $domain#>,<#string $map#>)" "S" "array") ("f" "yp_all(" "yp_all(<#string $domain#>,<#string $map#>,<#string $callback#>)" "S" "void") ("f" "yaz_wait(" "yaz_wait(<#array &$options#>)" "S" "mixed") ("f" "yaz_syntax(" "yaz_syntax(<#resource $id#>,<#string $syntax#>)" "S" "void") ("f" "yaz_sort(" "yaz_sort(<#resource $id#>,<#string $criteria#>)" "S" "void") ("f" "yaz_set_option(" "yaz_set_option(<#resource $id#>,<#string $name#>,<#string $value#>)" "S" "void") ("f" "yaz_search(" "yaz_search(<#resource $id#>,<#string $type#>,<#string $query#>)" "S" "bool") ("f" "yaz_schema(" "yaz_schema(<#resource $id#>,<#string $schema#>)" "S" "void") ("f" "yaz_scan(" "yaz_scan(<#resource $id#>,<#string $type#>,<#string $startterm#>,<#array $flags#>)" "S" "void") ("f" "yaz_scan_result(" "yaz_scan_result(<#resource $id#>,<#array &$result#>)" "S" "array") ("f" "yaz_record(" "yaz_record(<#resource $id#>,<#int $pos#>,<#string $type#>)" "S" "string") ("f" "yaz_range(" "yaz_range(<#resource $id#>,<#int $start#>,<#int $number#>)" "S" "void") ("f" "yaz_present(" "yaz_present(<#resource $id#>)" "S" "bool") ("f" "yaz_itemorder(" "yaz_itemorder(<#resource $id#>,<#array $args#>)" "S" "void") ("f" "yaz_hits(" "yaz_hits(<#resource $id#>,<#array &$searchresult#>)" "S" "int") ("f" "yaz_get_option(" "yaz_get_option(<#resource $id#>,<#string $name#>)" "S" "string") ("f" "yaz_es(" "yaz_es(<#resource $id#>,<#string $type#>,<#array $args#>)" "S" "void") ("f" "yaz_es_result(" "yaz_es_result(<#resource $id#>)" "S" "array") ("f" "yaz_error(" "yaz_error(<#resource $id#>)" "S" "string") ("f" "yaz_errno(" "yaz_errno(<#resource $id#>)" "S" "int") ("f" "yaz_element(" "yaz_element(<#resource $id#>,<#string $elementset#>)" "S" "bool") ("f" "yaz_database(" "yaz_database(<#resource $id#>,<#string $databases#>)" "S" "bool") ("f" "yaz_connect(" "yaz_connect(<#string $zurl#>,<#mixed $options#>)" "S" "mixed") ("f" "yaz_close(" "yaz_close(<#resource $id#>)" "S" "bool") ("f" "yaz_ccl_parse(" "yaz_ccl_parse(<#resource $id#>,<#string $query#>,<#array &$result#>)" "S" "bool") ("f" "yaz_ccl_conf(" "yaz_ccl_conf(<#resource $id#>,<#array $config#>)" "S" "void") ("f" "yaz_addinfo(" "yaz_addinfo(<#resource $id#>)" "S" "string") ("f" "yaml_parse_url(" "yaml_parse_url(<#string $url#>,<#int $pos#>,<#int &$ndocs#>,<#array $callbacks#>)" "S" "mixed") ("f" "yaml_parse(" "yaml_parse(<#string $input#>,<#int $pos#>,<#int &$ndocs#>,<#array $callbacks#>)" "S" "mixed") ("f" "yaml_parse_file(" "yaml_parse_file(<#string $filename#>,<#int $pos#>,<#int &$ndocs#>,<#array $callbacks#>)" "S" "mixed") ("f" "yaml_emit(" "yaml_emit(<#mixed $data#>,<#int $encoding#>,<#int $linebreak#>,<#array $callbacks#>)" "S" "string") ("f" "yaml_emit_file(" "yaml_emit_file(<#string $filename#>,<#mixed $data#>,<#int $encoding#>,<#int $linebreak#>,<#array $callbacks#>)" "S" "bool") ("f" "xml_set_unparsed_entity_decl_handler(" "xml_set_unparsed_entity_decl_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xml_set_start_namespace_decl_handler(" "xml_set_start_namespace_decl_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xml_set_processing_instruction_handler(" "xml_set_processing_instruction_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xml_set_object(" "xml_set_object(<#resource $parser#>,<#object &$object#>)" "S" "pool") ("f" "xml_set_notation_decl_handler(" "xml_set_notation_decl_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xml_set_external_entity_ref_handler(" "xml_set_external_entity_ref_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xml_set_end_namespace_decl_handler(" "xml_set_end_namespace_decl_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xml_set_element_handler(" "xml_set_element_handler(<#resource $parser#>,<#callable $start_element_handler#>,<#callable $end_element_handler#>)" "S" "bool") ("f" "xml_set_default_handler(" "xml_set_default_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xml_set_character_data_handler(" "xml_set_character_data_handler(<#resource $parser#>,<#callable $handler#>)" "S" "bool") ("f" "xmlrpc_set_type(" "xmlrpc_set_type(<#string &$value#>,<#string $type#>)" "S" "bool") ("f" "xmlrpc_server_register_method(" "xmlrpc_server_register_method(<#resource $server#>,<#string $method_name#>,<#string $function#>)" "S" "bool") ("f" "xmlrpc_server_register_introspection_callback(" "xmlrpc_server_register_introspection_callback(<#resource $server#>,<#string $function#>)" "S" "bool") ("f" "xmlrpc_server_destroy(" "xmlrpc_server_destroy(<#resource $server#>)" "S" "int") ("f" "xmlrpc_server_create(" "xmlrpc_server_create(<##>)" "S" "resource") ("f" "xmlrpc_server_call_method(" "xmlrpc_server_call_method(<#resource $server#>,<#string $xml#>,<#mixed $user_data#>,<#array $output_options#>)" "S" "string") ("f" "xmlrpc_server_add_introspection_data(" "xmlrpc_server_add_introspection_data(<#resource $server#>,<#array $desc#>)" "S" "int") ("f" "xmlrpc_parse_method_descriptions(" "xmlrpc_parse_method_descriptions(<#string $xml#>)" "S" "array") ("f" "xmlrpc_is_fault(" "xmlrpc_is_fault(<#array $arg#>)" "S" "bool") ("f" "xmlrpc_get_type(" "xmlrpc_get_type(<#mixed $value#>)" "S" "string") ("f" "xmlrpc_encode(" "xmlrpc_encode(<#mixed $value#>)" "S" "string") ("f" "xmlrpc_encode_request(" "xmlrpc_encode_request(<#string $method#>,<#mixed $params#>,<#array $output_options#>)" "S" "string") ("f" "xmlrpc_decode_request(" "xmlrpc_decode_request(<#string $xml#>,<#string &$method#>,<#string $encoding#>)" "S" "mixed") ("f" "xmlrpc_decode(" "xmlrpc_decode(<#string $xml#>,<#string $encoding#>)" "S" "mixed") ("f" "xml_parser_set_option(" "xml_parser_set_option(<#resource $parser#>,<#int $option#>,<#mixed $value#>)" "S" "bool") ("f" "xml_parser_get_option(" "xml_parser_get_option(<#resource $parser#>,<#int $option#>)" "S" "mixed") ("f" "xml_parser_free(" "xml_parser_free(<#resource $parser#>)" "S" "bool") ("f" "xml_parser_create(" "xml_parser_create(<#string $encoding#>)" "S" "resource") ("f" "xml_parser_create_ns(" "xml_parser_create_ns(<#string $encoding#>,<#string $sep#>)" "S" "resource") ("f" "xml_parse(" "xml_parse(<#resource $parser#>,<#string $data#>,<#bool $is_final#>)" "S" "int") ("f" "xml_parse_into_struct(" "xml_parse_into_struct(<#resource $parser#>,<#string $data#>,<#array &$values#>,<#array &$index#>)" "S" "int") ("f" "xml_get_error_code(" "xml_get_error_code(<#resource $parser#>)" "S" "int") ("f" "xml_get_current_line_number(" "xml_get_current_line_number(<#resource $parser#>)" "S" "int") ("f" "xml_get_current_column_number(" "xml_get_current_column_number(<#resource $parser#>)" "S" "int") ("f" "xml_get_current_byte_index(" "xml_get_current_byte_index(<#resource $parser#>)" "S" "int") ("f" "xml_error_string(" "xml_error_string(<#int $code#>)" "S" "string") ("f" "xhprof_sample_enable(" "xhprof_sample_enable(<##>)" "S" "void") ("f" "xhprof_sample_disable(" "xhprof_sample_disable(<##>)" "S" "array") ("f" "xhprof_enable(" "xhprof_enable(<#int $flags#>,<#array $options#>)" "S" "void") ("f" "xhprof_disable(" "xhprof_disable(<##>)" "S" "array") ("f" "xdiff_string_patch(" "xdiff_string_patch(<#string $str#>,<#string $patch#>,<#int $flags#>,<#string &$error#>)" "S" "string") ("f" "xdiff_string_patch_binary(" "xdiff_string_patch_binary(<#string $str#>,<#string $patch#>)" "S" "string") ("f" "xdiff_string_merge3(" "xdiff_string_merge3(<#string $old_data#>,<#string $new_data1#>,<#string $new_data2#>,<#string &$error#>)" "S" "mixed") ("f" "xdiff_string_diff(" "xdiff_string_diff(<#string $old_data#>,<#string $new_data#>,<#int $context#>,<#bool $minimal#>)" "S" "string") ("f" "xdiff_string_bpatch(" "xdiff_string_bpatch(<#string $str#>,<#string $patch#>)" "S" "string") ("f" "xdiff_string_bdiff(" "xdiff_string_bdiff(<#string $old_data#>,<#string $new_data#>)" "S" "string") ("f" "xdiff_string_bdiff(" "xdiff_string_bdiff(<#string $old_data#>,<#string $new_data#>)" "S" "string") ("f" "xdiff_string_bdiff(" "xdiff_string_bdiff(<#string $old_data#>,<#string $new_data#>)" "S" "string") ("f" "xdiff_string_bdiff_size(" "xdiff_string_bdiff_size(<#string $patch#>)" "S" "int") ("f" "xdiff_file_rabdiff(" "xdiff_file_rabdiff(<#string $old_file#>,<#string $new_file#>,<#string $dest#>)" "S" "bool") ("f" "xdiff_file_patch(" "xdiff_file_patch(<#string $file#>,<#string $patch#>,<#string $dest#>,<#int $flags#>)" "S" "mixed") ("f" "xdiff_file_patch_binary(" "xdiff_file_patch_binary(<#string $file#>,<#string $patch#>,<#string $dest#>)" "S" "bool") ("f" "xdiff_file_merge3(" "xdiff_file_merge3(<#string $old_file#>,<#string $new_file1#>,<#string $new_file2#>,<#string $dest#>)" "S" "mixed") ("f" "xdiff_file_diff(" "xdiff_file_diff(<#string $old_file#>,<#string $new_file#>,<#string $dest#>,<#int $context#>,<#bool $minimal#>)" "S" "bool") ("f" "xdiff_file_diff_binary(" "xdiff_file_diff_binary(<#string $old_file#>,<#string $new_file#>,<#string $dest#>)" "S" "bool") ("f" "xdiff_file_bpatch(" "xdiff_file_bpatch(<#string $file#>,<#string $patch#>,<#string $dest#>)" "S" "bool") ("f" "xdiff_file_bdiff_size(" "xdiff_file_bdiff_size(<#string $file#>)" "S" "int") ("f" "xdiff_file_bdiff(" "xdiff_file_bdiff(<#string $old_file#>,<#string $new_file#>,<#string $dest#>)" "S" "bool") ("f" "xattr_supported(" "xattr_supported(<#string $filename#>,<#int $flags#>)" "S" "bool") ("f" "xattr_set(" "xattr_set(<#string $filename#>,<#string $name#>,<#string $value#>,<#int $flags#>)" "S" "bool") ("f" "xattr_remove(" "xattr_remove(<#string $filename#>,<#string $name#>,<#int $flags#>)" "S" "bool") ("f" "xattr_list(" "xattr_list(<#string $filename#>,<#int $flags#>)" "S" "array") ("f" "xattr_get(" "xattr_get(<#string $filename#>,<#string $name#>,<#int $flags#>)" "S" "string") ("f" "wordwrap(" "wordwrap(<#string $str#>,<#int $width#>,<#string $break#>,<#bool $cut#>)" "S" "string") ("f" "wincache_unlock(" "wincache_unlock(<#string $key#>)" "S" "bool") ("f" "wincache_ucache_set(" "wincache_ucache_set(<#mixed $key#>,<#mixed $value#>,<#int $ttl#>)" "S" "bool") ("f" "wincache_ucache_meminfo(" "wincache_ucache_meminfo(<##>)" "S" "array") ("f" "wincache_ucache_info(" "wincache_ucache_info(<#bool $summaryonly#>,<#string $key#>)" "S" "array") ("f" "wincache_ucache_inc(" "wincache_ucache_inc(<#string $key#>,<#int $inc_by#>,<#bool &$success#>)" "S" "mixed") ("f" "wincache_ucache_get(" "wincache_ucache_get(<#mixed $key#>,<#bool &$success#>)" "S" "mixed") ("f" "wincache_ucache_exists(" "wincache_ucache_exists(<#string $key#>)" "S" "bool") ("f" "wincache_ucache_delete(" "wincache_ucache_delete(<#mixed $key#>)" "S" "bool") ("f" "wincache_ucache_dec(" "wincache_ucache_dec(<#string $key#>,<#int $dec_by#>,<#bool &$success#>)" "S" "mixed") ("f" "wincache_ucache_clear(" "wincache_ucache_clear(<##>)" "S" "bool") ("f" "wincache_ucache_cas(" "wincache_ucache_cas(<#string $key#>,<#int $old_value#>,<#int $new_value#>)" "S" "bool") ("f" "wincache_ucache_add(" "wincache_ucache_add(<#string $key#>,<#mixed $value#>,<#int $ttl#>)" "S" "bool") ("f" "wincache_scache_meminfo(" "wincache_scache_meminfo(<##>)" "S" "array") ("f" "wincache_scache_info(" "wincache_scache_info(<#bool $summaryonly#>)" "S" "array") ("f" "wincache_rplist_meminfo(" "wincache_rplist_meminfo(<##>)" "S" "array") ("f" "wincache_rplist_fileinfo(" "wincache_rplist_fileinfo(<#bool $summaryonly#>)" "S" "array") ("f" "wincache_refresh_if_changed(" "wincache_refresh_if_changed(<#array $files#>)" "S" "bool") ("f" "wincache_ocache_meminfo(" "wincache_ocache_meminfo(<##>)" "S" "array") ("f" "wincache_ocache_fileinfo(" "wincache_ocache_fileinfo(<#bool $summaryonly#>)" "S" "array") ("f" "wincache_lock(" "wincache_lock(<#string $key#>,<#bool $isglobal#>)" "S" "bool") ("f" "wincache_fcache_meminfo(" "wincache_fcache_meminfo(<##>)" "S" "array") ("f" "wincache_fcache_fileinfo(" "wincache_fcache_fileinfo(<#bool $summaryonly#>)" "S" "array") ("f" "win32_stop_service(" "win32_stop_service(<#string $servicename#>,<#string $machine#>)" "S" "int") ("f" "win32_start_service(" "win32_start_service(<#string $servicename#>,<#string $machine#>)" "S" "int") ("f" "win32_start_service_ctrl_dispatcher(" "win32_start_service_ctrl_dispatcher(<#string $name#>)" "S" "mixed") ("f" "win32_set_service_status(" "win32_set_service_status(<#int $status#>,<#int $checkpoint#>)" "S" "bool") ("f" "win32_query_service_status(" "win32_query_service_status(<#string $servicename#>,<#string $machine#>)" "S" "mixed") ("f" "win32_ps_stat_proc(" "win32_ps_stat_proc(<#int $pid#>)" "S" "array") ("f" "win32_ps_stat_mem(" "win32_ps_stat_mem(<##>)" "S" "array") ("f" "win32_ps_list_procs(" "win32_ps_list_procs(<##>)" "S" "array") ("f" "win32_pause_service(" "win32_pause_service(<#string $servicename#>,<#string $machine#>)" "S" "int") ("f" "win32_get_last_control_message(" "win32_get_last_control_message(<##>)" "S" "int") ("f" "win32_delete_service(" "win32_delete_service(<#string $servicename#>,<#string $machine#>)" "S" "mixed") ("f" "win32_create_service(" "win32_create_service(<#array $details#>,<#string $machine#>)" "S" "mixed") ("f" "win32_continue_service(" "win32_continue_service(<#string $servicename#>,<#string $machine#>)" "S" "int") ("f" "wddx_serialize_vars(" "wddx_serialize_vars(<#mixed $var_name#>,<#mixed $__args__#>)" "S" "string") ("f" "wddx_serialize_value(" "wddx_serialize_value(<#mixed $var#>,<#string $comment#>)" "S" "string") ("f" "wddx_packet_start(" "wddx_packet_start(<#string $comment#>)" "S" "resource") ("f" "wddx_packet_end(" "wddx_packet_end(<#resource $packet_id#>)" "S" "string") ("f" "wddx_deserialize(" "wddx_deserialize(<#string $packet#>)" "S" "mixed") ("f" "wddx_add_vars(" "wddx_add_vars(<#resource $packet_id#>,<#mixed $var_name#>,<#mixed $__args__#>)" "S" "bool") ("f" "vsprintf(" "vsprintf(<#string $format#>,<#array $args#>)" "S" "string") ("f" "vprintf(" "vprintf(<#string $format#>,<#array $args#>)" "S" "int") ("f" "vpopmail_set_user_quota(" "vpopmail_set_user_quota(<#string $user#>,<#string $domain#>,<#string $quota#>)" "S" "bool") ("f" "vpopmail_passwd(" "vpopmail_passwd(<#string $user#>,<#string $domain#>,<#string $password#>,<#bool $apop#>)" "S" "bool") ("f" "vpopmail_error(" "vpopmail_error(<##>)" "S" "string") ("f" "vpopmail_del_user(" "vpopmail_del_user(<#string $user#>,<#string $domain#>)" "S" "bool") ("f" "vpopmail_del_domain_ex(" "vpopmail_del_domain_ex(<#string $domain#>)" "S" "bool") ("f" "vpopmail_del_domain(" "vpopmail_del_domain(<#string $domain#>)" "S" "bool") ("f" "vpopmail_auth_user(" "vpopmail_auth_user(<#string $user#>,<#string $domain#>,<#string $password#>,<#string $apop#>)" "S" "bool") ("f" "vpopmail_alias_get(" "vpopmail_alias_get(<#string $alias#>,<#string $domain#>)" "S" "array") ("f" "vpopmail_alias_get_all(" "vpopmail_alias_get_all(<#string $domain#>)" "S" "array") ("f" "vpopmail_alias_del_domain(" "vpopmail_alias_del_domain(<#string $domain#>)" "S" "bool") ("f" "vpopmail_alias_del(" "vpopmail_alias_del(<#string $user#>,<#string $domain#>)" "S" "bool") ("f" "vpopmail_alias_add(" "vpopmail_alias_add(<#string $user#>,<#string $domain#>,<#string $alias#>)" "S" "bool") ("f" "vpopmail_add_user(" "vpopmail_add_user(<#string $user#>,<#string $domain#>,<#string $password#>,<#string $gecos#>,<#bool $apop#>)" "S" "bool") ("f" "vpopmail_add_domain_ex(" "vpopmail_add_domain_ex(<#string $domain#>,<#string $passwd#>,<#string $quota#>,<#string $bounce#>,<#bool $apop#>)" "S" "bool") ("f" "vpopmail_add_domain(" "vpopmail_add_domain(<#string $domain#>,<#string $dir#>,<#int $uid#>,<#int $gid#>)" "S" "bool") ("f" "vpopmail_add_alias_domain_ex(" "vpopmail_add_alias_domain_ex(<#string $olddomain#>,<#string $newdomain#>)" "S" "bool") ("f" "vpopmail_add_alias_domain(" "vpopmail_add_alias_domain(<#string $domain#>,<#string $aliasdomain#>)" "S" "bool") ("f" "virtual(" "virtual(<#string $filename#>)" "S" "bool") ("f" "vfprintf(" "vfprintf(<#resource $handle#>,<#string $format#>,<#array $args#>)" "S" "int") ("f" "version_compare(" "version_compare(<#string $version1#>,<#string $version2#>,<#string $operator#>)" "S" "mixed") ("f" "variant_xor(" "variant_xor(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_sub(" "variant_sub(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_set(" "variant_set(<#variant $variant#>,<#mixed $value#>)" "S" "void") ("f" "variant_set_type(" "variant_set_type(<#variant $variant#>,<#int $type#>)" "S" "void") ("f" "variant_round(" "variant_round(<#mixed $variant#>,<#int $decimals#>)" "S" "mixed") ("f" "variant_pow(" "variant_pow(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_or(" "variant_or(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_not(" "variant_not(<#mixed $variant#>)" "S" "mixed") ("f" "variant_neg(" "variant_neg(<#mixed $variant#>)" "S" "mixed") ("f" "variant_mul(" "variant_mul(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_mod(" "variant_mod(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_int(" "variant_int(<#mixed $variant#>)" "S" "mixed") ("f" "variant_imp(" "variant_imp(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_idiv(" "variant_idiv(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_get_type(" "variant_get_type(<#variant $variant#>)" "S" "int") ("f" "variant_fix(" "variant_fix(<#mixed $variant#>)" "S" "mixed") ("f" "variant_eqv(" "variant_eqv(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_div(" "variant_div(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_date_to_timestamp(" "variant_date_to_timestamp(<#variant $variant#>)" "S" "int") ("f" "variant_date_from_timestamp(" "variant_date_from_timestamp(<#int $timestamp#>)" "S" "variant") ("f" "variant_cmp(" "variant_cmp(<#mixed $left#>,<#mixed $right#>,<#int $lcid#>,<#int $flags#>)" "S" "int") ("f" "variant_cat(" "variant_cat(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_cast(" "variant_cast(<#variant $variant#>,<#int $type#>)" "S" "variant") ("f" "variant_and(" "variant_and(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_add(" "variant_add(<#mixed $left#>,<#mixed $right#>)" "S" "mixed") ("f" "variant_abs(" "variant_abs(<#mixed $val#>)" "S" "mixed") ("f" "var_export(" "var_export(<#mixed $expression#>,<#bool $return#>)" "S" "mixed") ("f" "var_dump(" "var_dump(<#mixed $expression#>,<#mixed $__args__#>)" "S" "void") ("f" "utf8_encode(" "utf8_encode(<#string $data#>)" "S" "string") ("f" "utf8_decode(" "utf8_decode(<#string $data#>)" "S" "string") ("f" "usort(" "usort(<#array &$array#>,<#callable $cmp_function#>)" "S" "bool") ("f" "usleep(" "usleep(<#int $micro_seconds#>)" "S" "void") ("f" "use_soap_error_handler(" "use_soap_error_handler(<#bool $handler#>)" "S" "bool") ("f" "urlencode(" "urlencode(<#string $str#>)" "S" "string") ("f" "urldecode(" "urldecode(<#string $str#>)" "S" "string") ("f" "uopz_undefine(" "uopz_undefine(<#string $class#>,<#string $constant#>)" "S" "void") ("f" "uopz_restore(" "uopz_restore(<#string $class#>,<#string $function#>)" "S" "void") ("f" "uopz_rename(" "uopz_rename(<#string $class#>,<#string $function#>,<#string $rename#>)" "S" "void") ("f" "uopz_redefine(" "uopz_redefine(<#string $class#>,<#string $constant#>,<#mixed $value#>)" "S" "void") ("f" "uopz_overload(" "uopz_overload(<#int $opcode#>,<#Callable $callable#>)" "S" "void") ("f" "uopz_implement(" "uopz_implement(<#string $class#>,<#string $interface#>)" "S" "void") ("f" "uopz_function(" "uopz_function(<#string $class#>,<#string $function#>,<#Closure $handler#>,<#int $modifiers#>)" "S" "void") ("f" "uopz_flags(" "uopz_flags(<#string $class#>,<#string $function#>,<#int $flags#>)" "S" "int") ("f" "uopz_extend(" "uopz_extend(<#string $class#>,<#string $parent#>)" "S" "void") ("f" "uopz_delete(" "uopz_delete(<#string $class#>,<#string $function#>)" "S" "void") ("f" "uopz_copy(" "uopz_copy(<#string $class#>,<#string $function#>)" "S" "Closure") ("f" "uopz_compose(" "uopz_compose(<#string $name#>,<#array $classes#>,<#array $methods#>,<#array $properties#>,<#int $flags#>)" "S" "void") ("f" "uopz_backup(" "uopz_backup(<#string $class#>,<#string $function#>)" "S" "void") ("f" "untaint(" "untaint(<#string &$string#>,<#string $__args__#>)" "S" "bool") ("f" "unserialize(" "unserialize(<#string $str#>)" "S" "mixed") ("f" "unregister_tick_function(" "unregister_tick_function(<#string $function_name#>)" "S" "void") ("f" "unpack(" "unpack(<#string $format#>,<#string $data#>)" "S" "array") ("f" "unlink(" "unlink(<#string $filename#>,<#resource $context#>)" "S" "bool") ("f" "unixtojd(" "unixtojd(<#int $timestamp#>)" "S" "int") ("f" "uniqid(" "uniqid(<#string $prefix#>,<#bool $more_entropy#>)" "S" "string") ("f" "umask(" "umask(<#int $mask#>)" "S" "int") ("f" "uksort(" "uksort(<#array &$array#>,<#callable $cmp_function#>)" "S" "bool") ("f" "udm_set_agent_param(" "udm_set_agent_param(<#resource $agent#>,<#int $var#>,<#string $val#>)" "S" "bool") ("f" "udm_load_ispell_data(" "udm_load_ispell_data(<#resource $agent#>,<#int $var#>,<#string $val1#>,<#string $val2#>,<#int $flag#>)" "S" "bool") ("f" "udm_hash32(" "udm_hash32(<#resource $agent#>,<#string $str#>)" "S" "int") ("f" "udm_get_res_param(" "udm_get_res_param(<#resource $res#>,<#int $param#>)" "S" "string") ("f" "udm_get_res_field(" "udm_get_res_field(<#resource $res#>,<#int $row#>,<#int $field#>)" "S" "string") ("f" "udm_get_doc_count(" "udm_get_doc_count(<#resource $agent#>)" "S" "int") ("f" "udm_free_res(" "udm_free_res(<#resource $res#>)" "S" "bool") ("f" "udm_free_ispell_data(" "udm_free_ispell_data(<#int $agent#>)" "S" "bool") ("f" "udm_free_agent(" "udm_free_agent(<#resource $agent#>)" "S" "int") ("f" "udm_find(" "udm_find(<#resource $agent#>,<#string $query#>)" "S" "resource") ("f" "udm_error(" "udm_error(<#resource $agent#>)" "S" "string") ("f" "udm_errno(" "udm_errno(<#resource $agent#>)" "S" "int") ("f" "udm_crc32(" "udm_crc32(<#resource $agent#>,<#string $str#>)" "S" "int") ("f" "udm_clear_search_limits(" "udm_clear_search_limits(<#resource $agent#>)" "S" "bool") ("f" "udm_check_charset(" "udm_check_charset(<#resource $agent#>,<#string $charset#>)" "S" "bool") ("f" "udm_cat_path(" "udm_cat_path(<#resource $agent#>,<#string $category#>)" "S" "array") ("f" "udm_cat_list(" "udm_cat_list(<#resource $agent#>,<#string $category#>)" "S" "array") ("f" "udm_api_version(" "udm_api_version(<##>)" "S" "int") ("f" "udm_alloc_agent(" "udm_alloc_agent(<#string $dbaddr#>,<#string $dbmode#>)" "S" "resource") ("f" "udm_alloc_agent_array(" "udm_alloc_agent_array(<#array $databases#>)" "S" "resource") ("f" "udm_add_search_limit(" "udm_add_search_limit(<#resource $agent#>,<#int $var#>,<#string $val#>)" "S" "bool") ("f" "ucwords(" "ucwords(<#string $str#>)" "S" "string") ("f" "ucfirst(" "ucfirst(<#string $str#>)" "S" "string") ("f" "uasort(" "uasort(<#array &$array#>,<#callable $cmp_function#>)" "S" "bool") ("f" "trim(" "trim(<#string $str#>,<#string $charlist#>)" "S" "string") ("f" "trigger_error(" "trigger_error(<#string $error_msg#>,<#int $error_type#>)" "S" "bool") ("f" "trait_exists(" "trait_exists(<#string $traitname#>,<#bool $autoload#>)" "S" "bool") ("f" "trader_wma(" "trader_wma(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_willr(" "trader_willr(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_wclprice(" "trader_wclprice(<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_var(" "trader_var(<#array $real#>,<#integer $timePeriod#>,<#float $nbDev#>)" "S" "array") ("f" "trader_ultosc(" "trader_ultosc(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod1#>,<#integer $timePeriod2#>,<#integer $timePeriod3#>)" "S" "array") ("f" "trader_typprice(" "trader_typprice(<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_tsf(" "trader_tsf(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_trix(" "trader_trix(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_trima(" "trader_trima(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_trange(" "trader_trange(<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_tema(" "trader_tema(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_tanh(" "trader_tanh(<#array $real#>)" "S" "array") ("f" "trader_tan(" "trader_tan(<#array $real#>)" "S" "array") ("f" "trader_t3(" "trader_t3(<#array $real#>,<#integer $timePeriod#>,<#float $vFactor#>)" "S" "array") ("f" "trader_sum(" "trader_sum(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_sub(" "trader_sub(<#array $real0#>,<#array $real1#>)" "S" "array") ("f" "trader_stochrsi(" "trader_stochrsi(<#array $real#>,<#integer $timePeriod#>,<#integer $fastK_Period#>,<#integer $fastD_Period#>,<#integer $fastD_MAType#>)" "S" "array") ("f" "trader_stochf(" "trader_stochf(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $fastK_Period#>,<#integer $fastD_Period#>,<#integer $fastD_MAType#>)" "S" "array") ("f" "trader_stoch(" "trader_stoch(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $fastK_Period#>,<#integer $slowK_Period#>,<#integer $slowK_MAType#>,<#integer $slowD_Period#>,<#integer $slowD_MAType#>)" "S" "array") ("f" "trader_stddev(" "trader_stddev(<#array $real#>,<#integer $timePeriod#>,<#float $nbDev#>)" "S" "array") ("f" "trader_sqrt(" "trader_sqrt(<#array $real#>)" "S" "array") ("f" "trader_sma(" "trader_sma(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_sinh(" "trader_sinh(<#array $real#>)" "S" "array") ("f" "trader_sin(" "trader_sin(<#array $real#>)" "S" "array") ("f" "trader_set_unstable_period(" "trader_set_unstable_period(<#integer $functionId#>,<#integer $timePeriod#>)" "S" "void") ("f" "trader_set_compat(" "trader_set_compat(<#integer $compatId#>)" "S" "void") ("f" "trader_sarext(" "trader_sarext(<#array $high#>,<#array $low#>,<#float $startValue#>,<#float $offsetOnReverse#>,<#float $accelerationInitLong#>,<#float $accelerationLong#>,<#float $accelerationMaxLong#>,<#float $accelerationInitShort#>,<#float $accelerationShort#>,<#float $accelerationMaxShort#>)" "S" "array") ("f" "trader_sar(" "trader_sar(<#array $high#>,<#array $low#>,<#float $acceleration#>,<#float $maximum#>)" "S" "array") ("f" "trader_rsi(" "trader_rsi(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_rocr(" "trader_rocr(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_rocr100(" "trader_rocr100(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_rocp(" "trader_rocp(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_roc(" "trader_roc(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_ppo(" "trader_ppo(<#array $real#>,<#integer $fastPeriod#>,<#integer $slowPeriod#>,<#integer $mAType#>)" "S" "array") ("f" "trader_plus_dm(" "trader_plus_dm(<#array $high#>,<#array $low#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_plus_di(" "trader_plus_di(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_obv(" "trader_obv(<#array $real#>,<#array $volume#>)" "S" "array") ("f" "trader_natr(" "trader_natr(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_mult(" "trader_mult(<#array $real0#>,<#array $real1#>)" "S" "array") ("f" "trader_mom(" "trader_mom(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_minus_dm(" "trader_minus_dm(<#array $high#>,<#array $low#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_minus_di(" "trader_minus_di(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_minmaxindex(" "trader_minmaxindex(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_minmax(" "trader_minmax(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_minindex(" "trader_minindex(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_min(" "trader_min(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_midprice(" "trader_midprice(<#array $high#>,<#array $low#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_midpoint(" "trader_midpoint(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_mfi(" "trader_mfi(<#array $high#>,<#array $low#>,<#array $close#>,<#array $volume#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_medprice(" "trader_medprice(<#array $high#>,<#array $low#>)" "S" "array") ("f" "trader_maxindex(" "trader_maxindex(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_max(" "trader_max(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_mavp(" "trader_mavp(<#array $real#>,<#array $periods#>,<#integer $minPeriod#>,<#integer $maxPeriod#>,<#integer $mAType#>)" "S" "array") ("f" "trader_mama(" "trader_mama(<#array $real#>,<#float $fastLimit#>,<#float $slowLimit#>)" "S" "array") ("f" "trader_macdfix(" "trader_macdfix(<#array $real#>,<#integer $signalPeriod#>)" "S" "array") ("f" "trader_macdext(" "trader_macdext(<#array $real#>,<#integer $fastPeriod#>,<#integer $fastMAType#>,<#integer $slowPeriod#>,<#integer $slowMAType#>,<#integer $signalPeriod#>,<#integer $signalMAType#>)" "S" "array") ("f" "trader_macd(" "trader_macd(<#array $real#>,<#integer $fastPeriod#>,<#integer $slowPeriod#>,<#integer $signalPeriod#>)" "S" "array") ("f" "trader_ma(" "trader_ma(<#array $real#>,<#integer $timePeriod#>,<#integer $mAType#>)" "S" "array") ("f" "trader_log10(" "trader_log10(<#array $real#>)" "S" "array") ("f" "trader_ln(" "trader_ln(<#array $real#>)" "S" "array") ("f" "trader_linearreg_slope(" "trader_linearreg_slope(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_linearreg_intercept(" "trader_linearreg_intercept(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_linearreg(" "trader_linearreg(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_linearreg_angle(" "trader_linearreg_angle(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_kama(" "trader_kama(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_ht_trendmode(" "trader_ht_trendmode(<#array $real#>)" "S" "array") ("f" "trader_ht_trendline(" "trader_ht_trendline(<#array $real#>)" "S" "array") ("f" "trader_ht_sine(" "trader_ht_sine(<#array $real#>)" "S" "array") ("f" "trader_ht_phasor(" "trader_ht_phasor(<#array $real#>)" "S" "array") ("f" "trader_ht_dcphase(" "trader_ht_dcphase(<#array $real#>)" "S" "array") ("f" "trader_ht_dcperiod(" "trader_ht_dcperiod(<#array $real#>)" "S" "array") ("f" "trader_get_unstable_period(" "trader_get_unstable_period(<#integer $functionId#>)" "S" "integer") ("f" "trader_get_compat(" "trader_get_compat(<##>)" "S" "integer") ("f" "trader_floor(" "trader_floor(<#array $real#>)" "S" "array") ("f" "trader_exp(" "trader_exp(<#array $real#>)" "S" "array") ("f" "trader_errno(" "trader_errno(<##>)" "S" "integer") ("f" "trader_ema(" "trader_ema(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_dx(" "trader_dx(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_div(" "trader_div(<#array $real0#>,<#array $real1#>)" "S" "array") ("f" "trader_dema(" "trader_dema(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_cosh(" "trader_cosh(<#array $real#>)" "S" "array") ("f" "trader_cos(" "trader_cos(<#array $real#>)" "S" "array") ("f" "trader_correl(" "trader_correl(<#array $real0#>,<#array $real1#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_cmo(" "trader_cmo(<#array $real#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_ceil(" "trader_ceil(<#array $real#>)" "S" "array") ("f" "trader_cdlxsidegap3methods(" "trader_cdlxsidegap3methods(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlupsidegap2crows(" "trader_cdlupsidegap2crows(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlunique3river(" "trader_cdlunique3river(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdltristar(" "trader_cdltristar(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlthrusting(" "trader_cdlthrusting(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdltasukigap(" "trader_cdltasukigap(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdltakuri(" "trader_cdltakuri(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlsticksandwich(" "trader_cdlsticksandwich(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlstalledpattern(" "trader_cdlstalledpattern(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlspinningtop(" "trader_cdlspinningtop(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlshortline(" "trader_cdlshortline(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlshootingstar(" "trader_cdlshootingstar(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlseparatinglines(" "trader_cdlseparatinglines(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlrisefall3methods(" "trader_cdlrisefall3methods(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlrickshawman(" "trader_cdlrickshawman(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlpiercing(" "trader_cdlpiercing(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlonneck(" "trader_cdlonneck(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlmorningstar(" "trader_cdlmorningstar(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>,<#float $penetration#>)" "S" "array") ("f" "trader_cdlmorningdojistar(" "trader_cdlmorningdojistar(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>,<#float $penetration#>)" "S" "array") ("f" "trader_cdlmathold(" "trader_cdlmathold(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>,<#float $penetration#>)" "S" "array") ("f" "trader_cdlmatchinglow(" "trader_cdlmatchinglow(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlmarubozu(" "trader_cdlmarubozu(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdllongline(" "trader_cdllongline(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdllongleggeddoji(" "trader_cdllongleggeddoji(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlladderbottom(" "trader_cdlladderbottom(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlkickingbylength(" "trader_cdlkickingbylength(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlkicking(" "trader_cdlkicking(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlinvertedhammer(" "trader_cdlinvertedhammer(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlinneck(" "trader_cdlinneck(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlidentical3crows(" "trader_cdlidentical3crows(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlhomingpigeon(" "trader_cdlhomingpigeon(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlhikkakemod(" "trader_cdlhikkakemod(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlhikkake(" "trader_cdlhikkake(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlhighwave(" "trader_cdlhighwave(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlharamicross(" "trader_cdlharamicross(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlharami(" "trader_cdlharami(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlhangingman(" "trader_cdlhangingman(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlhammer(" "trader_cdlhammer(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlgravestonedoji(" "trader_cdlgravestonedoji(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlgapsidesidewhite(" "trader_cdlgapsidesidewhite(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdleveningstar(" "trader_cdleveningstar(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>,<#float $penetration#>)" "S" "array") ("f" "trader_cdleveningdojistar(" "trader_cdleveningdojistar(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>,<#float $penetration#>)" "S" "array") ("f" "trader_cdlengulfing(" "trader_cdlengulfing(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdldragonflydoji(" "trader_cdldragonflydoji(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdldojistar(" "trader_cdldojistar(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdldoji(" "trader_cdldoji(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdldarkcloudcover(" "trader_cdldarkcloudcover(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>,<#float $penetration#>)" "S" "array") ("f" "trader_cdlcounterattack(" "trader_cdlcounterattack(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlconcealbabyswall(" "trader_cdlconcealbabyswall(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlclosingmarubozu(" "trader_cdlclosingmarubozu(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlbreakaway(" "trader_cdlbreakaway(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlbelthold(" "trader_cdlbelthold(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdladvanceblock(" "trader_cdladvanceblock(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdlabandonedbaby(" "trader_cdlabandonedbaby(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>,<#float $penetration#>)" "S" "array") ("f" "trader_cdl3whitesoldiers(" "trader_cdl3whitesoldiers(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdl3starsinsouth(" "trader_cdl3starsinsouth(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdl3outside(" "trader_cdl3outside(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdl3linestrike(" "trader_cdl3linestrike(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdl3inside(" "trader_cdl3inside(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdl3blackcrows(" "trader_cdl3blackcrows(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cdl2crows(" "trader_cdl2crows(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_cci(" "trader_cci(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_bop(" "trader_bop(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_beta(" "trader_beta(<#array $real0#>,<#array $real1#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_bbands(" "trader_bbands(<#array $real#>,<#integer $timePeriod#>,<#float $nbDevUp#>,<#float $nbDevDn#>,<#integer $mAType#>)" "S" "array") ("f" "trader_avgprice(" "trader_avgprice(<#array $open#>,<#array $high#>,<#array $low#>,<#array $close#>)" "S" "array") ("f" "trader_atr(" "trader_atr(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_atan(" "trader_atan(<#array $real#>)" "S" "array") ("f" "trader_asin(" "trader_asin(<#array $real#>)" "S" "array") ("f" "trader_aroonosc(" "trader_aroonosc(<#array $high#>,<#array $low#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_aroon(" "trader_aroon(<#array $high#>,<#array $low#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_apo(" "trader_apo(<#array $real#>,<#integer $fastPeriod#>,<#integer $slowPeriod#>,<#integer $mAType#>)" "S" "array") ("f" "trader_adxr(" "trader_adxr(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_adx(" "trader_adx(<#array $high#>,<#array $low#>,<#array $close#>,<#integer $timePeriod#>)" "S" "array") ("f" "trader_adosc(" "trader_adosc(<#array $high#>,<#array $low#>,<#array $close#>,<#array $volume#>,<#integer $fastPeriod#>,<#integer $slowPeriod#>)" "S" "array") ("f" "trader_add(" "trader_add(<#array $real0#>,<#array $real1#>)" "S" "array") ("f" "trader_ad(" "trader_ad(<#array $high#>,<#array $low#>,<#array $close#>,<#array $volume#>)" "S" "array") ("f" "trader_acos(" "trader_acos(<#array $real#>)" "S" "array") ("f" "touch(" "touch(<#string $filename#>,<#int $time#>,<#int $atime#>)" "S" "bool") ("f" "token_name(" "token_name(<#int $token#>)" "S" "string") ("f" "token_get_all(" "token_get_all(<#string $source#>)" "S" "array") ("f" "tmpfile(" "tmpfile(<##>)" "S" "resource") ("f" "timezone_version_get(" "timezone_version_get(<##>)" "S" "string") ("f" "timezone_name_from_abbr(" "timezone_name_from_abbr(<#string $abbr#>,<#int $gmtOffset#>,<#int $isdst#>)" "S" "string") ("f" "time_sleep_until(" "time_sleep_until(<#float $timestamp#>)" "S" "bool") ("f" "time_nanosleep(" "time_nanosleep(<#int $seconds#>,<#int $nanoseconds#>)" "S" "mixed") ("f" "time(" "time(<##>)" "S" "int") ("f" "tidy_warning_count(" "tidy_warning_count(<#tidy $object#>)" "S" "int") ("f" "tidy_setopt(" "tidy_setopt(<#string $option#>,<#mixed $value#>)" "S" "bool") ("f" "tidy_set_encoding(" "tidy_set_encoding(<#string $encoding#>)" "S" "bool") ("f" "tidy_save_config(" "tidy_save_config(<#string $filename#>)" "S" "bool") ("f" "tidy_reset_config(" "tidy_reset_config(<##>)" "S" "bool") ("f" "tidy_load_config(" "tidy_load_config(<#string $filename#>,<#string $encoding#>)" "S" "void") ("f" "tidy_get_output(" "tidy_get_output(<#tidy $object#>)" "S" "string") ("f" "tidy_error_count(" "tidy_error_count(<#tidy $object#>)" "S" "int") ("f" "tidy_config_count(" "tidy_config_count(<#tidy $object#>)" "S" "int") ("f" "tidy_access_count(" "tidy_access_count(<#tidy $object#>)" "S" "int") ("f" "textdomain(" "textdomain(<#string $text_domain#>)" "S" "string") ("f" "tempnam(" "tempnam(<#string $dir#>,<#string $prefix#>)" "S" "string") ("f" "tcpwrap_check(" "tcpwrap_check(<#string $daemon#>,<#string $address#>,<#string $user#>,<#bool $nodns#>)" "S" "bool") ("f" "tanh(" "tanh(<#float $arg#>)" "S" "float") ("f" "tan(" "tan(<#float $arg#>)" "S" "float") ("f" "taint(" "taint(<#string &$string#>,<#string $__args__#>)" "S" "bool") ("f" "system(" "system(<#string $command#>,<#int &$return_var#>)" "S" "string") ("f" "syslog(" "syslog(<#int $priority#>,<#string $message#>)" "S" "bool") ("f" "sys_get_temp_dir(" "sys_get_temp_dir(<##>)" "S" "string") ("f" "sys_getloadavg(" "sys_getloadavg(<##>)" "S" "array") ("f" "symlink(" "symlink(<#string $target#>,<#string $link#>)" "S" "bool") ("f" "sybase_unbuffered_query(" "sybase_unbuffered_query(<#string $query#>,<#resource $link_identifier#>,<#bool $store_result#>)" "S" "resource") ("f" "sybase_set_message_handler(" "sybase_set_message_handler(<#callable $handler#>,<#resource $link_identifier#>)" "S" "bool") ("f" "sybase_select_db(" "sybase_select_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "sybase_result(" "sybase_result(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "string") ("f" "sybase_query(" "sybase_query(<#string $query#>,<#resource $link_identifier#>)" "S" "mixed") ("f" "sybase_pconnect(" "sybase_pconnect(<#string $servername#>,<#string $username#>,<#string $password#>,<#string $charset#>,<#string $appname#>)" "S" "resource") ("f" "sybase_num_rows(" "sybase_num_rows(<#resource $result#>)" "S" "int") ("f" "sybase_num_fields(" "sybase_num_fields(<#resource $result#>)" "S" "int") ("f" "sybase_min_server_severity(" "sybase_min_server_severity(<#int $severity#>)" "S" "void") ("f" "sybase_min_message_severity(" "sybase_min_message_severity(<#int $severity#>)" "S" "void") ("f" "sybase_min_error_severity(" "sybase_min_error_severity(<#int $severity#>)" "S" "void") ("f" "sybase_min_client_severity(" "sybase_min_client_severity(<#int $severity#>)" "S" "void") ("f" "sybase_get_last_message(" "sybase_get_last_message(<##>)" "S" "string") ("f" "sybase_free_result(" "sybase_free_result(<#resource $result#>)" "S" "bool") ("f" "sybase_field_seek(" "sybase_field_seek(<#resource $result#>,<#int $field_offset#>)" "S" "bool") ("f" "sybase_fetch_row(" "sybase_fetch_row(<#resource $result#>)" "S" "array") ("f" "sybase_fetch_object(" "sybase_fetch_object(<#resource $result#>,<#mixed $object#>)" "S" "object") ("f" "sybase_fetch_field(" "sybase_fetch_field(<#resource $result#>,<#int $field_offset#>)" "S" "object") ("f" "sybase_fetch_assoc(" "sybase_fetch_assoc(<#resource $result#>)" "S" "array") ("f" "sybase_fetch_array(" "sybase_fetch_array(<#resource $result#>)" "S" "array") ("f" "sybase_deadlock_retry_count(" "sybase_deadlock_retry_count(<#int $retry_count#>)" "S" "void") ("f" "sybase_data_seek(" "sybase_data_seek(<#resource $result_identifier#>,<#int $row_number#>)" "S" "bool") ("f" "sybase_connect(" "sybase_connect(<#string $servername#>,<#string $username#>,<#string $password#>,<#string $charset#>,<#string $appname#>,<#bool $new#>)" "S" "resource") ("f" "sybase_close(" "sybase_close(<#resource $link_identifier#>)" "S" "bool") ("f" "sybase_affected_rows(" "sybase_affected_rows(<#resource $link_identifier#>)" "S" "int") ("f" "svn_update(" "svn_update(<#string $path#>,<#int $revno#>,<#bool $recurse#>)" "S" "int") ("f" "svn_status(" "svn_status(<#string $path#>,<#int $flags#>)" "S" "array") ("f" "svn_revert(" "svn_revert(<#string $path#>,<#bool $recursive#>)" "S" "bool") ("f" "svn_repos_recover(" "svn_repos_recover(<#string $path#>)" "S" "bool") ("f" "svn_repos_open(" "svn_repos_open(<#string $path#>)" "S" "resource") ("f" "svn_repos_hotcopy(" "svn_repos_hotcopy(<#string $repospath#>,<#string $destpath#>,<#bool $cleanlogs#>)" "S" "bool") ("f" "svn_repos_fs(" "svn_repos_fs(<#resource $repos#>)" "S" "resource") ("f" "svn_repos_fs_commit_txn(" "svn_repos_fs_commit_txn(<#resource $txn#>)" "S" "int") ("f" "svn_repos_fs_begin_txn_for_commit(" "svn_repos_fs_begin_txn_for_commit(<#resource $repos#>,<#int $rev#>,<#string $author#>,<#string $log_msg#>)" "S" "resource") ("f" "svn_repos_create(" "svn_repos_create(<#string $path#>,<#array $config#>,<#array $fsconfig#>)" "S" "resource") ("f" "svn_mkdir(" "svn_mkdir(<#string $path#>,<#string $log_message#>)" "S" "bool") ("f" "svn_ls(" "svn_ls(<#string $repos_url#>,<#int $revision_no#>,<#bool $recurse#>,<#bool $peg#>)" "S" "array") ("f" "svn_log(" "svn_log(<#string $repos_url#>,<#int $start_revision#>,<#int $end_revision#>,<#int $limit#>,<#int $flags#>)" "S" "array") ("f" "svn_import(" "svn_import(<#string $path#>,<#string $url#>,<#bool $nonrecursive#>)" "S" "bool") ("f" "svn_fs_youngest_rev(" "svn_fs_youngest_rev(<#resource $fs#>)" "S" "int") ("f" "svn_fs_txn_root(" "svn_fs_txn_root(<#resource $txn#>)" "S" "resource") ("f" "svn_fs_revision_root(" "svn_fs_revision_root(<#resource $fs#>,<#int $revnum#>)" "S" "resource") ("f" "svn_fs_revision_prop(" "svn_fs_revision_prop(<#resource $fs#>,<#int $revnum#>,<#string $propname#>)" "S" "string") ("f" "svn_fs_props_changed(" "svn_fs_props_changed(<#resource $root1#>,<#string $path1#>,<#resource $root2#>,<#string $path2#>)" "S" "bool") ("f" "svn_fs_node_prop(" "svn_fs_node_prop(<#resource $fsroot#>,<#string $path#>,<#string $propname#>)" "S" "string") ("f" "svn_fs_node_created_rev(" "svn_fs_node_created_rev(<#resource $fsroot#>,<#string $path#>)" "S" "int") ("f" "svn_fs_make_file(" "svn_fs_make_file(<#resource $root#>,<#string $path#>)" "S" "bool") ("f" "svn_fs_make_dir(" "svn_fs_make_dir(<#resource $root#>,<#string $path#>)" "S" "bool") ("f" "svn_fs_is_file(" "svn_fs_is_file(<#resource $root#>,<#string $path#>)" "S" "bool") ("f" "svn_fs_is_dir(" "svn_fs_is_dir(<#resource $root#>,<#string $path#>)" "S" "bool") ("f" "svn_fs_file_length(" "svn_fs_file_length(<#resource $fsroot#>,<#string $path#>)" "S" "int") ("f" "svn_fs_file_contents(" "svn_fs_file_contents(<#resource $fsroot#>,<#string $path#>)" "S" "resource") ("f" "svn_fs_dir_entries(" "svn_fs_dir_entries(<#resource $fsroot#>,<#string $path#>)" "S" "array") ("f" "svn_fs_delete(" "svn_fs_delete(<#resource $root#>,<#string $path#>)" "S" "bool") ("f" "svn_fs_copy(" "svn_fs_copy(<#resource $from_root#>,<#string $from_path#>,<#resource $to_root#>,<#string $to_path#>)" "S" "bool") ("f" "svn_fs_contents_changed(" "svn_fs_contents_changed(<#resource $root1#>,<#string $path1#>,<#resource $root2#>,<#string $path2#>)" "S" "bool") ("f" "svn_fs_check_path(" "svn_fs_check_path(<#resource $fsroot#>,<#string $path#>)" "S" "int") ("f" "svn_fs_change_node_prop(" "svn_fs_change_node_prop(<#resource $root#>,<#string $path#>,<#string $name#>,<#string $value#>)" "S" "bool") ("f" "svn_fs_begin_txn2(" "svn_fs_begin_txn2(<#resource $repos#>,<#int $rev#>)" "S" "resource") ("f" "svn_fs_apply_text(" "svn_fs_apply_text(<#resource $root#>,<#string $path#>)" "S" "resource") ("f" "svn_fs_abort_txn(" "svn_fs_abort_txn(<#resource $txn#>)" "S" "bool") ("f" "svn_export(" "svn_export(<#string $frompath#>,<#string $topath#>,<#bool $working_copy#>,<#int $revision_no#>)" "S" "bool") ("f" "svn_diff(" "svn_diff(<#string $path1#>,<#int $rev1#>,<#string $path2#>,<#int $rev2#>)" "S" "array") ("f" "svn_delete(" "svn_delete(<#string $path#>,<#bool $force#>)" "S" "bool") ("f" "svn_commit(" "svn_commit(<#string $log#>,<#array $targets#>,<#bool $recursive#>)" "S" "array") ("f" "svn_client_version(" "svn_client_version(<##>)" "S" "string") ("f" "svn_cleanup(" "svn_cleanup(<#string $workingdir#>)" "S" "bool") ("f" "svn_checkout(" "svn_checkout(<#string $repos#>,<#string $targetpath#>,<#int $revision#>,<#int $flags#>)" "S" "bool") ("f" "svn_cat(" "svn_cat(<#string $repos_url#>,<#int $revision_no#>)" "S" "string") ("f" "svn_blame(" "svn_blame(<#string $repository_url#>,<#int $revision_no#>)" "S" "array") ("f" "svn_auth_set_parameter(" "svn_auth_set_parameter(<#string $key#>,<#string $value#>)" "S" "void") ("f" "svn_auth_get_parameter(" "svn_auth_get_parameter(<#string $key#>)" "S" "string") ("f" "svn_add(" "svn_add(<#string $path#>,<#bool $recursive#>,<#bool $force#>)" "S" "bool") ("f" "substr(" "substr(<#string $string#>,<#int $start#>,<#int $length#>)" "S" "string") ("f" "substr_replace(" "substr_replace(<#mixed $string#>,<#mixed $replacement#>,<#mixed $start#>,<#mixed $length#>)" "S" "mixed") ("f" "substr_count(" "substr_count(<#string $haystack#>,<#string $needle#>,<#int $offset#>,<#int $length#>)" "S" "int") ("f" "substr_compare(" "substr_compare(<#string $main_str#>,<#string $str#>,<#int $offset#>,<#int $length#>,<#bool $case_insensitivity#>)" "S" "int") ("f" "str_word_count(" "str_word_count(<#string $string#>,<#int $format#>,<#string $charlist#>)" "S" "mixed") ("f" "strval(" "strval(<#mixed $var#>)" "S" "string") ("f" "strtr(" "strtr(<#string $str#>,<#string $from#>,<#string $to#>)" "S" "string") ("f" "strtoupper(" "strtoupper(<#string $string#>)" "S" "string") ("f" "strtotime(" "strtotime(<#string $time#>,<#int $now#>)" "S" "int") ("f" "strtolower(" "strtolower(<#string $str#>)" "S" "string") ("f" "strtok(" "strtok(<#string $str#>,<#string $token#>)" "S" "string") ("f" "strstr(" "strstr(<#string $haystack#>,<#mixed $needle#>,<#bool $before_needle#>)" "S" "string") ("f" "strspn(" "strspn(<#string $subject#>,<#string $mask#>,<#int $start#>,<#int $length#>)" "S" "int") ("f" "str_split(" "str_split(<#string $string#>,<#int $split_length#>)" "S" "array") ("f" "str_shuffle(" "str_shuffle(<#string $str#>)" "S" "string") ("f" "strrpos(" "strrpos(<#string $haystack#>,<#string $needle#>,<#int $offset#>)" "S" "int") ("f" "str_rot13(" "str_rot13(<#string $str#>)" "S" "string") ("f" "strripos(" "strripos(<#string $haystack#>,<#string $needle#>,<#int $offset#>)" "S" "int") ("f" "strrev(" "strrev(<#string $string#>)" "S" "string") ("f" "str_replace(" "str_replace(<#mixed $search#>,<#mixed $replace#>,<#mixed $subject#>,<#int &$count#>)" "S" "mixed") ("f" "str_repeat(" "str_repeat(<#string $input#>,<#int $multiplier#>)" "S" "string") ("f" "strrchr(" "strrchr(<#string $haystack#>,<#mixed $needle#>)" "S" "string") ("f" "strptime(" "strptime(<#string $date#>,<#string $format#>)" "S" "array") ("f" "strpos(" "strpos(<#string $haystack#>,<#mixed $needle#>,<#int $offset#>)" "S" "mixed") ("f" "strpbrk(" "strpbrk(<#string $haystack#>,<#string $char_list#>)" "S" "string") ("f" "str_pad(" "str_pad(<#string $input#>,<#int $pad_length#>,<#string $pad_string#>,<#int $pad_type#>)" "S" "string") ("f" "strncmp(" "strncmp(<#string $str1#>,<#string $str2#>,<#int $len#>)" "S" "int") ("f" "strncasecmp(" "strncasecmp(<#string $str1#>,<#string $str2#>,<#int $len#>)" "S" "int") ("f" "strnatcmp(" "strnatcmp(<#string $str1#>,<#string $str2#>)" "S" "int") ("f" "strnatcasecmp(" "strnatcasecmp(<#string $str1#>,<#string $str2#>)" "S" "int") ("f" "strlen(" "strlen(<#string $string#>)" "S" "int") ("f" "stristr(" "stristr(<#string $haystack#>,<#mixed $needle#>,<#bool $before_needle#>)" "S" "string") ("f" "str_ireplace(" "str_ireplace(<#mixed $search#>,<#mixed $replace#>,<#mixed $subject#>,<#int &$count#>)" "S" "mixed") ("f" "strip_tags(" "strip_tags(<#string $str#>,<#string $allowable_tags#>)" "S" "string") ("f" "stripslashes(" "stripslashes(<#string $str#>)" "S" "string") ("f" "stripos(" "stripos(<#string $haystack#>,<#string $needle#>,<#int $offset#>)" "S" "int") ("f" "stripcslashes(" "stripcslashes(<#string $str#>)" "S" "string") ("f" "str_getcsv(" "str_getcsv(<#string $input#>,<#string $delimiter#>,<#string $enclosure#>,<#string $escape#>)" "S" "array") ("f" "strftime(" "strftime(<#string $format#>,<#int $timestamp#>)" "S" "string") ("f" "stream_wrapper_unregister(" "stream_wrapper_unregister(<#string $protocol#>)" "S" "bool") ("f" "stream_wrapper_restore(" "stream_wrapper_restore(<#string $protocol#>)" "S" "bool") ("f" "stream_supports_lock(" "stream_supports_lock(<#resource $stream#>)" "S" "bool") ("f" "stream_socket_shutdown(" "stream_socket_shutdown(<#resource $stream#>,<#int $how#>)" "S" "bool") ("f" "stream_socket_server(" "stream_socket_server(<#string $local_socket#>,<#int &$errno#>,<#string &$errstr#>,<#int $flags#>,<#resource $context#>)" "S" "resource") ("f" "stream_socket_sendto(" "stream_socket_sendto(<#resource $socket#>,<#string $data#>,<#int $flags#>,<#string $address#>)" "S" "int") ("f" "stream_socket_recvfrom(" "stream_socket_recvfrom(<#resource $socket#>,<#int $length#>,<#int $flags#>,<#string &$address#>)" "S" "string") ("f" "stream_socket_pair(" "stream_socket_pair(<#int $domain#>,<#int $type#>,<#int $protocol#>)" "S" "array") ("f" "stream_socket_get_name(" "stream_socket_get_name(<#resource $handle#>,<#bool $want_peer#>)" "S" "string") ("f" "stream_socket_enable_crypto(" "stream_socket_enable_crypto(<#resource $stream#>,<#bool $enable#>,<#int $crypto_type#>,<#resource $session_stream#>)" "S" "mixed") ("f" "stream_socket_client(" "stream_socket_client(<#string $remote_socket#>,<#int &$errno#>,<#string &$errstr#>,<#float $timeout#>,<#int $flags#>,<#resource $context#>)" "S" "resource") ("f" "stream_socket_accept(" "stream_socket_accept(<#resource $server_socket#>,<#float $timeout#>,<#string &$peername#>)" "S" "resource") ("f" "stream_set_write_buffer(" "stream_set_write_buffer(<#resource $stream#>,<#int $buffer#>)" "S" "int") ("f" "stream_set_timeout(" "stream_set_timeout(<#resource $stream#>,<#int $seconds#>,<#int $microseconds#>)" "S" "bool") ("f" "stream_set_read_buffer(" "stream_set_read_buffer(<#resource $stream#>,<#int $buffer#>)" "S" "int") ("f" "stream_set_chunk_size(" "stream_set_chunk_size(<#resource $fp#>,<#int $chunk_size#>)" "S" "int") ("f" "stream_set_blocking(" "stream_set_blocking(<#resource $stream#>,<#int $mode#>)" "S" "bool") ("f" "stream_select(" "stream_select(<#array &$read#>,<#array &$write#>,<#array &$except#>,<#int $tv_sec#>,<#int $tv_usec#>)" "S" "int") ("f" "stream_resolve_include_path(" "stream_resolve_include_path(<#string $filename#>)" "S" "string") ("f" "stream_register_wrapper(" "stream_register_wrapper(<#string $protocol#>,<#string $classname#>)" "S" "boolean") ("f" "stream_notification_callback(" "stream_notification_callback(<#int $notification_code#>,<#int $severity#>,<#string $message#>,<#int $message_code#>,<#int $bytes_transferred#>,<#int $bytes_max#>)" "S" "void") ("f" "stream_is_local(" "stream_is_local(<#mixed $stream_or_url#>)" "S" "bool") ("f" "stream_get_wrappers(" "stream_get_wrappers(<##>)" "S" "array") ("f" "stream_get_transports(" "stream_get_transports(<##>)" "S" "array") ("f" "stream_get_meta_data(" "stream_get_meta_data(<#int $fp#>)" "S" "array") ("f" "stream_get_line(" "stream_get_line(<#resource $handle#>,<#int $length#>,<#string $ending#>)" "S" "string") ("f" "stream_get_filters(" "stream_get_filters(<##>)" "S" "array") ("f" "stream_get_contents(" "stream_get_contents(<#resource $handle#>,<#int $maxlength#>,<#int $offset#>)" "S" "string") ("f" "stream_filter_remove(" "stream_filter_remove(<#resource $stream_filter#>)" "S" "bool") ("f" "stream_filter_register(" "stream_filter_register(<#string $filtername#>,<#string $classname#>)" "S" "bool") ("f" "stream_filter_prepend(" "stream_filter_prepend(<#resource $stream#>,<#string $filtername#>,<#int $read_write#>,<#mixed $params#>)" "S" "resource") ("f" "stream_filter_append(" "stream_filter_append(<#resource $stream#>,<#string $filtername#>,<#int $read_write#>,<#mixed $params#>)" "S" "resource") ("f" "stream_encoding(" "stream_encoding(<#resource $stream#>,<#string $encoding#>)" "S" "bool") ("f" "stream_copy_to_stream(" "stream_copy_to_stream(<#resource $source#>,<#resource $dest#>,<#int $maxlength#>,<#int $offset#>)" "S" "int") ("f" "stream_context_set_params(" "stream_context_set_params(<#resource $stream_or_context#>,<#array $params#>)" "S" "bool") ("f" "stream_context_set_option(" "stream_context_set_option(<#resource $stream_or_context#>,<#string $wrapper#>,<#string $option#>,<#mixed $value#>)" "S" "bool") ("f" "stream_context_set_default(" "stream_context_set_default(<#array $options#>)" "S" "resource") ("f" "stream_context_get_params(" "stream_context_get_params(<#resource $stream_or_context#>)" "S" "array") ("f" "stream_context_get_options(" "stream_context_get_options(<#resource $stream_or_context#>)" "S" "array") ("f" "stream_context_get_default(" "stream_context_get_default(<#array $options#>)" "S" "resource") ("f" "stream_context_create(" "stream_context_create(<#array $options#>,<#array $params#>)" "S" "resource") ("f" "stream_bucket_prepend(" "stream_bucket_prepend(<#resource $brigade#>,<#resource $bucket#>)" "S" "void") ("f" "stream_bucket_new(" "stream_bucket_new(<#resource $stream#>,<#string $buffer#>)" "S" "object") ("f" "stream_bucket_make_writeable(" "stream_bucket_make_writeable(<#resource $brigade#>)" "S" "object") ("f" "stream_bucket_append(" "stream_bucket_append(<#resource $brigade#>,<#resource $bucket#>)" "S" "void") ("f" "strcspn(" "strcspn(<#string $str1#>,<#string $str2#>,<#int $start#>,<#int $length#>)" "S" "int") ("f" "strcoll(" "strcoll(<#string $str1#>,<#string $str2#>)" "S" "int") ("f" "strcmp(" "strcmp(<#string $str1#>,<#string $str2#>)" "S" "int") ("f" "strcasecmp(" "strcasecmp(<#string $str1#>,<#string $str2#>)" "S" "int") ("f" "stomp_version(" "stomp_version(<##>)" "S" "string") ("f" "stomp_connect_error(" "stomp_connect_error(<##>)" "S" "string") ("f" "stats_variance(" "stats_variance(<#array $a#>,<#bool $sample#>)" "S" "float") ("f" "stats_stat_powersum(" "stats_stat_powersum(<#array $arr#>,<#float $power#>)" "S" "float") ("f" "stats_stat_percentile(" "stats_stat_percentile(<#float $df#>,<#float $xnonc#>)" "S" "float") ("f" "stats_stat_paired_t(" "stats_stat_paired_t(<#array $arr1#>,<#array $arr2#>)" "S" "float") ("f" "stats_stat_noncentral_t(" "stats_stat_noncentral_t(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_stat_innerproduct(" "stats_stat_innerproduct(<#array $arr1#>,<#array $arr2#>)" "S" "float") ("f" "stats_stat_independent_t(" "stats_stat_independent_t(<#array $arr1#>,<#array $arr2#>)" "S" "float") ("f" "stats_stat_gennch(" "stats_stat_gennch(<#int $n#>)" "S" "float") ("f" "stats_stat_correlation(" "stats_stat_correlation(<#array $arr1#>,<#array $arr2#>)" "S" "float") ("f" "stats_stat_binomial_coef(" "stats_stat_binomial_coef(<#int $x#>,<#int $n#>)" "S" "float") ("f" "stats_standard_deviation(" "stats_standard_deviation(<#array $a#>,<#bool $sample#>)" "S" "float") ("f" "stats_skew(" "stats_skew(<#array $a#>)" "S" "float") ("f" "stats_rand_setall(" "stats_rand_setall(<#int $iseed1#>,<#int $iseed2#>)" "S" "void") ("f" "stats_rand_ranf(" "stats_rand_ranf(<##>)" "S" "float") ("f" "stats_rand_phrase_to_seeds(" "stats_rand_phrase_to_seeds(<#string $phrase#>)" "S" "array") ("f" "stats_rand_get_seeds(" "stats_rand_get_seeds(<##>)" "S" "array") ("f" "stats_rand_gen_t(" "stats_rand_gen_t(<#float $df#>)" "S" "float") ("f" "stats_rand_gen_normal(" "stats_rand_gen_normal(<#float $av#>,<#float $sd#>)" "S" "float") ("f" "stats_rand_gen_noncentral_t(" "stats_rand_gen_noncentral_t(<#float $df#>,<#float $xnonc#>)" "S" "float") ("f" "stats_rand_gen_noncentral_f(" "stats_rand_gen_noncentral_f(<#float $dfn#>,<#float $dfd#>,<#float $xnonc#>)" "S" "float") ("f" "stats_rand_gen_noncenral_chisquare(" "stats_rand_gen_noncenral_chisquare(<#float $df#>,<#float $xnonc#>)" "S" "float") ("f" "stats_rand_gen_iuniform(" "stats_rand_gen_iuniform(<#int $low#>,<#int $high#>)" "S" "int") ("f" "stats_rand_gen_ipoisson(" "stats_rand_gen_ipoisson(<#float $mu#>)" "S" "int") ("f" "stats_rand_gen_int(" "stats_rand_gen_int(<##>)" "S" "int") ("f" "stats_rand_gen_ibinomial_negative(" "stats_rand_gen_ibinomial_negative(<#int $n#>,<#float $p#>)" "S" "int") ("f" "stats_rand_gen_ibinomial(" "stats_rand_gen_ibinomial(<#int $n#>,<#float $pp#>)" "S" "int") ("f" "stats_rand_gen_gamma(" "stats_rand_gen_gamma(<#float $a#>,<#float $r#>)" "S" "float") ("f" "stats_rand_gen_funiform(" "stats_rand_gen_funiform(<#float $low#>,<#float $high#>)" "S" "float") ("f" "stats_rand_gen_f(" "stats_rand_gen_f(<#float $dfn#>,<#float $dfd#>)" "S" "float") ("f" "stats_rand_gen_exponential(" "stats_rand_gen_exponential(<#float $av#>)" "S" "float") ("f" "stats_rand_gen_chisquare(" "stats_rand_gen_chisquare(<#float $df#>)" "S" "float") ("f" "stats_rand_gen_beta(" "stats_rand_gen_beta(<#float $a#>,<#float $b#>)" "S" "float") ("f" "stats_kurtosis(" "stats_kurtosis(<#array $a#>)" "S" "float") ("f" "stats_harmonic_mean(" "stats_harmonic_mean(<#array $a#>)" "S" "number") ("f" "stats_den_uniform(" "stats_den_uniform(<#float $x#>,<#float $a#>,<#float $b#>)" "S" "float") ("f" "stats_dens_weibull(" "stats_dens_weibull(<#float $x#>,<#float $a#>,<#float $b#>)" "S" "float") ("f" "stats_dens_t(" "stats_dens_t(<#float $x#>,<#float $dfr#>)" "S" "float") ("f" "stats_dens_pmf_poisson(" "stats_dens_pmf_poisson(<#float $x#>,<#float $lb#>)" "S" "float") ("f" "stats_dens_pmf_hypergeometric(" "stats_dens_pmf_hypergeometric(<#float $n1#>,<#float $n2#>,<#float $N1#>,<#float $N2#>)" "S" "float") ("f" "stats_dens_pmf_binomial(" "stats_dens_pmf_binomial(<#float $x#>,<#float $n#>,<#float $pi#>)" "S" "float") ("f" "stats_dens_normal(" "stats_dens_normal(<#float $x#>,<#float $ave#>,<#float $stdev#>)" "S" "float") ("f" "stats_dens_negative_binomial(" "stats_dens_negative_binomial(<#float $x#>,<#float $n#>,<#float $pi#>)" "S" "float") ("f" "stats_dens_logistic(" "stats_dens_logistic(<#float $x#>,<#float $ave#>,<#float $stdev#>)" "S" "float") ("f" "stats_dens_laplace(" "stats_dens_laplace(<#float $x#>,<#float $ave#>,<#float $stdev#>)" "S" "float") ("f" "stats_dens_gamma(" "stats_dens_gamma(<#float $x#>,<#float $shape#>,<#float $scale#>)" "S" "float") ("f" "stats_dens_f(" "stats_dens_f(<#float $x#>,<#float $dfr1#>,<#float $dfr2#>)" "S" "float") ("f" "stats_dens_exponential(" "stats_dens_exponential(<#float $x#>,<#float $scale#>)" "S" "float") ("f" "stats_dens_chisquare(" "stats_dens_chisquare(<#float $x#>,<#float $dfr#>)" "S" "float") ("f" "stats_dens_cauchy(" "stats_dens_cauchy(<#float $x#>,<#float $ave#>,<#float $stdev#>)" "S" "float") ("f" "stats_dens_beta(" "stats_dens_beta(<#float $x#>,<#float $a#>,<#float $b#>)" "S" "float") ("f" "stats_covariance(" "stats_covariance(<#array $a#>,<#array $b#>)" "S" "float") ("f" "stats_cdf_weibull(" "stats_cdf_weibull(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_uniform(" "stats_cdf_uniform(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_t(" "stats_cdf_t(<#float $par1#>,<#float $par2#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_poisson(" "stats_cdf_poisson(<#float $par1#>,<#float $par2#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_noncentral_f(" "stats_cdf_noncentral_f(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#float $par4#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_noncentral_chisquare(" "stats_cdf_noncentral_chisquare(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_negative_binomial(" "stats_cdf_negative_binomial(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_logistic(" "stats_cdf_logistic(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_laplace(" "stats_cdf_laplace(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_gamma(" "stats_cdf_gamma(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_f(" "stats_cdf_f(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_exponential(" "stats_cdf_exponential(<#float $par1#>,<#float $par2#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_chisquare(" "stats_cdf_chisquare(<#float $par1#>,<#float $par2#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_cauchy(" "stats_cdf_cauchy(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_binomial(" "stats_cdf_binomial(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_cdf_beta(" "stats_cdf_beta(<#float $par1#>,<#float $par2#>,<#float $par3#>,<#int $which#>)" "S" "float") ("f" "stats_absolute_deviation(" "stats_absolute_deviation(<#array $a#>)" "S" "float") ("f" "stat(" "stat(<#string $filename#>)" "S" "array") ("f" "ssh2_tunnel(" "ssh2_tunnel(<#resource $session#>,<#string $host#>,<#int $port#>)" "S" "resource") ("f" "ssh2_shell(" "ssh2_shell(<#resource $session#>,<#string $term_type#>,<#array $env#>,<#int $width#>,<#int $height#>,<#int $width_height_type#>)" "S" "resource") ("f" "ssh2_sftp_unlink(" "ssh2_sftp_unlink(<#resource $sftp#>,<#string $filename#>)" "S" "bool") ("f" "ssh2_sftp_symlink(" "ssh2_sftp_symlink(<#resource $sftp#>,<#string $target#>,<#string $link#>)" "S" "bool") ("f" "ssh2_sftp_stat(" "ssh2_sftp_stat(<#resource $sftp#>,<#string $path#>)" "S" "array") ("f" "ssh2_sftp_rmdir(" "ssh2_sftp_rmdir(<#resource $sftp#>,<#string $dirname#>)" "S" "bool") ("f" "ssh2_sftp(" "ssh2_sftp(<#resource $session#>)" "S" "resource") ("f" "ssh2_sftp_rename(" "ssh2_sftp_rename(<#resource $sftp#>,<#string $from#>,<#string $to#>)" "S" "bool") ("f" "ssh2_sftp_realpath(" "ssh2_sftp_realpath(<#resource $sftp#>,<#string $filename#>)" "S" "string") ("f" "ssh2_sftp_readlink(" "ssh2_sftp_readlink(<#resource $sftp#>,<#string $link#>)" "S" "string") ("f" "ssh2_sftp_mkdir(" "ssh2_sftp_mkdir(<#resource $sftp#>,<#string $dirname#>,<#int $mode#>,<#bool $recursive#>)" "S" "bool") ("f" "ssh2_sftp_lstat(" "ssh2_sftp_lstat(<#resource $sftp#>,<#string $path#>)" "S" "array") ("f" "ssh2_sftp_chmod(" "ssh2_sftp_chmod(<#resource $sftp#>,<#string $filename#>,<#int $mode#>)" "S" "bool") ("f" "ssh2_scp_send(" "ssh2_scp_send(<#resource $session#>,<#string $local_file#>,<#string $remote_file#>,<#int $create_mode#>)" "S" "bool") ("f" "ssh2_scp_recv(" "ssh2_scp_recv(<#resource $session#>,<#string $remote_file#>,<#string $local_file#>)" "S" "bool") ("f" "ssh2_publickey_remove(" "ssh2_publickey_remove(<#resource $pkey#>,<#string $algoname#>,<#string $blob#>)" "S" "bool") ("f" "ssh2_publickey_list(" "ssh2_publickey_list(<#resource $pkey#>)" "S" "array") ("f" "ssh2_publickey_init(" "ssh2_publickey_init(<#resource $session#>)" "S" "resource") ("f" "ssh2_publickey_add(" "ssh2_publickey_add(<#resource $pkey#>,<#string $algoname#>,<#string $blob#>,<#bool $overwrite#>,<#array $attributes#>)" "S" "bool") ("f" "ssh2_methods_negotiated(" "ssh2_methods_negotiated(<#resource $session#>)" "S" "array") ("f" "ssh2_fingerprint(" "ssh2_fingerprint(<#resource $session#>,<#int $flags#>)" "S" "string") ("f" "ssh2_fetch_stream(" "ssh2_fetch_stream(<#resource $channel#>,<#int $streamid#>)" "S" "resource") ("f" "ssh2_exec(" "ssh2_exec(<#resource $session#>,<#string $command#>,<#string $pty#>,<#array $env#>,<#int $width#>,<#int $height#>,<#int $width_height_type#>)" "S" "resource") ("f" "ssh2_connect(" "ssh2_connect(<#string $host#>,<#int $port#>,<#array $methods#>,<#array $callbacks#>)" "S" "resource") ("f" "ssh2_auth_pubkey_file(" "ssh2_auth_pubkey_file(<#resource $session#>,<#string $username#>,<#string $pubkeyfile#>,<#string $privkeyfile#>,<#string $passphrase#>)" "S" "bool") ("f" "ssh2_auth_password(" "ssh2_auth_password(<#resource $session#>,<#string $username#>,<#string $password#>)" "S" "bool") ("f" "ssh2_auth_none(" "ssh2_auth_none(<#resource $session#>,<#string $username#>)" "S" "mixed") ("f" "ssh2_auth_hostbased_file(" "ssh2_auth_hostbased_file(<#resource $session#>,<#string $username#>,<#string $hostname#>,<#string $pubkeyfile#>,<#string $privkeyfile#>,<#string $passphrase#>,<#string $local_username#>)" "S" "bool") ("f" "ssh2_auth_agent(" "ssh2_auth_agent(<#resource $session#>,<#string $username#>)" "S" "bool") ("f" "ssdeep_fuzzy_hash(" "ssdeep_fuzzy_hash(<#string $to_hash#>)" "S" "string") ("f" "ssdeep_fuzzy_hash_filename(" "ssdeep_fuzzy_hash_filename(<#string $file_name#>)" "S" "string") ("f" "ssdeep_fuzzy_compare(" "ssdeep_fuzzy_compare(<#string $signature1#>,<#string $signature2#>)" "S" "int") ("f" "sscanf(" "sscanf(<#string $str#>,<#string $format#>,<#mixed &$__args__#>)" "S" "mixed") ("f" "srand(" "srand(<#int $seed#>)" "S" "void") ("f" "sqrt(" "sqrt(<#float $arg#>)" "S" "float") ("f" "sqlsrv_server_info(" "sqlsrv_server_info(<#resource $conn#>)" "S" "array") ("f" "sqlsrv_send_stream_data(" "sqlsrv_send_stream_data(<#resource $stmt#>)" "S" "bool") ("f" "sqlsrv_rows_affected(" "sqlsrv_rows_affected(<#resource $stmt#>)" "S" "int") ("f" "sqlsrv_rollback(" "sqlsrv_rollback(<#resource $conn#>)" "S" "bool") ("f" "sqlsrv_query(" "sqlsrv_query(<#resource $conn#>,<#string $sql#>,<#array $params#>,<#array $options#>)" "S" "mixed") ("f" "sqlsrv_prepare(" "sqlsrv_prepare(<#resource $conn#>,<#string $sql#>,<#array $params#>,<#array $options#>)" "S" "mixed") ("f" "sqlsrv_num_rows(" "sqlsrv_num_rows(<#resource $stmt#>)" "S" "mixed") ("f" "sqlsrv_num_fields(" "sqlsrv_num_fields(<#resource $stmt#>)" "S" "mixed") ("f" "sqlsrv_next_result(" "sqlsrv_next_result(<#resource $stmt#>)" "S" "mixed") ("f" "sqlsrv_has_rows(" "sqlsrv_has_rows(<#resource $stmt#>)" "S" "bool") ("f" "sqlsrv_get_field(" "sqlsrv_get_field(<#resource $stmt#>,<#int $fieldIndex#>,<#int $getAsType#>)" "S" "mixed") ("f" "sqlsrv_get_config(" "sqlsrv_get_config(<#string $setting#>)" "S" "mixed") ("f" "sqlsrv_free_stmt(" "sqlsrv_free_stmt(<#resource $stmt#>)" "S" "bool") ("f" "sqlsrv_field_metadata(" "sqlsrv_field_metadata(<#resource $stmt#>)" "S" "mixed") ("f" "sqlsrv_fetch_object(" "sqlsrv_fetch_object(<#resource $stmt#>,<#string $className#>,<#array $ctorParams#>,<#int $row#>,<#int $offset#>)" "S" "mixed") ("f" "sqlsrv_fetch(" "sqlsrv_fetch(<#resource $stmt#>,<#int $row#>,<#int $offset#>)" "S" "mixed") ("f" "sqlsrv_fetch_array(" "sqlsrv_fetch_array(<#resource $stmt#>,<#int $fetchType#>,<#int $row#>,<#int $offset#>)" "S" "array") ("f" "sqlsrv_execute(" "sqlsrv_execute(<#resource $stmt#>)" "S" "bool") ("f" "sqlsrv_errors(" "sqlsrv_errors(<#int $errorsOrWarnings#>)" "S" "mixed") ("f" "sqlsrv_connect(" "sqlsrv_connect(<#string $serverName#>,<#array $connectionInfo#>)" "S" "resource") ("f" "sqlsrv_configure(" "sqlsrv_configure(<#string $setting#>,<#mixed $value#>)" "S" "bool") ("f" "sqlsrv_commit(" "sqlsrv_commit(<#resource $conn#>)" "S" "bool") ("f" "sqlsrv_close(" "sqlsrv_close(<#resource $conn#>)" "S" "bool") ("f" "sqlsrv_client_info(" "sqlsrv_client_info(<#resource $conn#>)" "S" "array") ("f" "sqlsrv_cancel(" "sqlsrv_cancel(<#resource $stmt#>)" "S" "bool") ("f" "sqlsrv_begin_transaction(" "sqlsrv_begin_transaction(<#resource $conn#>)" "S" "bool") ("f" "sql_regcase(" "sql_regcase(<#string $string#>)" "S" "string") ("f" "sqlite_valid(" "sqlite_valid(<#resource $result#>)" "S" "bool") ("f" "sqlite_unbuffered_query(" "sqlite_unbuffered_query(<#resource $dbhandle#>,<#string $query#>,<#int $result_type#>,<#string &$error_msg#>)" "S" "resource") ("f" "sqlite_udf_encode_binary(" "sqlite_udf_encode_binary(<#string $data#>)" "S" "string") ("f" "sqlite_udf_decode_binary(" "sqlite_udf_decode_binary(<#string $data#>)" "S" "string") ("f" "sqlite_single_query(" "sqlite_single_query(<#resource $db#>,<#string $query#>,<#bool $first_row_only#>,<#bool $decode_binary#>)" "S" "array") ("f" "sqlite_seek(" "sqlite_seek(<#resource $result#>,<#int $rownum#>)" "S" "bool") ("f" "sqlite_rewind(" "sqlite_rewind(<#resource $result#>)" "S" "bool") ("f" "sqlite_query(" "sqlite_query(<#resource $dbhandle#>,<#string $query#>,<#int $result_type#>,<#string &$error_msg#>)" "S" "resource") ("f" "sqlite_prev(" "sqlite_prev(<#resource $result#>)" "S" "bool") ("f" "sqlite_popen(" "sqlite_popen(<#string $filename#>,<#int $mode#>,<#string &$error_message#>)" "S" "resource") ("f" "sqlite_open(" "sqlite_open(<#string $filename#>,<#int $mode#>,<#string &$error_message#>)" "S" "resource") ("f" "sqlite_num_rows(" "sqlite_num_rows(<#resource $result#>)" "S" "int") ("f" "sqlite_num_fields(" "sqlite_num_fields(<#resource $result#>)" "S" "int") ("f" "sqlite_next(" "sqlite_next(<#resource $result#>)" "S" "bool") ("f" "sqlite_libversion(" "sqlite_libversion(<##>)" "S" "string") ("f" "sqlite_libencoding(" "sqlite_libencoding(<##>)" "S" "string") ("f" "sqlite_last_insert_rowid(" "sqlite_last_insert_rowid(<#resource $dbhandle#>)" "S" "int") ("f" "sqlite_last_error(" "sqlite_last_error(<#resource $dbhandle#>)" "S" "int") ("f" "sqlite_has_prev(" "sqlite_has_prev(<#resource $result#>)" "S" "bool") ("f" "sqlite_has_more(" "sqlite_has_more(<#resource $result#>)" "S" "bool") ("f" "sqlite_field_name(" "sqlite_field_name(<#resource $result#>,<#int $field_index#>)" "S" "string") ("f" "sqlite_fetch_single(" "sqlite_fetch_single(<#resource $result#>,<#bool $decode_binary#>)" "S" "string") ("f" "sqlite_fetch_object(" "sqlite_fetch_object(<#resource $result#>,<#string $class_name#>,<#array $ctor_params#>,<#bool $decode_binary#>)" "S" "object") ("f" "sqlite_fetch_column_types(" "sqlite_fetch_column_types(<#string $table_name#>,<#resource $dbhandle#>,<#int $result_type#>)" "S" "array") ("f" "sqlite_fetch_array(" "sqlite_fetch_array(<#resource $result#>,<#int $result_type#>,<#bool $decode_binary#>)" "S" "array") ("f" "sqlite_fetch_all(" "sqlite_fetch_all(<#resource $result#>,<#int $result_type#>,<#bool $decode_binary#>)" "S" "array") ("f" "sqlite_factory(" "sqlite_factory(<#string $filename#>,<#int $mode#>,<#string &$error_message#>)" "S" "SQLiteDatabase") ("f" "sqlite_exec(" "sqlite_exec(<#resource $dbhandle#>,<#string $query#>,<#string &$error_msg#>)" "S" "bool") ("f" "sqlite_escape_string(" "sqlite_escape_string(<#string $item#>)" "S" "string") ("f" "sqlite_error_string(" "sqlite_error_string(<#int $error_code#>)" "S" "string") ("f" "sqlite_current(" "sqlite_current(<#resource $result#>,<#int $result_type#>,<#bool $decode_binary#>)" "S" "array") ("f" "sqlite_create_function(" "sqlite_create_function(<#resource $dbhandle#>,<#string $function_name#>,<#callable $callback#>,<#int $num_args#>)" "S" "void") ("f" "sqlite_create_aggregate(" "sqlite_create_aggregate(<#resource $dbhandle#>,<#string $function_name#>,<#callable $step_func#>,<#callable $finalize_func#>,<#int $num_args#>)" "S" "void") ("f" "sqlite_column(" "sqlite_column(<#resource $result#>,<#mixed $index_or_name#>,<#bool $decode_binary#>)" "S" "mixed") ("f" "sqlite_close(" "sqlite_close(<#resource $dbhandle#>)" "S" "void") ("f" "sqlite_changes(" "sqlite_changes(<#resource $dbhandle#>)" "S" "int") ("f" "sqlite_busy_timeout(" "sqlite_busy_timeout(<#resource $dbhandle#>,<#int $milliseconds#>)" "S" "void") ("f" "sqlite_array_query(" "sqlite_array_query(<#resource $dbhandle#>,<#string $query#>,<#int $result_type#>,<#bool $decode_binary#>)" "S" "array") ("f" "sprintf(" "sprintf(<#string $format#>,<#mixed $args#>,<#mixed $__args__#>)" "S" "string") ("f" "spl_object_hash(" "spl_object_hash(<#object $obj#>)" "S" "string") ("f" "spliti(" "spliti(<#string $pattern#>,<#string $string#>,<#int $limit#>)" "S" "array") ("f" "split(" "split(<#string $pattern#>,<#string $string#>,<#int $limit#>)" "S" "array") ("f" "spl_classes(" "spl_classes(<##>)" "S" "array") ("f" "spl_autoload(" "spl_autoload(<#string $class_name#>,<#string $file_extensions#>)" "S" "void") ("f" "spl_autoload_unregister(" "spl_autoload_unregister(<#mixed $autoload_function#>)" "S" "bool") ("f" "spl_autoload_register(" "spl_autoload_register(<#callback $autoload_function#>)" "S" "bool") ("f" "spl_autoload_functions(" "spl_autoload_functions(<##>)" "S" "array") ("f" "spl_autoload_extensions(" "spl_autoload_extensions(<#string $file_extensions#>)" "S" "string") ("f" "spl_autoload_call(" "spl_autoload_call(<#string $class_name#>)" "S" "void") ("f" "soundex(" "soundex(<#string $str#>)" "S" "string") ("f" "sort(" "sort(<#array &$array#>,<#int $sort_flags#>)" "S" "bool") ("f" "solr_get_version(" "solr_get_version(<##>)" "S" "string") ("f" "socket_write(" "socket_write(<#resource $socket#>,<#string $buffer#>,<#int $length#>)" "S" "int") ("f" "socket_strerror(" "socket_strerror(<#int $errno#>)" "S" "string") ("f" "socket_shutdown(" "socket_shutdown(<#resource $socket#>,<#int $how#>)" "S" "bool") ("f" "socket_set_option(" "socket_set_option(<#resource $socket#>,<#int $level#>,<#int $optname#>,<#mixed $optval#>)" "S" "bool") ("f" "socket_set_nonblock(" "socket_set_nonblock(<#resource $socket#>)" "S" "bool") ("f" "socket_set_block(" "socket_set_block(<#resource $socket#>)" "S" "bool") ("f" "socket_sendto(" "socket_sendto(<#resource $socket#>,<#string $buf#>,<#int $len#>,<#int $flags#>,<#string $addr#>,<#int $port#>)" "S" "int") ("f" "socket_sendmsg(" "socket_sendmsg(<#resource $socket#>,<#array $message#>,<#int $flags#>)" "S" "int") ("f" "socket_send(" "socket_send(<#resource $socket#>,<#string $buf#>,<#int $len#>,<#int $flags#>)" "S" "int") ("f" "socket_select(" "socket_select(<#array &$read#>,<#array &$write#>,<#array &$except#>,<#int $tv_sec#>,<#int $tv_usec#>)" "S" "int") ("f" "socket_recvmsg(" "socket_recvmsg(<#resource $socket#>,<#string $message#>,<#int $flags#>)" "S" "int") ("f" "socket_recv(" "socket_recv(<#resource $socket#>,<#string &$buf#>,<#int $len#>,<#int $flags#>)" "S" "int") ("f" "socket_recvfrom(" "socket_recvfrom(<#resource $socket#>,<#string &$buf#>,<#int $len#>,<#int $flags#>,<#string &$name#>,<#int &$port#>)" "S" "int") ("f" "socket_read(" "socket_read(<#resource $socket#>,<#int $length#>,<#int $type#>)" "S" "string") ("f" "socket_listen(" "socket_listen(<#resource $socket#>,<#int $backlog#>)" "S" "bool") ("f" "socket_last_error(" "socket_last_error(<#resource $socket#>)" "S" "int") ("f" "socket_import_stream(" "socket_import_stream(<#resource $stream#>)" "S" "resource") ("f" "socket_getsockname(" "socket_getsockname(<#resource $socket#>,<#string &$addr#>,<#int &$port#>)" "S" "bool") ("f" "socket_getpeername(" "socket_getpeername(<#resource $socket#>,<#string &$address#>,<#int &$port#>)" "S" "bool") ("f" "socket_get_option(" "socket_get_option(<#resource $socket#>,<#int $level#>,<#int $optname#>)" "S" "mixed") ("f" "socket_create(" "socket_create(<#int $domain#>,<#int $type#>,<#int $protocol#>)" "S" "resource") ("f" "socket_create_pair(" "socket_create_pair(<#int $domain#>,<#int $type#>,<#int $protocol#>,<#array &$fd#>)" "S" "bool") ("f" "socket_create_listen(" "socket_create_listen(<#int $port#>,<#int $backlog#>)" "S" "resource") ("f" "socket_connect(" "socket_connect(<#resource $socket#>,<#string $address#>,<#int $port#>)" "S" "bool") ("f" "socket_cmsg_space(" "socket_cmsg_space(<#int $level#>,<#int $type#>)" "S" "int") ("f" "socket_close(" "socket_close(<#resource $socket#>)" "S" "void") ("f" "socket_clear_error(" "socket_clear_error(<#resource $socket#>)" "S" "void") ("f" "socket_bind(" "socket_bind(<#resource $socket#>,<#string $address#>,<#int $port#>)" "S" "bool") ("f" "socket_accept(" "socket_accept(<#resource $socket#>)" "S" "resource") ("f" "snmpwalkoid(" "snmpwalkoid(<#string $hostname#>,<#string $community#>,<#string $object_id#>,<#int $timeout#>,<#int $retries#>)" "S" "array") ("f" "snmpwalk(" "snmpwalk(<#string $hostname#>,<#string $community#>,<#string $object_id#>,<#int $timeout#>,<#int $retries#>)" "S" "array") ("f" "snmp_set_valueretrieval(" "snmp_set_valueretrieval(<#int $method#>)" "S" "bool") ("f" "snmp_set_quick_print(" "snmp_set_quick_print(<#bool $quick_print#>)" "S" "void") ("f" "snmp_set_oid_output_format(" "snmp_set_oid_output_format(<#int $oid_format#>)" "S" "bool") ("f" "snmp_set_oid_numeric_print(" "snmp_set_oid_numeric_print(<#int $oid_format#>)" "S" "void") ("f" "snmp_set_enum_print(" "snmp_set_enum_print(<#int $enum_print#>)" "S" "bool") ("f" "snmpset(" "snmpset(<#string $hostname#>,<#string $community#>,<#string $object_id#>,<#string $type#>,<#mixed $value#>,<#int $timeout#>,<#int $retries#>)" "S" "bool") ("f" "snmprealwalk(" "snmprealwalk(<#string $host#>,<#string $community#>,<#string $object_id#>,<#int $timeout#>,<#int $retries#>)" "S" "array") ("f" "snmp_read_mib(" "snmp_read_mib(<#string $filename#>)" "S" "bool") ("f" "snmp_get_valueretrieval(" "snmp_get_valueretrieval(<##>)" "S" "int") ("f" "snmpget(" "snmpget(<#string $hostname#>,<#string $community#>,<#string $object_id#>,<#int $timeout#>,<#int $retries#>)" "S" "string") ("f" "snmp_get_quick_print(" "snmp_get_quick_print(<##>)" "S" "bool") ("f" "snmpgetnext(" "snmpgetnext(<#string $host#>,<#string $community#>,<#string $object_id#>,<#int $timeout#>,<#int $retries#>)" "S" "string") ("f" "snmp3_walk(" "snmp3_walk(<#string $host#>,<#string $sec_name#>,<#string $sec_level#>,<#string $auth_protocol#>,<#string $auth_passphrase#>,<#string $priv_protocol#>,<#string $priv_passphrase#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "array") ("f" "snmp3_set(" "snmp3_set(<#string $host#>,<#string $sec_name#>,<#string $sec_level#>,<#string $auth_protocol#>,<#string $auth_passphrase#>,<#string $priv_protocol#>,<#string $priv_passphrase#>,<#string $object_id#>,<#string $type#>,<#string $value#>,<#int $timeout#>,<#int $retries#>)" "S" "bool") ("f" "snmp3_real_walk(" "snmp3_real_walk(<#string $host#>,<#string $sec_name#>,<#string $sec_level#>,<#string $auth_protocol#>,<#string $auth_passphrase#>,<#string $priv_protocol#>,<#string $priv_passphrase#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "array") ("f" "snmp3_get(" "snmp3_get(<#string $host#>,<#string $sec_name#>,<#string $sec_level#>,<#string $auth_protocol#>,<#string $auth_passphrase#>,<#string $priv_protocol#>,<#string $priv_passphrase#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "string") ("f" "snmp3_getnext(" "snmp3_getnext(<#string $host#>,<#string $sec_name#>,<#string $sec_level#>,<#string $auth_protocol#>,<#string $auth_passphrase#>,<#string $priv_protocol#>,<#string $priv_passphrase#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "string") ("f" "snmp2_walk(" "snmp2_walk(<#string $host#>,<#string $community#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "array") ("f" "snmp2_set(" "snmp2_set(<#string $host#>,<#string $community#>,<#string $object_id#>,<#string $type#>,<#string $value#>,<#string $timeout#>,<#string $retries#>)" "S" "bool") ("f" "snmp2_real_walk(" "snmp2_real_walk(<#string $host#>,<#string $community#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "array") ("f" "snmp2_get(" "snmp2_get(<#string $host#>,<#string $community#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "string") ("f" "snmp2_getnext(" "snmp2_getnext(<#string $host#>,<#string $community#>,<#string $object_id#>,<#string $timeout#>,<#string $retries#>)" "S" "string") ("f" "sleep(" "sleep(<#int $seconds#>)" "S" "int") ("f" "sinh(" "sinh(<#float $arg#>)" "S" "float") ("f" "sin(" "sin(<#float $arg#>)" "S" "float") ("f" "simplexml_load_string(" "simplexml_load_string(<#string $data#>,<#string $class_name#>,<#int $options#>,<#string $ns#>,<#bool $is_prefix#>)" "S" "SimpleXMLElement") ("f" "simplexml_load_file(" "simplexml_load_file(<#string $filename#>,<#string $class_name#>,<#int $options#>,<#string $ns#>,<#bool $is_prefix#>)" "S" "SimpleXMLElement") ("f" "simplexml_import_dom(" "simplexml_import_dom(<#DOMNode $node#>,<#string $class_name#>)" "S" "SimpleXMLElement") ("f" "similar_text(" "similar_text(<#string $first#>,<#string $second#>,<#float &$percent#>)" "S" "int") ("f" "shuffle(" "shuffle(<#array &$array#>)" "S" "bool") ("f" "shm_remove_var(" "shm_remove_var(<#resource $shm_identifier#>,<#int $variable_key#>)" "S" "bool") ("f" "shm_remove(" "shm_remove(<#resource $shm_identifier#>)" "S" "bool") ("f" "shm_put_var(" "shm_put_var(<#resource $shm_identifier#>,<#int $variable_key#>,<#mixed $variable#>)" "S" "bool") ("f" "shmop_write(" "shmop_write(<#int $shmid#>,<#string $data#>,<#int $offset#>)" "S" "int") ("f" "shmop_size(" "shmop_size(<#int $shmid#>)" "S" "int") ("f" "shmop_read(" "shmop_read(<#int $shmid#>,<#int $start#>,<#int $count#>)" "S" "string") ("f" "shmop_open(" "shmop_open(<#int $key#>,<#string $flags#>,<#int $mode#>,<#int $size#>)" "S" "int") ("f" "shmop_delete(" "shmop_delete(<#int $shmid#>)" "S" "bool") ("f" "shmop_close(" "shmop_close(<#int $shmid#>)" "S" "void") ("f" "shm_has_var(" "shm_has_var(<#resource $shm_identifier#>,<#int $variable_key#>)" "S" "bool") ("f" "shm_get_var(" "shm_get_var(<#resource $shm_identifier#>,<#int $variable_key#>)" "S" "mixed") ("f" "shm_detach(" "shm_detach(<#resource $shm_identifier#>)" "S" "bool") ("f" "shm_attach(" "shm_attach(<#int $key#>,<#int $memsize#>,<#int $perm#>)" "S" "resource") ("f" "shell_exec(" "shell_exec(<#string $cmd#>)" "S" "string") ("f" "sha1(" "sha1(<#string $str#>,<#bool $raw_output#>)" "S" "string") ("f" "sha1_file(" "sha1_file(<#string $filename#>,<#bool $raw_output#>)" "S" "string") ("f" "settype(" "settype(<#mixed &$var#>,<#string $type#>)" "S" "bool") ("f" "set_time_limit(" "set_time_limit(<#int $seconds#>)" "S" "void") ("f" "setthreadtitle(" "setthreadtitle(<#string $title#>)" "S" "bool") ("f" "setrawcookie(" "setrawcookie(<#string $name#>,<#string $value#>,<#int $expire#>,<#string $path#>,<#string $domain#>,<#bool $secure#>,<#bool $httponly#>)" "S" "bool") ("f" "setproctitle(" "setproctitle(<#string $title#>)" "S" "void") ("f" "set_magic_quotes_runtime(" "set_magic_quotes_runtime(<#bool $new_setting#>)" "S" "bool") ("f" "setlocale(" "setlocale(<#int $category#>,<#string $locale#>,<#string $__args__#>)" "S" "string") ("f" "set_include_path(" "set_include_path(<#string $new_include_path#>)" "S" "string") ("f" "set_exception_handler(" "set_exception_handler(<#callable $exception_handler#>)" "S" "callable") ("f" "set_error_handler(" "set_error_handler(<#callable $error_handler#>,<#int $error_types#>)" "S" "mixed") ("f" "setcookie(" "setcookie(<#string $name#>,<#string $value#>,<#int $expire#>,<#string $path#>,<#string $domain#>,<#bool $secure#>,<#bool $httponly#>)" "S" "bool") ("f" "session_write_close(" "session_write_close(<##>)" "S" "void") ("f" "session_unset(" "session_unset(<##>)" "S" "void") ("f" "session_unregister(" "session_unregister(<#string $name#>)" "S" "bool") ("f" "session_status(" "session_status(<##>)" "S" "int") ("f" "session_start(" "session_start(<##>)" "S" "bool") ("f" "session_set_save_handler(" "session_set_save_handler(<#callable $open#>,<#callable $close#>,<#callable $read#>,<#callable $write#>,<#callable $destroy#>,<#callable $gc#>,<#callable $create_sid#>)" "S" "bool") ("f" "session_set_cookie_params(" "session_set_cookie_params(<#int $lifetime#>,<#string $path#>,<#string $domain#>,<#bool $secure#>,<#bool $httponly#>)" "S" "void") ("f" "session_save_path(" "session_save_path(<#string $path#>)" "S" "string") ("f" "session_reset(" "session_reset(<##>)" "S" "bool") ("f" "session_register_shutdown(" "session_register_shutdown(<##>)" "S" "void") ("f" "session_register(" "session_register(<#mixed $name#>,<#mixed $__args__#>)" "S" "bool") ("f" "session_regenerate_id(" "session_regenerate_id(<#bool $delete_old_session#>)" "S" "bool") ("f" "session_pgsql_status(" "session_pgsql_status(<##>)" "S" "array") ("f" "session_pgsql_set_field(" "session_pgsql_set_field(<#string $value#>)" "S" "bool") ("f" "session_pgsql_reset(" "session_pgsql_reset(<##>)" "S" "bool") ("f" "session_pgsql_get_field(" "session_pgsql_get_field(<##>)" "S" "string") ("f" "session_pgsql_get_error(" "session_pgsql_get_error(<#bool $with_error_message#>)" "S" "array") ("f" "session_pgsql_add_error(" "session_pgsql_add_error(<#int $error_level#>,<#string $error_message#>)" "S" "bool") ("f" "session_name(" "session_name(<#string $name#>)" "S" "string") ("f" "session_module_name(" "session_module_name(<#string $module#>)" "S" "string") ("f" "session_is_registered(" "session_is_registered(<#string $name#>)" "S" "bool") ("f" "session_id(" "session_id(<#string $id#>)" "S" "string") ("f" "session_get_cookie_params(" "session_get_cookie_params(<##>)" "S" "array") ("f" "session_encode(" "session_encode(<##>)" "S" "string") ("f" "session_destroy(" "session_destroy(<##>)" "S" "bool") ("f" "session_decode(" "session_decode(<#string $data#>)" "S" "bool") ("f" "session_cache_limiter(" "session_cache_limiter(<#string $cache_limiter#>)" "S" "string") ("f" "session_cache_expire(" "session_cache_expire(<#string $new_cache_expire#>)" "S" "int") ("f" "session_abort(" "session_abort(<##>)" "S" "bool") ("f" "serialize(" "serialize(<#mixed $value#>)" "S" "string") ("f" "sem_remove(" "sem_remove(<#resource $sem_identifier#>)" "S" "bool") ("f" "sem_release(" "sem_release(<#resource $sem_identifier#>)" "S" "bool") ("f" "sem_get(" "sem_get(<#int $key#>,<#int $max_acquire#>,<#int $perm#>,<#int $auto_release#>)" "S" "resource") ("f" "sem_acquire(" "sem_acquire(<#resource $sem_identifier#>)" "S" "bool") ("f" "scandir(" "scandir(<#string $directory#>,<#int $sorting_order#>,<#resource $context#>)" "S" "array") ("f" "runkit_superglobals(" "runkit_superglobals(<##>)" "S" "array") ("f" "runkit_sandbox_output_handler(" "runkit_sandbox_output_handler(<#object $sandbox#>,<#mixed $callback#>)" "S" "mixed") ("f" "runkit_return_value_used(" "runkit_return_value_used(<##>)" "S" "bool") ("f" "runkit_method_rename(" "runkit_method_rename(<#string $classname#>,<#string $methodname#>,<#string $newname#>)" "S" "bool") ("f" "runkit_method_remove(" "runkit_method_remove(<#string $classname#>,<#string $methodname#>)" "S" "bool") ("f" "runkit_method_redefine(" "runkit_method_redefine(<#string $classname#>,<#string $methodname#>,<#string $args#>,<#string $code#>,<#int $flags#>)" "S" "bool") ("f" "runkit_method_copy(" "runkit_method_copy(<#string $dClass#>,<#string $dMethod#>,<#string $sClass#>,<#string $sMethod#>)" "S" "bool") ("f" "runkit_method_add(" "runkit_method_add(<#string $classname#>,<#string $methodname#>,<#string $args#>,<#string $code#>,<#int $flags#>)" "S" "bool") ("f" "runkit_lint_file(" "runkit_lint_file(<#string $filename#>)" "S" "bool") ("f" "runkit_lint(" "runkit_lint(<#string $code#>)" "S" "bool") ("f" "runkit_import(" "runkit_import(<#string $filename#>,<#int $flags#>)" "S" "bool") ("f" "runkit_function_rename(" "runkit_function_rename(<#string $funcname#>,<#string $newname#>)" "S" "bool") ("f" "runkit_function_remove(" "runkit_function_remove(<#string $funcname#>)" "S" "bool") ("f" "runkit_function_redefine(" "runkit_function_redefine(<#string $funcname#>,<#string $arglist#>,<#string $code#>)" "S" "bool") ("f" "runkit_function_copy(" "runkit_function_copy(<#string $funcname#>,<#string $targetname#>)" "S" "bool") ("f" "runkit_function_add(" "runkit_function_add(<#string $funcname#>,<#string $arglist#>,<#string $code#>)" "S" "bool") ("f" "runkit_constant_remove(" "runkit_constant_remove(<#string $constname#>)" "S" "bool") ("f" "runkit_constant_redefine(" "runkit_constant_redefine(<#string $constname#>,<#mixed $newvalue#>)" "S" "bool") ("f" "runkit_constant_add(" "runkit_constant_add(<#string $constname#>,<#mixed $value#>)" "S" "bool") ("f" "runkit_class_emancipate(" "runkit_class_emancipate(<#string $classname#>)" "S" "bool") ("f" "runkit_class_adopt(" "runkit_class_adopt(<#string $classname#>,<#string $parentname#>)" "S" "bool") ("f" "rtrim(" "rtrim(<#string $str#>,<#string $charlist#>)" "S" "string") ("f" "rsort(" "rsort(<#array &$array#>,<#int $sort_flags#>)" "S" "bool") ("f" "rrd_xport(" "rrd_xport(<#array $options#>)" "S" "array") ("f" "rrd_version(" "rrd_version(<##>)" "S" "string") ("f" "rrd_update(" "rrd_update(<#string $filename#>,<#array $options#>)" "S" "bool") ("f" "rrd_tune(" "rrd_tune(<#string $filename#>,<#array $options#>)" "S" "bool") ("f" "rrd_restore(" "rrd_restore(<#string $xml_file#>,<#string $rrd_file#>,<#array $options#>)" "S" "bool") ("f" "rrd_lastupdate(" "rrd_lastupdate(<#string $filename#>)" "S" "array") ("f" "rrd_last(" "rrd_last(<#string $filename#>)" "S" "int") ("f" "rrd_info(" "rrd_info(<#string $filename#>)" "S" "array") ("f" "rrd_graph(" "rrd_graph(<#string $filename#>,<#array $options#>)" "S" "array") ("f" "rrd_first(" "rrd_first(<#string $file#>,<#int $raaindex#>)" "S" "int") ("f" "rrd_fetch(" "rrd_fetch(<#string $filename#>,<#array $options#>)" "S" "array") ("f" "rrd_error(" "rrd_error(<##>)" "S" "string") ("f" "rrd_create(" "rrd_create(<#string $filename#>,<#array $options#>)" "S" "bool") ("f" "rrdc_disconnect(" "rrdc_disconnect(<##>)" "S" "void") ("f" "rpm_version(" "rpm_version(<##>)" "S" "string") ("f" "rpm_open(" "rpm_open(<#string $filename#>)" "S" "resource") ("f" "rpm_is_valid(" "rpm_is_valid(<#string $filename#>)" "S" "bool") ("f" "rpm_get_tag(" "rpm_get_tag(<#resource $rpmr#>,<#int $tagnum#>)" "S" "mixed") ("f" "rpm_close(" "rpm_close(<#resource $rpmr#>)" "S" "bool") ("f" "round(" "round(<#float $val#>,<#int $precision#>,<#int $mode#>)" "S" "float") ("f" "rmdir(" "rmdir(<#string $dirname#>,<#resource $context#>)" "S" "bool") ("f" "rewinddir(" "rewinddir(<#resource $dir_handle#>)" "S" "void") ("f" "rewind(" "rewind(<#resource $handle#>)" "S" "bool") ("f" "restore_include_path(" "restore_include_path(<##>)" "S" "void") ("f" "restore_exception_handler(" "restore_exception_handler(<##>)" "S" "bool") ("f" "restore_error_handler(" "restore_error_handler(<##>)" "S" "bool") ("f" "reset(" "reset(<#array &$array#>)" "S" "mixed") ("f" "rename_function(" "rename_function(<#string $original_name#>,<#string $new_name#>)" "S" "bool") ("f" "rename(" "rename(<#string $oldname#>,<#string $newname#>,<#resource $context#>)" "S" "bool") ("f" "register_tick_function(" "register_tick_function(<#callable $function#>,<#mixed $arg#>,<#mixed $__args__#>)" "S" "bool") ("f" "register_shutdown_function(" "register_shutdown_function(<#callable $callback#>,<#mixed $parameter#>,<#mixed $__args__#>)" "S" "void") ("f" "recode_string(" "recode_string(<#string $request#>,<#string $string#>)" "S" "string") ("f" "recode_file(" "recode_file(<#string $request#>,<#resource $input#>,<#resource $output#>)" "S" "bool") ("f" "realpath(" "realpath(<#string $path#>)" "S" "string") ("f" "realpath_cache_size(" "realpath_cache_size(<##>)" "S" "int") ("f" "realpath_cache_get(" "realpath_cache_get(<##>)" "S" "array") ("f" "readlink(" "readlink(<#string $path#>)" "S" "string") ("f" "readline_write_history(" "readline_write_history(<#string $filename#>)" "S" "bool") ("f" "readline(" "readline(<#string $prompt#>)" "S" "string") ("f" "readline_redisplay(" "readline_redisplay(<##>)" "S" "void") ("f" "readline_read_history(" "readline_read_history(<#string $filename#>)" "S" "bool") ("f" "readline_on_new_line(" "readline_on_new_line(<##>)" "S" "void") ("f" "readline_list_history(" "readline_list_history(<##>)" "S" "array") ("f" "readline_info(" "readline_info(<#string $varname#>,<#string $newvalue#>)" "S" "mixed") ("f" "readline_completion_function(" "readline_completion_function(<#callable $function#>)" "S" "bool") ("f" "readline_clear_history(" "readline_clear_history(<##>)" "S" "bool") ("f" "readline_callback_read_char(" "readline_callback_read_char(<##>)" "S" "void") ("f" "readline_callback_handler_remove(" "readline_callback_handler_remove(<##>)" "S" "bool") ("f" "readline_callback_handler_install(" "readline_callback_handler_install(<#string $prompt#>,<#callable $callback#>)" "S" "bool") ("f" "readline_add_history(" "readline_add_history(<#string $line#>)" "S" "bool") ("f" "readgzfile(" "readgzfile(<#string $filename#>,<#int $use_include_path#>)" "S" "int") ("f" "readfile(" "readfile(<#string $filename#>,<#bool $use_include_path#>,<#resource $context#>)" "S" "int") ("f" "readdir(" "readdir(<#resource $dir_handle#>)" "S" "string") ("f" "rawurlencode(" "rawurlencode(<#string $str#>)" "S" "string") ("f" "rawurldecode(" "rawurldecode(<#string $str#>)" "S" "string") ("f" "rar_wrapper_cache_stats(" "rar_wrapper_cache_stats(<##>)" "S" "string") ("f" "range(" "range(<#mixed $start#>,<#mixed $limit#>,<#number $step#>)" "S" "array") ("f" "rand(" "rand(<##>)" "S" "int") ("f" "radius_strerror(" "radius_strerror(<#resource $radius_handle#>)" "S" "string") ("f" "radius_server_secret(" "radius_server_secret(<#resource $radius_handle#>)" "S" "string") ("f" "radius_send_request(" "radius_send_request(<#resource $radius_handle#>)" "S" "int") ("f" "radius_salt_encrypt_attr(" "radius_salt_encrypt_attr(<#resource $radius_handle#>,<#string $data#>)" "S" "string") ("f" "radius_request_authenticator(" "radius_request_authenticator(<#resource $radius_handle#>)" "S" "string") ("f" "radius_put_vendor_string(" "radius_put_vendor_string(<#resource $radius_handle#>,<#int $vendor#>,<#int $type#>,<#string $value#>,<#int $options#>,<#int $tag#>)" "S" "bool") ("f" "radius_put_vendor_int(" "radius_put_vendor_int(<#resource $radius_handle#>,<#int $vendor#>,<#int $type#>,<#int $value#>,<#int $options#>,<#int $tag#>)" "S" "bool") ("f" "radius_put_vendor_attr(" "radius_put_vendor_attr(<#resource $radius_handle#>,<#int $vendor#>,<#int $type#>,<#string $value#>,<#int $options#>,<#int $tag#>)" "S" "bool") ("f" "radius_put_vendor_addr(" "radius_put_vendor_addr(<#resource $radius_handle#>,<#int $vendor#>,<#int $type#>,<#string $addr#>)" "S" "bool") ("f" "radius_put_string(" "radius_put_string(<#resource $radius_handle#>,<#int $type#>,<#string $value#>,<#int $options#>,<#int $tag#>)" "S" "bool") ("f" "radius_put_int(" "radius_put_int(<#resource $radius_handle#>,<#int $type#>,<#int $value#>,<#int $options#>,<#int $tag#>)" "S" "bool") ("f" "radius_put_attr(" "radius_put_attr(<#resource $radius_handle#>,<#int $type#>,<#string $value#>,<#int $options#>,<#int $tag#>)" "S" "bool") ("f" "radius_put_addr(" "radius_put_addr(<#resource $radius_handle#>,<#int $type#>,<#string $addr#>,<#int $options#>,<#int $tag#>)" "S" "bool") ("f" "radius_get_vendor_attr(" "radius_get_vendor_attr(<#string $data#>)" "S" "array") ("f" "radius_get_tagged_attr_tag(" "radius_get_tagged_attr_tag(<#string $data#>)" "S" "integer") ("f" "radius_get_tagged_attr_data(" "radius_get_tagged_attr_data(<#string $data#>)" "S" "string") ("f" "radius_get_attr(" "radius_get_attr(<#resource $radius_handle#>)" "S" "mixed") ("f" "radius_demangle(" "radius_demangle(<#resource $radius_handle#>,<#string $mangled#>)" "S" "string") ("f" "radius_demangle_mppe_key(" "radius_demangle_mppe_key(<#resource $radius_handle#>,<#string $mangled#>)" "S" "string") ("f" "radius_cvt_string(" "radius_cvt_string(<#string $data#>)" "S" "string") ("f" "radius_cvt_int(" "radius_cvt_int(<#string $data#>)" "S" "int") ("f" "radius_cvt_addr(" "radius_cvt_addr(<#string $data#>)" "S" "string") ("f" "radius_create_request(" "radius_create_request(<#resource $radius_handle#>,<#int $type#>)" "S" "bool") ("f" "radius_config(" "radius_config(<#resource $radius_handle#>,<#string $file#>)" "S" "bool") ("f" "radius_close(" "radius_close(<#resource $radius_handle#>)" "S" "bool") ("f" "radius_auth_open(" "radius_auth_open(<##>)" "S" "resource") ("f" "radius_add_server(" "radius_add_server(<#resource $radius_handle#>,<#string $hostname#>,<#int $port#>,<#string $secret#>,<#int $timeout#>,<#int $max_tries#>)" "S" "bool") ("f" "radius_acct_open(" "radius_acct_open(<##>)" "S" "resource") ("f" "rad2deg(" "rad2deg(<#float $number#>)" "S" "float") ("f" "quotemeta(" "quotemeta(<#string $str#>)" "S" "string") ("f" "quoted_printable_encode(" "quoted_printable_encode(<#string $str#>)" "S" "string") ("f" "quoted_printable_decode(" "quoted_printable_decode(<#string $str#>)" "S" "string") ("f" "px_update_record(" "px_update_record(<#resource $pxdoc#>,<#array $data#>,<#int $num#>)" "S" "bool") ("f" "px_timestamp2string(" "px_timestamp2string(<#resource $pxdoc#>,<#float $value#>,<#string $format#>)" "S" "string") ("f" "px_set_value(" "px_set_value(<#resource $pxdoc#>,<#string $name#>,<#float $value#>)" "S" "bool") ("f" "px_set_targetencoding(" "px_set_targetencoding(<#resource $pxdoc#>,<#string $encoding#>)" "S" "bool") ("f" "px_set_tablename(" "px_set_tablename(<#resource $pxdoc#>,<#string $name#>)" "S" "void") ("f" "px_set_parameter(" "px_set_parameter(<#resource $pxdoc#>,<#string $name#>,<#string $value#>)" "S" "bool") ("f" "px_set_blob_file(" "px_set_blob_file(<#resource $pxdoc#>,<#string $filename#>)" "S" "bool") ("f" "px_retrieve_record(" "px_retrieve_record(<#resource $pxdoc#>,<#int $num#>,<#int $mode#>)" "S" "array") ("f" "px_put_record(" "px_put_record(<#resource $pxdoc#>,<#array $record#>,<#int $recpos#>)" "S" "bool") ("f" "px_open_fp(" "px_open_fp(<#resource $pxdoc#>,<#resource $file#>)" "S" "bool") ("f" "px_numrecords(" "px_numrecords(<#resource $pxdoc#>)" "S" "int") ("f" "px_numfields(" "px_numfields(<#resource $pxdoc#>)" "S" "int") ("f" "px_new(" "px_new(<##>)" "S" "resource") ("f" "px_insert_record(" "px_insert_record(<#resource $pxdoc#>,<#array $data#>)" "S" "int") ("f" "px_get_value(" "px_get_value(<#resource $pxdoc#>,<#string $name#>)" "S" "float") ("f" "px_get_schema(" "px_get_schema(<#resource $pxdoc#>,<#int $mode#>)" "S" "array") ("f" "px_get_record(" "px_get_record(<#resource $pxdoc#>,<#int $num#>,<#int $mode#>)" "S" "array") ("f" "px_get_parameter(" "px_get_parameter(<#resource $pxdoc#>,<#string $name#>)" "S" "string") ("f" "px_get_info(" "px_get_info(<#resource $pxdoc#>)" "S" "array") ("f" "px_get_field(" "px_get_field(<#resource $pxdoc#>,<#int $fieldno#>)" "S" "array") ("f" "px_delete_record(" "px_delete_record(<#resource $pxdoc#>,<#int $num#>)" "S" "bool") ("f" "px_delete(" "px_delete(<#resource $pxdoc#>)" "S" "bool") ("f" "px_date2string(" "px_date2string(<#resource $pxdoc#>,<#int $value#>,<#string $format#>)" "S" "string") ("f" "px_create_fp(" "px_create_fp(<#resource $pxdoc#>,<#resource $file#>,<#array $fielddesc#>)" "S" "bool") ("f" "px_close(" "px_close(<#resource $pxdoc#>)" "S" "bool") ("f" "putenv(" "putenv(<#string $setting#>)" "S" "bool") ("f" "ps_translate(" "ps_translate(<#resource $psdoc#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "ps_symbol_width(" "ps_symbol_width(<#resource $psdoc#>,<#int $ord#>,<#int $fontid#>,<#float $size#>)" "S" "float") ("f" "ps_symbol_name(" "ps_symbol_name(<#resource $psdoc#>,<#int $ord#>,<#int $fontid#>)" "S" "string") ("f" "ps_symbol(" "ps_symbol(<#resource $psdoc#>,<#int $ord#>)" "S" "bool") ("f" "ps_stroke(" "ps_stroke(<#resource $psdoc#>)" "S" "bool") ("f" "ps_stringwidth(" "ps_stringwidth(<#resource $psdoc#>,<#string $text#>,<#int $fontid#>,<#float $size#>)" "S" "float") ("f" "ps_string_geometry(" "ps_string_geometry(<#resource $psdoc#>,<#string $text#>,<#int $fontid#>,<#float $size#>)" "S" "array") ("f" "ps_show_xy(" "ps_show_xy(<#resource $psdoc#>,<#string $text#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "ps_show_xy2(" "ps_show_xy2(<#resource $psdoc#>,<#string $text#>,<#int $len#>,<#float $xcoor#>,<#float $ycoor#>)" "S" "bool") ("f" "ps_show_boxed(" "ps_show_boxed(<#resource $psdoc#>,<#string $text#>,<#float $left#>,<#float $bottom#>,<#float $width#>,<#float $height#>,<#string $hmode#>,<#string $feature#>)" "S" "int") ("f" "ps_show(" "ps_show(<#resource $psdoc#>,<#string $text#>)" "S" "bool") ("f" "ps_show2(" "ps_show2(<#resource $psdoc#>,<#string $text#>,<#int $len#>)" "S" "bool") ("f" "ps_shfill(" "ps_shfill(<#resource $psdoc#>,<#int $shadingid#>)" "S" "bool") ("f" "ps_shading_pattern(" "ps_shading_pattern(<#resource $psdoc#>,<#int $shadingid#>,<#string $optlist#>)" "S" "int") ("f" "ps_shading(" "ps_shading(<#resource $psdoc#>,<#string $type#>,<#float $x0#>,<#float $y0#>,<#float $x1#>,<#float $y1#>,<#float $c1#>,<#float $c2#>,<#float $c3#>,<#float $c4#>,<#string $optlist#>)" "S" "int") ("f" "ps_set_value(" "ps_set_value(<#resource $psdoc#>,<#string $name#>,<#float $value#>)" "S" "bool") ("f" "ps_set_text_pos(" "ps_set_text_pos(<#resource $psdoc#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "ps_setpolydash(" "ps_setpolydash(<#resource $psdoc#>,<#float $arr#>)" "S" "bool") ("f" "ps_set_parameter(" "ps_set_parameter(<#resource $psdoc#>,<#string $name#>,<#string $value#>)" "S" "bool") ("f" "ps_setoverprintmode(" "ps_setoverprintmode(<#resource $psdoc#>,<#int $mode#>)" "S" "bool") ("f" "ps_setmiterlimit(" "ps_setmiterlimit(<#resource $psdoc#>,<#float $value#>)" "S" "bool") ("f" "ps_setlinewidth(" "ps_setlinewidth(<#resource $psdoc#>,<#float $width#>)" "S" "bool") ("f" "ps_setlinejoin(" "ps_setlinejoin(<#resource $psdoc#>,<#int $type#>)" "S" "bool") ("f" "ps_setlinecap(" "ps_setlinecap(<#resource $psdoc#>,<#int $type#>)" "S" "bool") ("f" "ps_set_info(" "ps_set_info(<#resource $p#>,<#string $key#>,<#string $val#>)" "S" "bool") ("f" "ps_setgray(" "ps_setgray(<#resource $psdoc#>,<#float $gray#>)" "S" "bool") ("f" "ps_setfont(" "ps_setfont(<#resource $psdoc#>,<#int $fontid#>,<#float $size#>)" "S" "bool") ("f" "ps_setflat(" "ps_setflat(<#resource $psdoc#>,<#float $value#>)" "S" "bool") ("f" "ps_setdash(" "ps_setdash(<#resource $psdoc#>,<#float $on#>,<#float $off#>)" "S" "bool") ("f" "ps_setcolor(" "ps_setcolor(<#resource $psdoc#>,<#string $type#>,<#string $colorspace#>,<#float $c1#>,<#float $c2#>,<#float $c3#>,<#float $c4#>)" "S" "bool") ("f" "ps_set_border_style(" "ps_set_border_style(<#resource $psdoc#>,<#string $style#>,<#float $width#>)" "S" "bool") ("f" "ps_set_border_dash(" "ps_set_border_dash(<#resource $psdoc#>,<#float $black#>,<#float $white#>)" "S" "bool") ("f" "ps_set_border_color(" "ps_set_border_color(<#resource $psdoc#>,<#float $red#>,<#float $green#>,<#float $blue#>)" "S" "bool") ("f" "ps_scale(" "ps_scale(<#resource $psdoc#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "ps_save(" "ps_save(<#resource $psdoc#>)" "S" "bool") ("f" "ps_rotate(" "ps_rotate(<#resource $psdoc#>,<#float $rot#>)" "S" "bool") ("f" "ps_restore(" "ps_restore(<#resource $psdoc#>)" "S" "bool") ("f" "ps_rect(" "ps_rect(<#resource $psdoc#>,<#float $x#>,<#float $y#>,<#float $width#>,<#float $height#>)" "S" "bool") ("f" "ps_place_image(" "ps_place_image(<#resource $psdoc#>,<#int $imageid#>,<#float $x#>,<#float $y#>,<#float $scale#>)" "S" "bool") ("f" "pspell_suggest(" "pspell_suggest(<#int $dictionary_link#>,<#string $word#>)" "S" "array") ("f" "pspell_store_replacement(" "pspell_store_replacement(<#int $dictionary_link#>,<#string $misspelled#>,<#string $correct#>)" "S" "bool") ("f" "pspell_save_wordlist(" "pspell_save_wordlist(<#int $dictionary_link#>)" "S" "bool") ("f" "pspell_new_personal(" "pspell_new_personal(<#string $personal#>,<#string $language#>,<#string $spelling#>,<#string $jargon#>,<#string $encoding#>,<#int $mode#>)" "S" "int") ("f" "pspell_new(" "pspell_new(<#string $language#>,<#string $spelling#>,<#string $jargon#>,<#string $encoding#>,<#int $mode#>)" "S" "int") ("f" "pspell_new_config(" "pspell_new_config(<#int $config#>)" "S" "int") ("f" "pspell_config_save_repl(" "pspell_config_save_repl(<#int $dictionary_link#>,<#bool $flag#>)" "S" "bool") ("f" "pspell_config_runtogether(" "pspell_config_runtogether(<#int $dictionary_link#>,<#bool $flag#>)" "S" "bool") ("f" "pspell_config_repl(" "pspell_config_repl(<#int $dictionary_link#>,<#string $file#>)" "S" "bool") ("f" "pspell_config_personal(" "pspell_config_personal(<#int $dictionary_link#>,<#string $file#>)" "S" "bool") ("f" "pspell_config_mode(" "pspell_config_mode(<#int $dictionary_link#>,<#int $mode#>)" "S" "bool") ("f" "pspell_config_ignore(" "pspell_config_ignore(<#int $dictionary_link#>,<#int $n#>)" "S" "bool") ("f" "pspell_config_dict_dir(" "pspell_config_dict_dir(<#int $conf#>,<#string $directory#>)" "S" "bool") ("f" "pspell_config_data_dir(" "pspell_config_data_dir(<#int $conf#>,<#string $directory#>)" "S" "bool") ("f" "pspell_config_create(" "pspell_config_create(<#string $language#>,<#string $spelling#>,<#string $jargon#>,<#string $encoding#>)" "S" "int") ("f" "pspell_clear_session(" "pspell_clear_session(<#int $dictionary_link#>)" "S" "bool") ("f" "pspell_check(" "pspell_check(<#int $dictionary_link#>,<#string $word#>)" "S" "bool") ("f" "pspell_add_to_session(" "pspell_add_to_session(<#int $dictionary_link#>,<#string $word#>)" "S" "bool") ("f" "pspell_add_to_personal(" "pspell_add_to_personal(<#int $dictionary_link#>,<#string $word#>)" "S" "bool") ("f" "ps_open_memory_image(" "ps_open_memory_image(<#resource $psdoc#>,<#int $gd#>)" "S" "int") ("f" "ps_open_image(" "ps_open_image(<#resource $psdoc#>,<#string $type#>,<#string $source#>,<#string $data#>,<#int $lenght#>,<#int $width#>,<#int $height#>,<#int $components#>,<#int $bpc#>,<#string $params#>)" "S" "int") ("f" "ps_open_image_file(" "ps_open_image_file(<#resource $psdoc#>,<#string $type#>,<#string $filename#>,<#string $stringparam#>,<#int $intparam#>)" "S" "int") ("f" "ps_open_file(" "ps_open_file(<#resource $psdoc#>,<#string $filename#>)" "S" "bool") ("f" "ps_new(" "ps_new(<##>)" "S" "resource") ("f" "ps_moveto(" "ps_moveto(<#resource $psdoc#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "ps_makespotcolor(" "ps_makespotcolor(<#resource $psdoc#>,<#string $name#>,<#int $reserved#>)" "S" "int") ("f" "ps_lineto(" "ps_lineto(<#resource $psdoc#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "ps_include_file(" "ps_include_file(<#resource $psdoc#>,<#string $file#>)" "S" "bool") ("f" "ps_hyphenate(" "ps_hyphenate(<#resource $psdoc#>,<#string $text#>)" "S" "array") ("f" "ps_get_value(" "ps_get_value(<#resource $psdoc#>,<#string $name#>,<#float $modifier#>)" "S" "float") ("f" "ps_get_parameter(" "ps_get_parameter(<#resource $psdoc#>,<#string $name#>,<#float $modifier#>)" "S" "string") ("f" "ps_get_buffer(" "ps_get_buffer(<#resource $psdoc#>)" "S" "string") ("f" "ps_findfont(" "ps_findfont(<#resource $psdoc#>,<#string $fontname#>,<#string $encoding#>,<#bool $embed#>)" "S" "int") ("f" "ps_fill_stroke(" "ps_fill_stroke(<#resource $psdoc#>)" "S" "bool") ("f" "ps_fill(" "ps_fill(<#resource $psdoc#>)" "S" "bool") ("f" "ps_end_template(" "ps_end_template(<#resource $psdoc#>)" "S" "bool") ("f" "ps_end_pattern(" "ps_end_pattern(<#resource $psdoc#>)" "S" "bool") ("f" "ps_end_page(" "ps_end_page(<#resource $psdoc#>)" "S" "bool") ("f" "ps_delete(" "ps_delete(<#resource $psdoc#>)" "S" "bool") ("f" "ps_curveto(" "ps_curveto(<#resource $psdoc#>,<#float $x1#>,<#float $y1#>,<#float $x2#>,<#float $y2#>,<#float $x3#>,<#float $y3#>)" "S" "bool") ("f" "ps_continue_text(" "ps_continue_text(<#resource $psdoc#>,<#string $text#>)" "S" "bool") ("f" "ps_closepath_stroke(" "ps_closepath_stroke(<#resource $psdoc#>)" "S" "bool") ("f" "ps_closepath(" "ps_closepath(<#resource $psdoc#>)" "S" "bool") ("f" "ps_close_image(" "ps_close_image(<#resource $psdoc#>,<#int $imageid#>)" "S" "void") ("f" "ps_close(" "ps_close(<#resource $psdoc#>)" "S" "bool") ("f" "ps_clip(" "ps_clip(<#resource $psdoc#>)" "S" "bool") ("f" "ps_circle(" "ps_circle(<#resource $psdoc#>,<#float $x#>,<#float $y#>,<#float $radius#>)" "S" "bool") ("f" "ps_begin_template(" "ps_begin_template(<#resource $psdoc#>,<#float $width#>,<#float $height#>)" "S" "int") ("f" "ps_begin_pattern(" "ps_begin_pattern(<#resource $psdoc#>,<#float $width#>,<#float $height#>,<#float $xstep#>,<#float $ystep#>,<#int $painttype#>)" "S" "int") ("f" "ps_begin_page(" "ps_begin_page(<#resource $psdoc#>,<#float $width#>,<#float $height#>)" "S" "bool") ("f" "ps_arcn(" "ps_arcn(<#resource $psdoc#>,<#float $x#>,<#float $y#>,<#float $radius#>,<#float $alpha#>,<#float $beta#>)" "S" "bool") ("f" "ps_arc(" "ps_arc(<#resource $psdoc#>,<#float $x#>,<#float $y#>,<#float $radius#>,<#float $alpha#>,<#float $beta#>)" "S" "bool") ("f" "ps_add_weblink(" "ps_add_weblink(<#resource $psdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $url#>)" "S" "bool") ("f" "ps_add_pdflink(" "ps_add_pdflink(<#resource $psdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $filename#>,<#int $page#>,<#string $dest#>)" "S" "bool") ("f" "ps_add_note(" "ps_add_note(<#resource $psdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $contents#>,<#string $title#>,<#string $icon#>,<#int $open#>)" "S" "bool") ("f" "ps_add_locallink(" "ps_add_locallink(<#resource $psdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#int $page#>,<#string $dest#>)" "S" "bool") ("f" "ps_add_launchlink(" "ps_add_launchlink(<#resource $psdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $filename#>)" "S" "bool") ("f" "ps_add_bookmark(" "ps_add_bookmark(<#resource $psdoc#>,<#string $text#>,<#int $parent#>,<#int $open#>)" "S" "int") ("f" "property_exists(" "property_exists(<#mixed $class#>,<#string $property#>)" "S" "bool") ("f" "proc_terminate(" "proc_terminate(<#resource $process#>,<#int $signal#>)" "S" "bool") ("f" "proc_open(" "proc_open(<#string $cmd#>,<#array $descriptorspec#>,<#array &$pipes#>,<#string $cwd#>,<#array $env#>,<#array $other_options#>)" "S" "resource") ("f" "proc_nice(" "proc_nice(<#int $increment#>)" "S" "bool") ("f" "proc_get_status(" "proc_get_status(<#resource $process#>)" "S" "array") ("f" "proc_close(" "proc_close(<#resource $process#>)" "S" "int") ("f" "print_r(" "print_r(<#mixed $expression#>,<#bool $return#>)" "S" "bool") ("f" "printf(" "printf(<#string $format#>,<#mixed $args#>,<#mixed $__args__#>)" "S" "int") ("f" "prev(" "prev(<#array &$array#>)" "S" "mixed") ("f" "preg_split(" "preg_split(<#string $pattern#>,<#string $subject#>,<#int $limit#>,<#int $flags#>)" "S" "array") ("f" "preg_replace(" "preg_replace(<#mixed $pattern#>,<#mixed $replacement#>,<#mixed $subject#>,<#int $limit#>,<#int &$count#>)" "S" "mixed") ("f" "preg_replace_callback(" "preg_replace_callback(<#mixed $pattern#>,<#callable $callback#>,<#mixed $subject#>,<#int $limit#>,<#int &$count#>)" "S" "mixed") ("f" "preg_quote(" "preg_quote(<#string $str#>,<#string $delimiter#>)" "S" "string") ("f" "preg_match(" "preg_match(<#string $pattern#>,<#string $subject#>,<#array &$matches#>,<#int $flags#>,<#int $offset#>)" "S" "int") ("f" "preg_match_all(" "preg_match_all(<#string $pattern#>,<#string $subject#>,<#array &$matches#>,<#int $flags#>,<#int $offset#>)" "S" "int") ("f" "preg_last_error(" "preg_last_error(<##>)" "S" "int") ("f" "preg_grep(" "preg_grep(<#string $pattern#>,<#array $input#>,<#int $flags#>)" "S" "array") ("f" "preg_filter(" "preg_filter(<#mixed $pattern#>,<#mixed $replacement#>,<#mixed $subject#>,<#int $limit#>,<#int &$count#>)" "S" "mixed") ("f" "pow(" "pow(<#number $base#>,<#number $exp#>)" "S" "number") ("f" "posix_uname(" "posix_uname(<##>)" "S" "array") ("f" "posix_ttyname(" "posix_ttyname(<#mixed $fd#>)" "S" "string") ("f" "posix_times(" "posix_times(<##>)" "S" "array") ("f" "posix_strerror(" "posix_strerror(<#int $errno#>)" "S" "string") ("f" "posix_setuid(" "posix_setuid(<#int $uid#>)" "S" "bool") ("f" "posix_setsid(" "posix_setsid(<##>)" "S" "int") ("f" "posix_setpgid(" "posix_setpgid(<#int $pid#>,<#int $pgid#>)" "S" "bool") ("f" "posix_setgid(" "posix_setgid(<#int $gid#>)" "S" "bool") ("f" "posix_seteuid(" "posix_seteuid(<#int $uid#>)" "S" "bool") ("f" "posix_setegid(" "posix_setegid(<#int $gid#>)" "S" "bool") ("f" "posix_mknod(" "posix_mknod(<#string $pathname#>,<#int $mode#>,<#int $major#>,<#int $minor#>)" "S" "bool") ("f" "posix_mkfifo(" "posix_mkfifo(<#string $pathname#>,<#int $mode#>)" "S" "bool") ("f" "posix_kill(" "posix_kill(<#int $pid#>,<#int $sig#>)" "S" "bool") ("f" "posix_isatty(" "posix_isatty(<#mixed $fd#>)" "S" "bool") ("f" "posix_initgroups(" "posix_initgroups(<#string $name#>,<#int $base_group_id#>)" "S" "bool") ("f" "posix_getuid(" "posix_getuid(<##>)" "S" "int") ("f" "posix_getsid(" "posix_getsid(<#int $pid#>)" "S" "int") ("f" "posix_getrlimit(" "posix_getrlimit(<##>)" "S" "array") ("f" "posix_getpwuid(" "posix_getpwuid(<#int $uid#>)" "S" "array") ("f" "posix_getpwnam(" "posix_getpwnam(<#string $username#>)" "S" "array") ("f" "posix_getppid(" "posix_getppid(<##>)" "S" "int") ("f" "posix_getpid(" "posix_getpid(<##>)" "S" "int") ("f" "posix_getpgrp(" "posix_getpgrp(<##>)" "S" "int") ("f" "posix_getpgid(" "posix_getpgid(<#int $pid#>)" "S" "int") ("f" "posix_getlogin(" "posix_getlogin(<##>)" "S" "string") ("f" "posix_get_last_error(" "posix_get_last_error(<##>)" "S" "int") ("f" "posix_getgroups(" "posix_getgroups(<##>)" "S" "array") ("f" "posix_getgrnam(" "posix_getgrnam(<#string $name#>)" "S" "array") ("f" "posix_getgrgid(" "posix_getgrgid(<#int $gid#>)" "S" "array") ("f" "posix_getgid(" "posix_getgid(<##>)" "S" "int") ("f" "posix_geteuid(" "posix_geteuid(<##>)" "S" "int") ("f" "posix_getegid(" "posix_getegid(<##>)" "S" "int") ("f" "posix_getcwd(" "posix_getcwd(<##>)" "S" "string") ("f" "posix_ctermid(" "posix_ctermid(<##>)" "S" "string") ("f" "posix_access(" "posix_access(<#string $file#>,<#int $mode#>)" "S" "bool") ("f" "popen(" "popen(<#string $command#>,<#string $mode#>)" "S" "resource") ("f" "png2wbmp(" "png2wbmp(<#string $pngname#>,<#string $wbmpname#>,<#int $dest_height#>,<#int $dest_width#>,<#int $threshold#>)" "S" "bool") ("f" "pi(" "pi(<##>)" "S" "float") ("f" "phpversion(" "phpversion(<#string $extension#>)" "S" "string") ("f" "php_uname(" "php_uname(<#string $mode#>)" "S" "string") ("f" "php_strip_whitespace(" "php_strip_whitespace(<#string $filename#>)" "S" "string") ("f" "php_sapi_name(" "php_sapi_name(<##>)" "S" "string") ("f" "php_logo_guid(" "php_logo_guid(<##>)" "S" "string") ("f" "php_ini_scanned_files(" "php_ini_scanned_files(<##>)" "S" "string") ("f" "php_ini_loaded_file(" "php_ini_loaded_file(<##>)" "S" "string") ("f" "phpinfo(" "phpinfo(<#int $what#>)" "S" "bool") ("f" "phpcredits(" "phpcredits(<#int $flag#>)" "S" "bool") ("f" "php_check_syntax(" "php_check_syntax(<#string $filename#>,<#string &$error_message#>)" "S" "bool") ("f" "pg_version(" "pg_version(<#resource $connection#>)" "S" "array") ("f" "pg_update(" "pg_update(<#resource $connection#>,<#string $table_name#>,<#array $data#>,<#array $condition#>,<#int $options#>)" "S" "mixed") ("f" "pg_untrace(" "pg_untrace(<#resource $connection#>)" "S" "bool") ("f" "pg_unescape_bytea(" "pg_unescape_bytea(<#string $data#>)" "S" "string") ("f" "pg_tty(" "pg_tty(<#resource $connection#>)" "S" "string") ("f" "pg_transaction_status(" "pg_transaction_status(<#resource $connection#>)" "S" "int") ("f" "pg_trace(" "pg_trace(<#string $pathname#>,<#string $mode#>,<#resource $connection#>)" "S" "bool") ("f" "pg_socket(" "pg_socket(<#resource $connection#>)" "S" "resource") ("f" "pg_set_error_verbosity(" "pg_set_error_verbosity(<#resource $connection#>,<#int $verbosity#>)" "S" "int") ("f" "pg_set_client_encoding(" "pg_set_client_encoding(<#resource $connection#>,<#string $encoding#>)" "S" "int") ("f" "pg_send_query_params(" "pg_send_query_params(<#resource $connection#>,<#string $query#>,<#array $params#>)" "S" "bool") ("f" "pg_send_query(" "pg_send_query(<#resource $connection#>,<#string $query#>)" "S" "bool") ("f" "pg_send_prepare(" "pg_send_prepare(<#resource $connection#>,<#string $stmtname#>,<#string $query#>)" "S" "bool") ("f" "pg_send_execute(" "pg_send_execute(<#resource $connection#>,<#string $stmtname#>,<#array $params#>)" "S" "bool") ("f" "pg_select(" "pg_select(<#resource $connection#>,<#string $table_name#>,<#array $assoc_array#>,<#int $options#>)" "S" "mixed") ("f" "pg_result_status(" "pg_result_status(<#resource $result#>)" "S" "int") ("f" "pg_result_seek(" "pg_result_seek(<#resource $result#>,<#int $offset#>)" "S" "array") ("f" "pg_result_error(" "pg_result_error(<#resource $result#>)" "S" "string") ("f" "pg_result_error_field(" "pg_result_error_field(<#resource $result#>,<#int $fieldcode#>)" "S" "string") ("f" "pg_query(" "pg_query(<#resource $connection#>,<#string $query#>)" "S" "resource") ("f" "pg_query_params(" "pg_query_params(<#resource $connection#>,<#string $query#>,<#array $params#>)" "S" "resource") ("f" "pg_put_line(" "pg_put_line(<#resource $connection#>,<#string $data#>)" "S" "bool") ("f" "pg_prepare(" "pg_prepare(<#resource $connection#>,<#string $stmtname#>,<#string $query#>)" "S" "resource") ("f" "pg_port(" "pg_port(<#resource $connection#>)" "S" "int") ("f" "pg_ping(" "pg_ping(<#resource $connection#>)" "S" "bool") ("f" "pg_pconnect(" "pg_pconnect(<#string $connection_string#>,<#int $connect_type#>)" "S" "resource") ("f" "pg_parameter_status(" "pg_parameter_status(<#resource $connection#>,<#string $param_name#>)" "S" "string") ("f" "pg_options(" "pg_options(<#resource $connection#>)" "S" "string") ("f" "pg_num_rows(" "pg_num_rows(<#resource $result#>)" "S" "int") ("f" "pg_num_fields(" "pg_num_fields(<#resource $result#>)" "S" "int") ("f" "pg_meta_data(" "pg_meta_data(<#resource $connection#>,<#string $table_name#>)" "S" "array") ("f" "pg_lo_write(" "pg_lo_write(<#resource $large_object#>,<#string $data#>)" "S" "int") ("f" "pg_lo_unlink(" "pg_lo_unlink(<#resource $connection#>,<#int $oid#>)" "S" "bool") ("f" "pg_lo_truncate(" "pg_lo_truncate(<#resource $large_object#>,<#int $size#>)" "S" "bool") ("f" "pg_lo_tell(" "pg_lo_tell(<#resource $large_object#>)" "S" "int") ("f" "pg_lo_seek(" "pg_lo_seek(<#resource $large_object#>,<#int $offset#>,<#int $whence#>)" "S" "bool") ("f" "pg_lo_read(" "pg_lo_read(<#resource $large_object#>,<#int $len#>)" "S" "string") ("f" "pg_lo_read_all(" "pg_lo_read_all(<#resource $large_object#>)" "S" "int") ("f" "pg_lo_open(" "pg_lo_open(<#resource $connection#>,<#int $oid#>,<#string $mode#>)" "S" "resource") ("f" "pg_lo_import(" "pg_lo_import(<#resource $connection#>,<#string $pathname#>,<#mixed $object_id#>)" "S" "int") ("f" "pg_lo_export(" "pg_lo_export(<#resource $connection#>,<#int $oid#>,<#string $pathname#>)" "S" "bool") ("f" "pg_lo_create(" "pg_lo_create(<#resource $connection#>)" "S" "int") ("f" "pg_lo_close(" "pg_lo_close(<#resource $large_object#>)" "S" "bool") ("f" "pg_last_oid(" "pg_last_oid(<#resource $result#>)" "S" "int") ("f" "pg_last_notice(" "pg_last_notice(<#resource $connection#>)" "S" "string") ("f" "pg_last_error(" "pg_last_error(<#resource $connection#>)" "S" "string") ("f" "pg_insert(" "pg_insert(<#resource $connection#>,<#string $table_name#>,<#array $assoc_array#>,<#int $options#>)" "S" "mixed") ("f" "pg_host(" "pg_host(<#resource $connection#>)" "S" "string") ("f" "pg_get_result(" "pg_get_result(<#resource $connection#>)" "S" "resource") ("f" "pg_get_pid(" "pg_get_pid(<#resource $connection#>)" "S" "int") ("f" "pg_get_notify(" "pg_get_notify(<#resource $connection#>,<#int $result_type#>)" "S" "array") ("f" "pg_free_result(" "pg_free_result(<#resource $result#>)" "S" "bool") ("f" "pg_flush(" "pg_flush(<#resource $connection#>)" "S" "mixed") ("f" "pg_field_type(" "pg_field_type(<#resource $result#>,<#int $field_number#>)" "S" "string") ("f" "pg_field_type_oid(" "pg_field_type_oid(<#resource $result#>,<#int $field_number#>)" "S" "int") ("f" "pg_field_table(" "pg_field_table(<#resource $result#>,<#int $field_number#>,<#bool $oid_only#>)" "S" "mixed") ("f" "pg_field_size(" "pg_field_size(<#resource $result#>,<#int $field_number#>)" "S" "int") ("f" "pg_field_prtlen(" "pg_field_prtlen(<#resource $result#>,<#int $row_number#>,<#string $field_name#>)" "S" "int") ("f" "pg_field_num(" "pg_field_num(<#resource $result#>,<#string $field_name#>)" "S" "int") ("f" "pg_field_name(" "pg_field_name(<#resource $result#>,<#int $field_number#>)" "S" "string") ("f" "pg_field_is_null(" "pg_field_is_null(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "int") ("f" "pg_fetch_row(" "pg_fetch_row(<#resource $result#>,<#int $row#>)" "S" "array") ("f" "pg_fetch_result(" "pg_fetch_result(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "mixed") ("f" "pg_fetch_object(" "pg_fetch_object(<#resource $result#>,<#int $row#>,<#int $result_type#>)" "S" "object") ("f" "pg_fetch_assoc(" "pg_fetch_assoc(<#resource $result#>,<#int $row#>)" "S" "array") ("f" "pg_fetch_array(" "pg_fetch_array(<#resource $result#>,<#int $row#>,<#int $result_type#>)" "S" "array") ("f" "pg_fetch_all_columns(" "pg_fetch_all_columns(<#resource $result#>,<#int $column#>)" "S" "array") ("f" "pg_fetch_all(" "pg_fetch_all(<#resource $result#>)" "S" "array") ("f" "pg_execute(" "pg_execute(<#resource $connection#>,<#string $stmtname#>,<#array $params#>)" "S" "resource") ("f" "pg_escape_string(" "pg_escape_string(<#string $data#>)" "S" "string") ("f" "pg_escape_literal(" "pg_escape_literal(<#resource $connection#>,<#string $data#>)" "S" "string") ("f" "pg_escape_identifier(" "pg_escape_identifier(<#resource $connection#>,<#string $data#>)" "S" "string") ("f" "pg_escape_bytea(" "pg_escape_bytea(<#string $data#>)" "S" "string") ("f" "pg_end_copy(" "pg_end_copy(<#resource $connection#>)" "S" "bool") ("f" "pg_delete(" "pg_delete(<#resource $connection#>,<#string $table_name#>,<#array $assoc_array#>,<#int $options#>)" "S" "mixed") ("f" "pg_dbname(" "pg_dbname(<#resource $connection#>)" "S" "string") ("f" "pg_copy_to(" "pg_copy_to(<#resource $connection#>,<#string $table_name#>,<#string $delimiter#>,<#string $null_as#>)" "S" "array") ("f" "pg_copy_from(" "pg_copy_from(<#resource $connection#>,<#string $table_name#>,<#array $rows#>,<#string $delimiter#>,<#string $null_as#>)" "S" "bool") ("f" "pg_convert(" "pg_convert(<#resource $connection#>,<#string $table_name#>,<#array $assoc_array#>,<#int $options#>)" "S" "array") ("f" "pg_consume_input(" "pg_consume_input(<#resource $connection#>)" "S" "bool") ("f" "pg_connect(" "pg_connect(<#string $connection_string#>)" "S" "resource") ("f" "pg_connect_poll(" "pg_connect_poll(<#resource $connection#>)" "S" "int") ("f" "pg_connection_status(" "pg_connection_status(<#resource $connection#>)" "S" "int") ("f" "pg_connection_reset(" "pg_connection_reset(<#resource $connection#>)" "S" "bool") ("f" "pg_connection_busy(" "pg_connection_busy(<#resource $connection#>)" "S" "bool") ("f" "pg_close(" "pg_close(<#resource $connection#>)" "S" "bool") ("f" "pg_client_encoding(" "pg_client_encoding(<#resource $connection#>)" "S" "string") ("f" "pg_cancel_query(" "pg_cancel_query(<#resource $connection#>)" "S" "bool") ("f" "pg_affected_rows(" "pg_affected_rows(<#resource $result#>)" "S" "int") ("f" "pfsockopen(" "pfsockopen(<#string $hostname#>,<#int $port#>,<#int &$errno#>,<#string &$errstr#>,<#float $timeout#>)" "S" "resource") ("f" "PDF_utf8_to_utf16(" "PDF_utf8_to_utf16(<#resource $pdfdoc#>,<#string $utf8string#>,<#string $ordering#>)" "S" "string") ("f" "PDF_utf32_to_utf16(" "PDF_utf32_to_utf16(<#resource $pdfdoc#>,<#string $utf32string#>,<#string $ordering#>)" "S" "string") ("f" "PDF_utf16_to_utf8(" "PDF_utf16_to_utf8(<#resource $pdfdoc#>,<#string $utf16string#>)" "S" "string") ("f" "PDF_translate(" "PDF_translate(<#resource $p#>,<#float $tx#>,<#float $ty#>)" "S" "bool") ("f" "PDF_suspend_page(" "PDF_suspend_page(<#resource $pdfdoc#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_stroke(" "PDF_stroke(<#resource $p#>)" "S" "bool") ("f" "PDF_stringwidth(" "PDF_stringwidth(<#resource $p#>,<#string $text#>,<#int $font#>,<#float $fontsize#>)" "S" "float") ("f" "PDF_skew(" "PDF_skew(<#resource $p#>,<#float $alpha#>,<#float $beta#>)" "S" "bool") ("f" "PDF_show_xy(" "PDF_show_xy(<#resource $p#>,<#string $text#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "PDF_show_boxed(" "PDF_show_boxed(<#resource $p#>,<#string $text#>,<#float $left#>,<#float $top#>,<#float $width#>,<#float $height#>,<#string $mode#>,<#string $feature#>)" "S" "int") ("f" "PDF_show(" "PDF_show(<#resource $pdfdoc#>,<#string $text#>)" "S" "bool") ("f" "PDF_shfill(" "PDF_shfill(<#resource $pdfdoc#>,<#int $shading#>)" "S" "bool") ("f" "PDF_shading_pattern(" "PDF_shading_pattern(<#resource $pdfdoc#>,<#int $shading#>,<#string $optlist#>)" "S" "int") ("f" "PDF_shading(" "PDF_shading(<#resource $pdfdoc#>,<#string $shtype#>,<#float $x0#>,<#float $y0#>,<#float $x1#>,<#float $y1#>,<#float $c1#>,<#float $c2#>,<#float $c3#>,<#float $c4#>,<#string $optlist#>)" "S" "int") ("f" "PDF_set_value(" "PDF_set_value(<#resource $p#>,<#string $key#>,<#float $value#>)" "S" "bool") ("f" "PDF_set_text_pos(" "PDF_set_text_pos(<#resource $p#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "PDF_setrgbcolor_stroke(" "PDF_setrgbcolor_stroke(<#resource $p#>,<#float $red#>,<#float $green#>,<#float $blue#>)" "S" "bool") ("f" "PDF_setrgbcolor_fill(" "PDF_setrgbcolor_fill(<#resource $p#>,<#float $red#>,<#float $green#>,<#float $blue#>)" "S" "bool") ("f" "PDF_setrgbcolor(" "PDF_setrgbcolor(<#resource $p#>,<#float $red#>,<#float $green#>,<#float $blue#>)" "S" "bool") ("f" "PDF_set_parameter(" "PDF_set_parameter(<#resource $p#>,<#string $key#>,<#string $value#>)" "S" "bool") ("f" "PDF_setmiterlimit(" "PDF_setmiterlimit(<#resource $pdfdoc#>,<#float $miter#>)" "S" "bool") ("f" "PDF_setmatrix(" "PDF_setmatrix(<#resource $p#>,<#float $a#>,<#float $b#>,<#float $c#>,<#float $d#>,<#float $e#>,<#float $f#>)" "S" "bool") ("f" "PDF_setlinewidth(" "PDF_setlinewidth(<#resource $p#>,<#float $width#>)" "S" "bool") ("f" "PDF_setlinejoin(" "PDF_setlinejoin(<#resource $p#>,<#int $value#>)" "S" "bool") ("f" "PDF_setlinecap(" "PDF_setlinecap(<#resource $p#>,<#int $linecap#>)" "S" "bool") ("f" "PDF_set_layer_dependency(" "PDF_set_layer_dependency(<#resource $pdfdoc#>,<#string $type#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_set_info(" "PDF_set_info(<#resource $p#>,<#string $key#>,<#string $value#>)" "S" "bool") ("f" "PDF_set_gstate(" "PDF_set_gstate(<#resource $pdfdoc#>,<#int $gstate#>)" "S" "bool") ("f" "PDF_setgray_stroke(" "PDF_setgray_stroke(<#resource $p#>,<#float $g#>)" "S" "bool") ("f" "PDF_setgray_fill(" "PDF_setgray_fill(<#resource $p#>,<#float $g#>)" "S" "bool") ("f" "PDF_setgray(" "PDF_setgray(<#resource $p#>,<#float $g#>)" "S" "bool") ("f" "PDF_setfont(" "PDF_setfont(<#resource $pdfdoc#>,<#int $font#>,<#float $fontsize#>)" "S" "bool") ("f" "PDF_setflat(" "PDF_setflat(<#resource $pdfdoc#>,<#float $flatness#>)" "S" "bool") ("f" "PDF_setdashpattern(" "PDF_setdashpattern(<#resource $pdfdoc#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_setdash(" "PDF_setdash(<#resource $pdfdoc#>,<#float $b#>,<#float $w#>)" "S" "bool") ("f" "PDF_setcolor(" "PDF_setcolor(<#resource $p#>,<#string $fstype#>,<#string $colorspace#>,<#float $c1#>,<#float $c2#>,<#float $c3#>,<#float $c4#>)" "S" "bool") ("f" "PDF_set_border_style(" "PDF_set_border_style(<#resource $pdfdoc#>,<#string $style#>,<#float $width#>)" "S" "bool") ("f" "PDF_set_border_dash(" "PDF_set_border_dash(<#resource $pdfdoc#>,<#float $black#>,<#float $white#>)" "S" "bool") ("f" "PDF_set_border_color(" "PDF_set_border_color(<#resource $p#>,<#float $red#>,<#float $green#>,<#float $blue#>)" "S" "bool") ("f" "PDF_scale(" "PDF_scale(<#resource $p#>,<#float $sx#>,<#float $sy#>)" "S" "bool") ("f" "PDF_save(" "PDF_save(<#resource $p#>)" "S" "bool") ("f" "PDF_rotate(" "PDF_rotate(<#resource $p#>,<#float $phi#>)" "S" "bool") ("f" "PDF_resume_page(" "PDF_resume_page(<#resource $pdfdoc#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_restore(" "PDF_restore(<#resource $p#>)" "S" "bool") ("f" "PDF_rect(" "PDF_rect(<#resource $p#>,<#float $x#>,<#float $y#>,<#float $width#>,<#float $height#>)" "S" "bool") ("f" "PDF_process_pdi(" "PDF_process_pdi(<#resource $pdfdoc#>,<#int $doc#>,<#int $page#>,<#string $optlist#>)" "S" "int") ("f" "PDF_place_pdi_page(" "PDF_place_pdi_page(<#resource $pdfdoc#>,<#int $page#>,<#float $x#>,<#float $y#>,<#float $sx#>,<#float $sy#>)" "S" "bool") ("f" "PDF_place_image(" "PDF_place_image(<#resource $pdfdoc#>,<#int $image#>,<#float $x#>,<#float $y#>,<#float $scale#>)" "S" "bool") ("f" "PDF_pcos_get_string(" "PDF_pcos_get_string(<#resource $p#>,<#int $doc#>,<#string $path#>)" "S" "string") ("f" "PDF_pcos_get_stream(" "PDF_pcos_get_stream(<#resource $p#>,<#int $doc#>,<#string $optlist#>,<#string $path#>)" "S" "string") ("f" "PDF_pcos_get_number(" "PDF_pcos_get_number(<#resource $p#>,<#int $doc#>,<#string $path#>)" "S" "float") ("f" "PDF_open_pdi_page(" "PDF_open_pdi_page(<#resource $p#>,<#int $doc#>,<#int $pagenumber#>,<#string $optlist#>)" "S" "int") ("f" "PDF_open_pdi(" "PDF_open_pdi(<#resource $pdfdoc#>,<#string $filename#>,<#string $optlist#>,<#int $len#>)" "S" "int") ("f" "PDF_open_pdi_document(" "PDF_open_pdi_document(<#resource $p#>,<#string $filename#>,<#string $optlist#>)" "S" "int") ("f" "PDF_open_memory_image(" "PDF_open_memory_image(<#resource $p#>,<#resource $image#>)" "S" "int") ("f" "PDF_open_image(" "PDF_open_image(<#resource $p#>,<#string $imagetype#>,<#string $source#>,<#string $data#>,<#int $length#>,<#int $width#>,<#int $height#>,<#int $components#>,<#int $bpc#>,<#string $params#>)" "S" "int") ("f" "PDF_open_image_file(" "PDF_open_image_file(<#resource $p#>,<#string $imagetype#>,<#string $filename#>,<#string $stringparam#>,<#int $intparam#>)" "S" "int") ("f" "PDF_open_file(" "PDF_open_file(<#resource $p#>,<#string $filename#>)" "S" "bool") ("f" "PDF_open_ccitt(" "PDF_open_ccitt(<#resource $pdfdoc#>,<#string $filename#>,<#int $width#>,<#int $height#>,<#int $BitReverse#>,<#int $k#>,<#int $Blackls1#>)" "S" "int") ("f" "PDF_new(" "PDF_new(<##>)" "S" "resource") ("f" "PDF_moveto(" "PDF_moveto(<#resource $p#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "PDF_makespotcolor(" "PDF_makespotcolor(<#resource $p#>,<#string $spotname#>)" "S" "int") ("f" "PDF_load_image(" "PDF_load_image(<#resource $pdfdoc#>,<#string $imagetype#>,<#string $filename#>,<#string $optlist#>)" "S" "int") ("f" "PDF_load_iccprofile(" "PDF_load_iccprofile(<#resource $pdfdoc#>,<#string $profilename#>,<#string $optlist#>)" "S" "int") ("f" "PDF_load_font(" "PDF_load_font(<#resource $pdfdoc#>,<#string $fontname#>,<#string $encoding#>,<#string $optlist#>)" "S" "int") ("f" "PDF_load_3ddata(" "PDF_load_3ddata(<#resource $pdfdoc#>,<#string $filename#>,<#string $optlist#>)" "S" "int") ("f" "PDF_lineto(" "PDF_lineto(<#resource $p#>,<#float $x#>,<#float $y#>)" "S" "bool") ("f" "PDF_initgraphics(" "PDF_initgraphics(<#resource $p#>)" "S" "bool") ("f" "PDF_info_textline(" "PDF_info_textline(<#resource $pdfdoc#>,<#string $text#>,<#string $keyword#>,<#string $optlist#>)" "S" "float") ("f" "PDF_info_textflow(" "PDF_info_textflow(<#resource $pdfdoc#>,<#int $textflow#>,<#string $keyword#>)" "S" "float") ("f" "PDF_info_table(" "PDF_info_table(<#resource $pdfdoc#>,<#int $table#>,<#string $keyword#>)" "S" "float") ("f" "PDF_info_matchbox(" "PDF_info_matchbox(<#resource $pdfdoc#>,<#string $boxname#>,<#int $num#>,<#string $keyword#>)" "S" "float") ("f" "PDF_info_font(" "PDF_info_font(<#resource $pdfdoc#>,<#int $font#>,<#string $keyword#>,<#string $optlist#>)" "S" "float") ("f" "PDF_get_value(" "PDF_get_value(<#resource $p#>,<#string $key#>,<#float $modifier#>)" "S" "float") ("f" "PDF_get_pdi_value(" "PDF_get_pdi_value(<#resource $p#>,<#string $key#>,<#int $doc#>,<#int $page#>,<#int $reserved#>)" "S" "float") ("f" "PDF_get_pdi_parameter(" "PDF_get_pdi_parameter(<#resource $p#>,<#string $key#>,<#int $doc#>,<#int $page#>,<#int $reserved#>)" "S" "string") ("f" "PDF_get_parameter(" "PDF_get_parameter(<#resource $p#>,<#string $key#>,<#float $modifier#>)" "S" "string") ("f" "PDF_get_minorversion(" "PDF_get_minorversion(<##>)" "S" "int") ("f" "PDF_get_majorversion(" "PDF_get_majorversion(<##>)" "S" "int") ("f" "PDF_get_errnum(" "PDF_get_errnum(<#resource $pdfdoc#>)" "S" "int") ("f" "PDF_get_errmsg(" "PDF_get_errmsg(<#resource $pdfdoc#>)" "S" "string") ("f" "PDF_get_buffer(" "PDF_get_buffer(<#resource $p#>)" "S" "string") ("f" "PDF_get_apiname(" "PDF_get_apiname(<#resource $pdfdoc#>)" "S" "string") ("f" "PDF_fit_textline(" "PDF_fit_textline(<#resource $pdfdoc#>,<#string $text#>,<#float $x#>,<#float $y#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_fit_textflow(" "PDF_fit_textflow(<#resource $pdfdoc#>,<#int $textflow#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $optlist#>)" "S" "string") ("f" "PDF_fit_table(" "PDF_fit_table(<#resource $pdfdoc#>,<#int $table#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $optlist#>)" "S" "string") ("f" "PDF_fit_pdi_page(" "PDF_fit_pdi_page(<#resource $pdfdoc#>,<#int $page#>,<#float $x#>,<#float $y#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_fit_image(" "PDF_fit_image(<#resource $pdfdoc#>,<#int $image#>,<#float $x#>,<#float $y#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_findfont(" "PDF_findfont(<#resource $p#>,<#string $fontname#>,<#string $encoding#>,<#int $embed#>)" "S" "int") ("f" "PDF_fill_textblock(" "PDF_fill_textblock(<#resource $pdfdoc#>,<#int $page#>,<#string $blockname#>,<#string $text#>,<#string $optlist#>)" "S" "int") ("f" "PDF_fill_stroke(" "PDF_fill_stroke(<#resource $p#>)" "S" "bool") ("f" "PDF_fill_pdfblock(" "PDF_fill_pdfblock(<#resource $pdfdoc#>,<#int $page#>,<#string $blockname#>,<#int $contents#>,<#string $optlist#>)" "S" "int") ("f" "PDF_fill_imageblock(" "PDF_fill_imageblock(<#resource $pdfdoc#>,<#int $page#>,<#string $blockname#>,<#int $image#>,<#string $optlist#>)" "S" "int") ("f" "PDF_fill(" "PDF_fill(<#resource $p#>)" "S" "bool") ("f" "PDF_end_template(" "PDF_end_template(<#resource $p#>)" "S" "bool") ("f" "PDF_end_pattern(" "PDF_end_pattern(<#resource $p#>)" "S" "bool") ("f" "PDF_endpath(" "PDF_endpath(<#resource $p#>)" "S" "bool") ("f" "PDF_end_page_ext(" "PDF_end_page_ext(<#resource $pdfdoc#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_end_page(" "PDF_end_page(<#resource $p#>)" "S" "bool") ("f" "PDF_end_layer(" "PDF_end_layer(<#resource $pdfdoc#>)" "S" "bool") ("f" "PDF_end_item(" "PDF_end_item(<#resource $pdfdoc#>,<#int $id#>)" "S" "bool") ("f" "PDF_end_glyph(" "PDF_end_glyph(<#resource $pdfdoc#>)" "S" "bool") ("f" "PDF_end_font(" "PDF_end_font(<#resource $pdfdoc#>)" "S" "bool") ("f" "PDF_end_document(" "PDF_end_document(<#resource $pdfdoc#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_encoding_set_char(" "PDF_encoding_set_char(<#resource $pdfdoc#>,<#string $encoding#>,<#int $slot#>,<#string $glyphname#>,<#int $uv#>)" "S" "bool") ("f" "PDF_delete_textflow(" "PDF_delete_textflow(<#resource $pdfdoc#>,<#int $textflow#>)" "S" "bool") ("f" "PDF_delete_table(" "PDF_delete_table(<#resource $pdfdoc#>,<#int $table#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_delete_pvf(" "PDF_delete_pvf(<#resource $pdfdoc#>,<#string $filename#>)" "S" "int") ("f" "PDF_delete(" "PDF_delete(<#resource $pdfdoc#>)" "S" "bool") ("f" "PDF_define_layer(" "PDF_define_layer(<#resource $pdfdoc#>,<#string $name#>,<#string $optlist#>)" "S" "int") ("f" "PDF_curveto(" "PDF_curveto(<#resource $p#>,<#float $x1#>,<#float $y1#>,<#float $x2#>,<#float $y2#>,<#float $x3#>,<#float $y3#>)" "S" "bool") ("f" "PDF_create_textflow(" "PDF_create_textflow(<#resource $pdfdoc#>,<#string $text#>,<#string $optlist#>)" "S" "int") ("f" "PDF_create_pvf(" "PDF_create_pvf(<#resource $pdfdoc#>,<#string $filename#>,<#string $data#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_create_gstate(" "PDF_create_gstate(<#resource $pdfdoc#>,<#string $optlist#>)" "S" "int") ("f" "PDF_create_fieldgroup(" "PDF_create_fieldgroup(<#resource $pdfdoc#>,<#string $name#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_create_field(" "PDF_create_field(<#resource $pdfdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $name#>,<#string $type#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_create_bookmark(" "PDF_create_bookmark(<#resource $pdfdoc#>,<#string $text#>,<#string $optlist#>)" "S" "int") ("f" "PDF_create_annotation(" "PDF_create_annotation(<#resource $pdfdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $type#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_create_action(" "PDF_create_action(<#resource $pdfdoc#>,<#string $type#>,<#string $optlist#>)" "S" "int") ("f" "PDF_create_3dview(" "PDF_create_3dview(<#resource $pdfdoc#>,<#string $username#>,<#string $optlist#>)" "S" "int") ("f" "PDF_continue_text(" "PDF_continue_text(<#resource $p#>,<#string $text#>)" "S" "bool") ("f" "PDF_concat(" "PDF_concat(<#resource $p#>,<#float $a#>,<#float $b#>,<#float $c#>,<#float $d#>,<#float $e#>,<#float $f#>)" "S" "bool") ("f" "PDF_close_pdi_page(" "PDF_close_pdi_page(<#resource $p#>,<#int $page#>)" "S" "bool") ("f" "PDF_close_pdi(" "PDF_close_pdi(<#resource $p#>,<#int $doc#>)" "S" "bool") ("f" "PDF_closepath_stroke(" "PDF_closepath_stroke(<#resource $p#>)" "S" "bool") ("f" "PDF_closepath_fill_stroke(" "PDF_closepath_fill_stroke(<#resource $p#>)" "S" "bool") ("f" "PDF_closepath(" "PDF_closepath(<#resource $p#>)" "S" "bool") ("f" "PDF_close_image(" "PDF_close_image(<#resource $p#>,<#int $image#>)" "S" "bool") ("f" "PDF_close(" "PDF_close(<#resource $p#>)" "S" "bool") ("f" "PDF_clip(" "PDF_clip(<#resource $p#>)" "S" "bool") ("f" "PDF_circle(" "PDF_circle(<#resource $pdfdoc#>,<#float $x#>,<#float $y#>,<#float $r#>)" "S" "bool") ("f" "PDF_begin_template(" "PDF_begin_template(<#resource $pdfdoc#>,<#float $width#>,<#float $height#>)" "S" "int") ("f" "PDF_begin_template_ext(" "PDF_begin_template_ext(<#resource $pdfdoc#>,<#float $width#>,<#float $height#>,<#string $optlist#>)" "S" "int") ("f" "PDF_begin_pattern(" "PDF_begin_pattern(<#resource $pdfdoc#>,<#float $width#>,<#float $height#>,<#float $xstep#>,<#float $ystep#>,<#int $painttype#>)" "S" "int") ("f" "PDF_begin_page_ext(" "PDF_begin_page_ext(<#resource $pdfdoc#>,<#float $width#>,<#float $height#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_begin_page(" "PDF_begin_page(<#resource $pdfdoc#>,<#float $width#>,<#float $height#>)" "S" "bool") ("f" "PDF_begin_layer(" "PDF_begin_layer(<#resource $pdfdoc#>,<#int $layer#>)" "S" "bool") ("f" "PDF_begin_item(" "PDF_begin_item(<#resource $pdfdoc#>,<#string $tag#>,<#string $optlist#>)" "S" "int") ("f" "PDF_begin_glyph(" "PDF_begin_glyph(<#resource $pdfdoc#>,<#string $glyphname#>,<#float $wx#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>)" "S" "bool") ("f" "PDF_begin_font(" "PDF_begin_font(<#resource $pdfdoc#>,<#string $filename#>,<#float $a#>,<#float $b#>,<#float $c#>,<#float $d#>,<#float $e#>,<#float $f#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_begin_document(" "PDF_begin_document(<#resource $pdfdoc#>,<#string $filename#>,<#string $optlist#>)" "S" "int") ("f" "PDF_attach_file(" "PDF_attach_file(<#resource $pdfdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $filename#>,<#string $description#>,<#string $author#>,<#string $mimetype#>,<#string $icon#>)" "S" "bool") ("f" "PDF_arcn(" "PDF_arcn(<#resource $p#>,<#float $x#>,<#float $y#>,<#float $r#>,<#float $alpha#>,<#float $beta#>)" "S" "bool") ("f" "PDF_arc(" "PDF_arc(<#resource $p#>,<#float $x#>,<#float $y#>,<#float $r#>,<#float $alpha#>,<#float $beta#>)" "S" "bool") ("f" "PDF_add_weblink(" "PDF_add_weblink(<#resource $pdfdoc#>,<#float $lowerleftx#>,<#float $lowerlefty#>,<#float $upperrightx#>,<#float $upperrighty#>,<#string $url#>)" "S" "bool") ("f" "PDF_add_thumbnail(" "PDF_add_thumbnail(<#resource $pdfdoc#>,<#int $image#>)" "S" "bool") ("f" "PDF_add_textflow(" "PDF_add_textflow(<#resource $pdfdoc#>,<#int $textflow#>,<#string $text#>,<#string $optlist#>)" "S" "int") ("f" "PDF_add_table_cell(" "PDF_add_table_cell(<#resource $pdfdoc#>,<#int $table#>,<#int $column#>,<#int $row#>,<#string $text#>,<#string $optlist#>)" "S" "int") ("f" "PDF_add_pdflink(" "PDF_add_pdflink(<#resource $pdfdoc#>,<#float $bottom_left_x#>,<#float $bottom_left_y#>,<#float $up_right_x#>,<#float $up_right_y#>,<#string $filename#>,<#int $page#>,<#string $dest#>)" "S" "bool") ("f" "PDF_add_note(" "PDF_add_note(<#resource $pdfdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $contents#>,<#string $title#>,<#string $icon#>,<#int $open#>)" "S" "bool") ("f" "PDF_add_nameddest(" "PDF_add_nameddest(<#resource $pdfdoc#>,<#string $name#>,<#string $optlist#>)" "S" "bool") ("f" "PDF_add_locallink(" "PDF_add_locallink(<#resource $pdfdoc#>,<#float $lowerleftx#>,<#float $lowerlefty#>,<#float $upperrightx#>,<#float $upperrighty#>,<#int $page#>,<#string $dest#>)" "S" "bool") ("f" "PDF_add_launchlink(" "PDF_add_launchlink(<#resource $pdfdoc#>,<#float $llx#>,<#float $lly#>,<#float $urx#>,<#float $ury#>,<#string $filename#>)" "S" "bool") ("f" "PDF_activate_item(" "PDF_activate_item(<#resource $pdfdoc#>,<#int $id#>)" "S" "bool") ("f" "pcntl_wtermsig(" "pcntl_wtermsig(<#int $status#>)" "S" "int") ("f" "pcntl_wstopsig(" "pcntl_wstopsig(<#int $status#>)" "S" "int") ("f" "pcntl_wifstopped(" "pcntl_wifstopped(<#int $status#>)" "S" "bool") ("f" "pcntl_wifsignaled(" "pcntl_wifsignaled(<#int $status#>)" "S" "bool") ("f" "pcntl_wifexited(" "pcntl_wifexited(<#int $status#>)" "S" "bool") ("f" "pcntl_wexitstatus(" "pcntl_wexitstatus(<#int $status#>)" "S" "int") ("f" "pcntl_waitpid(" "pcntl_waitpid(<#int $pid#>,<#int &$status#>,<#int $options#>)" "S" "int") ("f" "pcntl_wait(" "pcntl_wait(<#int &$status#>,<#int $options#>)" "S" "int") ("f" "pcntl_strerror(" "pcntl_strerror(<#int $errno#>)" "S" "string") ("f" "pcntl_sigwaitinfo(" "pcntl_sigwaitinfo(<#array $set#>,<#array &$siginfo#>)" "S" "int") ("f" "pcntl_sigtimedwait(" "pcntl_sigtimedwait(<#array $set#>,<#array &$siginfo#>,<#int $seconds#>,<#int $nanoseconds#>)" "S" "int") ("f" "pcntl_sigprocmask(" "pcntl_sigprocmask(<#int $how#>,<#array $set#>,<#array &$oldset#>)" "S" "bool") ("f" "pcntl_signal_dispatch(" "pcntl_signal_dispatch(<##>)" "S" "bool") ("f" "pcntl_signal(" "pcntl_signal(<#int $signo#>,<#callback $handler#>,<#bool $restart_syscalls#>)" "S" "bool") ("f" "pcntl_setpriority(" "pcntl_setpriority(<#int $priority#>,<#int $pid#>,<#int $process_identifier#>)" "S" "bool") ("f" "pcntl_getpriority(" "pcntl_getpriority(<#int $pid#>,<#int $process_identifier#>)" "S" "int") ("f" "pcntl_get_last_error(" "pcntl_get_last_error(<##>)" "S" "int") ("f" "pcntl_fork(" "pcntl_fork(<##>)" "S" "int") ("f" "pcntl_exec(" "pcntl_exec(<#string $path#>,<#array $args#>,<#array $envs#>)" "S" "void") ("f" "pcntl_alarm(" "pcntl_alarm(<#int $seconds#>)" "S" "int") ("f" "pclose(" "pclose(<#resource $handle#>)" "S" "int") ("f" "pathinfo(" "pathinfo(<#string $path#>,<#int $options#>)" "S" "mixed") ("f" "password_verify(" "password_verify(<#string $password#>,<#string $hash#>)" "S" "boolean") ("f" "password_needs_rehash(" "password_needs_rehash(<#string $hash#>,<#integer $algo#>,<#array $options#>)" "S" "boolean") ("f" "password_hash(" "password_hash(<#string $password#>,<#integer $algo#>,<#array $options#>)" "S" "string") ("f" "password_get_info(" "password_get_info(<#string $hash#>)" "S" "array") ("f" "passthru(" "passthru(<#string $command#>,<#int &$return_var#>)" "S" "void") ("f" "parse_url(" "parse_url(<#string $url#>,<#int $component#>)" "S" "mixed") ("f" "parse_str(" "parse_str(<#string $str#>,<#array &$arr#>)" "S" "void") ("f" "parsekit_func_arginfo(" "parsekit_func_arginfo(<#mixed $function#>)" "S" "array") ("f" "parsekit_compile_string(" "parsekit_compile_string(<#string $phpcode#>,<#array &$errors#>,<#int $options#>)" "S" "array") ("f" "parsekit_compile_file(" "parsekit_compile_file(<#string $filename#>,<#array &$errors#>,<#int $options#>)" "S" "array") ("f" "parse_ini_string(" "parse_ini_string(<#string $ini#>,<#bool $process_sections#>,<#int $scanner_mode#>)" "S" "array") ("f" "parse_ini_file(" "parse_ini_file(<#string $filename#>,<#bool $process_sections#>,<#int $scanner_mode#>)" "S" "array") ("f" "pack(" "pack(<#string $format#>,<#mixed $args#>,<#mixed $__args__#>)" "S" "string") ("f" "override_function(" "override_function(<#string $function_name#>,<#string $function_args#>,<#string $function_code#>)" "S" "bool") ("f" "output_reset_rewrite_vars(" "output_reset_rewrite_vars(<##>)" "S" "bool") ("f" "output_add_rewrite_var(" "output_add_rewrite_var(<#string $name#>,<#string $value#>)" "S" "bool") ("f" "ord(" "ord(<#string $string#>)" "S" "int") ("f" "openssl_x509_read(" "openssl_x509_read(<#mixed $x509certdata#>)" "S" "resource") ("f" "openssl_x509_parse(" "openssl_x509_parse(<#mixed $x509cert#>,<#bool $shortnames#>)" "S" "array") ("f" "openssl_x509_free(" "openssl_x509_free(<#resource $x509cert#>)" "S" "void") ("f" "openssl_x509_fingerprint(" "openssl_x509_fingerprint(<#mixed $x509#>,<#string $hash_algorithm#>,<#bool $raw_output#>)" "S" "bool") ("f" "openssl_x509_export_to_file(" "openssl_x509_export_to_file(<#mixed $x509#>,<#string $outfilename#>,<#bool $notext#>)" "S" "bool") ("f" "openssl_x509_export(" "openssl_x509_export(<#mixed $x509#>,<#string &$output#>,<#bool $notext#>)" "S" "bool") ("f" "openssl_x509_checkpurpose(" "openssl_x509_checkpurpose(<#mixed $x509cert#>,<#int $purpose#>,<#array $cainfo#>,<#string $untrustedfile#>)" "S" "int") ("f" "openssl_x509_check_private_key(" "openssl_x509_check_private_key(<#mixed $cert#>,<#mixed $key#>)" "S" "bool") ("f" "openssl_verify(" "openssl_verify(<#string $data#>,<#string $signature#>,<#mixed $pub_key_id#>,<#mixed $signature_alg#>)" "S" "int") ("f" "openssl_spki_verify(" "openssl_spki_verify(<#string &$spkac#>)" "S" "string") ("f" "openssl_spki_new(" "openssl_spki_new(<#resource &$privkey#>,<#string &$challenge#>,<#int $algorithm#>)" "S" "string") ("f" "openssl_spki_export(" "openssl_spki_export(<#string &$spkac#>)" "S" "string") ("f" "openssl_spki_export_challenge(" "openssl_spki_export_challenge(<#string &$spkac#>)" "S" "string") ("f" "openssl_sign(" "openssl_sign(<#string $data#>,<#string &$signature#>,<#mixed $priv_key_id#>,<#mixed $signature_alg#>)" "S" "bool") ("f" "openssl_seal(" "openssl_seal(<#string $data#>,<#string &$sealed_data#>,<#array &$env_keys#>,<#array $pub_key_ids#>,<#string $method#>)" "S" "int") ("f" "openssl_random_pseudo_bytes(" "openssl_random_pseudo_bytes(<#int $length#>,<#bool &$crypto_strong#>)" "S" "string") ("f" "openssl_public_encrypt(" "openssl_public_encrypt(<#string $data#>,<#string &$crypted#>,<#mixed $key#>,<#int $padding#>)" "S" "bool") ("f" "openssl_public_decrypt(" "openssl_public_decrypt(<#string $data#>,<#string &$decrypted#>,<#mixed $key#>,<#int $padding#>)" "S" "bool") ("f" "openssl_private_encrypt(" "openssl_private_encrypt(<#string $data#>,<#string &$crypted#>,<#mixed $key#>,<#int $padding#>)" "S" "bool") ("f" "openssl_private_decrypt(" "openssl_private_decrypt(<#string $data#>,<#string &$decrypted#>,<#mixed $key#>,<#int $padding#>)" "S" "bool") ("f" "openssl_pkey_new(" "openssl_pkey_new(<#array $configargs#>)" "S" "resource") ("f" "openssl_pkey_get_public(" "openssl_pkey_get_public(<#mixed $certificate#>)" "S" "resource") ("f" "openssl_pkey_get_private(" "openssl_pkey_get_private(<#mixed $key#>,<#string $passphrase#>)" "S" "resource") ("f" "openssl_pkey_get_details(" "openssl_pkey_get_details(<#resource $key#>)" "S" "array") ("f" "openssl_pkey_free(" "openssl_pkey_free(<#resource $key#>)" "S" "void") ("f" "openssl_pkey_export_to_file(" "openssl_pkey_export_to_file(<#mixed $key#>,<#string $outfilename#>,<#string $passphrase#>,<#array $configargs#>)" "S" "bool") ("f" "openssl_pkey_export(" "openssl_pkey_export(<#mixed $key#>,<#string &$out#>,<#string $passphrase#>,<#array $configargs#>)" "S" "bool") ("f" "openssl_pkcs7_verify(" "openssl_pkcs7_verify(<#string $filename#>,<#int $flags#>,<#string $outfilename#>,<#array $cainfo#>,<#string $extracerts#>,<#string $content#>)" "S" "mixed") ("f" "openssl_pkcs7_sign(" "openssl_pkcs7_sign(<#string $infilename#>,<#string $outfilename#>,<#mixed $signcert#>,<#mixed $privkey#>,<#array $headers#>,<#int $flags#>,<#string $extracerts#>)" "S" "bool") ("f" "openssl_pkcs7_encrypt(" "openssl_pkcs7_encrypt(<#string $infile#>,<#string $outfile#>,<#mixed $recipcerts#>,<#array $headers#>,<#int $flags#>,<#int $cipherid#>)" "S" "bool") ("f" "openssl_pkcs7_decrypt(" "openssl_pkcs7_decrypt(<#string $infilename#>,<#string $outfilename#>,<#mixed $recipcert#>,<#mixed $recipkey#>)" "S" "bool") ("f" "openssl_pkcs12_read(" "openssl_pkcs12_read(<#string $pkcs12#>,<#array &$certs#>,<#string $pass#>)" "S" "bool") ("f" "openssl_pkcs12_export_to_file(" "openssl_pkcs12_export_to_file(<#mixed $x509#>,<#string $filename#>,<#mixed $priv_key#>,<#string $pass#>,<#array $args#>)" "S" "bool") ("f" "openssl_pkcs12_export(" "openssl_pkcs12_export(<#mixed $x509#>,<#string &$out#>,<#mixed $priv_key#>,<#string $pass#>,<#array $args#>)" "S" "bool") ("f" "openssl_pbkdf2(" "openssl_pbkdf2(<#string $password#>,<#string $salt#>,<#int $key_length#>,<#int $iterations#>,<#string $digest_algorithm#>)" "S" "string") ("f" "openssl_open(" "openssl_open(<#string $sealed_data#>,<#string &$open_data#>,<#string $env_key#>,<#mixed $priv_key_id#>,<#string $method#>)" "S" "bool") ("f" "openssl_get_md_methods(" "openssl_get_md_methods(<#bool $aliases#>)" "S" "array") ("f" "openssl_get_cipher_methods(" "openssl_get_cipher_methods(<#bool $aliases#>)" "S" "array") ("f" "openssl_get_cert_locations(" "openssl_get_cert_locations(<##>)" "S" "array") ("f" "openssl_free_key(" "openssl_free_key(<#resource $key_identifier#>)" "S" "void") ("f" "openssl_error_string(" "openssl_error_string(<##>)" "S" "string") ("f" "openssl_encrypt(" "openssl_encrypt(<#string $data#>,<#string $method#>,<#string $password#>,<#int $options#>,<#string $iv#>)" "S" "string") ("f" "openssl_digest(" "openssl_digest(<#string $data#>,<#string $method#>,<#bool $raw_output#>)" "S" "string") ("f" "openssl_dh_compute_key(" "openssl_dh_compute_key(<#string $pub_key#>,<#resource $dh_key#>)" "S" "string") ("f" "openssl_decrypt(" "openssl_decrypt(<#string $data#>,<#string $method#>,<#string $password#>,<#int $options#>,<#string $iv#>)" "S" "string") ("f" "openssl_csr_sign(" "openssl_csr_sign(<#mixed $csr#>,<#mixed $cacert#>,<#mixed $priv_key#>,<#int $days#>,<#array $configargs#>,<#int $serial#>)" "S" "resource") ("f" "openssl_csr_new(" "openssl_csr_new(<#array $dn#>,<#resource &$privkey#>,<#array $configargs#>,<#array $extraattribs#>)" "S" "mixed") ("f" "openssl_csr_get_subject(" "openssl_csr_get_subject(<#mixed $csr#>,<#bool $use_shortnames#>)" "S" "array") ("f" "openssl_csr_get_public_key(" "openssl_csr_get_public_key(<#mixed $csr#>,<#bool $use_shortnames#>)" "S" "resource") ("f" "openssl_csr_export_to_file(" "openssl_csr_export_to_file(<#resource $csr#>,<#string $outfilename#>,<#bool $notext#>)" "S" "bool") ("f" "openssl_csr_export(" "openssl_csr_export(<#resource $csr#>,<#string &$out#>,<#bool $notext#>)" "S" "bool") ("f" "openssl_cipher_iv_length(" "openssl_cipher_iv_length(<#string $method#>)" "S" "int") ("f" "openlog(" "openlog(<#string $ident#>,<#int $option#>,<#int $facility#>)" "S" "bool") ("f" "opendir(" "opendir(<#string $path#>,<#resource $context#>)" "S" "resource") ("f" "openal_stream(" "openal_stream(<#resource $source#>,<#int $format#>,<#int $rate#>)" "S" "resource") ("f" "openal_source_stop(" "openal_source_stop(<#resource $source#>)" "S" "bool") ("f" "openal_source_set(" "openal_source_set(<#resource $source#>,<#int $property#>,<#mixed $setting#>)" "S" "bool") ("f" "openal_source_rewind(" "openal_source_rewind(<#resource $source#>)" "S" "bool") ("f" "openal_source_play(" "openal_source_play(<#resource $source#>)" "S" "bool") ("f" "openal_source_pause(" "openal_source_pause(<#resource $source#>)" "S" "bool") ("f" "openal_source_get(" "openal_source_get(<#resource $source#>,<#int $property#>)" "S" "mixed") ("f" "openal_source_destroy(" "openal_source_destroy(<#resource $source#>)" "S" "bool") ("f" "openal_source_create(" "openal_source_create(<##>)" "S" "resource") ("f" "openal_listener_set(" "openal_listener_set(<#int $property#>,<#mixed $setting#>)" "S" "bool") ("f" "openal_listener_get(" "openal_listener_get(<#int $property#>)" "S" "mixed") ("f" "openal_device_open(" "openal_device_open(<#string $device_desc#>)" "S" "resource") ("f" "openal_device_close(" "openal_device_close(<#resource $device#>)" "S" "bool") ("f" "openal_context_suspend(" "openal_context_suspend(<#resource $context#>)" "S" "bool") ("f" "openal_context_process(" "openal_context_process(<#resource $context#>)" "S" "bool") ("f" "openal_context_destroy(" "openal_context_destroy(<#resource $context#>)" "S" "bool") ("f" "openal_context_current(" "openal_context_current(<#resource $context#>)" "S" "bool") ("f" "openal_context_create(" "openal_context_create(<#resource $device#>)" "S" "resource") ("f" "openal_buffer_loadwav(" "openal_buffer_loadwav(<#resource $buffer#>,<#string $wavfile#>)" "S" "bool") ("f" "openal_buffer_get(" "openal_buffer_get(<#resource $buffer#>,<#int $property#>)" "S" "int") ("f" "openal_buffer_destroy(" "openal_buffer_destroy(<#resource $buffer#>)" "S" "bool") ("f" "openal_buffer_data(" "openal_buffer_data(<#resource $buffer#>,<#int $format#>,<#string $data#>,<#int $freq#>)" "S" "bool") ("f" "openal_buffer_create(" "openal_buffer_create(<##>)" "S" "resource") ("f" "opcache_reset(" "opcache_reset(<##>)" "S" "boolean") ("f" "opcache_invalidate(" "opcache_invalidate(<#string $script#>,<#boolean $force#>)" "S" "boolean") ("f" "opcache_get_status(" "opcache_get_status(<#boolean $get_scripts#>)" "S" "array") ("f" "opcache_get_configuration(" "opcache_get_configuration(<##>)" "S" "array") ("f" "opcache_compile_file(" "opcache_compile_file(<#string $file#>)" "S" "boolean") ("f" "odbc_tables(" "odbc_tables(<#resource $connection_id#>,<#string $qualifier#>,<#string $owner#>,<#string $name#>,<#string $types#>)" "S" "resource") ("f" "odbc_tableprivileges(" "odbc_tableprivileges(<#resource $connection_id#>,<#string $qualifier#>,<#string $owner#>,<#string $name#>)" "S" "resource") ("f" "odbc_statistics(" "odbc_statistics(<#resource $connection_id#>,<#string $qualifier#>,<#string $owner#>,<#string $table_name#>,<#int $unique#>,<#int $accuracy#>)" "S" "resource") ("f" "odbc_specialcolumns(" "odbc_specialcolumns(<#resource $connection_id#>,<#int $type#>,<#string $qualifier#>,<#string $owner#>,<#string $table#>,<#int $scope#>,<#int $nullable#>)" "S" "resource") ("f" "odbc_setoption(" "odbc_setoption(<#resource $id#>,<#int $function#>,<#int $option#>,<#int $param#>)" "S" "bool") ("f" "odbc_rollback(" "odbc_rollback(<#resource $connection_id#>)" "S" "bool") ("f" "odbc_result(" "odbc_result(<#resource $result_id#>,<#mixed $field#>)" "S" "mixed") ("f" "odbc_result_all(" "odbc_result_all(<#resource $result_id#>,<#string $format#>)" "S" "int") ("f" "odbc_procedures(" "odbc_procedures(<#resource $connection_id#>)" "S" "resource") ("f" "odbc_procedurecolumns(" "odbc_procedurecolumns(<#resource $connection_id#>)" "S" "resource") ("f" "odbc_primarykeys(" "odbc_primarykeys(<#resource $connection_id#>,<#string $qualifier#>,<#string $owner#>,<#string $table#>)" "S" "resource") ("f" "odbc_prepare(" "odbc_prepare(<#resource $connection_id#>,<#string $query_string#>)" "S" "resource") ("f" "odbc_pconnect(" "odbc_pconnect(<#string $dsn#>,<#string $user#>,<#string $password#>,<#int $cursor_type#>)" "S" "resource") ("f" "odbc_num_rows(" "odbc_num_rows(<#resource $result_id#>)" "S" "int") ("f" "odbc_num_fields(" "odbc_num_fields(<#resource $result_id#>)" "S" "int") ("f" "odbc_next_result(" "odbc_next_result(<#resource $result_id#>)" "S" "bool") ("f" "odbc_longreadlen(" "odbc_longreadlen(<#resource $result_id#>,<#int $length#>)" "S" "bool") ("f" "odbc_gettypeinfo(" "odbc_gettypeinfo(<#resource $connection_id#>,<#int $data_type#>)" "S" "resource") ("f" "odbc_free_result(" "odbc_free_result(<#resource $result_id#>)" "S" "bool") ("f" "odbc_foreignkeys(" "odbc_foreignkeys(<#resource $connection_id#>,<#string $pk_qualifier#>,<#string $pk_owner#>,<#string $pk_table#>,<#string $fk_qualifier#>,<#string $fk_owner#>,<#string $fk_table#>)" "S" "resource") ("f" "odbc_field_type(" "odbc_field_type(<#resource $result_id#>,<#int $field_number#>)" "S" "string") ("f" "odbc_field_scale(" "odbc_field_scale(<#resource $result_id#>,<#int $field_number#>)" "S" "int") ("f" "odbc_field_num(" "odbc_field_num(<#resource $result_id#>,<#string $field_name#>)" "S" "int") ("f" "odbc_field_name(" "odbc_field_name(<#resource $result_id#>,<#int $field_number#>)" "S" "string") ("f" "odbc_field_len(" "odbc_field_len(<#resource $result_id#>,<#int $field_number#>)" "S" "int") ("f" "odbc_fetch_row(" "odbc_fetch_row(<#resource $result_id#>,<#int $row_number#>)" "S" "bool") ("f" "odbc_fetch_object(" "odbc_fetch_object(<#resource $result#>,<#int $rownumber#>)" "S" "object") ("f" "odbc_fetch_into(" "odbc_fetch_into(<#resource $result_id#>,<#array &$result_array#>,<#int $rownumber#>)" "S" "int") ("f" "odbc_fetch_array(" "odbc_fetch_array(<#resource $result#>,<#int $rownumber#>)" "S" "array") ("f" "odbc_execute(" "odbc_execute(<#resource $result_id#>,<#array $parameters_array#>)" "S" "bool") ("f" "odbc_exec(" "odbc_exec(<#resource $connection_id#>,<#string $query_string#>,<#int $flags#>)" "S" "resource") ("f" "odbc_error(" "odbc_error(<#resource $connection_id#>)" "S" "string") ("f" "odbc_errormsg(" "odbc_errormsg(<#resource $connection_id#>)" "S" "string") ("f" "odbc_data_source(" "odbc_data_source(<#resource $connection_id#>,<#int $fetch_type#>)" "S" "array") ("f" "odbc_cursor(" "odbc_cursor(<#resource $result_id#>)" "S" "string") ("f" "odbc_connect(" "odbc_connect(<#string $dsn#>,<#string $user#>,<#string $password#>,<#int $cursor_type#>)" "S" "resource") ("f" "odbc_commit(" "odbc_commit(<#resource $connection_id#>)" "S" "bool") ("f" "odbc_columns(" "odbc_columns(<#resource $connection_id#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>,<#string $column_name#>)" "S" "resource") ("f" "odbc_columnprivileges(" "odbc_columnprivileges(<#resource $connection_id#>,<#string $qualifier#>,<#string $owner#>,<#string $table_name#>,<#string $column_name#>)" "S" "resource") ("f" "odbc_close(" "odbc_close(<#resource $connection_id#>)" "S" "void") ("f" "odbc_close_all(" "odbc_close_all(<##>)" "S" "void") ("f" "odbc_binmode(" "odbc_binmode(<#resource $result_id#>,<#int $mode#>)" "S" "bool") ("f" "odbc_autocommit(" "odbc_autocommit(<#resource $connection_id#>,<#bool $OnOff#>)" "S" "mixed") ("f" "octdec(" "octdec(<#string $octal_string#>)" "S" "number") ("f" "oci_statement_type(" "oci_statement_type(<#resource $statement#>)" "S" "string") ("f" "oci_set_prefetch(" "oci_set_prefetch(<#resource $statement#>,<#int $rows#>)" "S" "bool") ("f" "oci_set_module_name(" "oci_set_module_name(<#resource $connection#>,<#string $module_name#>)" "S" "bool") ("f" "oci_set_edition(" "oci_set_edition(<#string $edition#>)" "S" "bool") ("f" "oci_set_client_info(" "oci_set_client_info(<#resource $connection#>,<#string $client_info#>)" "S" "bool") ("f" "oci_set_client_identifier(" "oci_set_client_identifier(<#resource $connection#>,<#string $client_identifier#>)" "S" "bool") ("f" "oci_set_action(" "oci_set_action(<#resource $connection#>,<#string $action_name#>)" "S" "bool") ("f" "oci_server_version(" "oci_server_version(<#resource $connection#>)" "S" "string") ("f" "oci_rollback(" "oci_rollback(<#resource $connection#>)" "S" "bool") ("f" "oci_result(" "oci_result(<#resource $statement#>,<#mixed $field#>)" "S" "mixed") ("f" "oci_pconnect(" "oci_pconnect(<#string $username#>,<#string $password#>,<#string $db#>,<#string $charset#>,<#int $session_mode#>)" "S" "resource") ("f" "oci_password_change(" "oci_password_change(<#resource $connection#>,<#string $username#>,<#string $old_password#>,<#string $new_password#>)" "S" "bool") ("f" "oci_parse(" "oci_parse(<#resource $connection#>,<#string $query#>)" "S" "resource") ("f" "oci_num_rows(" "oci_num_rows(<#resource $stmt#>)" "S" "int") ("f" "oci_num_fields(" "oci_num_fields(<#resource $statement#>)" "S" "int") ("f" "oci_new_descriptor(" "oci_new_descriptor(<#resource $connection#>,<#int $type#>)" "S" "OCI_Lob") ("f" "oci_new_cursor(" "oci_new_cursor(<#resource $connection#>)" "S" "resource") ("f" "oci_new_connect(" "oci_new_connect(<#string $username#>,<#string $password#>,<#string $db#>,<#string $charset#>,<#int $session_mode#>)" "S" "resource") ("f" "oci_new_collection(" "oci_new_collection(<#resource $connection#>,<#string $tdo#>,<#string $schema#>)" "S" "OCI_Collection") ("f" "oci_lob_is_equal(" "oci_lob_is_equal(<#OCI_Lob $lob1#>,<#OCI_Lob $lob2#>)" "S" "bool") ("f" "oci_lob_copy(" "oci_lob_copy(<#OCI_Lob $lob_to#>,<#OCI_Lob $lob_from#>,<#int $length#>)" "S" "bool") ("f" "oci_internal_debug(" "oci_internal_debug(<#int $onoff#>)" "S" "void") ("f" "oci_get_implicit_resultset(" "oci_get_implicit_resultset(<#resource $statement#>)" "S" "resource") ("f" "oci_free_statement(" "oci_free_statement(<#resource $statement#>)" "S" "bool") ("f" "oci_free_descriptor(" "oci_free_descriptor(<#resource $descriptor#>)" "S" "bool") ("f" "oci_field_type_raw(" "oci_field_type_raw(<#resource $statement#>,<#int $field#>)" "S" "int") ("f" "oci_field_type(" "oci_field_type(<#resource $stmt#>,<#int $field#>)" "S" "mixed") ("f" "oci_field_size(" "oci_field_size(<#resource $stmt#>,<#mixed $field#>)" "S" "int") ("f" "oci_field_scale(" "oci_field_scale(<#resource $statement#>,<#int $field#>)" "S" "int") ("f" "oci_field_precision(" "oci_field_precision(<#resource $statement#>,<#int $field#>)" "S" "int") ("f" "oci_field_name(" "oci_field_name(<#resource $statement#>,<#int $field#>)" "S" "string") ("f" "oci_field_is_null(" "oci_field_is_null(<#resource $statement#>,<#mixed $field#>)" "S" "bool") ("f" "oci_fetch_row(" "oci_fetch_row(<#resource $statement#>)" "S" "array") ("f" "oci_fetch_object(" "oci_fetch_object(<#resource $statement#>)" "S" "object") ("f" "oci_fetch(" "oci_fetch(<#resource $statement#>)" "S" "bool") ("f" "oci_fetch_assoc(" "oci_fetch_assoc(<#resource $statement#>)" "S" "array") ("f" "oci_fetch_array(" "oci_fetch_array(<#resource $statement#>,<#int $mode#>)" "S" "array") ("f" "oci_fetch_all(" "oci_fetch_all(<#resource $statement#>,<#array &$output#>,<#int $skip#>,<#int $maxrows#>,<#int $flags#>)" "S" "int") ("f" "oci_execute(" "oci_execute(<#resource $stmt#>,<#int $mode#>)" "S" "bool") ("f" "oci_error(" "oci_error(<#resource $source#>)" "S" "array") ("f" "oci_define_by_name(" "oci_define_by_name(<#resource $statement#>,<#string $column_name#>,<#mixed &$variable#>,<#int $type#>)" "S" "bool") ("f" "oci_connect(" "oci_connect(<#string $username#>,<#string $password#>,<#string $db#>,<#string $charset#>,<#int $session_mode#>)" "S" "resource") ("f" "oci_commit(" "oci_commit(<#resource $connection#>)" "S" "bool") ("f" "oci_close(" "oci_close(<#resource $connection#>)" "S" "bool") ("f" "oci_client_version(" "oci_client_version(<##>)" "S" "string") ("f" "oci_cancel(" "oci_cancel(<#resource $statement#>)" "S" "bool") ("f" "oci_bind_by_name(" "oci_bind_by_name(<#resource $stmt#>,<#string $ph_name#>,<#mixed &$variable#>,<#int $maxlength#>,<#int $type#>)" "S" "bool") ("f" "oci_bind_array_by_name(" "oci_bind_array_by_name(<#resource $statement#>,<#string $name#>,<#array &$var_array#>,<#int $max_table_length#>,<#int $max_item_length#>,<#int $type#>)" "S" "bool") ("f" "ob_tidyhandler(" "ob_tidyhandler(<#string $input#>,<#int $mode#>)" "S" "string") ("f" "ob_start(" "ob_start(<#callback $output_callback#>,<#int $chunk_size#>,<#bool $erase#>)" "S" "bool") ("f" "ob_list_handlers(" "ob_list_handlers(<##>)" "S" "array") ("f" "ob_inflatehandler(" "ob_inflatehandler(<#string $data#>,<#int $mode#>)" "S" "string") ("f" "ob_implicit_flush(" "ob_implicit_flush(<#int $flag#>)" "S" "void") ("f" "ob_iconv_handler(" "ob_iconv_handler(<#string $contents#>,<#int $status#>)" "S" "string") ("f" "ob_gzhandler(" "ob_gzhandler(<#string $buffer#>,<#int $mode#>)" "S" "string") ("f" "ob_get_status(" "ob_get_status(<#bool $full_status#>)" "S" "array") ("f" "ob_get_level(" "ob_get_level(<##>)" "S" "int") ("f" "ob_get_length(" "ob_get_length(<##>)" "S" "int") ("f" "ob_get_flush(" "ob_get_flush(<##>)" "S" "string") ("f" "ob_get_contents(" "ob_get_contents(<##>)" "S" "string") ("f" "ob_get_clean(" "ob_get_clean(<##>)" "S" "string") ("f" "ob_flush(" "ob_flush(<##>)" "S" "void") ("f" "ob_etaghandler(" "ob_etaghandler(<#string $data#>,<#int $mode#>)" "S" "string") ("f" "ob_end_flush(" "ob_end_flush(<##>)" "S" "bool") ("f" "ob_end_clean(" "ob_end_clean(<##>)" "S" "bool") ("f" "ob_deflatehandler(" "ob_deflatehandler(<#string $data#>,<#int $mode#>)" "S" "string") ("f" "ob_clean(" "ob_clean(<##>)" "S" "void") ("f" "oauth_urlencode(" "oauth_urlencode(<#字符串 $uri#>)" "S" #650="") ("f" "oauth_get_sbs(" "oauth_get_sbs(<#字符串 $http_method#>,<#字符串 $uri#>,<#数组 $request_parameters#>)" "S" #650#) ("f" "number_format(" "number_format(<#float $number#>,<#int $decimals#>)" "S" "string") ("f" "nthmac(" "nthmac(<#string $clent#>,<#string $data#>)" "S" "string") ("f" "nthmac(" "nthmac(<#string $clent#>,<#string $data#>)" "S" "string") ("f" "nsapi_virtual(" "nsapi_virtual(<#string $uri#>)" "S" "bool") ("f" "nsapi_response_headers(" "nsapi_response_headers(<##>)" "S" "array") ("f" "nsapi_request_headers(" "nsapi_request_headers(<##>)" "S" "array") ("f" "nl_langinfo(" "nl_langinfo(<#int $item#>)" "S" "string") ("f" "nl2br(" "nl2br(<#string $string#>,<#bool $is_xhtml#>)" "S" "string") ("f" "ngettext(" "ngettext(<#string $msgid1#>,<#string $msgid2#>,<#int $n#>)" "S" "string") ("f" "next(" "next(<#array &$array#>)" "S" "mixed") ("f" "newt_win_ternary(" "newt_win_ternary(<#string $title#>,<#string $button1_text#>,<#string $button2_text#>,<#string $button3_text#>,<#string $format#>,<#mixed $args#>,<#mixed $__args__#>)" "S" "int") ("f" "newt_win_messagev(" "newt_win_messagev(<#string $title#>,<#string $button_text#>,<#string $format#>,<#array $args#>)" "S" "void") ("f" "newt_win_message(" "newt_win_message(<#string $title#>,<#string $button_text#>,<#string $format#>,<#mixed $args#>,<#mixed $__args__#>)" "S" "void") ("f" "newt_win_menu(" "newt_win_menu(<#string $title#>,<#string $text#>,<#int $suggestedWidth#>,<#int $flexDown#>,<#int $flexUp#>,<#int $maxListHeight#>,<#array $items#>,<#int &$listItem#>,<#string $button1#>,<#string $__args__#>)" "S" "int") ("f" "newt_win_entries(" "newt_win_entries(<#string $title#>,<#string $text#>,<#int $suggested_width#>,<#int $flex_down#>,<#int $flex_up#>,<#int $data_width#>,<#array &$items#>,<#string $button1#>,<#string $__args__#>)" "S" "int") ("f" "newt_win_choice(" "newt_win_choice(<#string $title#>,<#string $button1_text#>,<#string $button2_text#>,<#string $format#>,<#mixed $args#>,<#mixed $__args__#>)" "S" "int") ("f" "newt_wait_for_key(" "newt_wait_for_key(<##>)" "S" "void") ("f" "newt_vertical_scrollbar(" "newt_vertical_scrollbar(<#int $left#>,<#int $top#>,<#int $height#>,<#int $normal_colorset#>,<#int $thumb_colorset#>)" "S" "resource") ("f" "newt_textbox_set_text(" "newt_textbox_set_text(<#resource $textbox#>,<#string $text#>)" "S" "void") ("f" "newt_textbox_set_height(" "newt_textbox_set_height(<#resource $textbox#>,<#int $height#>)" "S" "void") ("f" "newt_textbox(" "newt_textbox(<#int $left#>,<#int $top#>,<#int $width#>,<#int $height#>,<#int $flags#>)" "S" "resource") ("f" "newt_textbox_reflowed(" "newt_textbox_reflowed(<#int $left#>,<#int $top#>,<#char $text#>,<#int $width#>,<#int $flex_down#>,<#int $flex_up#>,<#int $flags#>)" "S" "resource") ("f" "newt_textbox_get_num_lines(" "newt_textbox_get_num_lines(<#resource $textbox#>)" "S" "int") ("f" "newt_suspend(" "newt_suspend(<##>)" "S" "void") ("f" "newt_set_suspend_callback(" "newt_set_suspend_callback(<#callable $function#>,<#mixed $data#>)" "S" "void") ("f" "newt_set_help_callback(" "newt_set_help_callback(<#mixed $function#>)" "S" "void") ("f" "newt_scrollbar_set(" "newt_scrollbar_set(<#resource $scrollbar#>,<#int $where#>,<#int $total#>)" "S" "void") ("f" "newt_scale_set(" "newt_scale_set(<#resource $scale#>,<#int $amount#>)" "S" "void") ("f" "newt_scale(" "newt_scale(<#int $left#>,<#int $top#>,<#int $width#>,<#int $full_value#>)" "S" "resource") ("f" "newt_run_form(" "newt_run_form(<#resource $form#>)" "S" "resource") ("f" "newt_resume(" "newt_resume(<##>)" "S" "void") ("f" "newt_resize_screen(" "newt_resize_screen(<#bool $redraw#>)" "S" "void") ("f" "newt_refresh(" "newt_refresh(<##>)" "S" "void") ("f" "newt_reflow_text(" "newt_reflow_text(<#string $text#>,<#int $width#>,<#int $flex_down#>,<#int $flex_up#>,<#int &$actual_width#>,<#int &$actual_height#>)" "S" "string") ("f" "newt_redraw_help_line(" "newt_redraw_help_line(<##>)" "S" "void") ("f" "newt_radio_get_current(" "newt_radio_get_current(<#resource $set_member#>)" "S" "resource") ("f" "newt_radiobutton(" "newt_radiobutton(<#int $left#>,<#int $top#>,<#string $text#>,<#bool $is_default#>,<#resource $prev_button#>)" "S" "resource") ("f" "newt_push_help_line(" "newt_push_help_line(<#string $text#>)" "S" "void") ("f" "newt_pop_window(" "newt_pop_window(<##>)" "S" "void") ("f" "newt_pop_help_line(" "newt_pop_help_line(<##>)" "S" "void") ("f" "newt_open_window(" "newt_open_window(<#int $left#>,<#int $top#>,<#int $width#>,<#int $height#>,<#string $title#>)" "S" "int") ("f" "newt_listitem_set(" "newt_listitem_set(<#resource $item#>,<#string $text#>)" "S" "void") ("f" "newt_listitem(" "newt_listitem(<#int $left#>,<#int $top#>,<#string $text#>,<#bool $is_default#>,<#resouce $prev_item#>,<#mixed $data#>,<#int $flags#>)" "S" "resource") ("f" "newt_listitem_get_data(" "newt_listitem_get_data(<#resource $item#>)" "S" "mixed") ("f" "newt_listbox_set_width(" "newt_listbox_set_width(<#resource $listbox#>,<#int $width#>)" "S" "void") ("f" "newt_listbox_set_entry(" "newt_listbox_set_entry(<#resource $listbox#>,<#int $num#>,<#string $text#>)" "S" "void") ("f" "newt_listbox_set_data(" "newt_listbox_set_data(<#resource $listbox#>,<#int $num#>,<#mixed $data#>)" "S" "void") ("f" "newt_listbox_set_current(" "newt_listbox_set_current(<#resource $listbox#>,<#int $num#>)" "S" "void") ("f" "newt_listbox_set_current_by_key(" "newt_listbox_set_current_by_key(<#resource $listbox#>,<#mixed $key#>)" "S" "void") ("f" "newt_listbox_select_item(" "newt_listbox_select_item(<#resource $listbox#>,<#mixed $key#>,<#int $sense#>)" "S" "void") ("f" "newt_listbox(" "newt_listbox(<#int $left#>,<#int $top#>,<#int $height#>,<#int $flags#>)" "S" "resource") ("f" "newt_listbox_item_count(" "newt_listbox_item_count(<#resource $listbox#>)" "S" "int") ("f" "newt_listbox_insert_entry(" "newt_listbox_insert_entry(<#resource $listbox#>,<#string $text#>,<#mixed $data#>,<#mixed $key#>)" "S" "void") ("f" "newt_listbox_get_selection(" "newt_listbox_get_selection(<#resource $listbox#>)" "S" "array") ("f" "newt_listbox_get_current(" "newt_listbox_get_current(<#resource $listbox#>)" "S" "string") ("f" "newt_listbox_delete_entry(" "newt_listbox_delete_entry(<#resource $listbox#>,<#mixed $key#>)" "S" "void") ("f" "newt_listbox_clear(" "newt_listbox_clear(<#resource $listobx#>)" "S" "void") ("f" "newt_listbox_clear_selection(" "newt_listbox_clear_selection(<#resource $listbox#>)" "S" "void") ("f" "newt_listbox_append_entry(" "newt_listbox_append_entry(<#resource $listbox#>,<#string $text#>,<#mixed $data#>)" "S" "void") ("f" "newt_label_set_text(" "newt_label_set_text(<#resource $label#>,<#string $text#>)" "S" "void") ("f" "newt_label(" "newt_label(<#int $left#>,<#int $top#>,<#string $text#>)" "S" "resource") ("f" "newt_init(" "newt_init(<##>)" "S" "int") ("f" "newt_grid_wrapped_window(" "newt_grid_wrapped_window(<#resource $grid#>,<#string $title#>)" "S" "void") ("f" "newt_grid_wrapped_window_at(" "newt_grid_wrapped_window_at(<#resource $grid#>,<#string $title#>,<#int $left#>,<#int $top#>)" "S" "void") ("f" "newt_grid_v_stacked(" "newt_grid_v_stacked(<#int $element1_type#>,<#resource $element1#>,<#int $__args__#>,<#resource $__args__#>)" "S" "resource") ("f" "newt_grid_v_close_stacked(" "newt_grid_v_close_stacked(<#int $element1_type#>,<#resource $element1#>,<#int $__args__#>,<#resource $__args__#>)" "S" "resource") ("f" "newt_grid_simple_window(" "newt_grid_simple_window(<#resource $text#>,<#resource $middle#>,<#resource $buttons#>)" "S" "resource") ("f" "newt_grid_set_field(" "newt_grid_set_field(<#resource $grid#>,<#int $col#>,<#int $row#>,<#int $type#>,<#resource $val#>,<#int $pad_left#>,<#int $pad_top#>,<#int $pad_right#>,<#int $pad_bottom#>,<#int $anchor#>,<#int $flags#>)" "S" "void") ("f" "newt_grid_place(" "newt_grid_place(<#resource $grid#>,<#int $left#>,<#int $top#>)" "S" "void") ("f" "newt_grid_h_stacked(" "newt_grid_h_stacked(<#int $element1_type#>,<#resource $element1#>,<#int $__args__#>,<#resource $__args__#>)" "S" "resource") ("f" "newt_grid_h_close_stacked(" "newt_grid_h_close_stacked(<#int $element1_type#>,<#resource $element1#>,<#int $__args__#>,<#resource $__args__#>)" "S" "resource") ("f" "newt_grid_get_size(" "newt_grid_get_size(<#resouce $grid#>,<#int &$width#>,<#int &$height#>)" "S" "void") ("f" "newt_grid_free(" "newt_grid_free(<#resource $grid#>,<#bool $recurse#>)" "S" "void") ("f" "newt_grid_basic_window(" "newt_grid_basic_window(<#resource $text#>,<#resource $middle#>,<#resource $buttons#>)" "S" "resource") ("f" "newt_grid_add_components_to_form(" "newt_grid_add_components_to_form(<#resource $grid#>,<#resource $form#>,<#bool $recurse#>)" "S" "void") ("f" "newt_get_screen_size(" "newt_get_screen_size(<#int &$cols#>,<#int &$rows#>)" "S" "void") ("f" "newt_form_watch_fd(" "newt_form_watch_fd(<#resource $form#>,<#resource $stream#>,<#int $flags#>)" "S" "void") ("f" "newt_form_set_width(" "newt_form_set_width(<#resource $form#>,<#int $width#>)" "S" "void") ("f" "newt_form_set_timer(" "newt_form_set_timer(<#resource $form#>,<#int $milliseconds#>)" "S" "void") ("f" "newt_form_set_size(" "newt_form_set_size(<#resource $form#>)" "S" "void") ("f" "newt_form_set_height(" "newt_form_set_height(<#resource $form#>,<#int $height#>)" "S" "void") ("f" "newt_form_set_background(" "newt_form_set_background(<#resource $from#>,<#int $background#>)" "S" "void") ("f" "newt_form_run(" "newt_form_run(<#resource $form#>,<#array &$exit_struct#>)" "S" "void") ("f" "newt_form(" "newt_form(<#resource $vert_bar#>,<#string $help#>,<#int $flags#>)" "S" "resource") ("f" "newt_form_get_current(" "newt_form_get_current(<#resource $form#>)" "S" "resource") ("f" "newt_form_destroy(" "newt_form_destroy(<#resource $form#>)" "S" "void") ("f" "newt_form_add_hot_key(" "newt_form_add_hot_key(<#resource $form#>,<#int $key#>)" "S" "void") ("f" "newt_form_add_component(" "newt_form_add_component(<#resource $form#>,<#resource $component#>)" "S" "void") ("f" "newt_form_add_components(" "newt_form_add_components(<#resource $form#>,<#array $components#>)" "S" "void") ("f" "newt_finished(" "newt_finished(<##>)" "S" "int") ("f" "newt_entry_set(" "newt_entry_set(<#resource $entry#>,<#string $value#>,<#bool $cursor_at_end#>)" "S" "void") ("f" "newt_entry_set_flags(" "newt_entry_set_flags(<#resource $entry#>,<#int $flags#>,<#int $sense#>)" "S" "void") ("f" "newt_entry_set_filter(" "newt_entry_set_filter(<#resource $entry#>,<#callable $filter#>,<#mixed $data#>)" "S" "void") ("f" "newt_entry(" "newt_entry(<#int $left#>,<#int $top#>,<#int $width#>,<#string $init_value#>,<#int $flags#>)" "S" "resource") ("f" "newt_entry_get_value(" "newt_entry_get_value(<#resource $entry#>)" "S" "string") ("f" "newt_draw_root_text(" "newt_draw_root_text(<#int $left#>,<#int $top#>,<#string $text#>)" "S" "void") ("f" "newt_draw_form(" "newt_draw_form(<#resource $form#>)" "S" "void") ("f" "newt_delay(" "newt_delay(<#int $microseconds#>)" "S" "void") ("f" "newt_cursor_on(" "newt_cursor_on(<##>)" "S" "void") ("f" "newt_cursor_off(" "newt_cursor_off(<##>)" "S" "void") ("f" "newt_create_grid(" "newt_create_grid(<#int $cols#>,<#int $rows#>)" "S" "resource") ("f" "newt_component_takes_focus(" "newt_component_takes_focus(<#resource $component#>,<#bool $takes_focus#>)" "S" "void") ("f" "newt_component_add_callback(" "newt_component_add_callback(<#resource $component#>,<#mixed $func_name#>,<#mixed $data#>)" "S" "void") ("f" "newt_compact_button(" "newt_compact_button(<#int $left#>,<#int $top#>,<#string $text#>)" "S" "resource") ("f" "newt_cls(" "newt_cls(<##>)" "S" "void") ("f" "newt_clear_key_buffer(" "newt_clear_key_buffer(<##>)" "S" "void") ("f" "newt_checkbox_tree_set_width(" "newt_checkbox_tree_set_width(<#resource $checkbox_tree#>,<#int $width#>)" "S" "void") ("f" "newt_checkbox_tree_set_entry(" "newt_checkbox_tree_set_entry(<#resource $checkboxtree#>,<#mixed $data#>,<#string $text#>)" "S" "void") ("f" "newt_checkbox_tree_set_entry_value(" "newt_checkbox_tree_set_entry_value(<#resource $checkboxtree#>,<#mixed $data#>,<#string $value#>)" "S" "void") ("f" "newt_checkbox_tree_set_current(" "newt_checkbox_tree_set_current(<#resource $checkboxtree#>,<#mixed $data#>)" "S" "void") ("f" "newt_checkbox_tree(" "newt_checkbox_tree(<#int $left#>,<#int $top#>,<#int $height#>,<#int $flags#>)" "S" "resource") ("f" "newt_checkbox_tree_multi(" "newt_checkbox_tree_multi(<#int $left#>,<#int $top#>,<#int $height#>,<#string $seq#>,<#int $flags#>)" "S" "resource") ("f" "newt_checkbox_tree_get_selection(" "newt_checkbox_tree_get_selection(<#resource $checkboxtree#>)" "S" "array") ("f" "newt_checkbox_tree_get_multi_selection(" "newt_checkbox_tree_get_multi_selection(<#resource $checkboxtree#>,<#string $seqnum#>)" "S" "array") ("f" "newt_checkbox_tree_get_entry_value(" "newt_checkbox_tree_get_entry_value(<#resource $checkboxtree#>,<#mixed $data#>)" "S" "string") ("f" "newt_checkbox_tree_get_current(" "newt_checkbox_tree_get_current(<#resource $checkboxtree#>)" "S" "mixed") ("f" "newt_checkbox_tree_find_item(" "newt_checkbox_tree_find_item(<#resource $checkboxtree#>,<#mixed $data#>)" "S" "array") ("f" "newt_checkbox_tree_add_item(" "newt_checkbox_tree_add_item(<#resource $checkboxtree#>,<#string $text#>,<#mixed $data#>,<#int $flags#>,<#int $index#>,<#int $__args__#>)" "S" "void") ("f" "newt_checkbox_set_value(" "newt_checkbox_set_value(<#resource $checkbox#>,<#string $value#>)" "S" "void") ("f" "newt_checkbox_set_flags(" "newt_checkbox_set_flags(<#resource $checkbox#>,<#int $flags#>,<#int $sense#>)" "S" "void") ("f" "newt_checkbox(" "newt_checkbox(<#int $left#>,<#int $top#>,<#string $text#>,<#string $def_value#>,<#string $seq#>)" "S" "resource") ("f" "newt_checkbox_get_value(" "newt_checkbox_get_value(<#resource $checkbox#>)" "S" "string") ("f" "newt_centered_window(" "newt_centered_window(<#int $width#>,<#int $height#>,<#string $title#>)" "S" "int") ("f" "newt_button(" "newt_button(<#int $left#>,<#int $top#>,<#string $text#>)" "S" "resource") ("f" "newt_button_bar(" "newt_button_bar(<#array &$buttons#>)" "S" "resource") ("f" "newt_bell(" "newt_bell(<##>)" "S" "void") ("f" "ncurses_wvline(" "ncurses_wvline(<#resource $window#>,<#int $charattr#>,<#int $n#>)" "S" "int") ("f" "ncurses_wstandout(" "ncurses_wstandout(<#resource $window#>)" "S" "int") ("f" "ncurses_wstandend(" "ncurses_wstandend(<#resource $window#>)" "S" "int") ("f" "ncurses_wrefresh(" "ncurses_wrefresh(<#resource $window#>)" "S" "int") ("f" "ncurses_wnoutrefresh(" "ncurses_wnoutrefresh(<#resource $window#>)" "S" "int") ("f" "ncurses_wmove(" "ncurses_wmove(<#resource $window#>,<#int $y#>,<#int $x#>)" "S" "int") ("f" "ncurses_wmouse_trafo(" "ncurses_wmouse_trafo(<#resource $window#>,<#int &$y#>,<#int &$x#>,<#bool $toscreen#>)" "S" "bool") ("f" "ncurses_whline(" "ncurses_whline(<#resource $window#>,<#int $charattr#>,<#int $n#>)" "S" "int") ("f" "ncurses_wgetch(" "ncurses_wgetch(<#resource $window#>)" "S" "int") ("f" "ncurses_werase(" "ncurses_werase(<#resource $window#>)" "S" "int") ("f" "ncurses_wcolor_set(" "ncurses_wcolor_set(<#resource $window#>,<#int $color_pair#>)" "S" "int") ("f" "ncurses_wclear(" "ncurses_wclear(<#resource $window#>)" "S" "int") ("f" "ncurses_wborder(" "ncurses_wborder(<#resource $window#>,<#int $left#>,<#int $right#>,<#int $top#>,<#int $bottom#>,<#int $tl_corner#>,<#int $tr_corner#>,<#int $bl_corner#>,<#int $br_corner#>)" "S" "int") ("f" "ncurses_wattrset(" "ncurses_wattrset(<#resource $window#>,<#int $attrs#>)" "S" "int") ("f" "ncurses_wattron(" "ncurses_wattron(<#resource $window#>,<#int $attrs#>)" "S" "int") ("f" "ncurses_wattroff(" "ncurses_wattroff(<#resource $window#>,<#int $attrs#>)" "S" "int") ("f" "ncurses_waddstr(" "ncurses_waddstr(<#resource $window#>,<#string $str#>,<#int $n#>)" "S" "int") ("f" "ncurses_waddch(" "ncurses_waddch(<#resource $window#>,<#int $ch#>)" "S" "int") ("f" "ncurses_vline(" "ncurses_vline(<#int $charattr#>,<#int $n#>)" "S" "int") ("f" "ncurses_vidattr(" "ncurses_vidattr(<#int $intarg#>)" "S" "int") ("f" "ncurses_use_extended_names(" "ncurses_use_extended_names(<#bool $flag#>)" "S" "int") ("f" "ncurses_use_env(" "ncurses_use_env(<#bool $flag#>)" "S" "void") ("f" "ncurses_use_default_colors(" "ncurses_use_default_colors(<##>)" "S" "bool") ("f" "ncurses_update_panels(" "ncurses_update_panels(<##>)" "S" "void") ("f" "ncurses_ungetmouse(" "ncurses_ungetmouse(<#array $mevent#>)" "S" "bool") ("f" "ncurses_ungetch(" "ncurses_ungetch(<#int $keycode#>)" "S" "int") ("f" "ncurses_typeahead(" "ncurses_typeahead(<#int $fd#>)" "S" "int") ("f" "ncurses_top_panel(" "ncurses_top_panel(<#resource $panel#>)" "S" "int") ("f" "ncurses_timeout(" "ncurses_timeout(<#int $millisec#>)" "S" "void") ("f" "ncurses_termname(" "ncurses_termname(<##>)" "S" "string") ("f" "ncurses_termattrs(" "ncurses_termattrs(<##>)" "S" "bool") ("f" "ncurses_start_color(" "ncurses_start_color(<##>)" "S" "int") ("f" "ncurses_standout(" "ncurses_standout(<##>)" "S" "int") ("f" "ncurses_standend(" "ncurses_standend(<##>)" "S" "int") ("f" "ncurses_slk_touch(" "ncurses_slk_touch(<##>)" "S" "int") ("f" "ncurses_slk_set(" "ncurses_slk_set(<#int $labelnr#>,<#string $label#>,<#int $format#>)" "S" "bool") ("f" "ncurses_slk_restore(" "ncurses_slk_restore(<##>)" "S" "int") ("f" "ncurses_slk_refresh(" "ncurses_slk_refresh(<##>)" "S" "int") ("f" "ncurses_slk_noutrefresh(" "ncurses_slk_noutrefresh(<##>)" "S" "bool") ("f" "ncurses_slk_init(" "ncurses_slk_init(<#int $format#>)" "S" "bool") ("f" "ncurses_slk_color(" "ncurses_slk_color(<#int $intarg#>)" "S" "int") ("f" "ncurses_slk_clear(" "ncurses_slk_clear(<##>)" "S" "bool") ("f" "ncurses_slk_attrset(" "ncurses_slk_attrset(<#int $intarg#>)" "S" "int") ("f" "ncurses_slk_attron(" "ncurses_slk_attron(<#int $intarg#>)" "S" "int") ("f" "ncurses_slk_attroff(" "ncurses_slk_attroff(<#int $intarg#>)" "S" "int") ("f" "ncurses_slk_attr(" "ncurses_slk_attr(<##>)" "S" "int") ("f" "ncurses_show_panel(" "ncurses_show_panel(<#resource $panel#>)" "S" "int") ("f" "ncurses_scr_set(" "ncurses_scr_set(<#string $filename#>)" "S" "int") ("f" "ncurses_scr_restore(" "ncurses_scr_restore(<#string $filename#>)" "S" "int") ("f" "ncurses_scrl(" "ncurses_scrl(<#int $count#>)" "S" "int") ("f" "ncurses_scr_init(" "ncurses_scr_init(<#string $filename#>)" "S" "int") ("f" "ncurses_scr_dump(" "ncurses_scr_dump(<#string $filename#>)" "S" "int") ("f" "ncurses_savetty(" "ncurses_savetty(<##>)" "S" "bool") ("f" "ncurses_resetty(" "ncurses_resetty(<##>)" "S" "bool") ("f" "ncurses_reset_shell_mode(" "ncurses_reset_shell_mode(<##>)" "S" "int") ("f" "ncurses_reset_prog_mode(" "ncurses_reset_prog_mode(<##>)" "S" "int") ("f" "ncurses_replace_panel(" "ncurses_replace_panel(<#resource $panel#>,<#resource $window#>)" "S" "int") ("f" "ncurses_refresh(" "ncurses_refresh(<#int $ch#>)" "S" "int") ("f" "ncurses_raw(" "ncurses_raw(<##>)" "S" "bool") ("f" "ncurses_qiflush(" "ncurses_qiflush(<##>)" "S" "void") ("f" "ncurses_putp(" "ncurses_putp(<#string $text#>)" "S" "int") ("f" "ncurses_prefresh(" "ncurses_prefresh(<#resource $pad#>,<#int $pminrow#>,<#int $pmincol#>,<#int $sminrow#>,<#int $smincol#>,<#int $smaxrow#>,<#int $smaxcol#>)" "S" "int") ("f" "ncurses_pnoutrefresh(" "ncurses_pnoutrefresh(<#resource $pad#>,<#int $pminrow#>,<#int $pmincol#>,<#int $sminrow#>,<#int $smincol#>,<#int $smaxrow#>,<#int $smaxcol#>)" "S" "int") ("f" "ncurses_panel_window(" "ncurses_panel_window(<#resource $panel#>)" "S" "resource") ("f" "ncurses_panel_below(" "ncurses_panel_below(<#resource $panel#>)" "S" "resource") ("f" "ncurses_panel_above(" "ncurses_panel_above(<#resource $panel#>)" "S" "resource") ("f" "ncurses_pair_content(" "ncurses_pair_content(<#int $pair#>,<#int &$f#>,<#int &$b#>)" "S" "int") ("f" "ncurses_noraw(" "ncurses_noraw(<##>)" "S" "bool") ("f" "ncurses_noqiflush(" "ncurses_noqiflush(<##>)" "S" "void") ("f" "ncurses_nonl(" "ncurses_nonl(<##>)" "S" "bool") ("f" "ncurses_noecho(" "ncurses_noecho(<##>)" "S" "bool") ("f" "ncurses_nocbreak(" "ncurses_nocbreak(<##>)" "S" "bool") ("f" "ncurses_nl(" "ncurses_nl(<##>)" "S" "bool") ("f" "ncurses_newwin(" "ncurses_newwin(<#int $rows#>,<#int $cols#>,<#int $y#>,<#int $x#>)" "S" "resource") ("f" "ncurses_new_panel(" "ncurses_new_panel(<#resource $window#>)" "S" "resource") ("f" "ncurses_newpad(" "ncurses_newpad(<#int $rows#>,<#int $cols#>)" "S" "resource") ("f" "ncurses_napms(" "ncurses_napms(<#int $milliseconds#>)" "S" "int") ("f" "ncurses_mvwaddstr(" "ncurses_mvwaddstr(<#resource $window#>,<#int $y#>,<#int $x#>,<#string $text#>)" "S" "int") ("f" "ncurses_mvvline(" "ncurses_mvvline(<#int $y#>,<#int $x#>,<#int $attrchar#>,<#int $n#>)" "S" "int") ("f" "ncurses_mvinch(" "ncurses_mvinch(<#int $y#>,<#int $x#>)" "S" "int") ("f" "ncurses_mvhline(" "ncurses_mvhline(<#int $y#>,<#int $x#>,<#int $attrchar#>,<#int $n#>)" "S" "int") ("f" "ncurses_mvgetch(" "ncurses_mvgetch(<#int $y#>,<#int $x#>)" "S" "int") ("f" "ncurses_mvdelch(" "ncurses_mvdelch(<#int $y#>,<#int $x#>)" "S" "int") ("f" "ncurses_mvcur(" "ncurses_mvcur(<#int $old_y#>,<#int $old_x#>,<#int $new_y#>,<#int $new_x#>)" "S" "int") ("f" "ncurses_mvaddstr(" "ncurses_mvaddstr(<#int $y#>,<#int $x#>,<#string $s#>)" "S" "int") ("f" "ncurses_mvaddnstr(" "ncurses_mvaddnstr(<#int $y#>,<#int $x#>,<#string $s#>,<#int $n#>)" "S" "int") ("f" "ncurses_mvaddchstr(" "ncurses_mvaddchstr(<#int $y#>,<#int $x#>,<#string $s#>)" "S" "int") ("f" "ncurses_mvaddchnstr(" "ncurses_mvaddchnstr(<#int $y#>,<#int $x#>,<#string $s#>,<#int $n#>)" "S" "int") ("f" "ncurses_mvaddch(" "ncurses_mvaddch(<#int $y#>,<#int $x#>,<#int $c#>)" "S" "int") ("f" "ncurses_move_panel(" "ncurses_move_panel(<#resource $panel#>,<#int $startx#>,<#int $starty#>)" "S" "int") ("f" "ncurses_move(" "ncurses_move(<#int $y#>,<#int $x#>)" "S" "int") ("f" "ncurses_mouse_trafo(" "ncurses_mouse_trafo(<#int &$y#>,<#int &$x#>,<#bool $toscreen#>)" "S" "bool") ("f" "ncurses_mousemask(" "ncurses_mousemask(<#int $newmask#>,<#int &$oldmask#>)" "S" "int") ("f" "ncurses_mouseinterval(" "ncurses_mouseinterval(<#int $milliseconds#>)" "S" "int") ("f" "ncurses_meta(" "ncurses_meta(<#resource $window#>,<#bool $bit8#>)" "S" "int") ("f" "ncurses_longname(" "ncurses_longname(<##>)" "S" "string") ("f" "ncurses_killchar(" "ncurses_killchar(<##>)" "S" "string") ("f" "ncurses_keypad(" "ncurses_keypad(<#resource $window#>,<#bool $bf#>)" "S" "int") ("f" "ncurses_keyok(" "ncurses_keyok(<#int $keycode#>,<#bool $enable#>)" "S" "int") ("f" "ncurses_isendwin(" "ncurses_isendwin(<##>)" "S" "bool") ("f" "ncurses_instr(" "ncurses_instr(<#string &$buffer#>)" "S" "int") ("f" "ncurses_insstr(" "ncurses_insstr(<#string $text#>)" "S" "int") ("f" "ncurses_insertln(" "ncurses_insertln(<##>)" "S" "int") ("f" "ncurses_insdelln(" "ncurses_insdelln(<#int $count#>)" "S" "int") ("f" "ncurses_insch(" "ncurses_insch(<#int $character#>)" "S" "int") ("f" "ncurses_init(" "ncurses_init(<##>)" "S" "void") ("f" "ncurses_init_pair(" "ncurses_init_pair(<#int $pair#>,<#int $fg#>,<#int $bg#>)" "S" "int") ("f" "ncurses_init_color(" "ncurses_init_color(<#int $color#>,<#int $r#>,<#int $g#>,<#int $b#>)" "S" "int") ("f" "ncurses_inch(" "ncurses_inch(<##>)" "S" "string") ("f" "ncurses_hline(" "ncurses_hline(<#int $charattr#>,<#int $n#>)" "S" "int") ("f" "ncurses_hide_panel(" "ncurses_hide_panel(<#resource $panel#>)" "S" "int") ("f" "ncurses_has_key(" "ncurses_has_key(<#int $keycode#>)" "S" "int") ("f" "ncurses_has_il(" "ncurses_has_il(<##>)" "S" "bool") ("f" "ncurses_has_ic(" "ncurses_has_ic(<##>)" "S" "bool") ("f" "ncurses_has_colors(" "ncurses_has_colors(<##>)" "S" "bool") ("f" "ncurses_halfdelay(" "ncurses_halfdelay(<#int $tenth#>)" "S" "int") ("f" "ncurses_getyx(" "ncurses_getyx(<#resource $window#>,<#int &$y#>,<#int &$x#>)" "S" "void") ("f" "ncurses_getmouse(" "ncurses_getmouse(<#array &$mevent#>)" "S" "bool") ("f" "ncurses_getmaxyx(" "ncurses_getmaxyx(<#resource $window#>,<#int &$y#>,<#int &$x#>)" "S" "void") ("f" "ncurses_getch(" "ncurses_getch(<##>)" "S" "int") ("f" "ncurses_flushinp(" "ncurses_flushinp(<##>)" "S" "bool") ("f" "ncurses_flash(" "ncurses_flash(<##>)" "S" "bool") ("f" "ncurses_filter(" "ncurses_filter(<##>)" "S" "void") ("f" "ncurses_erasechar(" "ncurses_erasechar(<##>)" "S" "string") ("f" "ncurses_erase(" "ncurses_erase(<##>)" "S" "bool") ("f" "ncurses_end(" "ncurses_end(<##>)" "S" "int") ("f" "ncurses_echochar(" "ncurses_echochar(<#int $character#>)" "S" "int") ("f" "ncurses_echo(" "ncurses_echo(<##>)" "S" "bool") ("f" "ncurses_doupdate(" "ncurses_doupdate(<##>)" "S" "bool") ("f" "ncurses_delwin(" "ncurses_delwin(<#resource $window#>)" "S" "bool") ("f" "ncurses_del_panel(" "ncurses_del_panel(<#resource $panel#>)" "S" "bool") ("f" "ncurses_deleteln(" "ncurses_deleteln(<##>)" "S" "bool") ("f" "ncurses_delch(" "ncurses_delch(<##>)" "S" "bool") ("f" "ncurses_delay_output(" "ncurses_delay_output(<#int $milliseconds#>)" "S" "int") ("f" "ncurses_def_shell_mode(" "ncurses_def_shell_mode(<##>)" "S" "bool") ("f" "ncurses_def_prog_mode(" "ncurses_def_prog_mode(<##>)" "S" "bool") ("f" "ncurses_define_key(" "ncurses_define_key(<#string $definition#>,<#int $keycode#>)" "S" "int") ("f" "ncurses_curs_set(" "ncurses_curs_set(<#int $visibility#>)" "S" "int") ("f" "ncurses_color_set(" "ncurses_color_set(<#int $pair#>)" "S" "int") ("f" "ncurses_color_content(" "ncurses_color_content(<#int $color#>,<#int &$r#>,<#int &$g#>,<#int &$b#>)" "S" "int") ("f" "ncurses_clrtoeol(" "ncurses_clrtoeol(<##>)" "S" "bool") ("f" "ncurses_clrtobot(" "ncurses_clrtobot(<##>)" "S" "bool") ("f" "ncurses_clear(" "ncurses_clear(<##>)" "S" "bool") ("f" "ncurses_cbreak(" "ncurses_cbreak(<##>)" "S" "bool") ("f" "ncurses_can_change_color(" "ncurses_can_change_color(<##>)" "S" "bool") ("f" "ncurses_bottom_panel(" "ncurses_bottom_panel(<#resource $panel#>)" "S" "int") ("f" "ncurses_border(" "ncurses_border(<#int $left#>,<#int $right#>,<#int $top#>,<#int $bottom#>,<#int $tl_corner#>,<#int $tr_corner#>,<#int $bl_corner#>,<#int $br_corner#>)" "S" "int") ("f" "ncurses_bkgdset(" "ncurses_bkgdset(<#int $attrchar#>)" "S" "void") ("f" "ncurses_bkgd(" "ncurses_bkgd(<#int $attrchar#>)" "S" "int") ("f" "ncurses_beep(" "ncurses_beep(<##>)" "S" "int") ("f" "ncurses_baudrate(" "ncurses_baudrate(<##>)" "S" "int") ("f" "ncurses_attrset(" "ncurses_attrset(<#int $attributes#>)" "S" "int") ("f" "ncurses_attron(" "ncurses_attron(<#int $attributes#>)" "S" "int") ("f" "ncurses_attroff(" "ncurses_attroff(<#int $attributes#>)" "S" "int") ("f" "ncurses_assume_default_colors(" "ncurses_assume_default_colors(<#int $fg#>,<#int $bg#>)" "S" "int") ("f" "ncurses_addstr(" "ncurses_addstr(<#string $text#>)" "S" "int") ("f" "ncurses_addnstr(" "ncurses_addnstr(<#string $s#>,<#int $n#>)" "S" "int") ("f" "ncurses_addchstr(" "ncurses_addchstr(<#string $s#>)" "S" "int") ("f" "ncurses_addchnstr(" "ncurses_addchnstr(<#string $s#>,<#int $n#>)" "S" "int") ("f" "ncurses_addch(" "ncurses_addch(<#int $ch#>)" "S" "int") ("f" "natsort(" "natsort(<#array &$array#>)" "S" "bool") ("f" "natcasesort(" "natcasesort(<#array &$array#>)" "S" "bool") ("f" "mysql_unbuffered_query(" "mysql_unbuffered_query(<#string $query#>,<#resource $link_identifier#>)" "S" "resource") ("f" "mysql_thread_id(" "mysql_thread_id(<#resource $link_identifier#>)" "S" "int") ("f" "mysql_tablename(" "mysql_tablename(<#resource $result#>,<#int $i#>)" "S" "string") ("f" "mysql_stat(" "mysql_stat(<#resource $link_identifier#>)" "S" "string") ("f" "mysql_set_charset(" "mysql_set_charset(<#string $charset#>,<#resource $link_identifier#>)" "S" "bool") ("f" "mysql_select_db(" "mysql_select_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "mysql_result(" "mysql_result(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "mixed") ("f" "mysql_real_escape_string(" "mysql_real_escape_string(<#string $unescaped_string#>,<#resource $link_identifier#>)" "S" "string") ("f" "mysql_query(" "mysql_query(<#string $query#>,<#resource $link_identifier#>)" "S" "resource") ("f" "mysql_ping(" "mysql_ping(<#resource $link_identifier#>)" "S" "bool") ("f" "mysql_pconnect(" "mysql_pconnect(<#string $server#>,<#string $username#>,<#string $password#>,<#int $client_flags#>)" "S" "resource") ("f" "mysql_num_rows(" "mysql_num_rows(<#resource $result#>)" "S" "int") ("f" "mysql_num_fields(" "mysql_num_fields(<#resource $result#>)" "S" "int") ("f" "mysqlnd_uh_set_statement_proxy(" "mysqlnd_uh_set_statement_proxy(<#MysqlndUhStatement &$statement_proxy#>)" "S" "bool") ("f" "mysqlnd_uh_set_connection_proxy(" "mysqlnd_uh_set_connection_proxy(<#MysqlndUhConnection &$connection_proxy#>,<#mysqli &$mysqli_connection#>)" "S" "bool") ("f" "mysqlnd_uh_convert_to_mysqlnd(" "mysqlnd_uh_convert_to_mysqlnd(<#mysqli &$mysql_connection#>)" "S" "resource") ("f" "mysqlnd_qc_set_user_handlers(" "mysqlnd_qc_set_user_handlers(<#string $get_hash#>,<#string $find_query_in_cache#>,<#string $return_to_cache#>,<#string $add_query_to_cache_if_not_exists#>,<#string $query_is_select#>,<#string $update_query_run_time_stats#>,<#string $get_stats#>,<#string $clear_cache#>)" "S" "bool") ("f" "mysqlnd_qc_set_storage_handler(" "mysqlnd_qc_set_storage_handler(<#string $handler#>)" "S" "bool") ("f" "mysqlnd_qc_set_is_select(" "mysqlnd_qc_set_is_select(<#string $callback#>)" "S" "mixed") ("f" "mysqlnd_qc_set_cache_condition(" "mysqlnd_qc_set_cache_condition(<#int $condition_type#>,<#mixed $condition#>,<#mixed $condition_option#>)" "S" "bool") ("f" "mysqlnd_qc_get_query_trace_log(" "mysqlnd_qc_get_query_trace_log(<##>)" "S" "array") ("f" "mysqlnd_qc_get_normalized_query_trace_log(" "mysqlnd_qc_get_normalized_query_trace_log(<##>)" "S" "array") ("f" "mysqlnd_qc_get_core_stats(" "mysqlnd_qc_get_core_stats(<##>)" "S" "array") ("f" "mysqlnd_qc_get_cache_info(" "mysqlnd_qc_get_cache_info(<##>)" "S" "array") ("f" "mysqlnd_qc_get_available_handlers(" "mysqlnd_qc_get_available_handlers(<##>)" "S" "array") ("f" "mysqlnd_qc_clear_cache(" "mysqlnd_qc_clear_cache(<##>)" "S" "bool") ("f" "mysqlnd_ms_xa_rollback(" "mysqlnd_ms_xa_rollback(<#mixed $connection#>,<#string $gtrid#>)" "S" "int") ("f" "mysqlnd_ms_xa_gc(" "mysqlnd_ms_xa_gc(<#mixed $connection#>,<#string $gtrid#>,<#boolean $ignore_max_retries#>)" "S" "int") ("f" "mysqlnd_ms_xa_commit(" "mysqlnd_ms_xa_commit(<#mixed $connection#>,<#string $gtrid#>)" "S" "int") ("f" "mysqlnd_ms_xa_begin(" "mysqlnd_ms_xa_begin(<#mixed $connection#>,<#string $gtrid#>,<#int $timeout#>)" "S" "int") ("f" "mysqlnd_ms_set_user_pick_server(" "mysqlnd_ms_set_user_pick_server(<#string $function#>)" "S" "bool") ("f" "mysqlnd_ms_set_qos(" "mysqlnd_ms_set_qos(<#mixed $connection#>,<#int $service_level#>,<#int $service_level_option#>,<#mixed $option_value#>)" "S" "bool") ("f" "mysqlnd_ms_query_is_select(" "mysqlnd_ms_query_is_select(<#string $query#>)" "S" "int") ("f" "mysqlnd_ms_match_wild(" "mysqlnd_ms_match_wild(<#string $table_name#>,<#string $wildcard#>)" "S" "bool") ("f" "mysqlnd_ms_get_stats(" "mysqlnd_ms_get_stats(<##>)" "S" "array") ("f" "mysqlnd_ms_get_last_used_connection(" "mysqlnd_ms_get_last_used_connection(<#mixed $connection#>)" "S" "array") ("f" "mysqlnd_ms_get_last_gtid(" "mysqlnd_ms_get_last_gtid(<#mixed $connection#>)" "S" "string") ("f" "mysqlnd_ms_fabric_select_shard(" "mysqlnd_ms_fabric_select_shard(<#mixed $connection#>,<#mixed $table_name#>,<#mixed $shard_key#>)" "S" "array") ("f" "mysqlnd_ms_fabric_select_global(" "mysqlnd_ms_fabric_select_global(<#mixed $connection#>,<#mixed $table_name#>)" "S" "array") ("f" "mysqlnd_ms_dump_servers(" "mysqlnd_ms_dump_servers(<#mixed $connection#>)" "S" "array") ("f" "mysqlnd_memcache_set(" "mysqlnd_memcache_set(<#mixed $mysql_connection#>,<#Memcached $memcache_connection#>,<#string $pattern#>,<#callback $callback#>)" "S" "bool") ("f" "mysqlnd_memcache_get_config(" "mysqlnd_memcache_get_config(<#mixed $connection#>)" "S" "array") ("f" "mysql_list_tables(" "mysql_list_tables(<#string $database#>,<#resource $link_identifier#>)" "S" "resource") ("f" "mysql_list_processes(" "mysql_list_processes(<#resource $link_identifier#>)" "S" "resource") ("f" "mysql_list_fields(" "mysql_list_fields(<#string $database_name#>,<#string $table_name#>,<#resource $link_identifier#>)" "S" "resource") ("f" "mysql_list_dbs(" "mysql_list_dbs(<#resource $link_identifier#>)" "S" "resource") ("f" "mysqli_slave_query(" "mysqli_slave_query(<#mysqli $link#>,<#string $query#>)" "S" "bool") ("f" "mysqli_rpl_probe(" "mysqli_rpl_probe(<#mysqli $link#>)" "S" "bool") ("f" "mysqli_rpl_parse_enabled(" "mysqli_rpl_parse_enabled(<#mysqli $link#>)" "S" "int") ("f" "mysqli_report(" "mysqli_report(<#int $flags#>)" "S" "bool") ("f" "mysql_insert_id(" "mysql_insert_id(<#resource $link_identifier#>)" "S" "int") ("f" "mysql_info(" "mysql_info(<#resource $link_identifier#>)" "S" "string") ("f" "mysqli_master_query(" "mysqli_master_query(<#mysqli $link#>,<#string $query#>)" "S" "bool") ("f" "mysqli_get_links_stats(" "mysqli_get_links_stats(<##>)" "S" "array") ("f" "mysqli_enable_rpl_parse(" "mysqli_enable_rpl_parse(<#mysqli $link#>)" "S" "bool") ("f" "mysqli_enable_reads_from_master(" "mysqli_enable_reads_from_master(<#mysqli $link#>)" "S" "bool") ("f" "mysqli_disable_rpl_parse(" "mysqli_disable_rpl_parse(<#mysqli $link#>)" "S" "bool") ("f" "mysql_get_server_info(" "mysql_get_server_info(<#resource $link_identifier#>)" "S" "string") ("f" "mysql_get_proto_info(" "mysql_get_proto_info(<#resource $link_identifier#>)" "S" "int") ("f" "mysql_get_host_info(" "mysql_get_host_info(<#resource $link_identifier#>)" "S" "string") ("f" "mysql_get_client_info(" "mysql_get_client_info(<##>)" "S" "string") ("f" "mysql_free_result(" "mysql_free_result(<#resource $result#>)" "S" "bool") ("f" "mysql_field_type(" "mysql_field_type(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "mysql_field_table(" "mysql_field_table(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "mysql_field_seek(" "mysql_field_seek(<#resource $result#>,<#int $field_offset#>)" "S" "int") ("f" "mysql_field_name(" "mysql_field_name(<#resource $result#>,<#int $field_index#>)" "S" "string") ("f" "mysql_field_len(" "mysql_field_len(<#resource $result#>,<#int $field_offset#>)" "S" "int") ("f" "mysql_field_flags(" "mysql_field_flags(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "mysql_fetch_row(" "mysql_fetch_row(<#resource $result#>)" "S" "array") ("f" "mysql_fetch_object(" "mysql_fetch_object(<#resource $result#>)" "S" "object") ("f" "mysql_fetch_lengths(" "mysql_fetch_lengths(<#resource $result#>)" "S" "array") ("f" "mysql_fetch_field(" "mysql_fetch_field(<#resource $result#>,<#int $field_offset#>)" "S" "object") ("f" "mysql_fetch_assoc(" "mysql_fetch_assoc(<#resource $result#>)" "S" "array") ("f" "mysql_fetch_array(" "mysql_fetch_array(<#resource $result#>,<#int $result_type#>)" "S" "array") ("f" "mysql_escape_string(" "mysql_escape_string(<#string $unescaped_string#>)" "S" "string") ("f" "mysql_error(" "mysql_error(<#resource $link_identifier#>)" "S" "string") ("f" "mysql_errno(" "mysql_errno(<#resource $link_identifier#>)" "S" "int") ("f" "mysql_drop_db(" "mysql_drop_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "mysql_db_query(" "mysql_db_query(<#string $database#>,<#string $query#>,<#resource $link_identifier#>)" "S" "resource") ("f" "mysql_db_name(" "mysql_db_name(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "string") ("f" "mysql_data_seek(" "mysql_data_seek(<#resource $result#>,<#int $row_number#>)" "S" "bool") ("f" "mysql_create_db(" "mysql_create_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "mysql_connect(" "mysql_connect(<#string $server#>,<#string $username#>,<#string $password#>,<#bool $new_link#>,<#int $client_flags#>)" "S" "resource") ("f" "mysql_close(" "mysql_close(<#resource $link_identifier#>)" "S" "bool") ("f" "mysql_client_encoding(" "mysql_client_encoding(<#resource $link_identifier#>)" "S" "string") ("f" "mysql_affected_rows(" "mysql_affected_rows(<#resource $link_identifier#>)" "S" "int") ("f" "m_verifysslcert(" "m_verifysslcert(<#resource $conn#>,<#int $tf#>)" "S" "bool") ("f" "m_verifyconnection(" "m_verifyconnection(<#resource $conn#>,<#int $tf#>)" "S" "bool") ("f" "m_validateidentifier(" "m_validateidentifier(<#resource $conn#>,<#int $tf#>)" "S" "int") ("f" "m_uwait(" "m_uwait(<#int $microsecs#>)" "S" "int") ("f" "mt_srand(" "mt_srand(<#int $seed#>)" "S" "void") ("f" "m_transsend(" "m_transsend(<#resource $conn#>,<#int $identifier#>)" "S" "int") ("f" "m_transnew(" "m_transnew(<#resource $conn#>)" "S" "int") ("f" "m_transkeyval(" "m_transkeyval(<#resource $conn#>,<#int $identifier#>,<#string $key#>,<#string $value#>)" "S" "int") ("f" "m_transinqueue(" "m_transinqueue(<#resource $conn#>)" "S" "int") ("f" "m_transactionssent(" "m_transactionssent(<#resource $conn#>)" "S" "int") ("f" "mt_rand(" "mt_rand(<##>)" "S" "int") ("f" "mt_getrandmax(" "mt_getrandmax(<##>)" "S" "int") ("f" "mssql_select_db(" "mssql_select_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "mssql_rows_affected(" "mssql_rows_affected(<#resource $link_identifier#>)" "S" "int") ("f" "mssql_result(" "mssql_result(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "string") ("f" "mssql_query(" "mssql_query(<#string $query#>,<#resource $link_identifier#>,<#int $batch_size#>)" "S" "mixed") ("f" "mssql_pconnect(" "mssql_pconnect(<#string $servername#>,<#string $username#>,<#string $password#>,<#bool $new_link#>)" "S" "resource") ("f" "mssql_num_rows(" "mssql_num_rows(<#resource $result#>)" "S" "int") ("f" "mssql_num_fields(" "mssql_num_fields(<#resource $result#>)" "S" "int") ("f" "mssql_next_result(" "mssql_next_result(<#resource $result_id#>)" "S" "bool") ("f" "mssql_min_message_severity(" "mssql_min_message_severity(<#int $severity#>)" "S" "void") ("f" "mssql_min_error_severity(" "mssql_min_error_severity(<#int $severity#>)" "S" "void") ("f" "mssql_init(" "mssql_init(<#string $sp_name#>,<#resource $link_identifier#>)" "S" "resource") ("f" "mssql_guid_string(" "mssql_guid_string(<#string $binary#>,<#bool $short_format#>)" "S" "string") ("f" "mssql_get_last_message(" "mssql_get_last_message(<##>)" "S" "string") ("f" "mssql_free_statement(" "mssql_free_statement(<#resource $stmt#>)" "S" "bool") ("f" "mssql_free_result(" "mssql_free_result(<#resource $result#>)" "S" "bool") ("f" "mssql_field_type(" "mssql_field_type(<#resource $result#>,<#int $offset#>)" "S" "string") ("f" "mssql_field_seek(" "mssql_field_seek(<#resource $result#>,<#int $field_offset#>)" "S" "bool") ("f" "mssql_field_name(" "mssql_field_name(<#resource $result#>,<#int $offset#>)" "S" "string") ("f" "mssql_field_length(" "mssql_field_length(<#resource $result#>,<#int $offset#>)" "S" "int") ("f" "mssql_fetch_row(" "mssql_fetch_row(<#resource $result#>)" "S" "array") ("f" "mssql_fetch_object(" "mssql_fetch_object(<#resource $result#>)" "S" "object") ("f" "mssql_fetch_field(" "mssql_fetch_field(<#resource $result#>,<#int $field_offset#>)" "S" "object") ("f" "mssql_fetch_batch(" "mssql_fetch_batch(<#resource $result#>)" "S" "int") ("f" "mssql_fetch_assoc(" "mssql_fetch_assoc(<#resource $result_id#>)" "S" "array") ("f" "mssql_fetch_array(" "mssql_fetch_array(<#resource $result#>,<#int $result_type#>)" "S" "array") ("f" "mssql_execute(" "mssql_execute(<#resource $stmt#>,<#bool $skip_results#>)" "S" "mixed") ("f" "mssql_data_seek(" "mssql_data_seek(<#resource $result_identifier#>,<#int $row_number#>)" "S" "bool") ("f" "mssql_connect(" "mssql_connect(<#string $servername#>,<#string $username#>,<#string $password#>,<#bool $new_link#>)" "S" "resource") ("f" "mssql_close(" "mssql_close(<#resource $link_identifier#>)" "S" "bool") ("f" "mssql_bind(" "mssql_bind(<#resource $stmt#>,<#string $param_name#>,<#mixed &$var#>,<#int $type#>,<#bool $is_output#>,<#bool $is_null#>,<#int $maxlen#>)" "S" "bool") ("f" "m_sslcert_gen_hash(" "m_sslcert_gen_hash(<#string $filename#>)" "S" "string") ("f" "msql_select_db(" "msql_select_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "msql_result(" "msql_result(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "string") ("f" "msql_query(" "msql_query(<#string $query#>,<#resource $link_identifier#>)" "S" "resource") ("f" "msql_pconnect(" "msql_pconnect(<#string $hostname#>)" "S" "resource") ("f" "msql_num_rows(" "msql_num_rows(<#resource $query_identifier#>)" "S" "int") ("f" "msql_num_fields(" "msql_num_fields(<#resource $result#>)" "S" "int") ("f" "msql_list_tables(" "msql_list_tables(<#string $database#>,<#resource $link_identifier#>)" "S" "resource") ("f" "msql_list_fields(" "msql_list_fields(<#string $database#>,<#string $tablename#>,<#resource $link_identifier#>)" "S" "resource") ("f" "msql_list_dbs(" "msql_list_dbs(<#resource $link_identifier#>)" "S" "resource") ("f" "msql_free_result(" "msql_free_result(<#resource $result#>)" "S" "bool") ("f" "msql_field_type(" "msql_field_type(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "msql_field_table(" "msql_field_table(<#resource $result#>,<#int $field_offset#>)" "S" "int") ("f" "msql_field_seek(" "msql_field_seek(<#resource $result#>,<#int $field_offset#>)" "S" "bool") ("f" "msql_field_name(" "msql_field_name(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "msql_field_len(" "msql_field_len(<#resource $result#>,<#int $field_offset#>)" "S" "int") ("f" "msql_field_flags(" "msql_field_flags(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "msql_fetch_row(" "msql_fetch_row(<#resource $result#>)" "S" "array") ("f" "msql_fetch_object(" "msql_fetch_object(<#resource $result#>)" "S" "object") ("f" "msql_fetch_field(" "msql_fetch_field(<#resource $result#>,<#int $field_offset#>)" "S" "object") ("f" "msql_fetch_array(" "msql_fetch_array(<#resource $result#>,<#int $result_type#>)" "S" "array") ("f" "msql_error(" "msql_error(<##>)" "S" "string") ("f" "msql_drop_db(" "msql_drop_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "msql_db_query(" "msql_db_query(<#string $database#>,<#string $query#>,<#resource $link_identifier#>)" "S" "resource") ("f" "msql_data_seek(" "msql_data_seek(<#resource $result#>,<#int $row_number#>)" "S" "bool") ("f" "msql_create_db(" "msql_create_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "msql_connect(" "msql_connect(<#string $hostname#>)" "S" "resource") ("f" "msql_close(" "msql_close(<#resource $link_identifier#>)" "S" "bool") ("f" "msql_affected_rows(" "msql_affected_rows(<#resource $result#>)" "S" "int") ("f" "msg_stat_queue(" "msg_stat_queue(<#resource $queue#>)" "S" "array") ("f" "msg_set_queue(" "msg_set_queue(<#resource $queue#>,<#array $data#>)" "S" "bool") ("f" "msg_send(" "msg_send(<#resource $queue#>,<#int $msgtype#>,<#mixed $message#>,<#bool $serialize#>,<#bool $blocking#>,<#int &$errorcode#>)" "S" "bool") ("f" "msg_remove_queue(" "msg_remove_queue(<#resource $queue#>)" "S" "bool") ("f" "msg_receive(" "msg_receive(<#resource $queue#>,<#int $desiredmsgtype#>,<#int &$msgtype#>,<#int $maxsize#>,<#mixed &$message#>,<#bool $unserialize#>,<#int $flags#>,<#int &$errorcode#>)" "S" "bool") ("f" "msg_queue_exists(" "msg_queue_exists(<#int $key#>)" "S" "bool") ("f" "msg_get_queue(" "msg_get_queue(<#int $key#>,<#int $perms#>)" "S" "resource") ("f" "m_settimeout(" "m_settimeout(<#resource $conn#>,<#int $seconds#>)" "S" "int") ("f" "m_setssl(" "m_setssl(<#resource $conn#>,<#string $host#>,<#int $port#>)" "S" "int") ("f" "m_setssl_files(" "m_setssl_files(<#resource $conn#>,<#string $sslkeyfile#>,<#string $sslcertfile#>)" "S" "int") ("f" "m_setssl_cafile(" "m_setssl_cafile(<#resource $conn#>,<#string $cafile#>)" "S" "int") ("f" "m_setip(" "m_setip(<#resource $conn#>,<#string $host#>,<#int $port#>)" "S" "int") ("f" "m_setdropfile(" "m_setdropfile(<#resource $conn#>,<#string $directory#>)" "S" "int") ("f" "m_setblocking(" "m_setblocking(<#resource $conn#>,<#int $tf#>)" "S" "int") ("f" "msession_unlock(" "msession_unlock(<#string $session#>,<#int $key#>)" "S" "int") ("f" "msession_uniq(" "msession_uniq(<#int $param#>,<#string $classname#>,<#string $data#>)" "S" "string") ("f" "msession_timeout(" "msession_timeout(<#string $session#>,<#int $param#>)" "S" "int") ("f" "msession_set_data(" "msession_set_data(<#string $session#>,<#string $value#>)" "S" "bool") ("f" "msession_set(" "msession_set(<#string $session#>,<#string $name#>,<#string $value#>)" "S" "bool") ("f" "msession_set_array(" "msession_set_array(<#string $session#>,<#array $tuples#>)" "S" "void") ("f" "msession_randstr(" "msession_randstr(<#int $param#>)" "S" "string") ("f" "msession_plugin(" "msession_plugin(<#string $session#>,<#string $val#>,<#string $param#>)" "S" "string") ("f" "msession_lock(" "msession_lock(<#string $name#>)" "S" "int") ("f" "msession_listvar(" "msession_listvar(<#string $name#>)" "S" "array") ("f" "msession_list(" "msession_list(<##>)" "S" "array") ("f" "msession_inc(" "msession_inc(<#string $session#>,<#string $name#>)" "S" "string") ("f" "msession_get(" "msession_get(<#string $session#>,<#string $name#>,<#string $value#>)" "S" "string") ("f" "msession_get_data(" "msession_get_data(<#string $session#>)" "S" "string") ("f" "msession_get_array(" "msession_get_array(<#string $session#>)" "S" "array") ("f" "msession_find(" "msession_find(<#string $name#>,<#string $value#>)" "S" "array") ("f" "msession_disconnect(" "msession_disconnect(<##>)" "S" "void") ("f" "msession_destroy(" "msession_destroy(<#string $name#>)" "S" "bool") ("f" "msession_create(" "msession_create(<#string $session#>,<#string $classname#>,<#string $data#>)" "S" "bool") ("f" "msession_count(" "msession_count(<##>)" "S" "int") ("f" "msession_connect(" "msession_connect(<#string $host#>,<#string $port#>)" "S" "bool") ("f" "m_returnstatus(" "m_returnstatus(<#resource $conn#>,<#int $identifier#>)" "S" "int") ("f" "m_responseparam(" "m_responseparam(<#resource $conn#>,<#int $identifier#>,<#string $key#>)" "S" "string") ("f" "m_responsekeys(" "m_responsekeys(<#resource $conn#>,<#int $identifier#>)" "S" "array") ("f" "mqseries_strerror(" "mqseries_strerror(<#int $reason#>)" "S" "string") ("f" "mqseries_set(" "mqseries_set(<#resource $hconn#>,<#resource $hobj#>,<#int $selectorcount#>,<#array $selectors#>,<#int $intattrcount#>,<#array $intattrs#>,<#int $charattrlength#>,<#array $charattrs#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_put(" "mqseries_put(<#resource $hConn#>,<#resource $hObj#>,<#array &$md#>,<#array &$pmo#>,<#string $message#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_put1(" "mqseries_put1(<#resource $hconn#>,<#resource &$objDesc#>,<#resource &$msgDesc#>,<#resource &$pmo#>,<#string $buffer#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_open(" "mqseries_open(<#resource $hconn#>,<#array &$objDesc#>,<#int $option#>,<#resource &$hobj#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_inq(" "mqseries_inq(<#resource $hconn#>,<#resource $hobj#>,<#int $selectorCount#>,<#array $selectors#>,<#int $intAttrCount#>,<#resource &$intAttr#>,<#int $charAttrLength#>,<#resource &$charAttr#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_get(" "mqseries_get(<#resource $hConn#>,<#resource $hObj#>,<#array &$md#>,<#array &$gmo#>,<#int &$bufferLength#>,<#string &$msg#>,<#int &$data_length#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_disc(" "mqseries_disc(<#resource $hconn#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_connx(" "mqseries_connx(<#string $qManagerName#>,<#array &$connOptions#>,<#resource &$hconn#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_conn(" "mqseries_conn(<#string $qManagerName#>,<#resource &$hconn#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_cmit(" "mqseries_cmit(<#resource $hconn#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_close(" "mqseries_close(<#resource $hconn#>,<#resource $hobj#>,<#int $options#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_begin(" "mqseries_begin(<#resource $hconn#>,<#array $beginOptions#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "mqseries_back(" "mqseries_back(<#resource $hconn#>,<#resource &$compCode#>,<#resource &$reason#>)" "S" "void") ("f" "m_parsecommadelimited(" "m_parsecommadelimited(<#resource $conn#>,<#int $identifier#>)" "S" "int") ("f" "move_uploaded_file(" "move_uploaded_file(<#string $filename#>,<#string $destination#>)" "S" "bool") ("f" "money_format(" "money_format(<#string $format#>,<#float $number#>)" "S" "string") ("f" "m_numrows(" "m_numrows(<#resource $conn#>,<#int $identifier#>)" "S" "int") ("f" "m_numcolumns(" "m_numcolumns(<#resource $conn#>,<#int $identifier#>)" "S" "int") ("f" "m_monitor(" "m_monitor(<#resource $conn#>)" "S" "int") ("f" "m_maxconntimeout(" "m_maxconntimeout(<#resource $conn#>,<#int $secs#>)" "S" "bool") ("f" "mktime(" "mktime(<#int $hour#>,<#int $minute#>,<#int $second#>,<#int $month#>,<#int $day#>,<#int $year#>,<#int $is_dst#>)" "S" "int") ("f" "mkdir(" "mkdir(<#string $pathname#>,<#int $mode#>,<#bool $recursive#>,<#resource $context#>)" "S" "bool") ("f" "m_iscommadelimited(" "m_iscommadelimited(<#resource $conn#>,<#int $identifier#>)" "S" "int") ("f" "min(" "min(<#array $values#>)" "S" "mixed") ("f" "m_initengine(" "m_initengine(<#string $location#>)" "S" "int") ("f" "m_initconn(" "m_initconn(<##>)" "S" "resource") ("f" "ming_useswfversion(" "ming_useswfversion(<#int $version#>)" "S" "void") ("f" "ming_useconstants(" "ming_useconstants(<#int $use#>)" "S" "void") ("f" "ming_setswfcompression(" "ming_setswfcompression(<#int $level#>)" "S" "void") ("f" "ming_setscale(" "ming_setscale(<#float $scale#>)" "S" "void") ("f" "ming_setcubicthreshold(" "ming_setcubicthreshold(<#int $threshold#>)" "S" "void") ("f" "ming_keypress(" "ming_keypress(<#string $char#>)" "S" "int") ("f" "mime_content_type(" "mime_content_type(<#string $filename#>)" "S" "string") ("f" "microtime(" "microtime(<#bool $get_as_float#>)" "S" "mixed") ("f" "mhash(" "mhash(<#int $hash#>,<#string $data#>,<#string $key#>)" "S" "string") ("f" "mhash_keygen_s2k(" "mhash_keygen_s2k(<#int $hash#>,<#string $password#>,<#string $salt#>,<#int $bytes#>)" "S" "string") ("f" "mhash_get_hash_name(" "mhash_get_hash_name(<#int $hash#>)" "S" "string") ("f" "mhash_get_block_size(" "mhash_get_block_size(<#int $hash#>)" "S" "int") ("f" "mhash_count(" "mhash_count(<##>)" "S" "int") ("f" "m_getheader(" "m_getheader(<#resource $conn#>,<#int $identifier#>,<#int $column_num#>)" "S" "string") ("f" "m_getcommadelimited(" "m_getcommadelimited(<#resource $conn#>,<#int $identifier#>)" "S" "string") ("f" "m_getcell(" "m_getcell(<#resource $conn#>,<#int $identifier#>,<#string $column#>,<#int $row#>)" "S" "string") ("f" "m_getcellbynum(" "m_getcellbynum(<#resource $conn#>,<#int $identifier#>,<#int $column#>,<#int $row#>)" "S" "string") ("f" "method_exists(" "method_exists(<#mixed $object#>,<#string $method_name#>)" "S" "bool") ("f" "metaphone(" "metaphone(<#string $str#>,<#int $phonemes#>)" "S" "string") ("f" "memory_get_usage(" "memory_get_usage(<#bool $real_usage#>)" "S" "int") ("f" "memory_get_peak_usage(" "memory_get_peak_usage(<#bool $real_usage#>)" "S" "int") ("f" "memcache_debug(" "memcache_debug(<#bool $on_off#>)" "S" "bool") ("f" "m_destroyengine(" "m_destroyengine(<##>)" "S" "void") ("f" "m_destroyconn(" "m_destroyconn(<#resource $conn#>)" "S" "bool") ("f" "m_deletetrans(" "m_deletetrans(<#resource $conn#>,<#int $identifier#>)" "S" "bool") ("f" "mdecrypt_generic(" "mdecrypt_generic(<#resource $td#>,<#string $data#>)" "S" "string") ("f" "md5(" "md5(<#string $str#>,<#bool $raw_output#>)" "S" "string") ("f" "md5_file(" "md5_file(<#string $filename#>,<#bool $raw_output#>)" "S" "string") ("f" "mcrypt_ofb(" "mcrypt_ofb(<#int $cipher#>,<#string $key#>,<#string $data#>,<#int $mode#>,<#string $iv#>)" "S" "string") ("f" "mcrypt_module_self_test(" "mcrypt_module_self_test(<#string $algorithm#>,<#string $lib_dir#>)" "S" "bool") ("f" "mcrypt_module_open(" "mcrypt_module_open(<#string $algorithm#>,<#string $algorithm_directory#>,<#string $mode#>,<#string $mode_directory#>)" "S" "resource") ("f" "mcrypt_module_is_block_mode(" "mcrypt_module_is_block_mode(<#string $mode#>,<#string $lib_dir#>)" "S" "bool") ("f" "mcrypt_module_is_block_algorithm_mode(" "mcrypt_module_is_block_algorithm_mode(<#string $mode#>,<#string $lib_dir#>)" "S" "bool") ("f" "mcrypt_module_is_block_algorithm(" "mcrypt_module_is_block_algorithm(<#string $algorithm#>,<#string $lib_dir#>)" "S" "bool") ("f" "mcrypt_module_get_supported_key_sizes(" "mcrypt_module_get_supported_key_sizes(<#string $algorithm#>,<#string $lib_dir#>)" "S" "array") ("f" "mcrypt_module_get_algo_key_size(" "mcrypt_module_get_algo_key_size(<#string $algorithm#>,<#string $lib_dir#>)" "S" "int") ("f" "mcrypt_module_get_algo_block_size(" "mcrypt_module_get_algo_block_size(<#string $algorithm#>,<#string $lib_dir#>)" "S" "int") ("f" "mcrypt_module_close(" "mcrypt_module_close(<#resource $td#>)" "S" "bool") ("f" "mcrypt_list_modes(" "mcrypt_list_modes(<#string $lib_dir#>)" "S" "array") ("f" "mcrypt_list_algorithms(" "mcrypt_list_algorithms(<#string $lib_dir#>)" "S" "array") ("f" "mcrypt_get_key_size(" "mcrypt_get_key_size(<#int $cipher#>)" "S" "int") ("f" "mcrypt_get_iv_size(" "mcrypt_get_iv_size(<#string $cipher#>,<#string $mode#>)" "S" "int") ("f" "mcrypt_get_cipher_name(" "mcrypt_get_cipher_name(<#int $cipher#>)" "S" "string") ("f" "mcrypt_get_block_size(" "mcrypt_get_block_size(<#int $cipher#>)" "S" "int") ("f" "mcrypt_generic(" "mcrypt_generic(<#resource $td#>,<#string $data#>)" "S" "string") ("f" "mcrypt_generic_init(" "mcrypt_generic_init(<#resource $td#>,<#string $key#>,<#string $iv#>)" "S" "int") ("f" "mcrypt_generic_end(" "mcrypt_generic_end(<#resource $td#>)" "S" "bool") ("f" "mcrypt_generic_deinit(" "mcrypt_generic_deinit(<#resource $td#>)" "S" "bool") ("f" "mcrypt_enc_self_test(" "mcrypt_enc_self_test(<#resource $td#>)" "S" "int") ("f" "mcrypt_encrypt(" "mcrypt_encrypt(<#string $cipher#>,<#string $key#>,<#string $data#>,<#string $mode#>,<#string $iv#>)" "S" "string") ("f" "mcrypt_enc_is_block_mode(" "mcrypt_enc_is_block_mode(<#resource $td#>)" "S" "bool") ("f" "mcrypt_enc_is_block_algorithm_mode(" "mcrypt_enc_is_block_algorithm_mode(<#resource $td#>)" "S" "bool") ("f" "mcrypt_enc_is_block_algorithm(" "mcrypt_enc_is_block_algorithm(<#resource $td#>)" "S" "bool") ("f" "mcrypt_enc_get_supported_key_sizes(" "mcrypt_enc_get_supported_key_sizes(<#resource $td#>)" "S" "array") ("f" "mcrypt_enc_get_modes_name(" "mcrypt_enc_get_modes_name(<#resource $td#>)" "S" "string") ("f" "mcrypt_enc_get_key_size(" "mcrypt_enc_get_key_size(<#resource $td#>)" "S" "int") ("f" "mcrypt_enc_get_iv_size(" "mcrypt_enc_get_iv_size(<#resource $td#>)" "S" "int") ("f" "mcrypt_enc_get_block_size(" "mcrypt_enc_get_block_size(<#resource $td#>)" "S" "int") ("f" "mcrypt_enc_get_algorithms_name(" "mcrypt_enc_get_algorithms_name(<#resource $td#>)" "S" "string") ("f" "mcrypt_ecb(" "mcrypt_ecb(<#int $cipher#>,<#string $key#>,<#string $data#>,<#int $mode#>)" "S" "string") ("f" "mcrypt_decrypt(" "mcrypt_decrypt(<#string $cipher#>,<#string $key#>,<#string $data#>,<#string $mode#>,<#string $iv#>)" "S" "string") ("f" "mcrypt_create_iv(" "mcrypt_create_iv(<#int $size#>,<#int $source#>)" "S" "string") ("f" "mcrypt_cfb(" "mcrypt_cfb(<#int $cipher#>,<#string $key#>,<#string $data#>,<#int $mode#>,<#string $iv#>)" "S" "string") ("f" "mcrypt_cbc(" "mcrypt_cbc(<#int $cipher#>,<#string $key#>,<#string $data#>,<#int $mode#>,<#string $iv#>)" "S" "string") ("f" "m_connectionerror(" "m_connectionerror(<#resource $conn#>)" "S" "string") ("f" "m_connect(" "m_connect(<#resource $conn#>)" "S" "int") ("f" "m_completeauthorizations(" "m_completeauthorizations(<#resource $conn#>,<#int &$array#>)" "S" "int") ("f" "m_checkstatus(" "m_checkstatus(<#resource $conn#>,<#int $identifier#>)" "S" "int") ("f" "mb_substr(" "mb_substr(<#string $str#>,<#int $start#>,<#int $length#>,<#string $encoding#>)" "S" "string") ("f" "mb_substr_count(" "mb_substr_count(<#string $haystack#>,<#string $needle#>,<#string $encoding#>)" "S" "int") ("f" "mb_substitute_character(" "mb_substitute_character(<#mixed $substrchar#>)" "S" "mixed") ("f" "mb_strwidth(" "mb_strwidth(<#string $str#>,<#string $encoding#>)" "S" "int") ("f" "mb_strtoupper(" "mb_strtoupper(<#string $str#>,<#string $encoding#>)" "S" "string") ("f" "mb_strtolower(" "mb_strtolower(<#string $str#>,<#string $encoding#>)" "S" "string") ("f" "mb_strstr(" "mb_strstr(<#string $haystack#>,<#string $needle#>,<#bool $before_needle#>,<#string $encoding#>)" "S" "string") ("f" "mb_strrpos(" "mb_strrpos(<#string $haystack#>,<#string $needle#>,<#int $offset#>,<#string $encoding#>)" "S" "int") ("f" "mb_strripos(" "mb_strripos(<#string $haystack#>,<#string $needle#>,<#int $offset#>,<#string $encoding#>)" "S" "int") ("f" "mb_strrichr(" "mb_strrichr(<#string $haystack#>,<#string $needle#>,<#bool $part#>,<#string $encoding#>)" "S" "string") ("f" "mb_strrchr(" "mb_strrchr(<#string $haystack#>,<#string $needle#>,<#bool $part#>,<#string $encoding#>)" "S" "string") ("f" "mb_strpos(" "mb_strpos(<#string $haystack#>,<#string $needle#>,<#int $offset#>,<#string $encoding#>)" "S" "int") ("f" "mb_strlen(" "mb_strlen(<#string $str#>,<#string $encoding#>)" "S" "mixed") ("f" "mb_stristr(" "mb_stristr(<#string $haystack#>,<#string $needle#>,<#bool $before_needle#>,<#string $encoding#>)" "S" "string") ("f" "mb_stripos(" "mb_stripos(<#string $haystack#>,<#string $needle#>,<#int $offset#>,<#string $encoding#>)" "S" "int") ("f" "mb_strimwidth(" "mb_strimwidth(<#string $str#>,<#int $start#>,<#int $width#>,<#string $trimmarker#>,<#string $encoding#>)" "S" "string") ("f" "mb_strcut(" "mb_strcut(<#string $str#>,<#int $start#>,<#int $length#>,<#string $encoding#>)" "S" "string") ("f" "mb_split(" "mb_split(<#string $pattern#>,<#string $string#>,<#int $limit#>)" "S" "array") ("f" "mb_send_mail(" "mb_send_mail(<#string $to#>,<#string $subject#>,<#string $message#>,<#string $additional_headers#>,<#string $additional_parameter#>)" "S" "bool") ("f" "mb_regex_set_options(" "mb_regex_set_options(<#string $options#>)" "S" "string") ("f" "mb_regex_encoding(" "mb_regex_encoding(<#string $encoding#>)" "S" "mixed") ("f" "mb_preferred_mime_name(" "mb_preferred_mime_name(<#string $encoding#>)" "S" "string") ("f" "mb_parse_str(" "mb_parse_str(<#string $encoded_string#>,<#array &$result#>)" "S" "bool") ("f" "mb_output_handler(" "mb_output_handler(<#string $contents#>,<#int $status#>)" "S" "string") ("f" "mb_list_encodings(" "mb_list_encodings(<##>)" "S" "array") ("f" "mb_language(" "mb_language(<#string $language#>)" "S" "mixed") ("f" "mb_internal_encoding(" "mb_internal_encoding(<#string $encoding#>)" "S" "mixed") ("f" "mb_http_output(" "mb_http_output(<#string $encoding#>)" "S" "mixed") ("f" "mb_http_input(" "mb_http_input(<#string $type#>)" "S" "mixed") ("f" "mb_get_info(" "mb_get_info(<#string $type#>)" "S" "mixed") ("f" "mb_ereg_search_setpos(" "mb_ereg_search_setpos(<#int $position#>)" "S" "bool") ("f" "mb_ereg_search_regs(" "mb_ereg_search_regs(<#string $pattern#>,<#string $option#>)" "S" "array") ("f" "mb_ereg_search_pos(" "mb_ereg_search_pos(<#string $pattern#>,<#string $option#>)" "S" "array") ("f" "mb_ereg_search_init(" "mb_ereg_search_init(<#string $string#>,<#string $pattern#>,<#string $option#>)" "S" "bool") ("f" "mb_ereg_search_getregs(" "mb_ereg_search_getregs(<##>)" "S" "array") ("f" "mb_ereg_search_getpos(" "mb_ereg_search_getpos(<##>)" "S" "int") ("f" "mb_ereg_search(" "mb_ereg_search(<#string $pattern#>,<#string $option#>)" "S" "bool") ("f" "mb_ereg_replace(" "mb_ereg_replace(<#string $pattern#>,<#string $replacement#>,<#string $string#>,<#string $option#>)" "S" "string") ("f" "mb_ereg_replace_callback(" "mb_ereg_replace_callback(<#string $pattern#>,<#callable $callback#>,<#string $string#>,<#string $option#>)" "S" "string") ("f" "mb_ereg_match(" "mb_ereg_match(<#string $pattern#>,<#string $string#>,<#string $option#>)" "S" "bool") ("f" "mb_eregi_replace(" "mb_eregi_replace(<#string $pattern#>,<#string $replace#>,<#string $string#>,<#string $option#>)" "S" "string") ("f" "mb_ereg(" "mb_ereg(<#string $pattern#>,<#string $string#>,<#array $regs#>)" "S" "int") ("f" "mb_eregi(" "mb_eregi(<#string $pattern#>,<#string $string#>,<#array $regs#>)" "S" "int") ("f" "mb_encoding_aliases(" "mb_encoding_aliases(<#string $encoding#>)" "S" "array") ("f" "mb_encode_numericentity(" "mb_encode_numericentity(<#string $str#>,<#array $convmap#>,<#string $encoding#>,<#bool $is_hex#>)" "S" "string") ("f" "mb_encode_mimeheader(" "mb_encode_mimeheader(<#string $str#>,<#string $charset#>,<#string $transfer_encoding#>,<#string $linefeed#>,<#int $indent#>)" "S" "string") ("f" "mb_detect_order(" "mb_detect_order(<#mixed $encoding_list#>)" "S" "mixed") ("f" "mb_detect_encoding(" "mb_detect_encoding(<#string $str#>,<#mixed $encoding_list#>,<#bool $strict#>)" "S" "string") ("f" "mb_decode_numericentity(" "mb_decode_numericentity(<#string $str#>,<#array $convmap#>,<#string $encoding#>)" "S" "string") ("f" "mb_decode_mimeheader(" "mb_decode_mimeheader(<#string $str#>)" "S" "string") ("f" "mb_convert_variables(" "mb_convert_variables(<#string $to_encoding#>,<#mixed $from_encoding#>,<#mixed &$vars#>,<#mixed &$__args__#>)" "S" "string") ("f" "mb_convert_kana(" "mb_convert_kana(<#string $str#>,<#string $option#>,<#string $encoding#>)" "S" "string") ("f" "mb_convert_encoding(" "mb_convert_encoding(<#string $str#>,<#string $to_encoding#>,<#mixed $from_encoding#>)" "S" "string") ("f" "mb_convert_case(" "mb_convert_case(<#string $str#>,<#int $mode#>,<#string $encoding#>)" "S" "string") ("f" "mb_check_encoding(" "mb_check_encoding(<#string $var#>,<#string $encoding#>)" "S" "bool") ("f" "max(" "max(<#array $values#>)" "S" "mixed") ("f" "maxdb_warning_count(" "maxdb_warning_count(<#resource $link#>)" "S" "int") ("f" "maxdb_use_result(" "maxdb_use_result(<#resource $link#>)" "S" "resource") ("f" "maxdb_thread_safe(" "maxdb_thread_safe(<##>)" "S" "bool") ("f" "maxdb_thread_id(" "maxdb_thread_id(<#resource $link#>)" "S" "int") ("f" "maxdb_store_result(" "maxdb_store_result(<#resource $link#>)" "S" "resource") ("f" "maxdb_stmt_store_result(" "maxdb_stmt_store_result(<#resource $stmt#>)" "S" "bool") ("f" "maxdb_stmt_sqlstate(" "maxdb_stmt_sqlstate(<#resource $stmt#>)" "S" "string") ("f" "maxdb_stmt_send_long_data(" "maxdb_stmt_send_long_data(<#resource $stmt#>,<#int $param_nr#>,<#string $data#>)" "S" "bool") ("f" "maxdb_stmt_result_metadata(" "maxdb_stmt_result_metadata(<#resource $stmt#>)" "S" "resource") ("f" "maxdb_stmt_reset(" "maxdb_stmt_reset(<#resource $stmt#>)" "S" "bool") ("f" "maxdb_stmt_prepare(" "maxdb_stmt_prepare(<#resource $stmt#>,<#string $query#>)" "S" "bool") ("f" "maxdb_stmt_param_count(" "maxdb_stmt_param_count(<#resource $stmt#>)" "S" "int") ("f" "maxdb_stmt_num_rows(" "maxdb_stmt_num_rows(<#resource $stmt#>)" "S" "int") ("f" "maxdb_stmt_init(" "maxdb_stmt_init(<#resource $link#>)" "S" "resource") ("f" "maxdb_stmt_free_result(" "maxdb_stmt_free_result(<#resource $stmt#>)" "S" "void") ("f" "maxdb_stmt_fetch(" "maxdb_stmt_fetch(<#resource $stmt#>)" "S" "bool") ("f" "maxdb_stmt_execute(" "maxdb_stmt_execute(<#resource $stmt#>)" "S" "bool") ("f" "maxdb_stmt_error(" "maxdb_stmt_error(<#resource $stmt#>)" "S" "string") ("f" "maxdb_stmt_errno(" "maxdb_stmt_errno(<#resource $stmt#>)" "S" "int") ("f" "maxdb_stmt_data_seek(" "maxdb_stmt_data_seek(<#resource $statement#>,<#int $offset#>)" "S" "bool") ("f" "maxdb_stmt_close_long_data(" "maxdb_stmt_close_long_data(<#resource $stmt#>,<#int $param_nr#>)" "S" "bool") ("f" "maxdb_stmt_close(" "maxdb_stmt_close(<#resource $stmt#>)" "S" "bool") ("f" "maxdb_stmt_bind_result(" "maxdb_stmt_bind_result(<#resource $stmt#>,<#mixed &$var1#>,<#mixed &$__args__#>)" "S" "bool") ("f" "maxdb_stmt_bind_param(" "maxdb_stmt_bind_param(<#resource $stmt#>,<#string $types#>,<#mixed &$var1#>,<#mixed &$__args__#>)" "S" "bool") ("f" "maxdb_stmt_affected_rows(" "maxdb_stmt_affected_rows(<#resource $stmt#>)" "S" "int") ("f" "maxdb_stat(" "maxdb_stat(<#resource $link#>)" "S" "string") ("f" "maxdb_ssl_set(" "maxdb_ssl_set(<#resource $link#>,<#string $key#>,<#string $cert#>,<#string $ca#>,<#string $capath#>,<#string $cipher#>)" "S" "bool") ("f" "maxdb_sqlstate(" "maxdb_sqlstate(<#resource $link#>)" "S" "string") ("f" "maxdb_server_init(" "maxdb_server_init(<#array $server#>,<#array $groups#>)" "S" "bool") ("f" "maxdb_server_end(" "maxdb_server_end(<##>)" "S" "void") ("f" "maxdb_send_query(" "maxdb_send_query(<#resource $link#>,<#string $query#>)" "S" "bool") ("f" "maxdb_select_db(" "maxdb_select_db(<#resource $link#>,<#string $dbname#>)" "S" "bool") ("f" "maxdb_rpl_query_type(" "maxdb_rpl_query_type(<#resource $link#>)" "S" "int") ("f" "maxdb_rpl_probe(" "maxdb_rpl_probe(<#resource $link#>)" "S" "bool") ("f" "maxdb_rpl_parse_enabled(" "maxdb_rpl_parse_enabled(<#resource $link#>)" "S" "int") ("f" "maxdb_rollback(" "maxdb_rollback(<#resource $link#>)" "S" "bool") ("f" "maxdb_report(" "maxdb_report(<#int $flags#>)" "S" "bool") ("f" "maxdb_real_query(" "maxdb_real_query(<#resource $link#>,<#string $query#>)" "S" "bool") ("f" "maxdb_real_escape_string(" "maxdb_real_escape_string(<#resource $link#>,<#string $escapestr#>)" "S" "string") ("f" "maxdb_real_connect(" "maxdb_real_connect(<#resource $link#>,<#string $hostname#>,<#string $username#>,<#string $passwd#>,<#string $dbname#>,<#int $port#>,<#string $socket#>)" "S" "bool") ("f" "maxdb_query(" "maxdb_query(<#resource $link#>,<#string $query#>,<#int $resultmode#>)" "S" "mixed") ("f" "maxdb_prepare(" "maxdb_prepare(<#resource $link#>,<#string $query#>)" "S" "resource") ("f" "maxdb_ping(" "maxdb_ping(<#resource $link#>)" "S" "bool") ("f" "maxdb_options(" "maxdb_options(<#resource $link#>,<#int $option#>,<#mixed $value#>)" "S" "bool") ("f" "maxdb_num_rows(" "maxdb_num_rows(<#resource $result#>)" "S" "int") ("f" "maxdb_num_fields(" "maxdb_num_fields(<#resource $result#>)" "S" "int") ("f" "maxdb_next_result(" "maxdb_next_result(<#resource $link#>)" "S" "bool") ("f" "maxdb_multi_query(" "maxdb_multi_query(<#resource $link#>,<#string $query#>)" "S" "bool") ("f" "maxdb_more_results(" "maxdb_more_results(<#resource $link#>)" "S" "bool") ("f" "maxdb_master_query(" "maxdb_master_query(<#resource $link#>,<#string $query#>)" "S" "bool") ("f" "maxdb_kill(" "maxdb_kill(<#resource $link#>,<#int $processid#>)" "S" "bool") ("f" "maxdb_insert_id(" "maxdb_insert_id(<#resource $link#>)" "S" "mixed") ("f" "maxdb_init(" "maxdb_init(<##>)" "S" "resource") ("f" "maxdb_info(" "maxdb_info(<#resource $link#>)" "S" "string") ("f" "maxdb_get_server_version(" "maxdb_get_server_version(<#resource $link#>)" "S" "int") ("f" "maxdb_get_server_info(" "maxdb_get_server_info(<#resource $link#>)" "S" "string") ("f" "maxdb_get_proto_info(" "maxdb_get_proto_info(<#resource $link#>)" "S" "int") ("f" "maxdb_get_host_info(" "maxdb_get_host_info(<#resource $link#>)" "S" "string") ("f" "maxdb_get_client_version(" "maxdb_get_client_version(<##>)" "S" "int") ("f" "maxdb_get_client_info(" "maxdb_get_client_info(<##>)" "S" "string") ("f" "maxdb_free_result(" "maxdb_free_result(<#resource $result#>)" "S" "void") ("f" "maxdb_field_tell(" "maxdb_field_tell(<#resource $result#>)" "S" "int") ("f" "maxdb_field_seek(" "maxdb_field_seek(<#resource $result#>,<#int $fieldnr#>)" "S" "bool") ("f" "maxdb_field_count(" "maxdb_field_count(<#resource $link#>)" "S" "int") ("f" "maxdb_fetch_row(" "maxdb_fetch_row(<#resource $result#>)" "S" "mixed") ("f" "maxdb_fetch_object(" "maxdb_fetch_object(<#object $result#>)" "S" "object") ("f" "maxdb_fetch_lengths(" "maxdb_fetch_lengths(<#resource $result#>)" "S" "array") ("f" "maxdb_fetch_fields(" "maxdb_fetch_fields(<#resource $result#>)" "S" "mixed") ("f" "maxdb_fetch_field(" "maxdb_fetch_field(<#resource $result#>)" "S" "mixed") ("f" "maxdb_fetch_field_direct(" "maxdb_fetch_field_direct(<#resource $result#>,<#int $fieldnr#>)" "S" "mixed") ("f" "maxdb_fetch_assoc(" "maxdb_fetch_assoc(<#resource $result#>)" "S" "array") ("f" "maxdb_fetch_array(" "maxdb_fetch_array(<#resource $result#>,<#int $resulttype#>)" "S" "mixed") ("f" "maxdb_error(" "maxdb_error(<#resource $link#>)" "S" "string") ("f" "maxdb_errno(" "maxdb_errno(<#resource $link#>)" "S" "int") ("f" "maxdb_enable_rpl_parse(" "maxdb_enable_rpl_parse(<#resource $link#>)" "S" "bool") ("f" "maxdb_enable_reads_from_master(" "maxdb_enable_reads_from_master(<#resource $link#>)" "S" "bool") ("f" "maxdb_embedded_connect(" "maxdb_embedded_connect(<#string $dbname#>)" "S" "resource") ("f" "maxdb_dump_debug_info(" "maxdb_dump_debug_info(<#resource $link#>)" "S" "bool") ("f" "maxdb_disable_rpl_parse(" "maxdb_disable_rpl_parse(<#resource $link#>)" "S" "bool") ("f" "maxdb_disable_reads_from_master(" "maxdb_disable_reads_from_master(<#resource $link#>)" "S" "bool") ("f" "maxdb_debug(" "maxdb_debug(<#string $debug#>)" "S" "void") ("f" "maxdb_data_seek(" "maxdb_data_seek(<#resource $result#>,<#int $offset#>)" "S" "bool") ("f" "maxdb_connect(" "maxdb_connect(<#string $host#>,<#string $username#>,<#string $passwd#>,<#string $dbname#>,<#int $port#>,<#string $socket#>)" "S" "resource") ("f" "maxdb_connect_error(" "maxdb_connect_error(<##>)" "S" "string") ("f" "maxdb_connect_errno(" "maxdb_connect_errno(<##>)" "S" "int") ("f" "maxdb_commit(" "maxdb_commit(<#resource $link#>)" "S" "bool") ("f" "maxdb_close(" "maxdb_close(<#resource $link#>)" "S" "bool") ("f" "maxdb_character_set_name(" "maxdb_character_set_name(<#resource $link#>)" "S" "string") ("f" "maxdb_change_user(" "maxdb_change_user(<#resource $link#>,<#string $user#>,<#string $password#>,<#string $database#>)" "S" "bool") ("f" "maxdb_autocommit(" "maxdb_autocommit(<#resource $link#>,<#bool $mode#>)" "S" "bool") ("f" "maxdb_affected_rows(" "maxdb_affected_rows(<#resource $link#>)" "S" "int") ("f" "mailparse_uudecode_all(" "mailparse_uudecode_all(<#resource $fp#>)" "S" "array") ("f" "mailparse_stream_encode(" "mailparse_stream_encode(<#resource $sourcefp#>,<#resource $destfp#>,<#string $encoding#>)" "S" "bool") ("f" "mailparse_rfc822_parse_addresses(" "mailparse_rfc822_parse_addresses(<#string $addresses#>)" "S" "array") ("f" "mailparse_msg_parse_file(" "mailparse_msg_parse_file(<#string $filename#>)" "S" "resource") ("f" "mailparse_msg_parse(" "mailparse_msg_parse(<#resource $mimemail#>,<#string $data#>)" "S" "bool") ("f" "mailparse_msg_get_structure(" "mailparse_msg_get_structure(<#resource $mimemail#>)" "S" "array") ("f" "mailparse_msg_get_part(" "mailparse_msg_get_part(<#resource $mimemail#>,<#string $mimesection#>)" "S" "resource") ("f" "mailparse_msg_get_part_data(" "mailparse_msg_get_part_data(<#resource $mimemail#>)" "S" "array") ("f" "mailparse_msg_free(" "mailparse_msg_free(<#resource $mimemail#>)" "S" "bool") ("f" "mailparse_msg_extract_whole_part_file(" "mailparse_msg_extract_whole_part_file(<#resource $mimemail#>,<#string $filename#>,<#callable $callbackfunc#>)" "S" "string") ("f" "mailparse_msg_extract_part(" "mailparse_msg_extract_part(<#resource $mimemail#>,<#string $msgbody#>,<#callable $callbackfunc#>)" "S" "void") ("f" "mailparse_msg_extract_part_file(" "mailparse_msg_extract_part_file(<#resource $mimemail#>,<#mixed $filename#>,<#callable $callbackfunc#>)" "S" "string") ("f" "mailparse_msg_create(" "mailparse_msg_create(<##>)" "S" "resource") ("f" "mailparse_determine_best_xfer_encoding(" "mailparse_determine_best_xfer_encoding(<#resource $fp#>)" "S" "string") ("f" "mail(" "mail(<#string $to#>,<#string $subject#>,<#string $message#>,<#string $additional_headers#>,<#string $additional_parameters#>)" "S" "bool") ("f" "lzf_optimized_for(" "lzf_optimized_for(<##>)" "S" "int") ("f" "lzf_decompress(" "lzf_decompress(<#string $data#>)" "S" "string") ("f" "lzf_compress(" "lzf_compress(<#string $data#>)" "S" "string") ("f" "ltrim(" "ltrim(<#string $str#>,<#string $charlist#>)" "S" "string") ("f" "lstat(" "lstat(<#string $filename#>)" "S" "array") ("f" "long2ip(" "long2ip(<#string $proper_address#>)" "S" "string") ("f" "log(" "log(<#float $arg#>,<#float $base#>)" "S" "float") ("f" "log1p(" "log1p(<#float $number#>)" "S" "float") ("f" "log10(" "log10(<#float $arg#>)" "S" "float") ("f" "localtime(" "localtime(<#int $timestamp#>,<#bool $is_associative#>)" "S" "array") ("f" "localeconv(" "localeconv(<##>)" "S" "array") ("f" "linkinfo(" "linkinfo(<#string $path#>)" "S" "int") ("f" "link(" "link(<#string $target#>,<#string $link#>)" "S" "bool") ("f" "libxml_use_internal_errors(" "libxml_use_internal_errors(<#bool $use_errors#>)" "S" "bool") ("f" "libxml_set_streams_context(" "libxml_set_streams_context(<#resource $streams_context#>)" "S" "void") ("f" "libxml_set_external_entity_loader(" "libxml_set_external_entity_loader(<#callable $resolver_function#>)" "S" "void") ("f" "libxml_get_last_error(" "libxml_get_last_error(<##>)" "S" "LibXMLError") ("f" "libxml_get_errors(" "libxml_get_errors(<##>)" "S" "array") ("f" "libxml_disable_entity_loader(" "libxml_disable_entity_loader(<#bool $disable#>)" "S" "bool") ("f" "libxml_clear_errors(" "libxml_clear_errors(<##>)" "S" "void") ("f" "levenshtein(" "levenshtein(<#string $str1#>,<#string $str2#>)" "S" "int") ("f" "ldap_unbind(" "ldap_unbind(<#resource $link_identifier#>)" "S" "bool") ("f" "ldap_t61_to_8859(" "ldap_t61_to_8859(<#string $value#>)" "S" "string") ("f" "ldap_start_tls(" "ldap_start_tls(<#resource $link#>)" "S" "bool") ("f" "ldap_sort(" "ldap_sort(<#resource $link#>,<#resource $result#>,<#string $sortfilter#>)" "S" "bool") ("f" "ldap_set_rebind_proc(" "ldap_set_rebind_proc(<#resource $link#>,<#callable $callback#>)" "S" "bool") ("f" "ldap_set_option(" "ldap_set_option(<#resource $link_identifier#>,<#int $option#>,<#mixed $newval#>)" "S" "bool") ("f" "ldap_search(" "ldap_search(<#resource $link_identifier#>,<#string $base_dn#>,<#string $filter#>,<#array $attributes#>,<#int $attrsonly#>,<#int $sizelimit#>,<#int $timelimit#>,<#int $deref#>)" "S" "resource") ("f" "ldap_sasl_bind(" "ldap_sasl_bind(<#resource $link#>,<#string $binddn#>,<#string $password#>,<#string $sasl_mech#>,<#string $sasl_realm#>,<#string $sasl_authc_id#>,<#string $sasl_authz_id#>,<#string $props#>)" "S" "bool") ("f" "ldap_rename(" "ldap_rename(<#resource $link_identifier#>,<#string $dn#>,<#string $newrdn#>,<#string $newparent#>,<#bool $deleteoldrdn#>)" "S" "bool") ("f" "ldap_read(" "ldap_read(<#resource $link_identifier#>,<#string $base_dn#>,<#string $filter#>,<#array $attributes#>,<#int $attrsonly#>,<#int $sizelimit#>,<#int $timelimit#>,<#int $deref#>)" "S" "resource") ("f" "ldap_parse_result(" "ldap_parse_result(<#resource $link#>,<#resource $result#>,<#int &$errcode#>,<#string &$matcheddn#>,<#string &$errmsg#>,<#array &$referrals#>)" "S" "bool") ("f" "ldap_parse_reference(" "ldap_parse_reference(<#resource $link#>,<#resource $entry#>,<#array &$referrals#>)" "S" "bool") ("f" "ldap_next_reference(" "ldap_next_reference(<#resource $link#>,<#resource $entry#>)" "S" "resource") ("f" "ldap_next_entry(" "ldap_next_entry(<#resource $link_identifier#>,<#resource $result_entry_identifier#>)" "S" "resource") ("f" "ldap_next_attribute(" "ldap_next_attribute(<#resource $link_identifier#>,<#resource $result_entry_identifier#>)" "S" "string") ("f" "ldap_mod_replace(" "ldap_mod_replace(<#resource $link_identifier#>,<#string $dn#>,<#array $entry#>)" "S" "bool") ("f" "ldap_modify(" "ldap_modify(<#resource $link_identifier#>,<#string $dn#>,<#array $entry#>)" "S" "bool") ("f" "ldap_modify_batch(" "ldap_modify_batch(<#resource $link_identifier#>,<#string $dn#>,<#array $entry#>)" "S" "bool") ("f" "ldap_mod_del(" "ldap_mod_del(<#resource $link_identifier#>,<#string $dn#>,<#array $entry#>)" "S" "bool") ("f" "ldap_mod_add(" "ldap_mod_add(<#resource $link_identifier#>,<#string $dn#>,<#array $entry#>)" "S" "bool") ("f" "ldap_list(" "ldap_list(<#resource $link_identifier#>,<#string $base_dn#>,<#string $filter#>,<#array $attributes#>,<#int $attrsonly#>,<#int $sizelimit#>,<#int $timelimit#>,<#int $deref#>)" "S" "resource") ("f" "ldap_get_values_len(" "ldap_get_values_len(<#resource $link_identifier#>,<#resource $result_entry_identifier#>,<#string $attribute#>)" "S" "array") ("f" "ldap_get_values(" "ldap_get_values(<#resource $link_identifier#>,<#resource $result_entry_identifier#>,<#string $attribute#>)" "S" "array") ("f" "ldap_get_option(" "ldap_get_option(<#resource $link_identifier#>,<#int $option#>,<#mixed &$retval#>)" "S" "bool") ("f" "ldap_get_entries(" "ldap_get_entries(<#resource $link_identifier#>,<#resource $result_identifier#>)" "S" "array") ("f" "ldap_get_dn(" "ldap_get_dn(<#resource $link_identifier#>,<#resource $result_entry_identifier#>)" "S" "string") ("f" "ldap_get_attributes(" "ldap_get_attributes(<#resource $link_identifier#>,<#resource $result_entry_identifier#>)" "S" "array") ("f" "ldap_free_result(" "ldap_free_result(<#resource $result_identifier#>)" "S" "bool") ("f" "ldap_first_reference(" "ldap_first_reference(<#resource $link#>,<#resource $result#>)" "S" "resource") ("f" "ldap_first_entry(" "ldap_first_entry(<#resource $link_identifier#>,<#resource $result_identifier#>)" "S" "resource") ("f" "ldap_first_attribute(" "ldap_first_attribute(<#resource $link_identifier#>,<#resource $result_entry_identifier#>)" "S" "string") ("f" "ldap_explode_dn(" "ldap_explode_dn(<#string $dn#>,<#int $with_attrib#>)" "S" "array") ("f" "ldap_escape(" "ldap_escape(<#string $value#>,<#string $ignore#>,<#int $flags#>)" "S" "string") ("f" "ldap_error(" "ldap_error(<#resource $link_identifier#>)" "S" "string") ("f" "ldap_errno(" "ldap_errno(<#resource $link_identifier#>)" "S" "int") ("f" "ldap_err2str(" "ldap_err2str(<#int $errno#>)" "S" "string") ("f" "ldap_dn2ufn(" "ldap_dn2ufn(<#string $dn#>)" "S" "string") ("f" "ldap_delete(" "ldap_delete(<#resource $link_identifier#>,<#string $dn#>)" "S" "bool") ("f" "ldap_count_entries(" "ldap_count_entries(<#resource $link_identifier#>,<#resource $result_identifier#>)" "S" "int") ("f" "ldap_control_paged_result_response(" "ldap_control_paged_result_response(<#resource $link#>,<#resource $result#>,<#string &$cookie#>,<#int &$estimated#>)" "S" "bool") ("f" "ldap_control_paged_result(" "ldap_control_paged_result(<#resource $link#>,<#int $pagesize#>,<#bool $iscritical#>,<#string $cookie#>)" "S" "bool") ("f" "ldap_connect(" "ldap_connect(<#string $hostname#>,<#int $port#>)" "S" "resource") ("f" "ldap_compare(" "ldap_compare(<#resource $link_identifier#>,<#string $dn#>,<#string $attribute#>,<#string $value#>)" "S" "mixed") ("f" "ldap_bind(" "ldap_bind(<#resource $link_identifier#>,<#string $bind_rdn#>,<#string $bind_password#>)" "S" "bool") ("f" "ldap_add(" "ldap_add(<#resource $link_identifier#>,<#string $dn#>,<#array $entry#>)" "S" "bool") ("f" "ldap_8859_to_t61(" "ldap_8859_to_t61(<#string $value#>)" "S" "string") ("f" "lchown(" "lchown(<#string $filename#>,<#mixed $user#>)" "S" "bool") ("f" "lchgrp(" "lchgrp(<#string $filename#>,<#mixed $group#>)" "S" "bool") ("f" "lcg_value(" "lcg_value(<##>)" "S" "float") ("f" "lcfirst(" "lcfirst(<#string $str#>)" "S" "string") ("f" "ksort(" "ksort(<#array &$array#>,<#int $sort_flags#>)" "S" "bool") ("f" "krsort(" "krsort(<#array &$array#>,<#int $sort_flags#>)" "S" "bool") ("f" "key(" "key(<#array &$array#>)" "S" "mixed") ("f" "kadm5_modify_principal(" "kadm5_modify_principal(<#resource $handle#>,<#string $principal#>,<#array $options#>)" "S" "bool") ("f" "kadm5_init_with_password(" "kadm5_init_with_password(<#string $admin_server#>,<#string $realm#>,<#string $principal#>,<#string $password#>)" "S" "resource") ("f" "kadm5_get_principals(" "kadm5_get_principals(<#resource $handle#>)" "S" "array") ("f" "kadm5_get_principal(" "kadm5_get_principal(<#resource $handle#>,<#string $principal#>)" "S" "array") ("f" "kadm5_get_policies(" "kadm5_get_policies(<#resource $handle#>)" "S" "array") ("f" "kadm5_flush(" "kadm5_flush(<#resource $handle#>)" "S" "bool") ("f" "kadm5_destroy(" "kadm5_destroy(<#resource $handle#>)" "S" "bool") ("f" "kadm5_delete_principal(" "kadm5_delete_principal(<#resource $handle#>,<#string $principal#>)" "S" "bool") ("f" "kadm5_create_principal(" "kadm5_create_principal(<#resource $handle#>,<#string $principal#>,<#string $password#>,<#array $options#>)" "S" "bool") ("f" "kadm5_chpass_principal(" "kadm5_chpass_principal(<#resource $handle#>,<#string $principal#>,<#string $password#>)" "S" "bool") ("f" "juliantojd(" "juliantojd(<#int $month#>,<#int $day#>,<#int $year#>)" "S" "int") ("f" "judy_version(" "judy_version(<##>)" "S" "string") ("f" "judy_type(" "judy_type(<#Judy $array#>)" "S" "int") ("f" "json_last_error_msg(" "json_last_error_msg(<##>)" "S" "string") ("f" "json_last_error(" "json_last_error(<##>)" "S" "int") ("f" "json_encode(" "json_encode(<#mixed $value#>,<#int $options#>)" "S" "string") ("f" "json_decode(" "json_decode(<#string $json#>,<#bool $assoc#>,<#int $depth#>,<#int $options#>)" "S" "mixed") ("f" "jpeg2wbmp(" "jpeg2wbmp(<#string $jpegname#>,<#string $wbmpname#>,<#int $dest_height#>,<#int $dest_width#>,<#int $threshold#>)" "S" "bool") ("f" "join(" "join(<#string $glue#>,<#array $pieces#>)" "S" "string") ("f" "jewishtojd(" "jewishtojd(<#int $month#>,<#int $day#>,<#int $year#>)" "S" "int") ("f" "jdtounix(" "jdtounix(<#int $jday#>)" "S" "int") ("f" "jdtojulian(" "jdtojulian(<#int $julianday#>)" "S" "string") ("f" "jdtojewish(" "jdtojewish(<#int $juliandaycount#>,<#bool $hebrew#>,<#int $fl#>)" "S" "string") ("f" "jdtogregorian(" "jdtogregorian(<#int $julianday#>)" "S" "string") ("f" "jdtofrench(" "jdtofrench(<#int $juliandaycount#>)" "S" "string") ("f" "jdmonthname(" "jdmonthname(<#int $julianday#>,<#int $mode#>)" "S" "string") ("f" "jddayofweek(" "jddayofweek(<#int $julianday#>,<#int $mode#>)" "S" "mixed") ("f" "iterator_to_array(" "iterator_to_array(<#Traversable $iterator#>,<#bool $use_keys#>)" "S" "array") ("f" "iterator_count(" "iterator_count(<#Traversable $iterator#>)" "S" "int") ("f" "iterator_apply(" "iterator_apply(<#Traversable $iterator#>,<#callable $function#>,<#array $args#>)" "S" "int") ("f" "is_writable(" "is_writable(<#string $filename#>)" "S" "bool") ("f" "is_uploaded_file(" "is_uploaded_file(<#string $filename#>)" "S" "bool") ("f" "is_tainted(" "is_tainted(<#string $string#>)" "S" "bool") ("f" "is_subclass_of(" "is_subclass_of(<#object $object#>,<#string $class_name#>)" "S" "bool") ("f" "is_string(" "is_string(<#mixed $var#>)" "S" "bool") ("f" "is_soap_fault(" "is_soap_fault(<#mixed $object#>)" "S" "bool") ("f" "is_scalar(" "is_scalar(<#mixed $var#>)" "S" "bool") ("f" "is_resource(" "is_resource(<#mixed $var#>)" "S" "bool") ("f" "is_readable(" "is_readable(<#string $filename#>)" "S" "bool") ("f" "is_object(" "is_object(<#mixed $var#>)" "S" "bool") ("f" "is_numeric(" "is_numeric(<#mixed $var#>)" "S" "bool") ("f" "is_null(" "is_null(<#mixed $var#>)" "S" "bool") ("f" "is_nan(" "is_nan(<#float $val#>)" "S" "bool") ("f" "is_link(" "is_link(<#string $filename#>)" "S" "bool") ("f" "is_int(" "is_int(<#mixed $var#>)" "S" "bool") ("f" "is_infinite(" "is_infinite(<#float $val#>)" "S" "bool") ("f" "is_float(" "is_float(<#mixed $var#>)" "S" "bool") ("f" "is_finite(" "is_finite(<#float $val#>)" "S" "bool") ("f" "is_file(" "is_file(<#string $filename#>)" "S" "bool") ("f" "is_executable(" "is_executable(<#string $filename#>)" "S" "bool") ("f" "is_dir(" "is_dir(<#string $filename#>)" "S" "bool") ("f" "is_callable(" "is_callable(<#callable $name#>,<#bool $syntax_only#>,<#string &$callable_name#>)" "S" "bool") ("f" "is_bool(" "is_bool(<#mixed $var#>)" "S" "bool") ("f" "is_array(" "is_array(<#mixed $var#>)" "S" "bool") ("f" "is_a(" "is_a(<#object $object#>,<#string $class_name#>,<#bool $allow_string#>)" "S" "bool") ("f" "iptcparse(" "iptcparse(<#string $iptcblock#>)" "S" "array") ("f" "iptcembed(" "iptcembed(<#string $iptcdata#>,<#string $jpeg_file_name#>,<#int $spool#>)" "S" "mixed") ("f" "ip2long(" "ip2long(<#string $ip_address#>)" "S" "int") ("f" "intval(" "intval(<#mixed $var#>,<#int $base#>)" "S" "int") ("f" "intl_is_failure(" "intl_is_failure(<#int $error_code#>)" "S" "bool") ("f" "intl_get_error_message(" "intl_get_error_message(<##>)" "S" "string") ("f" "intl_get_error_code(" "intl_get_error_code(<##>)" "S" "int") ("f" "intl_error_name(" "intl_error_name(<#int $error_code#>)" "S" "string") ("f" "interface_exists(" "interface_exists(<#string $interface_name#>,<#bool $autoload#>)" "S" "bool") ("f" "inotify_rm_watch(" "inotify_rm_watch(<#resource $inotify_instance#>,<#int $watch_descriptor#>)" "S" "bool") ("f" "inotify_read(" "inotify_read(<#resource $inotify_instance#>)" "S" "array") ("f" "inotify_queue_len(" "inotify_queue_len(<#resource $inotify_instance#>)" "S" "int") ("f" "inotify_init(" "inotify_init(<##>)" "S" "resource") ("f" "inotify_add_watch(" "inotify_add_watch(<#resource $inotify_instance#>,<#string $pathname#>,<#int $mask#>)" "S" "int") ("f" "ini_set(" "ini_set(<#string $varname#>,<#string $newvalue#>)" "S" "string") ("f" "ini_restore(" "ini_restore(<#string $varname#>)" "S" "void") ("f" "ini_get(" "ini_get(<#string $varname#>)" "S" "string") ("f" "ini_get_all(" "ini_get_all(<#string $extension#>,<#bool $details#>)" "S" "array") ("f" "ingres_unbuffered_query(" "ingres_unbuffered_query(<#resource $link#>,<#string $query#>,<#array $params#>,<#string $types#>)" "S" "mixed") ("f" "ingres_set_environment(" "ingres_set_environment(<#resource $link#>,<#array $options#>)" "S" "bool") ("f" "ingres_rollback(" "ingres_rollback(<#resource $link#>)" "S" "bool") ("f" "ingres_result_seek(" "ingres_result_seek(<#resource $result#>,<#int $position#>)" "S" "bool") ("f" "ingres_query(" "ingres_query(<#resource $link#>,<#string $query#>,<#array $params#>,<#string $types#>)" "S" "mixed") ("f" "ingres_prepare(" "ingres_prepare(<#resource $link#>,<#string $query#>)" "S" "mixed") ("f" "ingres_pconnect(" "ingres_pconnect(<#string $database#>,<#string $username#>,<#string $password#>,<#array $options#>)" "S" "resource") ("f" "ingres_num_rows(" "ingres_num_rows(<#resource $result#>)" "S" "int") ("f" "ingres_num_fields(" "ingres_num_fields(<#resource $result#>)" "S" "int") ("f" "ingres_next_error(" "ingres_next_error(<#resource $link#>)" "S" "bool") ("f" "ingres_free_result(" "ingres_free_result(<#resource $result#>)" "S" "bool") ("f" "ingres_field_type(" "ingres_field_type(<#resource $result#>,<#int $index#>)" "S" "string") ("f" "ingres_field_scale(" "ingres_field_scale(<#resource $result#>,<#int $index#>)" "S" "int") ("f" "ingres_field_precision(" "ingres_field_precision(<#resource $result#>,<#int $index#>)" "S" "int") ("f" "ingres_field_nullable(" "ingres_field_nullable(<#resource $result#>,<#int $index#>)" "S" "bool") ("f" "ingres_field_name(" "ingres_field_name(<#resource $result#>,<#int $index#>)" "S" "string") ("f" "ingres_field_length(" "ingres_field_length(<#resource $result#>,<#int $index#>)" "S" "int") ("f" "ingres_fetch_row(" "ingres_fetch_row(<#resource $result#>)" "S" "array") ("f" "ingres_fetch_proc_return(" "ingres_fetch_proc_return(<#resource $result#>)" "S" "int") ("f" "ingres_fetch_object(" "ingres_fetch_object(<#resource $result#>,<#int $result_type#>)" "S" "object") ("f" "ingres_fetch_assoc(" "ingres_fetch_assoc(<#resource $result#>)" "S" "array") ("f" "ingres_fetch_array(" "ingres_fetch_array(<#resource $result#>,<#int $result_type#>)" "S" "array") ("f" "ingres_execute(" "ingres_execute(<#resource $result#>,<#array $params#>,<#string $types#>)" "S" "bool") ("f" "ingres_escape_string(" "ingres_escape_string(<#resource $link#>,<#string $source_string#>)" "S" "string") ("f" "ingres_errsqlstate(" "ingres_errsqlstate(<#resource $link#>)" "S" "string") ("f" "ingres_error(" "ingres_error(<#resource $link#>)" "S" "string") ("f" "ingres_errno(" "ingres_errno(<#resource $link#>)" "S" "int") ("f" "ingres_cursor(" "ingres_cursor(<#resource $result#>)" "S" "string") ("f" "ingres_connect(" "ingres_connect(<#string $database#>,<#string $username#>,<#string $password#>,<#array $options#>)" "S" "resource") ("f" "ingres_commit(" "ingres_commit(<#resource $link#>)" "S" "bool") ("f" "ingres_close(" "ingres_close(<#resource $link#>)" "S" "bool") ("f" "ingres_charset(" "ingres_charset(<#resource $link#>)" "S" "string") ("f" "ingres_autocommit_state(" "ingres_autocommit_state(<#resource $link#>)" "S" "bool") ("f" "ingres_autocommit(" "ingres_autocommit(<#resource $link#>)" "S" "bool") ("f" "inet_pton(" "inet_pton(<#string $address#>)" "S" "string") ("f" "inet_ntop(" "inet_ntop(<#string $in_addr#>)" "S" "string") ("f" "inclued_get_data(" "inclued_get_data(<##>)" "S" "array") ("f" "in_array(" "in_array(<#mixed $needle#>,<#array $haystack#>,<#bool $strict#>)" "S" "bool") ("f" "import_request_variables(" "import_request_variables(<#string $types#>,<#string $prefix#>)" "S" "bool") ("f" "implode(" "implode(<#string $glue#>,<#array $pieces#>)" "S" "string") ("f" "imap_utf8(" "imap_utf8(<#string $mime_encoded_text#>)" "S" "string") ("f" "imap_utf7_encode(" "imap_utf7_encode(<#string $data#>)" "S" "string") ("f" "imap_utf7_decode(" "imap_utf7_decode(<#string $text#>)" "S" "string") ("f" "imap_unsubscribe(" "imap_unsubscribe(<#resource $imap_stream#>,<#string $mailbox#>)" "S" "bool") ("f" "imap_undelete(" "imap_undelete(<#resource $imap_stream#>,<#int $msg_number#>,<#int $flags#>)" "S" "bool") ("f" "imap_uid(" "imap_uid(<#resource $imap_stream#>,<#int $msg_number#>)" "S" "int") ("f" "imap_timeout(" "imap_timeout(<#int $timeout_type#>,<#int $timeout#>)" "S" "mixed") ("f" "imap_thread(" "imap_thread(<#resource $imap_stream#>,<#int $options#>)" "S" "array") ("f" "imap_subscribe(" "imap_subscribe(<#resource $imap_stream#>,<#string $mailbox#>)" "S" "bool") ("f" "imap_status(" "imap_status(<#resource $imap_stream#>,<#string $mailbox#>,<#int $options#>)" "S" "object") ("f" "imap_sort(" "imap_sort(<#resource $imap_stream#>,<#int $criteria#>,<#int $reverse#>,<#int $options#>,<#string $search_criteria#>,<#string $charset#>)" "S" "array") ("f" "imap_set_quota(" "imap_set_quota(<#resource $imap_stream#>,<#string $quota_root#>,<#int $quota_limit#>)" "S" "bool") ("f" "imap_setflag_full(" "imap_setflag_full(<#resource $imap_stream#>,<#string $sequence#>,<#string $flag#>,<#int $options#>)" "S" "bool") ("f" "imap_setacl(" "imap_setacl(<#resource $imap_stream#>,<#string $mailbox#>,<#string $id#>,<#string $rights#>)" "S" "bool") ("f" "imap_search(" "imap_search(<#resource $imap_stream#>,<#string $criteria#>,<#int $options#>,<#string $charset#>)" "S" "array") ("f" "imap_savebody(" "imap_savebody(<#resource $imap_stream#>,<#mixed $file#>,<#int $msg_number#>,<#string $part_number#>,<#int $options#>)" "S" "bool") ("f" "imap_rfc822_write_address(" "imap_rfc822_write_address(<#string $mailbox#>,<#string $host#>,<#string $personal#>)" "S" "string") ("f" "imap_rfc822_parse_headers(" "imap_rfc822_parse_headers(<#string $headers#>,<#string $defaulthost#>)" "S" "object") ("f" "imap_rfc822_parse_adrlist(" "imap_rfc822_parse_adrlist(<#string $address#>,<#string $default_host#>)" "S" "array") ("f" "imap_reopen(" "imap_reopen(<#resource $imap_stream#>,<#string $mailbox#>,<#int $options#>,<#int $n_retries#>)" "S" "bool") ("f" "imap_renamemailbox(" "imap_renamemailbox(<#resource $imap_stream#>,<#string $old_mbox#>,<#string $new_mbox#>)" "S" "bool") ("f" "imap_qprint(" "imap_qprint(<#string $string#>)" "S" "string") ("f" "imap_ping(" "imap_ping(<#resource $imap_stream#>)" "S" "bool") ("f" "imap_open(" "imap_open(<#string $mailbox#>,<#string $username#>,<#string $password#>,<#int $options#>,<#int $n_retries#>,<#array $params#>)" "S" "resource") ("f" "imap_num_recent(" "imap_num_recent(<#resource $imap_stream#>)" "S" "int") ("f" "imap_num_msg(" "imap_num_msg(<#resource $imap_stream#>)" "S" "int") ("f" "imap_msgno(" "imap_msgno(<#resource $imap_stream#>,<#int $uid#>)" "S" "int") ("f" "imap_mime_header_decode(" "imap_mime_header_decode(<#string $text#>)" "S" "array") ("f" "imap_mail_move(" "imap_mail_move(<#resource $imap_stream#>,<#string $msglist#>,<#string $mailbox#>,<#int $options#>)" "S" "bool") ("f" "imap_mail_copy(" "imap_mail_copy(<#resource $imap_stream#>,<#string $msglist#>,<#string $mailbox#>,<#int $options#>)" "S" "bool") ("f" "imap_mail_compose(" "imap_mail_compose(<#array $envelope#>,<#array $body#>)" "S" "string") ("f" "imap_mailboxmsginfo(" "imap_mailboxmsginfo(<#resource $imap_stream#>)" "S" "object") ("f" "imap_mail(" "imap_mail(<#string $to#>,<#string $subject#>,<#string $message#>,<#string $additional_headers#>,<#string $cc#>,<#string $bcc#>,<#string $rpath#>)" "S" "bool") ("f" "imap_lsub(" "imap_lsub(<#resource $imap_stream#>,<#string $ref#>,<#string $pattern#>)" "S" "array") ("f" "imap_listscan(" "imap_listscan(<#resource $imap_stream#>,<#string $ref#>,<#string $pattern#>,<#string $content#>)" "S" "array") ("f" "imap_list(" "imap_list(<#resource $imap_stream#>,<#string $ref#>,<#string $pattern#>)" "S" "array") ("f" "imap_last_error(" "imap_last_error(<##>)" "S" "string") ("f" "imap_headers(" "imap_headers(<#resource $imap_stream#>)" "S" "array") ("f" "imap_headerinfo(" "imap_headerinfo(<#resource $imap_stream#>,<#int $msg_number#>,<#int $fromlength#>,<#int $subjectlength#>,<#string $defaulthost#>)" "S" "object") ("f" "imap_getsubscribed(" "imap_getsubscribed(<#resource $imap_stream#>,<#string $ref#>,<#string $pattern#>)" "S" "array") ("f" "imap_get_quotaroot(" "imap_get_quotaroot(<#resource $imap_stream#>,<#string $quota_root#>)" "S" "array") ("f" "imap_get_quota(" "imap_get_quota(<#resource $imap_stream#>,<#string $quota_root#>)" "S" "array") ("f" "imap_getmailboxes(" "imap_getmailboxes(<#resource $imap_stream#>,<#string $ref#>,<#string $pattern#>)" "S" "array") ("f" "imap_getacl(" "imap_getacl(<#resource $imap_stream#>,<#string $mailbox#>)" "S" "array") ("f" "imap_gc(" "imap_gc(<#resource $imap_stream#>,<#int $caches#>)" "S" "bool") ("f" "imap_fetchstructure(" "imap_fetchstructure(<#resource $imap_stream#>,<#int $msg_number#>,<#int $options#>)" "S" "object") ("f" "imap_fetch_overview(" "imap_fetch_overview(<#resource $imap_stream#>,<#string $sequence#>,<#int $options#>)" "S" "array") ("f" "imap_fetchmime(" "imap_fetchmime(<#resource $imap_stream#>,<#int $msg_number#>,<#string $section#>,<#int $options#>)" "S" "string") ("f" "imap_fetchheader(" "imap_fetchheader(<#resource $imap_stream#>,<#int $msg_number#>,<#int $options#>)" "S" "string") ("f" "imap_fetchbody(" "imap_fetchbody(<#resource $imap_stream#>,<#int $msg_number#>,<#string $section#>,<#int $options#>)" "S" "string") ("f" "imap_expunge(" "imap_expunge(<#resource $imap_stream#>)" "S" "bool") ("f" "imap_errors(" "imap_errors(<##>)" "S" "array") ("f" "imap_deletemailbox(" "imap_deletemailbox(<#resource $imap_stream#>,<#string $mailbox#>)" "S" "bool") ("f" "imap_delete(" "imap_delete(<#resource $imap_stream#>,<#int $msg_number#>,<#int $options#>)" "S" "bool") ("f" "imap_createmailbox(" "imap_createmailbox(<#resource $imap_stream#>,<#string $mailbox#>)" "S" "bool") ("f" "imap_close(" "imap_close(<#resource $imap_stream#>,<#int $flag#>)" "S" "bool") ("f" "imap_clearflag_full(" "imap_clearflag_full(<#resource $imap_stream#>,<#string $sequence#>,<#string $flag#>,<#int $options#>)" "S" "bool") ("f" "imap_check(" "imap_check(<#resource $imap_stream#>)" "S" "object") ("f" "imap_bodystruct(" "imap_bodystruct(<#resource $imap_stream#>,<#int $msg_number#>,<#string $section#>)" "S" "object") ("f" "imap_body(" "imap_body(<#resource $imap_stream#>,<#int $msg_number#>,<#int $options#>)" "S" "string") ("f" "imap_binary(" "imap_binary(<#string $string#>)" "S" "string") ("f" "imap_base64(" "imap_base64(<#string $text#>)" "S" "string") ("f" "imap_append(" "imap_append(<#resource $imap_stream#>,<#string $mailbox#>,<#string $message#>,<#string $options#>,<#string $internal_date#>)" "S" "bool") ("f" "imap_alerts(" "imap_alerts(<##>)" "S" "array") ("f" "imap_8bit(" "imap_8bit(<#string $string#>)" "S" "string") ("f" "imagexbm(" "imagexbm(<#resource $image#>,<#string $filename#>,<#int $foreground#>)" "S" "bool") ("f" "imagewebp(" "imagewebp(<#resource $image#>,<#string $filename#>)" "S" "bool") ("f" "imagewbmp(" "imagewbmp(<#resource $image#>,<#string $filename#>,<#int $foreground#>)" "S" "bool") ("f" "image_type_to_mime_type(" "image_type_to_mime_type(<#int $imagetype#>)" "S" "string") ("f" "image_type_to_extension(" "image_type_to_extension(<#int $imagetype#>,<#bool $include_dot#>)" "S" "string") ("f" "imagetypes(" "imagetypes(<##>)" "S" "int") ("f" "imagettftext(" "imagettftext(<#resource $image#>,<#float $size#>,<#float $angle#>,<#int $x#>,<#int $y#>,<#int $color#>,<#string $fontfile#>,<#string $text#>)" "S" "array") ("f" "imagettfbbox(" "imagettfbbox(<#float $size#>,<#float $angle#>,<#string $fontfile#>,<#string $text#>)" "S" "array") ("f" "imagetruecolortopalette(" "imagetruecolortopalette(<#resource $image#>,<#bool $dither#>,<#int $ncolors#>)" "S" "bool") ("f" "imagesy(" "imagesy(<#resource $image#>)" "S" "int") ("f" "imagesx(" "imagesx(<#resource $image#>)" "S" "int") ("f" "imagestringup(" "imagestringup(<#resource $image#>,<#int $font#>,<#int $x#>,<#int $y#>,<#string $s#>,<#int $col#>)" "S" "bool") ("f" "imagestring(" "imagestring(<#resource $image#>,<#int $font#>,<#int $x#>,<#int $y#>,<#string $s#>,<#int $col#>)" "S" "bool") ("f" "imagesettile(" "imagesettile(<#resource $image#>,<#resource $tile#>)" "S" "bool") ("f" "imagesetthickness(" "imagesetthickness(<#resource $image#>,<#int $thickness#>)" "S" "bool") ("f" "imagesetstyle(" "imagesetstyle(<#resource $image#>,<#array $style#>)" "S" "bool") ("f" "imagesetpixel(" "imagesetpixel(<#resource $image#>,<#int $x#>,<#int $y#>,<#int $color#>)" "S" "bool") ("f" "imagesetinterpolation(" "imagesetinterpolation(<#resource $image#>,<#int $method#>)" "S" "bool") ("f" "imagesetbrush(" "imagesetbrush(<#resource $image#>,<#resource $brush#>)" "S" "bool") ("f" "imagescale(" "imagescale(<#resource $image#>,<#int $new_width#>,<#int $new_height#>,<#int $mode#>)" "S" "resource") ("f" "imagesavealpha(" "imagesavealpha(<#resource $image#>,<#bool $saveflag#>)" "S" "bool") ("f" "imagerotate(" "imagerotate(<#resource $image#>,<#float $angle#>,<#int $bgd_color#>,<#int $ignore_transparent#>)" "S" "resource") ("f" "imagerectangle(" "imagerectangle(<#resource $image#>,<#int $x1#>,<#int $y1#>,<#int $x2#>,<#int $y2#>,<#int $col#>)" "S" "bool") ("f" "imagepstext(" "imagepstext(<#resource $image#>,<#string $text#>,<#resource $font_index#>,<#int $size#>,<#int $foreground#>,<#int $background#>,<#int $x#>,<#int $y#>,<#int $space#>,<#int $tightness#>,<#float $angle#>,<#int $antialias_steps#>)" "S" "array") ("f" "imagepsslantfont(" "imagepsslantfont(<#resource $font_index#>,<#float $slant#>)" "S" "bool") ("f" "imagepsloadfont(" "imagepsloadfont(<#string $filename#>)" "S" "resource") ("f" "imagepsfreefont(" "imagepsfreefont(<#resource $font_index#>)" "S" "bool") ("f" "imagepsextendfont(" "imagepsextendfont(<#resource $font_index#>,<#float $extend#>)" "S" "bool") ("f" "imagepsencodefont(" "imagepsencodefont(<#resource $font_index#>,<#string $encodingfile#>)" "S" "bool") ("f" "imagepsbbox(" "imagepsbbox(<#string $text#>,<#resource $font#>,<#int $size#>)" "S" "array") ("f" "imagepolygon(" "imagepolygon(<#resource $image#>,<#array $points#>,<#int $num_points#>,<#int $color#>)" "S" "bool") ("f" "imagepng(" "imagepng(<#resource $image#>,<#string $filename#>)" "S" "bool") ("f" "imagepalettetotruecolor(" "imagepalettetotruecolor(<#resource $src#>)" "S" "bool") ("f" "imagepalettecopy(" "imagepalettecopy(<#resource $destination#>,<#resource $source#>)" "S" "void") ("f" "imageloadfont(" "imageloadfont(<#string $file#>)" "S" "int") ("f" "imageline(" "imageline(<#resource $image#>,<#int $x1#>,<#int $y1#>,<#int $x2#>,<#int $y2#>,<#int $color#>)" "S" "bool") ("f" "imagelayereffect(" "imagelayereffect(<#resource $image#>,<#int $effect#>)" "S" "bool") ("f" "imagejpeg(" "imagejpeg(<#resource $image#>,<#string $filename#>,<#int $quality#>)" "S" "bool") ("f" "imageistruecolor(" "imageistruecolor(<#resource $image#>)" "S" "bool") ("f" "imageinterlace(" "imageinterlace(<#resource $image#>,<#int $interlace#>)" "S" "int") ("f" "imagegrabwindow(" "imagegrabwindow(<#int $window_handle#>,<#int $client_area#>)" "S" "resource") ("f" "imagegrabscreen(" "imagegrabscreen(<##>)" "S" "resource") ("f" "imagegif(" "imagegif(<#resource $image#>,<#string $filename#>)" "S" "bool") ("f" "imagegd(" "imagegd(<#resource $image#>,<#string $filename#>)" "S" "bool") ("f" "imagegd2(" "imagegd2(<#resource $image#>,<#string $filename#>,<#int $chunk_size#>,<#int $type#>)" "S" "bool") ("f" "imagegammacorrect(" "imagegammacorrect(<#resource $image#>,<#float $inputgamma#>,<#float $outputgamma#>)" "S" "bool") ("f" "imagefttext(" "imagefttext(<#resource $image#>,<#float $size#>,<#float $angle#>,<#int $x#>,<#int $y#>,<#int $color#>,<#string $fontfile#>,<#string $text#>,<#array $extrainfo#>)" "S" "array") ("f" "imageftbbox(" "imageftbbox(<#float $size#>,<#float $angle#>,<#string $fontfile#>,<#string $text#>,<#array $extrainfo#>)" "S" "array") ("f" "imagefontwidth(" "imagefontwidth(<#int $font#>)" "S" "int") ("f" "imagefontheight(" "imagefontheight(<#int $font#>)" "S" "int") ("f" "imageflip(" "imageflip(<#resource $image#>,<#int $mode#>)" "S" "bool") ("f" "imagefilter(" "imagefilter(<#resource $src_im#>,<#int $filtertype#>,<#int $arg1#>,<#int $arg2#>,<#int $arg3#>)" "S" "bool") ("f" "imagefilltoborder(" "imagefilltoborder(<#resource $image#>,<#int $x#>,<#int $y#>,<#int $border#>,<#int $color#>)" "S" "bool") ("f" "imagefilledrectangle(" "imagefilledrectangle(<#resource $image#>,<#int $x1#>,<#int $y1#>,<#int $x2#>,<#int $y2#>,<#int $color#>)" "S" "bool") ("f" "imagefilledpolygon(" "imagefilledpolygon(<#resource $image#>,<#array $points#>,<#int $num_points#>,<#int $color#>)" "S" "bool") ("f" "imagefilledellipse(" "imagefilledellipse(<#resource $image#>,<#int $cx#>,<#int $cy#>,<#int $width#>,<#int $height#>,<#int $color#>)" "S" "bool") ("f" "imagefilledarc(" "imagefilledarc(<#resource $image#>,<#int $cx#>,<#int $cy#>,<#int $width#>,<#int $height#>,<#int $start#>,<#int $end#>,<#int $color#>,<#int $style#>)" "S" "bool") ("f" "imagefill(" "imagefill(<#resource $image#>,<#int $x#>,<#int $y#>,<#int $color#>)" "S" "bool") ("f" "imageellipse(" "imageellipse(<#resource $image#>,<#int $cx#>,<#int $cy#>,<#int $width#>,<#int $height#>,<#int $color#>)" "S" "bool") ("f" "imagedestroy(" "imagedestroy(<#resource $image#>)" "S" "bool") ("f" "imagedashedline(" "imagedashedline(<#resource $image#>,<#int $x1#>,<#int $y1#>,<#int $x2#>,<#int $y2#>,<#int $color#>)" "S" "bool") ("f" "imagecrop(" "imagecrop(<#resource $image#>,<#array $rect#>)" "S" "resource") ("f" "imagecropauto(" "imagecropauto(<#resource $image#>,<#int $mode#>,<#float $threshold#>,<#int $color#>)" "S" "resource") ("f" "imagecreatetruecolor(" "imagecreatetruecolor(<#int $width#>,<#int $height#>)" "S" "resource") ("f" "imagecreate(" "imagecreate(<#int $x_size#>,<#int $y_size#>)" "S" "resource") ("f" "imagecreatefromxpm(" "imagecreatefromxpm(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromxbm(" "imagecreatefromxbm(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromwebp(" "imagecreatefromwebp(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromwbmp(" "imagecreatefromwbmp(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromstring(" "imagecreatefromstring(<#string $image#>)" "S" "resource") ("f" "imagecreatefrompng(" "imagecreatefrompng(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromjpeg(" "imagecreatefromjpeg(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromgif(" "imagecreatefromgif(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromgd(" "imagecreatefromgd(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromgd2(" "imagecreatefromgd2(<#string $filename#>)" "S" "resource") ("f" "imagecreatefromgd2part(" "imagecreatefromgd2part(<#string $filename#>,<#int $srcX#>,<#int $srcY#>,<#int $width#>,<#int $height#>)" "S" "resource") ("f" "imagecopyresized(" "imagecopyresized(<#resource $dst_image#>,<#resource $src_image#>,<#int $dst_x#>,<#int $dst_y#>,<#int $src_x#>,<#int $src_y#>,<#int $dst_w#>,<#int $dst_h#>,<#int $src_w#>,<#int $src_h#>)" "S" "bool") ("f" "imagecopyresampled(" "imagecopyresampled(<#resource $dst_image#>,<#resource $src_image#>,<#int $dst_x#>,<#int $dst_y#>,<#int $src_x#>,<#int $src_y#>,<#int $dst_w#>,<#int $dst_h#>,<#int $src_w#>,<#int $src_h#>)" "S" "bool") ("f" "imagecopymergegray(" "imagecopymergegray(<#resource $dst_im#>,<#resource $src_im#>,<#int $dst_x#>,<#int $dst_y#>,<#int $src_x#>,<#int $src_y#>,<#int $src_w#>,<#int $src_h#>,<#int $pct#>)" "S" "bool") ("f" "imagecopymerge(" "imagecopymerge(<#resource $dst_im#>,<#resource $src_im#>,<#int $dst_x#>,<#int $dst_y#>,<#int $src_x#>,<#int $src_y#>,<#int $src_w#>,<#int $src_h#>,<#int $pct#>)" "S" "bool") ("f" "imagecopy(" "imagecopy(<#resource $dst_im#>,<#resource $src_im#>,<#int $dst_x#>,<#int $dst_y#>,<#int $src_x#>,<#int $src_y#>,<#int $src_w#>,<#int $src_h#>)" "S" "bool") ("f" "imageconvolution(" "imageconvolution(<#resource $image#>,<#array $matrix#>,<#float $div#>,<#float $offset#>)" "S" "bool") ("f" "imagecolortransparent(" "imagecolortransparent(<#resource $image#>,<#int $color#>)" "S" "int") ("f" "imagecolorstotal(" "imagecolorstotal(<#resource $image#>)" "S" "int") ("f" "imagecolorsforindex(" "imagecolorsforindex(<#resource $image#>,<#int $index#>)" "S" "array") ("f" "imagecolorset(" "imagecolorset(<#resource $image#>,<#int $index#>,<#int $red#>,<#int $green#>,<#int $blue#>)" "S" "void") ("f" "imagecolorresolve(" "imagecolorresolve(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>)" "S" "int") ("f" "imagecolorresolvealpha(" "imagecolorresolvealpha(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>,<#int $alpha#>)" "S" "int") ("f" "imagecolormatch(" "imagecolormatch(<#resource $image1#>,<#resource $image2#>)" "S" "bool") ("f" "imagecolorexact(" "imagecolorexact(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>)" "S" "int") ("f" "imagecolorexactalpha(" "imagecolorexactalpha(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>,<#int $alpha#>)" "S" "int") ("f" "imagecolordeallocate(" "imagecolordeallocate(<#resource $image#>,<#int $color#>)" "S" "bool") ("f" "imagecolorclosest(" "imagecolorclosest(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>)" "S" "int") ("f" "imagecolorclosesthwb(" "imagecolorclosesthwb(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>)" "S" "int") ("f" "imagecolorclosestalpha(" "imagecolorclosestalpha(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>,<#int $alpha#>)" "S" "int") ("f" "imagecolorat(" "imagecolorat(<#resource $image#>,<#int $x#>,<#int $y#>)" "S" "int") ("f" "imagecolorallocate(" "imagecolorallocate(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>)" "S" "int") ("f" "imagecolorallocatealpha(" "imagecolorallocatealpha(<#resource $image#>,<#int $red#>,<#int $green#>,<#int $blue#>,<#int $alpha#>)" "S" "int") ("f" "imagecharup(" "imagecharup(<#resource $image#>,<#int $font#>,<#int $x#>,<#int $y#>,<#string $c#>,<#int $color#>)" "S" "bool") ("f" "imagechar(" "imagechar(<#resource $image#>,<#int $font#>,<#int $x#>,<#int $y#>,<#string $c#>,<#int $color#>)" "S" "bool") ("f" "imagearc(" "imagearc(<#resource $image#>,<#int $cx#>,<#int $cy#>,<#int $w#>,<#int $h#>,<#int $s#>,<#int $e#>,<#int $color#>)" "S" "bool") ("f" "imageantialias(" "imageantialias(<#resource $image#>,<#bool $enabled#>)" "S" "bool") ("f" "imagealphablending(" "imagealphablending(<#resource $image#>,<#bool $blendmode#>)" "S" "bool") ("f" "imageaffine(" "imageaffine(<#resource $image#>,<#array $affine#>,<#array $clip#>)" "S" "resource") ("f" "imageaffinematrixget(" "imageaffinematrixget(<#int $type#>,<#mixed $options#>)" "S" "array") ("f" "imageaffinematrixconcat(" "imageaffinematrixconcat(<#array $m1#>,<#array $m2#>)" "S" "array") ("f" "image2wbmp(" "image2wbmp(<#resource $image#>,<#string $filename#>,<#int $threshold#>)" "S" "int") ("f" "iis_stop_service(" "iis_stop_service(<#string $service_id#>)" "S" "int") ("f" "iis_stop_server(" "iis_stop_server(<#int $server_instance#>)" "S" "int") ("f" "iis_start_service(" "iis_start_service(<#string $service_id#>)" "S" "int") ("f" "iis_start_server(" "iis_start_server(<#int $server_instance#>)" "S" "int") ("f" "iis_set_server_rights(" "iis_set_server_rights(<#int $server_instance#>,<#string $virtual_path#>,<#int $directory_flags#>)" "S" "int") ("f" "iis_set_script_map(" "iis_set_script_map(<#int $server_instance#>,<#string $virtual_path#>,<#string $script_extension#>,<#string $engine_path#>,<#int $allow_scripting#>)" "S" "int") ("f" "iis_set_dir_security(" "iis_set_dir_security(<#int $server_instance#>,<#string $virtual_path#>,<#int $directory_flags#>)" "S" "int") ("f" "iis_set_app_settings(" "iis_set_app_settings(<#int $server_instance#>,<#string $virtual_path#>,<#string $application_scope#>)" "S" "int") ("f" "iis_remove_server(" "iis_remove_server(<#int $server_instance#>)" "S" "int") ("f" "iis_get_service_state(" "iis_get_service_state(<#string $service_id#>)" "S" "int") ("f" "iis_get_server_rights(" "iis_get_server_rights(<#int $server_instance#>,<#string $virtual_path#>)" "S" "int") ("f" "iis_get_server_by_path(" "iis_get_server_by_path(<#string $path#>)" "S" "int") ("f" "iis_get_server_by_comment(" "iis_get_server_by_comment(<#string $comment#>)" "S" "int") ("f" "iis_get_script_map(" "iis_get_script_map(<#int $server_instance#>,<#string $virtual_path#>,<#string $script_extension#>)" "S" "string") ("f" "iis_get_dir_security(" "iis_get_dir_security(<#int $server_instance#>,<#string $virtual_path#>)" "S" "int") ("f" "iis_add_server(" "iis_add_server(<#string $path#>,<#string $comment#>,<#string $server_ip#>,<#int $port#>,<#string $host_name#>,<#int $rights#>,<#int $start_server#>)" "S" "int") ("f" "ignore_user_abort(" "ignore_user_abort(<#string $value#>)" "S" "int") ("f" "ifxus_write_slob(" "ifxus_write_slob(<#int $bid#>,<#string $content#>)" "S" "int") ("f" "ifxus_tell_slob(" "ifxus_tell_slob(<#int $bid#>)" "S" "int") ("f" "ifxus_seek_slob(" "ifxus_seek_slob(<#int $bid#>,<#int $mode#>,<#int $offset#>)" "S" "int") ("f" "ifxus_read_slob(" "ifxus_read_slob(<#int $bid#>,<#int $nbytes#>)" "S" "string") ("f" "ifxus_open_slob(" "ifxus_open_slob(<#int $bid#>,<#int $mode#>)" "S" "int") ("f" "ifxus_free_slob(" "ifxus_free_slob(<#int $bid#>)" "S" "bool") ("f" "ifxus_create_slob(" "ifxus_create_slob(<#int $mode#>)" "S" "int") ("f" "ifxus_close_slob(" "ifxus_close_slob(<#int $bid#>)" "S" "bool") ("f" "ifx_update_char(" "ifx_update_char(<#int $bid#>,<#string $content#>)" "S" "bool") ("f" "ifx_update_blob(" "ifx_update_blob(<#int $bid#>,<#string $content#>)" "S" "bool") ("f" "ifx_textasvarchar(" "ifx_textasvarchar(<#int $mode#>)" "S" "bool") ("f" "ifx_query(" "ifx_query(<#string $query#>,<#resource $link_identifier#>,<#int $cursor_type#>,<#mixed $blobidarray#>)" "S" "resource") ("f" "ifx_prepare(" "ifx_prepare(<#string $query#>,<#resource $link_identifier#>,<#int $cursor_def#>,<#mixed $blobidarray#>)" "S" "resource") ("f" "ifx_pconnect(" "ifx_pconnect(<#string $database#>,<#string $userid#>,<#string $password#>)" "S" "resource") ("f" "ifx_num_rows(" "ifx_num_rows(<#resource $result_id#>)" "S" "int") ("f" "ifx_num_fields(" "ifx_num_fields(<#resource $result_id#>)" "S" "int") ("f" "ifx_nullformat(" "ifx_nullformat(<#int $mode#>)" "S" "bool") ("f" "ifx_htmltbl_result(" "ifx_htmltbl_result(<#resource $result_id#>,<#string $html_table_options#>)" "S" "int") ("f" "ifx_getsqlca(" "ifx_getsqlca(<#resource $result_id#>)" "S" "array") ("f" "ifx_get_char(" "ifx_get_char(<#int $bid#>)" "S" "string") ("f" "ifx_get_blob(" "ifx_get_blob(<#int $bid#>)" "S" "string") ("f" "ifx_free_result(" "ifx_free_result(<#resource $result_id#>)" "S" "bool") ("f" "ifx_free_char(" "ifx_free_char(<#int $bid#>)" "S" "bool") ("f" "ifx_free_blob(" "ifx_free_blob(<#int $bid#>)" "S" "bool") ("f" "ifx_fieldtypes(" "ifx_fieldtypes(<#resource $result_id#>)" "S" "array") ("f" "ifx_fieldproperties(" "ifx_fieldproperties(<#resource $result_id#>)" "S" "array") ("f" "ifx_fetch_row(" "ifx_fetch_row(<#resource $result_id#>,<#mixed $position#>)" "S" "array") ("f" "ifx_error(" "ifx_error(<#resource $link_identifier#>)" "S" "string") ("f" "ifx_errormsg(" "ifx_errormsg(<#int $errorcode#>)" "S" "string") ("f" "ifx_do(" "ifx_do(<#resource $result_id#>)" "S" "bool") ("f" "ifx_create_char(" "ifx_create_char(<#string $param#>)" "S" "int") ("f" "ifx_create_blob(" "ifx_create_blob(<#int $type#>,<#int $mode#>,<#string $param#>)" "S" "int") ("f" "ifx_copy_blob(" "ifx_copy_blob(<#int $bid#>)" "S" "int") ("f" "ifx_connect(" "ifx_connect(<#string $database#>,<#string $userid#>,<#string $password#>)" "S" "resource") ("f" "ifx_close(" "ifx_close(<#resource $link_identifier#>)" "S" "bool") ("f" "ifx_byteasvarchar(" "ifx_byteasvarchar(<#int $mode#>)" "S" "bool") ("f" "ifx_blobinfile_mode(" "ifx_blobinfile_mode(<#int $mode#>)" "S" "bool") ("f" "ifx_affected_rows(" "ifx_affected_rows(<#resource $result_id#>)" "S" "int") ("f" "idn_to_utf8(" "idn_to_utf8(<#string $domain#>,<#int $options#>,<#int $variant#>,<#array &$idna_info#>)" "S" "string") ("f" "idn_to_ascii(" "idn_to_ascii(<#string $domain#>,<#int $options#>,<#int $variant#>,<#array &$idna_info#>)" "S" "string") ("f" "idate(" "idate(<#string $format#>,<#int $timestamp#>)" "S" "int") ("f" "id3_set_tag(" "id3_set_tag(<#string $filename#>,<#array $tag#>,<#int $version#>)" "S" "bool") ("f" "id3_remove_tag(" "id3_remove_tag(<#string $filename#>,<#int $version#>)" "S" "bool") ("f" "id3_get_version(" "id3_get_version(<#string $filename#>)" "S" "int") ("f" "id3_get_tag(" "id3_get_tag(<#string $filename#>,<#int $version#>)" "S" "array") ("f" "id3_get_genre_name(" "id3_get_genre_name(<#int $genre_id#>)" "S" "string") ("f" "id3_get_genre_list(" "id3_get_genre_list(<##>)" "S" "array") ("f" "id3_get_genre_id(" "id3_get_genre_id(<#string $genre#>)" "S" "int") ("f" "id3_get_frame_short_name(" "id3_get_frame_short_name(<#string $frameId#>)" "S" "string") ("f" "id3_get_frame_long_name(" "id3_get_frame_long_name(<#string $frameId#>)" "S" "string") ("f" "iconv_substr(" "iconv_substr(<#string $str#>,<#int $offset#>,<#int $length#>,<#string $charset#>)" "S" "string") ("f" "iconv_strrpos(" "iconv_strrpos(<#string $haystack#>,<#string $needle#>,<#string $charset#>)" "S" "int") ("f" "iconv_strpos(" "iconv_strpos(<#string $haystack#>,<#string $needle#>,<#int $offset#>,<#string $charset#>)" "S" "int") ("f" "iconv_strlen(" "iconv_strlen(<#string $str#>,<#string $charset#>)" "S" "int") ("f" "iconv(" "iconv(<#string $in_charset#>,<#string $out_charset#>,<#string $str#>)" "S" "string") ("f" "iconv_set_encoding(" "iconv_set_encoding(<#string $type#>,<#string $charset#>)" "S" "bool") ("f" "iconv_mime_encode(" "iconv_mime_encode(<#string $field_name#>,<#string $field_value#>,<#array $preferences#>)" "S" "string") ("f" "iconv_mime_decode(" "iconv_mime_decode(<#string $encoded_header#>,<#int $mode#>,<#string $charset#>)" "S" "string") ("f" "iconv_mime_decode_headers(" "iconv_mime_decode_headers(<#string $encoded_headers#>,<#int $mode#>,<#string $charset#>)" "S" "array") ("f" "iconv_get_encoding(" "iconv_get_encoding(<#string $type#>)" "S" "mixed") ("f" "ibase_wait_event(" "ibase_wait_event(<#string $event_name1#>,<#string $event_name2#>,<#string $__args__#>)" "S" "string") ("f" "ibase_trans(" "ibase_trans(<#int $trans_args#>,<#resource $link_identifier#>)" "S" "resource") ("f" "ibase_set_event_handler(" "ibase_set_event_handler(<#callable $event_handler#>,<#string $event_name1#>,<#string $event_name2#>,<#string $__args__#>)" "S" "resource") ("f" "ibase_service_detach(" "ibase_service_detach(<#resource $service_handle#>)" "S" "bool") ("f" "ibase_service_attach(" "ibase_service_attach(<#string $host#>,<#string $dba_username#>,<#string $dba_password#>)" "S" "resource") ("f" "ibase_server_info(" "ibase_server_info(<#resource $service_handle#>,<#int $action#>)" "S" "string") ("f" "ibase_rollback_ret(" "ibase_rollback_ret(<#resource $link_or_trans_identifier#>)" "S" "bool") ("f" "ibase_rollback(" "ibase_rollback(<#resource $link_or_trans_identifier#>)" "S" "bool") ("f" "ibase_restore(" "ibase_restore(<#resource $service_handle#>,<#string $source_file#>,<#string $dest_db#>,<#int $options#>,<#bool $verbose#>)" "S" "mixed") ("f" "ibase_query(" "ibase_query(<#resource $link_identifier#>,<#string $query#>,<#int $bind_args#>)" "S" "resource") ("f" "ibase_prepare(" "ibase_prepare(<#string $query#>)" "S" "resource") ("f" "ibase_pconnect(" "ibase_pconnect(<#string $database#>,<#string $username#>,<#string $password#>,<#string $charset#>,<#int $buffers#>,<#int $dialect#>,<#string $role#>,<#int $sync#>)" "S" "resource") ("f" "ibase_param_info(" "ibase_param_info(<#resource $query#>,<#int $param_number#>)" "S" "array") ("f" "ibase_num_params(" "ibase_num_params(<#resource $query#>)" "S" "int") ("f" "ibase_num_fields(" "ibase_num_fields(<#resource $result_id#>)" "S" "int") ("f" "ibase_name_result(" "ibase_name_result(<#resource $result#>,<#string $name#>)" "S" "bool") ("f" "ibase_modify_user(" "ibase_modify_user(<#resource $service_handle#>,<#string $user_name#>,<#string $password#>,<#string $first_name#>,<#string $middle_name#>,<#string $last_name#>)" "S" "bool") ("f" "ibase_maintain_db(" "ibase_maintain_db(<#resource $service_handle#>,<#string $db#>,<#int $action#>,<#int $argument#>)" "S" "bool") ("f" "ibase_gen_id(" "ibase_gen_id(<#string $generator#>,<#int $increment#>,<#resource $link_identifier#>)" "S" "mixed") ("f" "ibase_free_result(" "ibase_free_result(<#resource $result_identifier#>)" "S" "bool") ("f" "ibase_free_query(" "ibase_free_query(<#resource $query#>)" "S" "bool") ("f" "ibase_free_event_handler(" "ibase_free_event_handler(<#resource $event#>)" "S" "bool") ("f" "ibase_field_info(" "ibase_field_info(<#resource $result#>,<#int $field_number#>)" "S" "array") ("f" "ibase_fetch_row(" "ibase_fetch_row(<#resource $result_identifier#>,<#int $fetch_flag#>)" "S" "array") ("f" "ibase_fetch_object(" "ibase_fetch_object(<#resource $result_id#>,<#int $fetch_flag#>)" "S" "object") ("f" "ibase_fetch_assoc(" "ibase_fetch_assoc(<#resource $result#>,<#int $fetch_flag#>)" "S" "array") ("f" "ibase_execute(" "ibase_execute(<#resource $query#>,<#mixed $bind_arg#>,<#mixed $__args__#>)" "S" "resource") ("f" "ibase_errmsg(" "ibase_errmsg(<##>)" "S" "string") ("f" "ibase_errcode(" "ibase_errcode(<##>)" "S" "int") ("f" "ibase_drop_db(" "ibase_drop_db(<#resource $connection#>)" "S" "bool") ("f" "ibase_delete_user(" "ibase_delete_user(<#resource $service_handle#>,<#string $user_name#>)" "S" "bool") ("f" "ibase_db_info(" "ibase_db_info(<#resource $service_handle#>,<#string $db#>,<#int $action#>,<#int $argument#>)" "S" "string") ("f" "ibase_connect(" "ibase_connect(<#string $database#>,<#string $username#>,<#string $password#>,<#string $charset#>,<#int $buffers#>,<#int $dialect#>,<#string $role#>,<#int $sync#>)" "S" "resource") ("f" "ibase_commit_ret(" "ibase_commit_ret(<#resource $link_or_trans_identifier#>)" "S" "bool") ("f" "ibase_commit(" "ibase_commit(<#resource $link_or_trans_identifier#>)" "S" "bool") ("f" "ibase_close(" "ibase_close(<#resource $connection_id#>)" "S" "bool") ("f" "ibase_blob_open(" "ibase_blob_open(<#resource $link_identifier#>,<#string $blob_id#>)" "S" "resource") ("f" "ibase_blob_info(" "ibase_blob_info(<#resource $link_identifier#>,<#string $blob_id#>)" "S" "array") ("f" "ibase_blob_import(" "ibase_blob_import(<#resource $link_identifier#>,<#resource $file_handle#>)" "S" "string") ("f" "ibase_blob_get(" "ibase_blob_get(<#resource $blob_handle#>,<#int $len#>)" "S" "string") ("f" "ibase_blob_echo(" "ibase_blob_echo(<#string $blob_id#>)" "S" "bool") ("f" "ibase_blob_create(" "ibase_blob_create(<#resource $link_identifier#>)" "S" "resource") ("f" "ibase_blob_close(" "ibase_blob_close(<#resource $blob_handle#>)" "S" "mixed") ("f" "ibase_blob_cancel(" "ibase_blob_cancel(<#resource $blob_handle#>)" "S" "bool") ("f" "ibase_blob_add(" "ibase_blob_add(<#resource $blob_handle#>,<#string $data#>)" "S" "void") ("f" "ibase_backup(" "ibase_backup(<#resource $service_handle#>,<#string $source_db#>,<#string $dest_file#>,<#int $options#>,<#bool $verbose#>)" "S" "mixed") ("f" "ibase_affected_rows(" "ibase_affected_rows(<#resource $link_identifier#>)" "S" "int") ("f" "ibase_add_user(" "ibase_add_user(<#resource $service_handle#>,<#string $user_name#>,<#string $password#>,<#string $first_name#>,<#string $middle_name#>,<#string $last_name#>)" "S" "bool") ("f" "hypot(" "hypot(<#float $x#>,<#float $y#>)" "S" "float") ("f" "hwapi_object_new(" "hwapi_object_new(<#array $parameter#>)" "S" "hw_api_object") ("f" "hwapi_hgcsp(" "hwapi_hgcsp(<#string $hostname#>,<#int $port#>)" "S" "HW_API") ("f" "hwapi_content_new(" "hwapi_content_new(<#string $content#>,<#string $mimetype#>)" "S" "HW_API_Content") ("f" "hwapi_attribute_new(" "hwapi_attribute_new(<#string $name#>,<#string $value#>)" "S" "HW_API_Attribute") ("f" "http_throttle(" "http_throttle(<#float $sec#>,<#int $bytes#>)" "S" "void") ("f" "http_support(" "http_support(<#int $feature#>)" "S" "int") ("f" "http_send_stream(" "http_send_stream(<#resource $stream#>)" "S" "bool") ("f" "http_send_status(" "http_send_status(<#int $status#>)" "S" "bool") ("f" "http_send_last_modified(" "http_send_last_modified(<#int $timestamp#>)" "S" "bool") ("f" "http_send_file(" "http_send_file(<#string $file#>)" "S" "bool") ("f" "http_send_data(" "http_send_data(<#string $data#>)" "S" "bool") ("f" "http_send_content_type(" "http_send_content_type(<#string $content_type#>)" "S" "bool") ("f" "http_send_content_disposition(" "http_send_content_disposition(<#string $filename#>,<#bool $inline#>)" "S" "bool") ("f" "http_response_code(" "http_response_code(<#int $response_code#>)" "S" "int") ("f" "http_request(" "http_request(<#int $method#>,<#string $url#>,<#string $body#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_request_method_unregister(" "http_request_method_unregister(<#mixed $method#>)" "S" "bool") ("f" "http_request_method_register(" "http_request_method_register(<#string $method#>)" "S" "int") ("f" "http_request_method_name(" "http_request_method_name(<#int $method#>)" "S" "string") ("f" "http_request_method_exists(" "http_request_method_exists(<#mixed $method#>)" "S" "int") ("f" "http_request_body_encode(" "http_request_body_encode(<#array $fields#>,<#array $files#>)" "S" "string") ("f" "http_redirect(" "http_redirect(<#string $url#>,<#array $params#>,<#bool $session#>,<#int $status#>)" "S" "bool") ("f" "http_put_stream(" "http_put_stream(<#string $url#>,<#resource $stream#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_put_file(" "http_put_file(<#string $url#>,<#string $file#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_put_data(" "http_put_data(<#string $url#>,<#string $data#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_post_fields(" "http_post_fields(<#string $url#>,<#array $data#>,<#array $files#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_post_data(" "http_post_data(<#string $url#>,<#string $data#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_persistent_handles_ident(" "http_persistent_handles_ident(<#string $ident#>)" "S" "string") ("f" "http_persistent_handles_count(" "http_persistent_handles_count(<##>)" "S" "object") ("f" "http_persistent_handles_clean(" "http_persistent_handles_clean(<#string $ident#>)" "S" "string") ("f" "http_parse_params(" "http_parse_params(<#string $param#>,<#int $flags#>)" "S" "object") ("f" "http_parse_message(" "http_parse_message(<#string $message#>)" "S" "object") ("f" "http_parse_headers(" "http_parse_headers(<#string $header#>)" "S" "array") ("f" "http_parse_cookie(" "http_parse_cookie(<#string $cookie#>,<#int $flags#>,<#array $allowed_extras#>)" "S" "object") ("f" "http_negotiate_language(" "http_negotiate_language(<#array $supported#>,<#array &$result#>)" "S" "string") ("f" "http_negotiate_content_type(" "http_negotiate_content_type(<#array $supported#>,<#array &$result#>)" "S" "string") ("f" "http_negotiate_charset(" "http_negotiate_charset(<#array $supported#>,<#array &$result#>)" "S" "string") ("f" "http_match_request_header(" "http_match_request_header(<#string $header#>,<#string $value#>,<#bool $match_case#>)" "S" "bool") ("f" "http_match_modified(" "http_match_modified(<#int $timestamp#>,<#bool $for_range#>)" "S" "bool") ("f" "http_match_etag(" "http_match_etag(<#string $etag#>,<#bool $for_range#>)" "S" "bool") ("f" "http_inflate(" "http_inflate(<#string $data#>)" "S" "string") ("f" "http_head(" "http_head(<#string $url#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_get(" "http_get(<#string $url#>,<#array $options#>,<#array &$info#>)" "S" "string") ("f" "http_get_request_headers(" "http_get_request_headers(<##>)" "S" "array") ("f" "http_get_request_body(" "http_get_request_body(<##>)" "S" "string") ("f" "http_get_request_body_stream(" "http_get_request_body_stream(<##>)" "S" "resource") ("f" "http_deflate(" "http_deflate(<#string $data#>,<#int $flags#>)" "S" "string") ("f" "http_date(" "http_date(<#int $timestamp#>)" "S" "string") ("f" "http_chunked_decode(" "http_chunked_decode(<#string $encoded#>)" "S" "string") ("f" "http_cache_last_modified(" "http_cache_last_modified(<#int $timestamp_or_expires#>)" "S" "bool") ("f" "http_cache_etag(" "http_cache_etag(<#string $etag#>)" "S" "bool") ("f" "http_build_url(" "http_build_url(<#mixed $url#>,<#mixed $parts#>,<#int $flags#>,<#array &$new_url#>)" "S" "string") ("f" "http_build_str(" "http_build_str(<#array $query#>,<#string $prefix#>,<#string $arg_separator#>)" "S" "string") ("f" "http_build_query(" "http_build_query(<#mixed $query_data#>,<#string $numeric_prefix#>,<#string $arg_separator#>,<#int $enc_type#>)" "S" "string") ("f" "http_build_cookie(" "http_build_cookie(<#array $cookie#>)" "S" "string") ("f" "htmlspecialchars(" "htmlspecialchars(<#string $string#>,<#int $flags#>,<#string $encoding#>,<#bool $double_encode#>)" "S" "string") ("f" "htmlspecialchars_decode(" "htmlspecialchars_decode(<#string $string#>,<#int $flags#>)" "S" "string") ("f" "html_entity_decode(" "html_entity_decode(<#string $string#>,<#int $flags#>,<#string $encoding#>)" "S" "string") ("f" "htmlentities(" "htmlentities(<#string $string#>,<#int $flags#>,<#string $encoding#>,<#bool $double_encode#>)" "S" "string") ("f" "highlight_string(" "highlight_string(<#string $str#>,<#bool $return#>)" "S" "mixed") ("f" "highlight_file(" "highlight_file(<#string $filename#>,<#bool $return#>)" "S" "mixed") ("f" "hexdec(" "hexdec(<#string $hex_string#>)" "S" "number") ("f" "hex2bin(" "hex2bin(<#string $data#>)" "S" "string") ("f" "hebrev(" "hebrev(<#string $hebrew_text#>,<#int $max_chars_per_line#>)" "S" "string") ("f" "hebrevc(" "hebrevc(<#string $hebrew_text#>,<#int $max_chars_per_line#>)" "S" "string") ("f" "header(" "header(<#string $string#>,<#bool $replace#>,<#int $http_response_code#>)" "S" "void") ("f" "headers_sent(" "headers_sent(<#string &$file#>,<#int &$line#>)" "S" "bool") ("f" "headers_list(" "headers_list(<##>)" "S" "array") ("f" "header_remove(" "header_remove(<#string $name#>)" "S" "void") ("f" "header_register_callback(" "header_register_callback(<#callable $callback#>)" "S" "bool") ("f" "hash_update_stream(" "hash_update_stream(<#resource $context#>,<#resource $handle#>,<#int $length#>)" "S" "int") ("f" "hash_update_file(" "hash_update_file(<#resource $hcontext#>,<#string $filename#>,<#resource $scontext#>)" "S" "bool") ("f" "hash_update(" "hash_update(<#resource $context#>,<#string $data#>)" "S" "bool") ("f" "hash(" "hash(<#string $algo#>,<#string $data#>,<#bool $raw_output#>)" "S" "string") ("f" "hash_pbkdf2(" "hash_pbkdf2(<#string $algo#>,<#string $password#>,<#string $salt#>,<#int $iterations#>,<#int $length#>,<#bool $raw_output#>)" "S" "string") ("f" "hash_init(" "hash_init(<#string $algo#>,<#int $options#>,<#string $key#>)" "S" "resource") ("f" "hash_hmac(" "hash_hmac(<#string $algo#>,<#string $data#>,<#string $key#>,<#bool $raw_output#>)" "S" "string") ("f" "hash_hmac_file(" "hash_hmac_file(<#string $algo#>,<#string $filename#>,<#string $key#>,<#bool $raw_output#>)" "S" "string") ("f" "hash_final(" "hash_final(<#resource $context#>,<#bool $raw_output#>)" "S" "string") ("f" "hash_file(" "hash_file(<#string $algo#>,<#string $filename#>,<#bool $raw_output#>)" "S" "string") ("f" "hash_equals(" "hash_equals(<#string $known_string#>,<#string $user_string#>)" "S" "bool") ("f" "hash_copy(" "hash_copy(<#resource $context#>)" "S" "resource") ("f" "hash_algos(" "hash_algos(<##>)" "S" "array") ("f" "gzwrite(" "gzwrite(<#resource $zp#>,<#string $string#>,<#int $length#>)" "S" "int") ("f" "gzuncompress(" "gzuncompress(<#string $data#>,<#int $length#>)" "S" "string") ("f" "gztell(" "gztell(<#resource $zp#>)" "S" "int") ("f" "gzseek(" "gzseek(<#resource $zp#>,<#int $offset#>,<#int $whence#>)" "S" "int") ("f" "gzrewind(" "gzrewind(<#resource $zp#>)" "S" "bool") ("f" "gzread(" "gzread(<#resource $zp#>,<#int $length#>)" "S" "string") ("f" "gzpassthru(" "gzpassthru(<#resource $zp#>)" "S" "int") ("f" "gzopen(" "gzopen(<#string $filename#>,<#string $mode#>,<#int $use_include_path#>)" "S" "resource") ("f" "gzinflate(" "gzinflate(<#string $data#>,<#int $length#>)" "S" "string") ("f" "gzgets(" "gzgets(<#resource $zp#>,<#int $length#>)" "S" "string") ("f" "gzgetss(" "gzgetss(<#resource $zp#>,<#int $length#>,<#string $allowable_tags#>)" "S" "string") ("f" "gzgetc(" "gzgetc(<#resource $zp#>)" "S" "string") ("f" "gzfile(" "gzfile(<#string $filename#>,<#int $use_include_path#>)" "S" "array") ("f" "gzeof(" "gzeof(<#resource $zp#>)" "S" "int") ("f" "gzencode(" "gzencode(<#string $data#>,<#int $level#>,<#int $encoding_mode#>)" "S" "string") ("f" "gzdeflate(" "gzdeflate(<#string $data#>,<#int $level#>,<#int $encoding#>)" "S" "string") ("f" "gzdecode(" "gzdecode(<#string $data#>,<#int $length#>)" "S" "string") ("f" "gzcompress(" "gzcompress(<#string $data#>,<#int $level#>,<#int $encoding#>)" "S" "string") ("f" "gzclose(" "gzclose(<#resource $zp#>)" "S" "bool") ("f" "gupnp_service_thaw_notify(" "gupnp_service_thaw_notify(<#resource $service#>)" "S" "bool") ("f" "gupnp_service_proxy_set_subscribed(" "gupnp_service_proxy_set_subscribed(<#resource $proxy#>,<#bool $subscribed#>)" "S" "bool") ("f" "gupnp_service_proxy_remove_notify(" "gupnp_service_proxy_remove_notify(<#resource $proxy#>,<#string $value#>)" "S" "bool") ("f" "gupnp_service_proxy_get_subscribed(" "gupnp_service_proxy_get_subscribed(<#resource $proxy#>)" "S" "bool") ("f" "gupnp_service_proxy_callback_set(" "gupnp_service_proxy_callback_set(<#resource $proxy#>,<#int $signal#>,<#mixed $callback#>,<#mixed $arg#>)" "S" "bool") ("f" "gupnp_service_proxy_add_notify(" "gupnp_service_proxy_add_notify(<#resource $proxy#>,<#string $value#>,<#int $type#>,<#mixed $callback#>,<#mixed $arg#>)" "S" "bool") ("f" "gupnp_service_proxy_action_set(" "gupnp_service_proxy_action_set(<#resource $proxy#>,<#string $action#>,<#string $name#>,<#mixed $value#>,<#int $type#>)" "S" "bool") ("f" "gupnp_service_proxy_action_get(" "gupnp_service_proxy_action_get(<#resource $proxy#>,<#string $action#>,<#string $name#>,<#int $type#>)" "S" "mixed") ("f" "gupnp_service_notify(" "gupnp_service_notify(<#resource $service#>,<#string $name#>,<#int $type#>,<#mixed $value#>)" "S" "bool") ("f" "gupnp_service_introspection_get_state_variable(" "gupnp_service_introspection_get_state_variable(<#resource $introspection#>,<#string $variable_name#>)" "S" "array") ("f" "gupnp_service_info_get_introspection(" "gupnp_service_info_get_introspection(<#resource $proxy#>,<#mixed $callback#>,<#mixed $arg#>)" "S" "mixed") ("f" "gupnp_service_info_get(" "gupnp_service_info_get(<#resource $proxy#>)" "S" "array") ("f" "gupnp_service_freeze_notify(" "gupnp_service_freeze_notify(<#resource $service#>)" "S" "bool") ("f" "gupnp_service_action_set(" "gupnp_service_action_set(<#resource $action#>,<#string $name#>,<#int $type#>,<#mixed $value#>)" "S" "bool") ("f" "gupnp_service_action_return_error(" "gupnp_service_action_return_error(<#resource $action#>,<#int $error_code#>,<#string $error_description#>)" "S" "bool") ("f" "gupnp_service_action_return(" "gupnp_service_action_return(<#resource $action#>)" "S" "bool") ("f" "gupnp_service_action_get(" "gupnp_service_action_get(<#resource $action#>,<#string $name#>,<#int $type#>)" "S" "mixed") ("f" "gupnp_root_device_stop(" "gupnp_root_device_stop(<#resource $root_device#>)" "S" "bool") ("f" "gupnp_root_device_start(" "gupnp_root_device_start(<#resource $root_device#>)" "S" "bool") ("f" "gupnp_root_device_set_available(" "gupnp_root_device_set_available(<#resource $root_device#>,<#bool $available#>)" "S" "bool") ("f" "gupnp_root_device_new(" "gupnp_root_device_new(<#resource $context#>,<#string $location#>,<#string $description_dir#>)" "S" "resource") ("f" "gupnp_root_device_get_relative_location(" "gupnp_root_device_get_relative_location(<#resource $root_device#>)" "S" "string") ("f" "gupnp_root_device_get_available(" "gupnp_root_device_get_available(<#resource $root_device#>)" "S" "bool") ("f" "gupnp_device_info_get_service(" "gupnp_device_info_get_service(<#resource $root_device#>,<#string $type#>)" "S" "resource") ("f" "gupnp_device_info_get(" "gupnp_device_info_get(<#resource $root_device#>)" "S" "array") ("f" "gupnp_device_action_callback_set(" "gupnp_device_action_callback_set(<#resource $root_device#>,<#int $signal#>,<#string $action_name#>,<#mixed $callback#>,<#mixed $arg#>)" "S" "bool") ("f" "gupnp_control_point_new(" "gupnp_control_point_new(<#resource $context#>,<#string $target#>)" "S" "resource") ("f" "gupnp_control_point_callback_set(" "gupnp_control_point_callback_set(<#resource $cpoint#>,<#int $signal#>,<#mixed $callback#>,<#mixed $arg#>)" "S" "bool") ("f" "gupnp_control_point_browse_stop(" "gupnp_control_point_browse_stop(<#resource $cpoint#>)" "S" "bool") ("f" "gupnp_control_point_browse_start(" "gupnp_control_point_browse_start(<#resource $cpoint#>)" "S" "bool") ("f" "gupnp_context_unhost_path(" "gupnp_context_unhost_path(<#resource $context#>,<#string $server_path#>)" "S" "bool") ("f" "gupnp_context_timeout_add(" "gupnp_context_timeout_add(<#resource $context#>,<#int $timeout#>,<#mixed $callback#>,<#mixed $arg#>)" "S" "bool") ("f" "gupnp_context_set_subscription_timeout(" "gupnp_context_set_subscription_timeout(<#resource $context#>,<#int $timeout#>)" "S" "void") ("f" "gupnp_context_new(" "gupnp_context_new(<#string $host_ip#>,<#int $port#>)" "S" "resource") ("f" "gupnp_context_host_path(" "gupnp_context_host_path(<#resource $context#>,<#string $local_path#>,<#string $server_path#>)" "S" "bool") ("f" "gupnp_context_get_subscription_timeout(" "gupnp_context_get_subscription_timeout(<#resource $context#>)" "S" "int") ("f" "gupnp_context_get_port(" "gupnp_context_get_port(<#resource $context#>)" "S" "int") ("f" "gupnp_context_get_host_ip(" "gupnp_context_get_host_ip(<#resource $context#>)" "S" "string") ("f" "gregoriantojd(" "gregoriantojd(<#int $month#>,<#int $day#>,<#int $year#>)" "S" "int") ("f" "grapheme_substr(" "grapheme_substr(<#string $string#>,<#int $start#>,<#int $length#>)" "S" "int") ("f" "grapheme_strstr(" "grapheme_strstr(<#string $haystack#>,<#string $needle#>,<#bool $before_needle#>)" "S" "string") ("f" "grapheme_strrpos(" "grapheme_strrpos(<#string $haystack#>,<#string $needle#>,<#int $offset#>)" "S" "int") ("f" "grapheme_strripos(" "grapheme_strripos(<#string $haystack#>,<#string $needle#>,<#int $offset#>)" "S" "int") ("f" "grapheme_strpos(" "grapheme_strpos(<#string $haystack#>,<#string $needle#>,<#int $offset#>)" "S" "int") ("f" "grapheme_strlen(" "grapheme_strlen(<#string $input#>)" "S" "int") ("f" "grapheme_stristr(" "grapheme_stristr(<#string $haystack#>,<#string $needle#>,<#bool $before_needle#>)" "S" "string") ("f" "grapheme_stripos(" "grapheme_stripos(<#string $haystack#>,<#string $needle#>,<#int $offset#>)" "S" "int") ("f" "grapheme_extract(" "grapheme_extract(<#string $haystack#>,<#int $size#>,<#int $extract_type#>,<#int $start#>,<#int &$next#>)" "S" "string") ("f" "gopher_parsedir(" "gopher_parsedir(<#string $dirent#>)" "S" "array") ("f" "gnupg_verify(" "gnupg_verify(<#resource $identifier#>,<#string $signed_text#>,<#string $signature#>,<#string &$plaintext#>)" "S" "array") ("f" "gnupg_sign(" "gnupg_sign(<#resource $identifier#>,<#string $plaintext#>)" "S" "string") ("f" "gnupg_setsignmode(" "gnupg_setsignmode(<#resource $identifier#>,<#int $signmode#>)" "S" "bool") ("f" "gnupg_seterrormode(" "gnupg_seterrormode(<#resource $identifier#>,<#int $errormode#>)" "S" "void") ("f" "gnupg_setarmor(" "gnupg_setarmor(<#resource $identifier#>,<#int $armor#>)" "S" "bool") ("f" "gnupg_keyinfo(" "gnupg_keyinfo(<#resource $identifier#>,<#string $pattern#>)" "S" "array") ("f" "gnupg_init(" "gnupg_init(<##>)" "S" "resource") ("f" "gnupg_import(" "gnupg_import(<#resource $identifier#>,<#string $keydata#>)" "S" "array") ("f" "gnupg_getprotocol(" "gnupg_getprotocol(<#resource $identifier#>)" "S" "int") ("f" "gnupg_geterror(" "gnupg_geterror(<#resource $identifier#>)" "S" "string") ("f" "gnupg_export(" "gnupg_export(<#resource $identifier#>,<#string $fingerprint#>)" "S" "string") ("f" "gnupg_encrypt(" "gnupg_encrypt(<#resource $identifier#>,<#string $plaintext#>)" "S" "string") ("f" "gnupg_encryptsign(" "gnupg_encryptsign(<#resource $identifier#>,<#string $plaintext#>)" "S" "string") ("f" "gnupg_decryptverify(" "gnupg_decryptverify(<#resource $identifier#>,<#string $text#>,<#string &$plaintext#>)" "S" "array") ("f" "gnupg_decrypt(" "gnupg_decrypt(<#resource $identifier#>,<#string $text#>)" "S" "string") ("f" "gnupg_clearsignkeys(" "gnupg_clearsignkeys(<#resource $identifier#>)" "S" "bool") ("f" "gnupg_clearencryptkeys(" "gnupg_clearencryptkeys(<#resource $identifier#>)" "S" "bool") ("f" "gnupg_cleardecryptkeys(" "gnupg_cleardecryptkeys(<#resource $identifier#>)" "S" "bool") ("f" "gnupg_addsignkey(" "gnupg_addsignkey(<#resource $identifier#>,<#string $fingerprint#>,<#string $passphrase#>)" "S" "bool") ("f" "gnupg_addencryptkey(" "gnupg_addencryptkey(<#resource $identifier#>,<#string $fingerprint#>)" "S" "bool") ("f" "gnupg_adddecryptkey(" "gnupg_adddecryptkey(<#resource $identifier#>,<#string $fingerprint#>,<#string $passphrase#>)" "S" "bool") ("f" "gmstrftime(" "gmstrftime(<#string $format#>,<#int $timestamp#>)" "S" "string") ("f" "gmp_xor(" "gmp_xor(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_testbit(" "gmp_testbit(<#GMP $a#>,<#int $index#>)" "S" "bool") ("f" "gmp_sub(" "gmp_sub(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_strval(" "gmp_strval(<#GMP $gmpnumber#>,<#int $base#>)" "S" "string") ("f" "gmp_sqrtrem(" "gmp_sqrtrem(<#GMP $a#>)" "S" "array") ("f" "gmp_sqrt(" "gmp_sqrt(<#GMP $a#>)" "S" "GMP") ("f" "gmp_sign(" "gmp_sign(<#GMP $a#>)" "S" "int") ("f" "gmp_setbit(" "gmp_setbit(<#GMP &$a#>,<#int $index#>,<#bool $bit_on#>)" "S" "void") ("f" "gmp_scan1(" "gmp_scan1(<#GMP $a#>,<#int $start#>)" "S" "int") ("f" "gmp_scan0(" "gmp_scan0(<#GMP $a#>,<#int $start#>)" "S" "int") ("f" "gmp_rootrem(" "gmp_rootrem(<#GMP $a#>,<#int $nth#>)" "S" "array") ("f" "gmp_root(" "gmp_root(<#GMP $a#>,<#int $nth#>)" "S" "GMP") ("f" "gmp_random_range(" "gmp_random_range(<#GMP $min#>,<#GMP $max#>)" "S" "GMP") ("f" "gmp_random(" "gmp_random(<#int $limiter#>)" "S" "GMP") ("f" "gmp_random_bits(" "gmp_random_bits(<#integer $bits#>)" "S" "GMP") ("f" "gmp_prob_prime(" "gmp_prob_prime(<#GMP $a#>,<#int $reps#>)" "S" "int") ("f" "gmp_powm(" "gmp_powm(<#GMP $base#>,<#GMP $exp#>,<#GMP $mod#>)" "S" "GMP") ("f" "gmp_pow(" "gmp_pow(<#GMP $base#>,<#int $exp#>)" "S" "GMP") ("f" "gmp_popcount(" "gmp_popcount(<#GMP $a#>)" "S" "int") ("f" "gmp_perfect_square(" "gmp_perfect_square(<#GMP $a#>)" "S" "bool") ("f" "gmp_or(" "gmp_or(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_nextprime(" "gmp_nextprime(<#int $a#>)" "S" "GMP") ("f" "gmp_neg(" "gmp_neg(<#GMP $a#>)" "S" "GMP") ("f" "gmp_mul(" "gmp_mul(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_mod(" "gmp_mod(<#GMP $n#>,<#GMP $d#>)" "S" "GMP") ("f" "gmp_legendre(" "gmp_legendre(<#GMP $a#>,<#GMP $p#>)" "S" "int") ("f" "gmp_jacobi(" "gmp_jacobi(<#GMP $a#>,<#GMP $p#>)" "S" "int") ("f" "gmp_invert(" "gmp_invert(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_intval(" "gmp_intval(<#GMP $gmpnumber#>)" "S" "int") ("f" "gmp_init(" "gmp_init(<#mixed $number#>,<#int $base#>)" "S" "GMP") ("f" "gmp_import(" "gmp_import(<#string $data#>,<#integer $word_size#>,<#integer $options#>)" "S" "GMP") ("f" "gmp_hamdist(" "gmp_hamdist(<#GMP $a#>,<#GMP $b#>)" "S" "int") ("f" "gmp_gcd(" "gmp_gcd(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_gcdext(" "gmp_gcdext(<#GMP $a#>,<#GMP $b#>)" "S" "array") ("f" "gmp_fact(" "gmp_fact(<#mixed $a#>)" "S" "GMP") ("f" "gmp_export(" "gmp_export(<#GMP $gmpnumber#>,<#integer $word_size#>,<#integer $options#>)" "S" "string") ("f" "gmp_div_r(" "gmp_div_r(<#GMP $n#>,<#GMP $d#>,<#int $round#>)" "S" "GMP") ("f" "gmp_div_qr(" "gmp_div_qr(<#GMP $n#>,<#GMP $d#>,<#int $round#>)" "S" "array") ("f" "gmp_div_q(" "gmp_div_q(<#GMP $a#>,<#GMP $b#>,<#int $round#>)" "S" "GMP") ("f" "gmp_divexact(" "gmp_divexact(<#GMP $n#>,<#GMP $d#>)" "S" "GMP") ("f" "gmp_com(" "gmp_com(<#GMP $a#>)" "S" "GMP") ("f" "gmp_cmp(" "gmp_cmp(<#GMP $a#>,<#GMP $b#>)" "S" "int") ("f" "gmp_clrbit(" "gmp_clrbit(<#GMP $a#>,<#int $index#>)" "S" "void") ("f" "gmp_and(" "gmp_and(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_add(" "gmp_add(<#GMP $a#>,<#GMP $b#>)" "S" "GMP") ("f" "gmp_abs(" "gmp_abs(<#GMP $a#>)" "S" "GMP") ("f" "gmmktime(" "gmmktime(<#int $hour#>,<#int $minute#>,<#int $second#>,<#int $month#>,<#int $day#>,<#int $year#>,<#int $is_dst#>)" "S" "int") ("f" "gmdate(" "gmdate(<#string $format#>,<#int $timestamp#>)" "S" "string") ("f" "glob(" "glob(<#string $pattern#>,<#int $flags#>)" "S" "array") ("f" "gettype(" "gettype(<#mixed $var#>)" "S" "string") ("f" "gettimeofday(" "gettimeofday(<#bool $return_float#>)" "S" "mixed") ("f" "gettext(" "gettext(<#string $message#>)" "S" "string") ("f" "getservbyport(" "getservbyport(<#int $port#>,<#string $protocol#>)" "S" "string") ("f" "getservbyname(" "getservbyname(<#string $service#>,<#string $protocol#>)" "S" "int") ("f" "getrusage(" "getrusage(<#int $who#>)" "S" "array") ("f" "get_resource_type(" "get_resource_type(<#resource $handle#>)" "S" "string") ("f" "getrandmax(" "getrandmax(<##>)" "S" "int") ("f" "getprotobynumber(" "getprotobynumber(<#int $number#>)" "S" "string") ("f" "getprotobyname(" "getprotobyname(<#string $name#>)" "S" "int") ("f" "get_parent_class(" "get_parent_class(<#mixed $obj#>)" "S" "string") ("f" "getopt(" "getopt(<#string $options#>,<#array $longopts#>)" "S" "array") ("f" "get_object_vars(" "get_object_vars(<#object $obj#>)" "S" "array") ("f" "getmyuid(" "getmyuid(<##>)" "S" "int") ("f" "getmypid(" "getmypid(<##>)" "S" "int") ("f" "getmyinode(" "getmyinode(<##>)" "S" "int") ("f" "getmygid(" "getmygid(<##>)" "S" "int") ("f" "getmxrr(" "getmxrr(<#string $hostname#>,<#array &$mxhosts#>,<#array &$weight#>)" "S" "bool") ("f" "get_meta_tags(" "get_meta_tags(<#string $filename#>,<#bool $use_include_path#>)" "S" "array") ("f" "get_magic_quotes_runtime(" "get_magic_quotes_runtime(<##>)" "S" "bool") ("f" "get_magic_quotes_gpc(" "get_magic_quotes_gpc(<##>)" "S" "bool") ("f" "get_loaded_extensions(" "get_loaded_extensions(<#bool $zend_extensions#>)" "S" "array") ("f" "getlastmod(" "getlastmod(<##>)" "S" "int") ("f" "get_include_path(" "get_include_path(<##>)" "S" "string") ("f" "get_included_files(" "get_included_files(<##>)" "S" "array") ("f" "getimagesizefromstring(" "getimagesizefromstring(<#string $imagedata#>,<#array &$imageinfo#>)" "S" "array") ("f" "getimagesize(" "getimagesize(<#string $filename#>,<#array &$imageinfo#>)" "S" "array") ("f" "get_html_translation_table(" "get_html_translation_table(<#int $table#>,<#int $flags#>,<#string $encoding#>)" "S" "array") ("f" "gethostname(" "gethostname(<##>)" "S" "string") ("f" "gethostbyname(" "gethostbyname(<#string $hostname#>)" "S" "string") ("f" "gethostbynamel(" "gethostbynamel(<#string $hostname#>)" "S" "array") ("f" "gethostbyaddr(" "gethostbyaddr(<#string $ip_address#>)" "S" "string") ("f" "get_headers(" "get_headers(<#string $url#>,<#int $format#>)" "S" "array") ("f" "get_extension_funcs(" "get_extension_funcs(<#string $module_name#>)" "S" "array") ("f" "getenv(" "getenv(<#string $varname#>)" "S" "string") ("f" "get_defined_vars(" "get_defined_vars(<##>)" "S" "array") ("f" "get_defined_functions(" "get_defined_functions(<##>)" "S" "array") ("f" "get_defined_constants(" "get_defined_constants(<#bool $categorize#>)" "S" "array") ("f" "get_declared_traits(" "get_declared_traits(<##>)" "S" "array") ("f" "get_declared_interfaces(" "get_declared_interfaces(<##>)" "S" "array") ("f" "get_declared_classes(" "get_declared_classes(<##>)" "S" "array") ("f" "getdate(" "getdate(<#int $timestamp#>)" "S" "array") ("f" "getcwd(" "getcwd(<##>)" "S" "string") ("f" "get_current_user(" "get_current_user(<##>)" "S" "string") ("f" "get_class_vars(" "get_class_vars(<#string $class_name#>)" "S" "array") ("f" "get_class(" "get_class(<#object $obj#>)" "S" "string") ("f" "get_class_methods(" "get_class_methods(<#mixed $class_name#>)" "S" "array") ("f" "get_cfg_var(" "get_cfg_var(<#string $option#>)" "S" "string") ("f" "get_called_class(" "get_called_class(<##>)" "S" "string") ("f" "get_browser(" "get_browser(<#string $user_agent#>,<#bool $return_array#>)" "S" "mixed") ("f" "getallheaders(" "getallheaders(<##>)" "S" "array") ("f" "geoip_time_zone_by_country_and_region(" "geoip_time_zone_by_country_and_region(<#string $country_code#>,<#string $region_code#>)" "S" "string") ("f" "geoip_setup_custom_directory(" "geoip_setup_custom_directory(<#string $path#>)" "S" "void") ("f" "geoip_region_name_by_code(" "geoip_region_name_by_code(<#string $country_code#>,<#string $region_code#>)" "S" "string") ("f" "geoip_region_by_name(" "geoip_region_by_name(<#string $hostname#>)" "S" "array") ("f" "geoip_record_by_name(" "geoip_record_by_name(<#string $hostname#>)" "S" "array") ("f" "geoip_org_by_name(" "geoip_org_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_netspeedcell_by_name(" "geoip_netspeedcell_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_isp_by_name(" "geoip_isp_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_id_by_name(" "geoip_id_by_name(<#string $hostname#>)" "S" "int") ("f" "geoip_domain_by_name(" "geoip_domain_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_db_get_all_info(" "geoip_db_get_all_info(<##>)" "S" "array") ("f" "geoip_db_filename(" "geoip_db_filename(<#int $database#>)" "S" "string") ("f" "geoip_db_avail(" "geoip_db_avail(<#int $database#>)" "S" "bool") ("f" "geoip_database_info(" "geoip_database_info(<#int $database#>)" "S" "string") ("f" "geoip_country_name_by_name(" "geoip_country_name_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_country_code_by_name(" "geoip_country_code_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_country_code3_by_name(" "geoip_country_code3_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_continent_code_by_name(" "geoip_continent_code_by_name(<#string $hostname#>)" "S" "string") ("f" "geoip_asnum_by_name(" "geoip_asnum_by_name(<#string $hostname#>)" "S" "string") ("f" "gd_info(" "gd_info(<##>)" "S" "array") ("f" "gc_enable(" "gc_enable(<##>)" "S" "void") ("f" "gc_enabled(" "gc_enabled(<##>)" "S" "bool") ("f" "gc_disable(" "gc_disable(<##>)" "S" "void") ("f" "gc_collect_cycles(" "gc_collect_cycles(<##>)" "S" "int") ("f" "fwrite(" "fwrite(<#resource $handle#>,<#string $string#>,<#int $length#>)" "S" "int") ("f" "function_exists(" "function_exists(<#string $function_name#>)" "S" "bool") ("f" "func_num_args(" "func_num_args(<##>)" "S" "int") ("f" "func_get_args(" "func_get_args(<##>)" "S" "array") ("f" "func_get_arg(" "func_get_arg(<#int $arg_num#>)" "S" "mixed") ("f" "ftruncate(" "ftruncate(<#resource $handle#>,<#int $size#>)" "S" "bool") ("f" "ftp_systype(" "ftp_systype(<#resource $ftp_stream#>)" "S" "string") ("f" "ftp_ssl_connect(" "ftp_ssl_connect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "resource") ("f" "ftp_size(" "ftp_size(<#resource $ftp_stream#>,<#string $remote_file#>)" "S" "int") ("f" "ftp_site(" "ftp_site(<#resource $ftp_stream#>,<#string $cmd#>)" "S" "bool") ("f" "ftp_set_option(" "ftp_set_option(<#resource $ftp_stream#>,<#int $option#>,<#mixed $value#>)" "S" "bool") ("f" "ftp_rmdir(" "ftp_rmdir(<#resource $ftp_stream#>,<#string $directory#>)" "S" "bool") ("f" "ftp_rename(" "ftp_rename(<#resource $ftp_stream#>,<#string $oldname#>,<#string $newname#>)" "S" "bool") ("f" "ftp_rawlist(" "ftp_rawlist(<#resource $ftp_stream#>,<#string $directory#>)" "S" "array") ("f" "ftp_raw(" "ftp_raw(<#resource $ftp_stream#>,<#string $command#>)" "S" "array") ("f" "ftp_pwd(" "ftp_pwd(<#resource $ftp_stream#>)" "S" "string") ("f" "ftp_put(" "ftp_put(<#resource $ftp_stream#>,<#string $remote_file#>,<#string $local_file#>,<#int $mode#>,<#int $startpos#>)" "S" "bool") ("f" "ftp_pasv(" "ftp_pasv(<#resource $ftp_stream#>,<#bool $pasv#>)" "S" "bool") ("f" "ftp_nlist(" "ftp_nlist(<#resource $ftp_stream#>,<#string $directory#>)" "S" "array") ("f" "ftp_nb_put(" "ftp_nb_put(<#resource $ftp_stream#>,<#string $remote_file#>,<#string $local_file#>,<#int $mode#>,<#int $startpos#>)" "S" "int") ("f" "ftp_nb_get(" "ftp_nb_get(<#resource $ftp_stream#>,<#string $local_file#>,<#string $remote_file#>,<#int $mode#>,<#int $resumepos#>)" "S" "bool") ("f" "ftp_nb_fput(" "ftp_nb_fput(<#resource $ftp_stream#>,<#string $remote_file#>,<#resource $handle#>,<#int $mode#>,<#int $startpos#>)" "S" "int") ("f" "ftp_nb_fget(" "ftp_nb_fget(<#resource $ftp_stream#>,<#resource $handle#>,<#string $remote_file#>,<#int $mode#>,<#int $resumepos#>)" "S" "int") ("f" "ftp_nb_continue(" "ftp_nb_continue(<#resource $ftp_stream#>)" "S" "int") ("f" "ftp_mkdir(" "ftp_mkdir(<#resource $ftp_stream#>,<#string $directory#>)" "S" "string") ("f" "ftp_mdtm(" "ftp_mdtm(<#resource $ftp_stream#>,<#string $remote_file#>)" "S" "int") ("f" "ftp_login(" "ftp_login(<#resource $ftp_stream#>,<#string $username#>,<#string $password#>)" "S" "bool") ("f" "ftp_get_option(" "ftp_get_option(<#resource $ftp_stream#>,<#int $option#>)" "S" "mixed") ("f" "ftp_get(" "ftp_get(<#resource $ftp_stream#>,<#string $local_file#>,<#string $remote_file#>,<#int $mode#>,<#int $resumepos#>)" "S" "bool") ("f" "ftp_fput(" "ftp_fput(<#resource $ftp_stream#>,<#string $remote_file#>,<#resource $handle#>,<#int $mode#>,<#int $startpos#>)" "S" "bool") ("f" "ftp_fget(" "ftp_fget(<#resource $ftp_stream#>,<#resource $handle#>,<#string $remote_file#>,<#int $mode#>,<#int $resumepos#>)" "S" "bool") ("f" "ftp_exec(" "ftp_exec(<#resource $ftp_stream#>,<#string $command#>)" "S" "bool") ("f" "ftp_delete(" "ftp_delete(<#resource $ftp_stream#>,<#string $path#>)" "S" "bool") ("f" "ftp_connect(" "ftp_connect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "resource") ("f" "ftp_close(" "ftp_close(<#resource $ftp_stream#>)" "S" "bool") ("f" "ftp_chmod(" "ftp_chmod(<#resource $ftp_stream#>,<#int $mode#>,<#string $filename#>)" "S" "int") ("f" "ftp_chdir(" "ftp_chdir(<#resource $ftp_stream#>,<#string $directory#>)" "S" "bool") ("f" "ftp_cdup(" "ftp_cdup(<#resource $ftp_stream#>)" "S" "bool") ("f" "ftp_alloc(" "ftp_alloc(<#resource $ftp_stream#>,<#int $filesize#>,<#string &$result#>)" "S" "bool") ("f" "ftok(" "ftok(<#string $pathname#>,<#string $proj#>)" "S" "int") ("f" "ftell(" "ftell(<#resource $handle#>)" "S" "int") ("f" "fstat(" "fstat(<#resource $handle#>)" "S" "array") ("f" "fsockopen(" "fsockopen(<#string $hostname#>,<#int $port#>,<#int &$errno#>,<#string &$errstr#>,<#float $timeout#>)" "S" "resource") ("f" "fseek(" "fseek(<#resource $handle#>,<#int $offset#>,<#int $whence#>)" "S" "int") ("f" "fscanf(" "fscanf(<#resource $handle#>,<#string $format#>,<#mixed &$__args__#>)" "S" "mixed") ("f" "fribidi_log2vis(" "fribidi_log2vis(<#string $str#>,<#string $direction#>,<#int $charset#>)" "S" "string") ("f" "frenchtojd(" "frenchtojd(<#int $month#>,<#int $day#>,<#int $year#>)" "S" "int") ("f" "fread(" "fread(<#resource $handle#>,<#int $length#>)" "S" "string") ("f" "fputcsv(" "fputcsv(<#resource $handle#>,<#array $fields#>,<#string $delimiter#>,<#string $enclosure#>)" "S" "int") ("f" "fprintf(" "fprintf(<#resource $handle#>,<#string $format#>,<#mixed $args#>,<#mixed $__args__#>)" "S" "int") ("f" "fpassthru(" "fpassthru(<#resource $handle#>)" "S" "int") ("f" "forward_static_call(" "forward_static_call(<#callable $function#>,<#mixed $parameter#>,<#mixed $__args__#>)" "S" "mixed") ("f" "forward_static_call_array(" "forward_static_call_array(<#callable $function#>,<#array $parameters#>)" "S" "mixed") ("f" "fopen(" "fopen(<#string $filename#>,<#string $mode#>,<#bool $use_include_path#>,<#resource $context#>)" "S" "resource") ("f" "fnmatch(" "fnmatch(<#string $pattern#>,<#string $string#>,<#int $flags#>)" "S" "bool") ("f" "fmod(" "fmod(<#float $x#>,<#float $y#>)" "S" "float") ("f" "flush(" "flush(<##>)" "S" "void") ("f" "floor(" "floor(<#float $value#>)" "S" "float") ("f" "flock(" "flock(<#resource $handle#>,<#int $operation#>,<#int &$wouldblock#>)" "S" "bool") ("f" "floatval(" "floatval(<#mixed $var#>)" "S" "float") ("f" "finfo_set_flags(" "finfo_set_flags(<#resource $finfo#>,<#int $options#>)" "S" "bool") ("f" "finfo_open(" "finfo_open(<#int $options#>,<#string $magic_file#>)" "S" "resource") ("f" "finfo_file(" "finfo_file(<#resource $finfo#>,<#string $file_name#>,<#int $options#>,<#resource $context#>)" "S" "string") ("f" "finfo_close(" "finfo_close(<#resource $finfo#>)" "S" "bool") ("f" "finfo_buffer(" "finfo_buffer(<#resource $finfo#>,<#string $string#>,<#int $options#>,<#resource $context#>)" "S" "string") ("f" "filter_var(" "filter_var(<#mixed $variable#>,<#int $filter#>,<#mixed $options#>)" "S" "mixed") ("f" "filter_var_array(" "filter_var_array(<#array $data#>,<#mixed $definition#>,<#bool $add_empty#>)" "S" "mixed") ("f" "filter_list(" "filter_list(<##>)" "S" "array") ("f" "filter_input(" "filter_input(<#int $type#>,<#string $variable_name#>,<#int $filter#>,<#mixed $options#>)" "S" "mixed") ("f" "filter_input_array(" "filter_input_array(<#int $type#>,<#mixed $definition#>,<#bool $add_empty#>)" "S" "mixed") ("f" "filter_id(" "filter_id(<#string $filtername#>)" "S" "int") ("f" "filter_has_var(" "filter_has_var(<#int $type#>,<#string $variable_name#>)" "S" "bool") ("f" "filetype(" "filetype(<#string $filename#>)" "S" "string") ("f" "filesize(" "filesize(<#string $filename#>)" "S" "int") ("f" "file_put_contents(" "file_put_contents(<#string $filename#>,<#mixed $data#>,<#int $flags#>,<#resource $context#>)" "S" "int") ("f" "filepro_rowcount(" "filepro_rowcount(<##>)" "S" "int") ("f" "filepro_retrieve(" "filepro_retrieve(<#int $row_number#>,<#int $field_number#>)" "S" "string") ("f" "filepro_fieldwidth(" "filepro_fieldwidth(<#int $field_number#>)" "S" "int") ("f" "filepro_fieldtype(" "filepro_fieldtype(<#int $field_number#>)" "S" "string") ("f" "filepro_fieldname(" "filepro_fieldname(<#int $field_number#>)" "S" "string") ("f" "filepro_fieldcount(" "filepro_fieldcount(<##>)" "S" "int") ("f" "filepro(" "filepro(<#string $directory#>)" "S" "bool") ("f" "fileperms(" "fileperms(<#string $filename#>)" "S" "int") ("f" "fileowner(" "fileowner(<#string $filename#>)" "S" "int") ("f" "filemtime(" "filemtime(<#string $filename#>)" "S" "int") ("f" "fileinode(" "fileinode(<#string $filename#>)" "S" "int") ("f" "filegroup(" "filegroup(<#string $filename#>)" "S" "int") ("f" "file_get_contents(" "file_get_contents(<#string $filename#>,<#bool $use_include_path#>,<#resource $context#>,<#int $offset#>,<#int $maxlen#>)" "S" "string") ("f" "file_exists(" "file_exists(<#string $filename#>)" "S" "bool") ("f" "filectime(" "filectime(<#string $filename#>)" "S" "int") ("f" "fileatime(" "fileatime(<#string $filename#>)" "S" "int") ("f" "file(" "file(<#string $filename#>,<#int $flags#>,<#resource $context#>)" "S" "array") ("f" "fgets(" "fgets(<#resource $handle#>,<#int $length#>)" "S" "string") ("f" "fgetss(" "fgetss(<#resource $handle#>,<#int $length#>,<#string $allowable_tags#>)" "S" "string") ("f" "fgetcsv(" "fgetcsv(<#resource $handle#>,<#int $length#>,<#string $delimiter#>,<#string $enclosure#>,<#string $escape#>)" "S" "array") ("f" "fgetc(" "fgetc(<#resource $handle#>)" "S" "string") ("f" "fflush(" "fflush(<#resource $handle#>)" "S" "bool") ("f" "feof(" "feof(<#resource $handle#>)" "S" "bool") ("f" "fdf_set_version(" "fdf_set_version(<#resource $fdf_document#>,<#string $version#>)" "S" "bool") ("f" "fdf_set_value(" "fdf_set_value(<#resource $fdf_document#>,<#string $fieldname#>,<#mixed $value#>,<#int $isName#>)" "S" "bool") ("f" "fdf_set_target_frame(" "fdf_set_target_frame(<#resource $fdf_document#>,<#string $frame_name#>)" "S" "bool") ("f" "fdf_set_submit_form_action(" "fdf_set_submit_form_action(<#resource $fdf_document#>,<#string $fieldname#>,<#int $trigger#>,<#string $script#>,<#int $flags#>)" "S" "bool") ("f" "fdf_set_status(" "fdf_set_status(<#resource $fdf_document#>,<#string $status#>)" "S" "bool") ("f" "fdf_set_opt(" "fdf_set_opt(<#resource $fdf_document#>,<#string $fieldname#>,<#int $element#>,<#string $str1#>,<#string $str2#>)" "S" "bool") ("f" "fdf_set_on_import_javascript(" "fdf_set_on_import_javascript(<#resource $fdf_document#>,<#string $script#>,<#bool $before_data_import#>)" "S" "bool") ("f" "fdf_set_javascript_action(" "fdf_set_javascript_action(<#resource $fdf_document#>,<#string $fieldname#>,<#int $trigger#>,<#string $script#>)" "S" "bool") ("f" "fdf_set_flags(" "fdf_set_flags(<#resource $fdf_document#>,<#string $fieldname#>,<#int $whichFlags#>,<#int $newFlags#>)" "S" "bool") ("f" "fdf_set_file(" "fdf_set_file(<#resource $fdf_document#>,<#string $url#>,<#string $target_frame#>)" "S" "bool") ("f" "fdf_set_encoding(" "fdf_set_encoding(<#resource $fdf_document#>,<#string $encoding#>)" "S" "bool") ("f" "fdf_set_ap(" "fdf_set_ap(<#resource $fdf_document#>,<#string $field_name#>,<#int $face#>,<#string $filename#>,<#int $page_number#>)" "S" "bool") ("f" "fdf_save_string(" "fdf_save_string(<#resource $fdf_document#>)" "S" "string") ("f" "fdf_save(" "fdf_save(<#resource $fdf_document#>,<#string $filename#>)" "S" "bool") ("f" "fdf_remove_item(" "fdf_remove_item(<#resource $fdf_document#>,<#string $fieldname#>,<#int $item#>)" "S" "bool") ("f" "fdf_open_string(" "fdf_open_string(<#string $fdf_data#>)" "S" "resource") ("f" "fdf_open(" "fdf_open(<#string $filename#>)" "S" "resource") ("f" "fdf_next_field_name(" "fdf_next_field_name(<#resource $fdf_document#>,<#string $fieldname#>)" "S" "string") ("f" "fdf_header(" "fdf_header(<##>)" "S" "void") ("f" "fdf_get_version(" "fdf_get_version(<#resource $fdf_document#>)" "S" "string") ("f" "fdf_get_value(" "fdf_get_value(<#resource $fdf_document#>,<#string $fieldname#>,<#int $which#>)" "S" "mixed") ("f" "fdf_get_status(" "fdf_get_status(<#resource $fdf_document#>)" "S" "string") ("f" "fdf_get_opt(" "fdf_get_opt(<#resource $fdf_document#>,<#string $fieldname#>,<#int $element#>)" "S" "mixed") ("f" "fdf_get_flags(" "fdf_get_flags(<#resource $fdf_document#>,<#string $fieldname#>,<#int $whichflags#>)" "S" "int") ("f" "fdf_get_file(" "fdf_get_file(<#resource $fdf_document#>)" "S" "string") ("f" "fdf_get_encoding(" "fdf_get_encoding(<#resource $fdf_document#>)" "S" "string") ("f" "fdf_get_attachment(" "fdf_get_attachment(<#resource $fdf_document#>,<#string $fieldname#>,<#string $savepath#>)" "S" "array") ("f" "fdf_get_ap(" "fdf_get_ap(<#resource $fdf_document#>,<#string $field#>,<#int $face#>,<#string $filename#>)" "S" "bool") ("f" "fdf_error(" "fdf_error(<#int $error_code#>)" "S" "string") ("f" "fdf_errno(" "fdf_errno(<##>)" "S" "int") ("f" "fdf_enum_values(" "fdf_enum_values(<#resource $fdf_document#>,<#callable $function#>,<#mixed $userdata#>)" "S" "bool") ("f" "fdf_create(" "fdf_create(<##>)" "S" "resource") ("f" "fdf_close(" "fdf_close(<#resource $fdf_document#>)" "S" "void") ("f" "fdf_add_template(" "fdf_add_template(<#resource $fdf_document#>,<#int $newpage#>,<#string $filename#>,<#string $template#>,<#int $rename#>)" "S" "bool") ("f" "fdf_add_doc_javascript(" "fdf_add_doc_javascript(<#resource $fdf_document#>,<#string $script_name#>,<#string $script_code#>)" "S" "bool") ("f" "fclose(" "fclose(<#resource $handle#>)" "S" "bool") ("f" "fbsql_warnings(" "fbsql_warnings(<#bool $OnOff#>)" "S" "bool") ("f" "fbsql_username(" "fbsql_username(<#resource $link_identifier#>,<#string $username#>)" "S" "string") ("f" "fbsql_table_name(" "fbsql_table_name(<#resource $result#>,<#int $index#>)" "S" "string") ("f" "fbsql_stop_db(" "fbsql_stop_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "fbsql_start_db(" "fbsql_start_db(<#string $database_name#>,<#resource $link_identifier#>,<#string $database_options#>)" "S" "bool") ("f" "fbsql_set_transaction(" "fbsql_set_transaction(<#resource $link_identifier#>,<#int $locking#>,<#int $isolation#>)" "S" "void") ("f" "fbsql_set_password(" "fbsql_set_password(<#resource $link_identifier#>,<#string $user#>,<#string $password#>,<#string $old_password#>)" "S" "bool") ("f" "fbsql_set_lob_mode(" "fbsql_set_lob_mode(<#resource $result#>,<#int $lob_mode#>)" "S" "bool") ("f" "fbsql_set_characterset(" "fbsql_set_characterset(<#resource $link_identifier#>,<#int $characterset#>,<#int $in_out_both#>)" "S" "void") ("f" "fbsql_select_db(" "fbsql_select_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "fbsql_rows_fetched(" "fbsql_rows_fetched(<#resource $result#>)" "S" "int") ("f" "fbsql_rollback(" "fbsql_rollback(<#resource $link_identifier#>)" "S" "bool") ("f" "fbsql_result(" "fbsql_result(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "mixed") ("f" "fbsql_read_clob(" "fbsql_read_clob(<#string $clob_handle#>,<#resource $link_identifier#>)" "S" "string") ("f" "fbsql_read_blob(" "fbsql_read_blob(<#string $blob_handle#>,<#resource $link_identifier#>)" "S" "string") ("f" "fbsql_query(" "fbsql_query(<#string $query#>,<#resource $link_identifier#>,<#int $batch_size#>)" "S" "resource") ("f" "fbsql_pconnect(" "fbsql_pconnect(<#string $hostname#>,<#string $username#>,<#string $password#>)" "S" "resource") ("f" "fbsql_password(" "fbsql_password(<#resource $link_identifier#>,<#string $password#>)" "S" "string") ("f" "fbsql_num_rows(" "fbsql_num_rows(<#resource $result#>)" "S" "int") ("f" "fbsql_num_fields(" "fbsql_num_fields(<#resource $result#>)" "S" "int") ("f" "fbsql_next_result(" "fbsql_next_result(<#resource $result#>)" "S" "bool") ("f" "fbsql_list_tables(" "fbsql_list_tables(<#string $database#>,<#resource $link_identifier#>)" "S" "resource") ("f" "fbsql_list_fields(" "fbsql_list_fields(<#string $database_name#>,<#string $table_name#>,<#resource $link_identifier#>)" "S" "resource") ("f" "fbsql_list_dbs(" "fbsql_list_dbs(<#resource $link_identifier#>)" "S" "resource") ("f" "fbsql_insert_id(" "fbsql_insert_id(<#resource $link_identifier#>)" "S" "int") ("f" "fbsql_hostname(" "fbsql_hostname(<#resource $link_identifier#>,<#string $host_name#>)" "S" "string") ("f" "fbsql_get_autostart_info(" "fbsql_get_autostart_info(<#resource $link_identifier#>)" "S" "array") ("f" "fbsql_free_result(" "fbsql_free_result(<#resource $result#>)" "S" "bool") ("f" "fbsql_field_type(" "fbsql_field_type(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "fbsql_field_table(" "fbsql_field_table(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "fbsql_field_seek(" "fbsql_field_seek(<#resource $result#>,<#int $field_offset#>)" "S" "bool") ("f" "fbsql_field_name(" "fbsql_field_name(<#resource $result#>,<#int $field_index#>)" "S" "string") ("f" "fbsql_field_len(" "fbsql_field_len(<#resource $result#>,<#int $field_offset#>)" "S" "int") ("f" "fbsql_field_flags(" "fbsql_field_flags(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "fbsql_fetch_row(" "fbsql_fetch_row(<#resource $result#>)" "S" "array") ("f" "fbsql_fetch_object(" "fbsql_fetch_object(<#resource $result#>)" "S" "object") ("f" "fbsql_fetch_lengths(" "fbsql_fetch_lengths(<#resource $result#>)" "S" "array") ("f" "fbsql_fetch_field(" "fbsql_fetch_field(<#resource $result#>,<#int $field_offset#>)" "S" "object") ("f" "fbsql_fetch_assoc(" "fbsql_fetch_assoc(<#resource $result#>)" "S" "array") ("f" "fbsql_fetch_array(" "fbsql_fetch_array(<#resource $result#>,<#int $result_type#>)" "S" "array") ("f" "fbsql_error(" "fbsql_error(<#resource $link_identifier#>)" "S" "string") ("f" "fbsql_errno(" "fbsql_errno(<#resource $link_identifier#>)" "S" "int") ("f" "fbsql_drop_db(" "fbsql_drop_db(<#string $database_name#>,<#resource $link_identifier#>)" "S" "bool") ("f" "fbsql_db_status(" "fbsql_db_status(<#string $database_name#>,<#resource $link_identifier#>)" "S" "int") ("f" "fbsql_db_query(" "fbsql_db_query(<#string $database#>,<#string $query#>,<#resource $link_identifier#>)" "S" "resource") ("f" "fbsql_data_seek(" "fbsql_data_seek(<#resource $result#>,<#int $row_number#>)" "S" "bool") ("f" "fbsql_database(" "fbsql_database(<#resource $link_identifier#>,<#string $database#>)" "S" "string") ("f" "fbsql_database_password(" "fbsql_database_password(<#resource $link_identifier#>,<#string $database_password#>)" "S" "string") ("f" "fbsql_create_db(" "fbsql_create_db(<#string $database_name#>,<#resource $link_identifier#>,<#string $database_options#>)" "S" "bool") ("f" "fbsql_create_clob(" "fbsql_create_clob(<#string $clob_data#>,<#resource $link_identifier#>)" "S" "string") ("f" "fbsql_create_blob(" "fbsql_create_blob(<#string $blob_data#>,<#resource $link_identifier#>)" "S" "string") ("f" "fbsql_connect(" "fbsql_connect(<#string $hostname#>,<#string $username#>,<#string $password#>)" "S" "resource") ("f" "fbsql_commit(" "fbsql_commit(<#resource $link_identifier#>)" "S" "bool") ("f" "fbsql_close(" "fbsql_close(<#resource $link_identifier#>)" "S" "bool") ("f" "fbsql_clob_size(" "fbsql_clob_size(<#string $clob_handle#>,<#resource $link_identifier#>)" "S" "int") ("f" "fbsql_change_user(" "fbsql_change_user(<#string $user#>,<#string $password#>,<#string $database#>,<#resource $link_identifier#>)" "S" "bool") ("f" "fbsql_blob_size(" "fbsql_blob_size(<#string $blob_handle#>,<#resource $link_identifier#>)" "S" "int") ("f" "fbsql_autocommit(" "fbsql_autocommit(<#resource $link_identifier#>,<#bool $OnOff#>)" "S" "bool") ("f" "fbsql_affected_rows(" "fbsql_affected_rows(<#resource $link_identifier#>)" "S" "int") ("f" "fastcgi_finish_request(" "fastcgi_finish_request(<##>)" "S" "boolean") ("f" "fann_train_on_file(" "fann_train_on_file(<#resource $ann#>,<#string $filename#>,<#int $max_epochs#>,<#int $epochs_between_reports#>,<#float $desired_error#>)" "S" "bool") ("f" "fann_train_on_data(" "fann_train_on_data(<#resource $ann#>,<#resource $data#>,<#int $max_epochs#>,<#int $epochs_between_reports#>,<#float $desired_error#>)" "S" "bool") ("f" "fann_train_epoch(" "fann_train_epoch(<#resource $ann#>,<#resource $data#>)" "S" "float") ("f" "fann_train(" "fann_train(<#resource $ann#>,<#array $input#>,<#array $desired_output#>)" "S" "bool") ("f" "fann_test_data(" "fann_test_data(<#resource $ann#>,<#resource $data#>)" "S" "float") ("f" "fann_test(" "fann_test(<#resource $ann#>,<#array $input#>,<#array $desired_output#>)" "S" "bool") ("f" "fann_subset_train_data(" "fann_subset_train_data(<#resource $data#>,<#int $pos#>,<#int $length#>)" "S" "resource") ("f" "fann_shuffle_train_data(" "fann_shuffle_train_data(<#resource $train_data#>)" "S" "bool") ("f" "fann_set_weight(" "fann_set_weight(<#resource $ann#>,<#int $from_neuron#>,<#int $to_neuron#>,<#float $weight#>)" "S" "bool") ("f" "fann_set_weight_array(" "fann_set_weight_array(<#resource $ann#>,<#array $connections#>)" "S" "bool") ("f" "fann_set_train_stop_function(" "fann_set_train_stop_function(<#resource $ann#>,<#int $stop_function#>)" "S" "bool") ("f" "fann_set_training_algorithm(" "fann_set_training_algorithm(<#resource $ann#>,<#int $training_algorithm#>)" "S" "bool") ("f" "fann_set_train_error_function(" "fann_set_train_error_function(<#resource $ann#>,<#int $error_function#>)" "S" "bool") ("f" "fann_set_scaling_params(" "fann_set_scaling_params(<#resource $ann#>,<#resource $train_data#>,<#float $new_input_min#>,<#float $new_input_max#>,<#float $new_output_min#>,<#float $new_output_max#>)" "S" "bool") ("f" "fann_set_sarprop_weight_decay_shift(" "fann_set_sarprop_weight_decay_shift(<#resource $ann#>,<#float $sarprop_weight_decay_shift#>)" "S" "bool") ("f" "fann_set_sarprop_temperature(" "fann_set_sarprop_temperature(<#resource $ann#>,<#float $sarprop_temperature#>)" "S" "bool") ("f" "fann_set_sarprop_step_error_threshold_factor(" "fann_set_sarprop_step_error_threshold_factor(<#resource $ann#>,<#float $sarprop_step_error_threshold_factor#>)" "S" "bool") ("f" "fann_set_sarprop_step_error_shift(" "fann_set_sarprop_step_error_shift(<#resource $ann#>,<#float $sarprop_step_error_shift#>)" "S" "bool") ("f" "fann_set_rprop_increase_factor(" "fann_set_rprop_increase_factor(<#resource $ann#>,<#float $rprop_increase_factor#>)" "S" "bool") ("f" "fann_set_rprop_delta_zero(" "fann_set_rprop_delta_zero(<#resource $ann#>,<#float $rprop_delta_zero#>)" "S" "bool") ("f" "fann_set_rprop_delta_min(" "fann_set_rprop_delta_min(<#resource $ann#>,<#float $rprop_delta_min#>)" "S" "bool") ("f" "fann_set_rprop_delta_max(" "fann_set_rprop_delta_max(<#resource $ann#>,<#float $rprop_delta_max#>)" "S" "bool") ("f" "fann_set_rprop_decrease_factor(" "fann_set_rprop_decrease_factor(<#resource $ann#>,<#float $rprop_decrease_factor#>)" "S" "bool") ("f" "fann_set_quickprop_mu(" "fann_set_quickprop_mu(<#resource $ann#>,<#float $quickprop_mu#>)" "S" "bool") ("f" "fann_set_quickprop_decay(" "fann_set_quickprop_decay(<#resource $ann#>,<#float $quickprop_decay#>)" "S" "bool") ("f" "fann_set_output_scaling_params(" "fann_set_output_scaling_params(<#resource $ann#>,<#resource $train_data#>,<#float $new_output_min#>,<#float $new_output_max#>)" "S" "bool") ("f" "fann_set_learning_rate(" "fann_set_learning_rate(<#resource $ann#>,<#float $learning_rate#>)" "S" "bool") ("f" "fann_set_learning_momentum(" "fann_set_learning_momentum(<#resource $ann#>,<#float $learning_momentum#>)" "S" "bool") ("f" "fann_set_input_scaling_params(" "fann_set_input_scaling_params(<#resource $ann#>,<#resource $train_data#>,<#float $new_input_min#>,<#float $new_input_max#>)" "S" "bool") ("f" "fann_set_error_log(" "fann_set_error_log(<#resource $errdat#>,<#string $log_file#>)" "S" "void") ("f" "fann_set_cascade_weight_multiplier(" "fann_set_cascade_weight_multiplier(<#resource $ann#>,<#float $cascade_weight_multiplier#>)" "S" "bool") ("f" "fann_set_cascade_output_stagnation_epochs(" "fann_set_cascade_output_stagnation_epochs(<#resource $ann#>,<#int $cascade_output_stagnation_epochs#>)" "S" "bool") ("f" "fann_set_cascade_output_change_fraction(" "fann_set_cascade_output_change_fraction(<#resource $ann#>,<#float $cascade_output_change_fraction#>)" "S" "bool") ("f" "fann_set_cascade_num_candidate_groups(" "fann_set_cascade_num_candidate_groups(<#resource $ann#>,<#int $cascade_num_candidate_groups#>)" "S" "bool") ("f" "fann_set_cascade_min_out_epochs(" "fann_set_cascade_min_out_epochs(<#resource $ann#>,<#int $cascade_min_out_epochs#>)" "S" "bool") ("f" "fann_set_cascade_min_cand_epochs(" "fann_set_cascade_min_cand_epochs(<#resource $ann#>,<#int $cascade_min_cand_epochs#>)" "S" "bool") ("f" "fann_set_cascade_max_out_epochs(" "fann_set_cascade_max_out_epochs(<#resource $ann#>,<#int $cascade_max_out_epochs#>)" "S" "bool") ("f" "fann_set_cascade_max_cand_epochs(" "fann_set_cascade_max_cand_epochs(<#resource $ann#>,<#int $cascade_max_cand_epochs#>)" "S" "bool") ("f" "fann_set_cascade_candidate_stagnation_epochs(" "fann_set_cascade_candidate_stagnation_epochs(<#resource $ann#>,<#int $cascade_candidate_stagnation_epochs#>)" "S" "bool") ("f" "fann_set_cascade_candidate_limit(" "fann_set_cascade_candidate_limit(<#resource $ann#>,<#float $cascade_candidate_limit#>)" "S" "bool") ("f" "fann_set_cascade_candidate_change_fraction(" "fann_set_cascade_candidate_change_fraction(<#resource $ann#>,<#float $cascade_candidate_change_fraction#>)" "S" "bool") ("f" "fann_set_cascade_activation_steepnesses(" "fann_set_cascade_activation_steepnesses(<#resource $ann#>,<#array $cascade_activation_steepnesses_count#>)" "S" "bool") ("f" "fann_set_cascade_activation_functions(" "fann_set_cascade_activation_functions(<#resource $ann#>,<#array $cascade_activation_functions#>)" "S" "bool") ("f" "fann_set_callback(" "fann_set_callback(<#resource $ann#>,<#collable $callback#>)" "S" "bool") ("f" "fann_set_bit_fail_limit(" "fann_set_bit_fail_limit(<#resource $ann#>,<#float $bit_fail_limit#>)" "S" "bool") ("f" "fann_set_activation_steepness_output(" "fann_set_activation_steepness_output(<#resource $ann#>,<#float $activation_steepness#>)" "S" "bool") ("f" "fann_set_activation_steepness_layer(" "fann_set_activation_steepness_layer(<#resource $ann#>,<#float $activation_steepness#>,<#int $layer#>)" "S" "bool") ("f" "fann_set_activation_steepness_hidden(" "fann_set_activation_steepness_hidden(<#resource $ann#>,<#float $activation_steepness#>)" "S" "bool") ("f" "fann_set_activation_steepness(" "fann_set_activation_steepness(<#resource $ann#>,<#float $activation_steepness#>,<#int $layer#>,<#int $neuron#>)" "S" "bool") ("f" "fann_set_activation_function_output(" "fann_set_activation_function_output(<#resource $ann#>,<#int $activation_function#>)" "S" "bool") ("f" "fann_set_activation_function_layer(" "fann_set_activation_function_layer(<#resource $ann#>,<#int $activation_function#>,<#int $layer#>)" "S" "bool") ("f" "fann_set_activation_function_hidden(" "fann_set_activation_function_hidden(<#resource $ann#>,<#int $activation_function#>)" "S" "bool") ("f" "fann_set_activation_function(" "fann_set_activation_function(<#resource $ann#>,<#int $activation_function#>,<#int $layer#>,<#int $neuron#>)" "S" "bool") ("f" "fann_scale_train_data(" "fann_scale_train_data(<#resource $train_data#>,<#float $new_min#>,<#float $new_max#>)" "S" "bool") ("f" "fann_scale_train(" "fann_scale_train(<#resource $ann#>,<#resource $train_data#>)" "S" "bool") ("f" "fann_scale_output_train_data(" "fann_scale_output_train_data(<#resource $train_data#>,<#float $new_min#>,<#float $new_max#>)" "S" "bool") ("f" "fann_scale_output(" "fann_scale_output(<#resource $ann#>,<#array $output_vector#>)" "S" "bool") ("f" "fann_scale_input_train_data(" "fann_scale_input_train_data(<#resource $train_data#>,<#float $new_min#>,<#float $new_max#>)" "S" "bool") ("f" "fann_scale_input(" "fann_scale_input(<#resource $ann#>,<#array $input_vector#>)" "S" "bool") ("f" "fann_save_train(" "fann_save_train(<#resource $data#>,<#string $file_name#>)" "S" "bool") ("f" "fann_save(" "fann_save(<#resource $ann#>,<#string $configuration_file#>)" "S" "bool") ("f" "fann_run(" "fann_run(<#resource $ann#>,<#array $input#>)" "S" "array") ("f" "fann_reset_MSE(" "fann_reset_MSE(<#string $ann#>)" "S" "bool") ("f" "fann_reset_errstr(" "fann_reset_errstr(<#resource $errdat#>)" "S" "void") ("f" "fann_reset_errno(" "fann_reset_errno(<#resource $errdat#>)" "S" "void") ("f" "fann_read_train_from_file(" "fann_read_train_from_file(<#string $filename#>)" "S" "resource") ("f" "fann_randomize_weights(" "fann_randomize_weights(<#resource $ann#>,<#float $min_weight#>,<#float $max_weight#>)" "S" "bool") ("f" "fann_print_error(" "fann_print_error(<#string $errdat#>)" "S" "void") ("f" "fann_num_output_train_data(" "fann_num_output_train_data(<#resource $data#>)" "S" "int") ("f" "fann_num_input_train_data(" "fann_num_input_train_data(<#resource $data#>)" "S" "int") ("f" "fann_merge_train_data(" "fann_merge_train_data(<#resource $data1#>,<#resource $data2#>)" "S" "resource") ("f" "fann_length_train_data(" "fann_length_train_data(<#resource $data#>)" "S" "int") ("f" "fann_init_weights(" "fann_init_weights(<#resource $ann#>,<#resource $train_data#>)" "S" "bool") ("f" "fann_get_train_stop_function(" "fann_get_train_stop_function(<#resource $ann#>)" "S" "int") ("f" "fann_get_training_algorithm(" "fann_get_training_algorithm(<#resource $ann#>)" "S" "int") ("f" "fann_get_train_error_function(" "fann_get_train_error_function(<#resource $ann#>)" "S" "int") ("f" "fann_get_total_neurons(" "fann_get_total_neurons(<#resource $ann#>)" "S" "int") ("f" "fann_get_total_connections(" "fann_get_total_connections(<#resource $ann#>)" "S" "int") ("f" "fann_get_sarprop_weight_decay_shift(" "fann_get_sarprop_weight_decay_shift(<#resource $ann#>)" "S" "float") ("f" "fann_get_sarprop_temperature(" "fann_get_sarprop_temperature(<#resource $ann#>)" "S" "float") ("f" "fann_get_sarprop_step_error_threshold_factor(" "fann_get_sarprop_step_error_threshold_factor(<#resource $ann#>)" "S" "float") ("f" "fann_get_sarprop_step_error_shift(" "fann_get_sarprop_step_error_shift(<#resource $ann#>)" "S" "float") ("f" "fann_get_rprop_increase_factor(" "fann_get_rprop_increase_factor(<#resource $ann#>)" "S" "float") ("f" "fann_get_rprop_delta_zero(" "fann_get_rprop_delta_zero(<#resource $ann#>)" "S" "ReturnType") ("f" "fann_get_rprop_delta_min(" "fann_get_rprop_delta_min(<#resource $ann#>)" "S" "float") ("f" "fann_get_rprop_delta_max(" "fann_get_rprop_delta_max(<#resource $ann#>)" "S" "float") ("f" "fann_get_rprop_decrease_factor(" "fann_get_rprop_decrease_factor(<#resource $ann#>)" "S" "float") ("f" "fann_get_quickprop_mu(" "fann_get_quickprop_mu(<#resource $ann#>)" "S" "float") ("f" "fann_get_quickprop_decay(" "fann_get_quickprop_decay(<#resource $ann#>)" "S" "float") ("f" "fann_get_num_output(" "fann_get_num_output(<#resource $ann#>)" "S" "int") ("f" "fann_get_num_layers(" "fann_get_num_layers(<#resource $ann#>)" "S" "int") ("f" "fann_get_num_input(" "fann_get_num_input(<#resource $ann#>)" "S" "int") ("f" "fann_get_network_type(" "fann_get_network_type(<#resource $ann#>)" "S" "int") ("f" "fann_get_MSE(" "fann_get_MSE(<#resource $ann#>)" "S" "float") ("f" "fann_get_learning_rate(" "fann_get_learning_rate(<#resource $ann#>)" "S" "float") ("f" "fann_get_learning_momentum(" "fann_get_learning_momentum(<#resource $ann#>)" "S" "float") ("f" "fann_get_layer_array(" "fann_get_layer_array(<#resource $ann#>)" "S" "array") ("f" "fann_get_errstr(" "fann_get_errstr(<#resource $errdat#>)" "S" "string") ("f" "fann_get_errno(" "fann_get_errno(<#resource $errdat#>)" "S" "int") ("f" "fann_get_connection_rate(" "fann_get_connection_rate(<#resource $ann#>)" "S" "float") ("f" "fann_get_connection_array(" "fann_get_connection_array(<#resource $ann#>)" "S" "array") ("f" "fann_get_cascade_weight_multiplier(" "fann_get_cascade_weight_multiplier(<#resource $ann#>)" "S" "float") ("f" "fann_get_cascade_output_stagnation_epochs(" "fann_get_cascade_output_stagnation_epochs(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_output_change_fraction(" "fann_get_cascade_output_change_fraction(<#resource $ann#>)" "S" "float") ("f" "fann_get_cascade_num_candidates(" "fann_get_cascade_num_candidates(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_num_candidate_groups(" "fann_get_cascade_num_candidate_groups(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_min_out_epochs(" "fann_get_cascade_min_out_epochs(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_min_cand_epochs(" "fann_get_cascade_min_cand_epochs(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_max_out_epochs(" "fann_get_cascade_max_out_epochs(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_max_cand_epochs(" "fann_get_cascade_max_cand_epochs(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_candidate_stagnation_epochs(" "fann_get_cascade_candidate_stagnation_epochs(<#resource $ann#>)" "S" "float") ("f" "fann_get_cascade_candidate_limit(" "fann_get_cascade_candidate_limit(<#resource $ann#>)" "S" "float") ("f" "fann_get_cascade_candidate_change_fraction(" "fann_get_cascade_candidate_change_fraction(<#resource $ann#>)" "S" "float") ("f" "fann_get_cascade_activation_steepnesses_count(" "fann_get_cascade_activation_steepnesses_count(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_activation_steepnesses(" "fann_get_cascade_activation_steepnesses(<#resource $ann#>)" "S" "array") ("f" "fann_get_cascade_activation_functions_count(" "fann_get_cascade_activation_functions_count(<#resource $ann#>)" "S" "int") ("f" "fann_get_cascade_activation_functions(" "fann_get_cascade_activation_functions(<#resource $ann#>)" "S" "array") ("f" "fann_get_bit_fail_limit(" "fann_get_bit_fail_limit(<#resource $ann#>)" "S" "float") ("f" "fann_get_bit_fail(" "fann_get_bit_fail(<#resource $ann#>)" "S" "int") ("f" "fann_get_bias_array(" "fann_get_bias_array(<#resource $ann#>)" "S" "array") ("f" "fann_get_activation_steepness(" "fann_get_activation_steepness(<#resource $ann#>,<#int $layer#>,<#int $neuron#>)" "S" "float") ("f" "fann_get_activation_function(" "fann_get_activation_function(<#resource $ann#>,<#int $layer#>,<#int $neuron#>)" "S" "int") ("f" "fann_duplicate_train_data(" "fann_duplicate_train_data(<#resource $data#>)" "S" "resource") ("f" "fann_destroy_train(" "fann_destroy_train(<#resource $train_data#>)" "S" "bool") ("f" "fann_destroy(" "fann_destroy(<#resource $ann#>)" "S" "bool") ("f" "fann_descale_train(" "fann_descale_train(<#resource $ann#>,<#resource $train_data#>)" "S" "bool") ("f" "fann_descale_output(" "fann_descale_output(<#resource $ann#>,<#array $output_vector#>)" "S" "bool") ("f" "fann_descale_input(" "fann_descale_input(<#resource $ann#>,<#array $input_vector#>)" "S" "bool") ("f" "fann_create_train(" "fann_create_train(<#int $num_data#>,<#int $num_input#>,<#int $num_output#>)" "S" "resource") ("f" "fann_create_train_from_callback(" "fann_create_train_from_callback(<#int $num_data#>,<#int $num_input#>,<#int $num_output#>,<#collable $user_function#>)" "S" "resource") ("f" "fann_create_standard(" "fann_create_standard(<#int $num_layers#>,<#int $num_neurons1#>,<#int $num_neurons2#>,<#int $__args__#>)" "S" "resource") ("f" "fann_create_standard_array(" "fann_create_standard_array(<#int $num_layers#>,<#array $layers#>)" "S" "resource") ("f" "fann_create_sparse(" "fann_create_sparse(<#float $connection_rate#>,<#int $num_layers#>,<#int $num_neurons1#>,<#int $num_neurons2#>,<#int $__args__#>)" "S" "ReturnType") ("f" "fann_create_sparse_array(" "fann_create_sparse_array(<#float $connection_rate#>,<#int $num_layers#>,<#array $layers#>)" "S" "ReturnType") ("f" "fann_create_shortcut(" "fann_create_shortcut(<#int $num_layers#>,<#int $num_neurons1#>,<#int $num_neurons2#>,<#int $__args__#>)" "S" "reference") ("f" "fann_create_shortcut_array(" "fann_create_shortcut_array(<#int $num_layers#>,<#array $layers#>)" "S" "resource") ("f" "fann_create_from_file(" "fann_create_from_file(<#string $configuration_file#>)" "S" "resource") ("f" "fann_copy(" "fann_copy(<#resource $ann#>)" "S" "resource") ("f" "fann_clear_scaling_params(" "fann_clear_scaling_params(<#resource $ann#>)" "S" "bool") ("f" "fann_cascadetrain_on_file(" "fann_cascadetrain_on_file(<#resource $ann#>,<#string $filename#>,<#int $max_neurons#>,<#int $neurons_between_reports#>,<#float $desired_error#>)" "S" "bool") ("f" "fann_cascadetrain_on_data(" "fann_cascadetrain_on_data(<#resource $ann#>,<#resource $data#>,<#int $max_neurons#>,<#int $neurons_between_reports#>,<#float $desired_error#>)" "S" "bool") ("f" "fam_suspend_monitor(" "fam_suspend_monitor(<#resource $fam#>,<#resource $fam_monitor#>)" "S" "bool") ("f" "fam_resume_monitor(" "fam_resume_monitor(<#resource $fam#>,<#resource $fam_monitor#>)" "S" "bool") ("f" "fam_pending(" "fam_pending(<#resource $fam#>)" "S" "int") ("f" "fam_open(" "fam_open(<#string $appname#>)" "S" "resource") ("f" "fam_next_event(" "fam_next_event(<#resource $fam#>)" "S" "array") ("f" "fam_monitor_file(" "fam_monitor_file(<#resource $fam#>,<#string $filename#>)" "S" "resource") ("f" "fam_monitor_directory(" "fam_monitor_directory(<#resource $fam#>,<#string $dirname#>)" "S" "resource") ("f" "fam_monitor_collection(" "fam_monitor_collection(<#resource $fam#>,<#string $dirname#>,<#int $depth#>,<#string $mask#>)" "S" "resource") ("f" "fam_close(" "fam_close(<#resource $fam#>)" "S" "void") ("f" "fam_cancel_monitor(" "fam_cancel_monitor(<#resource $fam#>,<#resource $fam_monitor#>)" "S" "bool") ("f" "ezmlm_hash(" "ezmlm_hash(<#string $addr#>)" "S" "int") ("f" "extract(" "extract(<#array &$var_array#>,<#int $extract_type#>,<#string $prefix#>)" "S" "int") ("f" "extension_loaded(" "extension_loaded(<#string $name#>)" "S" "bool") ("f" "expm1(" "expm1(<#float $arg#>)" "S" "float") ("f" "explode(" "explode(<#string $delimiter#>,<#string $string#>,<#int $limit#>)" "S" "array") ("f" "exp(" "exp(<#float $arg#>)" "S" "float") ("f" "expect_popen(" "expect_popen(<#string $command#>)" "S" "resource") ("f" "expect_expectl(" "expect_expectl(<#resource $expect#>,<#array $cases#>,<#array &$match#>)" "S" "int") ("f" "exif_thumbnail(" "exif_thumbnail(<#string $filename#>,<#int &$width#>,<#int &$height#>,<#int &$imagetype#>)" "S" "string") ("f" "exif_tagname(" "exif_tagname(<#int $index#>)" "S" "string") ("f" "exif_read_data(" "exif_read_data(<#string $filename#>,<#string $sections#>,<#bool $arrays#>,<#bool $thumbnail#>)" "S" "array") ("f" "exif_imagetype(" "exif_imagetype(<#string $filename#>)" "S" "int") ("f" "exec(" "exec(<#string $command#>,<#array &$output#>,<#int &$return_var#>)" "S" "string") ("f" "event_timer_set(" "event_timer_set(<#resource $event#>,<#callable $callback#>,<#mixed $arg#>)" "S" "bool") ("f" "event_set(" "event_set(<#resource $event#>,<#mixed $fd#>,<#int $events#>,<#mixed $callback#>,<#mixed $arg#>)" "S" "bool") ("f" "event_priority_set(" "event_priority_set(<#resource $event#>,<#int $priority#>)" "S" "bool") ("f" "event_new(" "event_new(<##>)" "S" "resource") ("f" "event_free(" "event_free(<#resource $event#>)" "S" "void") ("f" "event_del(" "event_del(<#resource $event#>)" "S" "bool") ("f" "event_buffer_write(" "event_buffer_write(<#resource $bevent#>,<#string $data#>,<#int $data_size#>)" "S" "bool") ("f" "event_buffer_watermark_set(" "event_buffer_watermark_set(<#resource $bevent#>,<#int $events#>,<#int $lowmark#>,<#int $highmark#>)" "S" "void") ("f" "event_buffer_timeout_set(" "event_buffer_timeout_set(<#resource $bevent#>,<#int $read_timeout#>,<#int $write_timeout#>)" "S" "void") ("f" "event_buffer_set_callback(" "event_buffer_set_callback(<#resource $event#>,<#mixed $readcb#>,<#mixed $writecb#>,<#mixed $errorcb#>,<#mixed $arg#>)" "S" "bool") ("f" "event_buffer_read(" "event_buffer_read(<#resource $bevent#>,<#int $data_size#>)" "S" "string") ("f" "event_buffer_priority_set(" "event_buffer_priority_set(<#resource $bevent#>,<#int $priority#>)" "S" "bool") ("f" "event_buffer_new(" "event_buffer_new(<#resource $stream#>,<#mixed $readcb#>,<#mixed $writecb#>,<#mixed $errorcb#>,<#mixed $arg#>)" "S" "resource") ("f" "event_buffer_free(" "event_buffer_free(<#resource $bevent#>)" "S" "void") ("f" "event_buffer_fd_set(" "event_buffer_fd_set(<#resource $bevent#>,<#resource $fd#>)" "S" "void") ("f" "event_buffer_enable(" "event_buffer_enable(<#resource $bevent#>,<#int $events#>)" "S" "bool") ("f" "event_buffer_disable(" "event_buffer_disable(<#resource $bevent#>,<#int $events#>)" "S" "bool") ("f" "event_buffer_base_set(" "event_buffer_base_set(<#resource $bevent#>,<#resource $event_base#>)" "S" "bool") ("f" "event_base_set(" "event_base_set(<#resource $event#>,<#resource $event_base#>)" "S" "bool") ("f" "event_base_reinit(" "event_base_reinit(<#resource $event_base#>)" "S" "bool") ("f" "event_base_priority_init(" "event_base_priority_init(<#resource $event_base#>,<#int $npriorities#>)" "S" "bool") ("f" "event_base_new(" "event_base_new(<##>)" "S" "resource") ("f" "event_base_loop(" "event_base_loop(<#resource $event_base#>,<#int $flags#>)" "S" "int") ("f" "event_base_loopexit(" "event_base_loopexit(<#resource $event_base#>,<#int $timeout#>)" "S" "bool") ("f" "event_base_loopbreak(" "event_base_loopbreak(<#resource $event_base#>)" "S" "bool") ("f" "event_base_free(" "event_base_free(<#resource $event_base#>)" "S" "void") ("f" "event_add(" "event_add(<#resource $event#>,<#int $timeout#>)" "S" "bool") ("f" "escapeshellcmd(" "escapeshellcmd(<#string $command#>)" "S" "string") ("f" "escapeshellarg(" "escapeshellarg(<#string $arg#>)" "S" "string") ("f" "error_reporting(" "error_reporting(<#int $level#>)" "S" "int") ("f" "error_log(" "error_log(<#string $message#>,<#int $message_type#>,<#string $destination#>,<#string $extra_headers#>)" "S" "bool") ("f" "error_get_last(" "error_get_last(<##>)" "S" "array") ("f" "ereg_replace(" "ereg_replace(<#string $pattern#>,<#string $replacement#>,<#string $string#>)" "S" "string") ("f" "eregi_replace(" "eregi_replace(<#string $pattern#>,<#string $replacement#>,<#string $string#>)" "S" "string") ("f" "ereg(" "ereg(<#string $pattern#>,<#string $string#>,<#array &$regs#>)" "S" "int") ("f" "eregi(" "eregi(<#string $pattern#>,<#string $string#>,<#array &$regs#>)" "S" "int") ("f" "end(" "end(<#array &$array#>)" "S" "mixed") ("f" "enchant_dict_suggest(" "enchant_dict_suggest(<#resource $dict#>,<#string $word#>)" "S" "array") ("f" "enchant_dict_store_replacement(" "enchant_dict_store_replacement(<#resource $dict#>,<#string $mis#>,<#string $cor#>)" "S" "void") ("f" "enchant_dict_quick_check(" "enchant_dict_quick_check(<#resource $dict#>,<#string $word#>,<#array &$suggestions#>)" "S" "bool") ("f" "enchant_dict_is_in_session(" "enchant_dict_is_in_session(<#resource $dict#>,<#string $word#>)" "S" "bool") ("f" "enchant_dict_get_error(" "enchant_dict_get_error(<#resource $dict#>)" "S" "string") ("f" "enchant_dict_describe(" "enchant_dict_describe(<#resource $dict#>)" "S" "mixed") ("f" "enchant_dict_check(" "enchant_dict_check(<#resource $dict#>,<#string $word#>)" "S" "bool") ("f" "enchant_dict_add_to_session(" "enchant_dict_add_to_session(<#resource $dict#>,<#string $word#>)" "S" "void") ("f" "enchant_dict_add_to_personal(" "enchant_dict_add_to_personal(<#resource $dict#>,<#string $word#>)" "S" "void") ("f" "enchant_broker_set_ordering(" "enchant_broker_set_ordering(<#resource $broker#>,<#string $tag#>,<#string $ordering#>)" "S" "bool") ("f" "enchant_broker_request_pwl_dict(" "enchant_broker_request_pwl_dict(<#resource $broker#>,<#string $filename#>)" "S" "resource") ("f" "enchant_broker_request_dict(" "enchant_broker_request_dict(<#resource $broker#>,<#string $tag#>)" "S" "resource") ("f" "enchant_broker_list_dicts(" "enchant_broker_list_dicts(<#resource $broker#>)" "S" "mixed") ("f" "enchant_broker_init(" "enchant_broker_init(<##>)" "S" "resource") ("f" "enchant_broker_get_error(" "enchant_broker_get_error(<#resource $broker#>)" "S" "string") ("f" "enchant_broker_free_dict(" "enchant_broker_free_dict(<#resource $dict#>)" "S" "bool") ("f" "enchant_broker_free(" "enchant_broker_free(<#resource $broker#>)" "S" "bool") ("f" "enchant_broker_dict_exists(" "enchant_broker_dict_exists(<#resource $broker#>,<#string $tag#>)" "S" "bool") ("f" "enchant_broker_describe(" "enchant_broker_describe(<#resource $broker#>)" "S" "array") ("f" "eio_write(" "eio_write(<#mixed $fd#>,<#string $str#>,<#int $length#>,<#int $offset#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_utime(" "eio_utime(<#string $path#>,<#float $atime#>,<#float $mtime#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_unlink(" "eio_unlink(<#string $path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_truncate(" "eio_truncate(<#string $path#>,<#int $offset#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_sync(" "eio_sync(<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_syncfs(" "eio_syncfs(<#mixed $fd#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_sync_file_range(" "eio_sync_file_range(<#mixed $fd#>,<#int $offset#>,<#int $nbytes#>,<#int $flags#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_symlink(" "eio_symlink(<#string $path#>,<#string $new_path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_statvfs(" "eio_statvfs(<#string $path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_stat(" "eio_stat(<#string $path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_set_min_parallel(" "eio_set_min_parallel(<#string $nthreads#>)" "S" "void") ("f" "eio_set_max_poll_time(" "eio_set_max_poll_time(<#float $nseconds#>)" "S" "void") ("f" "eio_set_max_poll_reqs(" "eio_set_max_poll_reqs(<#int $nreqs#>)" "S" "void") ("f" "eio_set_max_parallel(" "eio_set_max_parallel(<#int $nthreads#>)" "S" "void") ("f" "eio_set_max_idle(" "eio_set_max_idle(<#int $nthreads#>)" "S" "void") ("f" "eio_sendfile(" "eio_sendfile(<#mixed $out_fd#>,<#mixed $in_fd#>,<#int $offset#>,<#int $length#>,<#int $pri#>,<#callable $callback#>,<#string $data#>)" "S" "resource") ("f" "eio_seek(" "eio_seek(<#mixed $fd#>,<#int $offset#>,<#int $whence#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_rmdir(" "eio_rmdir(<#string $path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_rename(" "eio_rename(<#string $path#>,<#string $new_path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_realpath(" "eio_realpath(<#string $path#>,<#int $pri#>,<#callable $callback#>,<#string $data#>)" "S" "resource") ("f" "eio_read(" "eio_read(<#mixed $fd#>,<#int $length#>,<#int $offset#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_readlink(" "eio_readlink(<#string $path#>,<#int $pri#>,<#callable $callback#>,<#string $data#>)" "S" "resource") ("f" "eio_readdir(" "eio_readdir(<#string $path#>,<#int $flags#>,<#int $pri#>,<#callable $callback#>,<#string $data#>)" "S" "resource") ("f" "eio_readahead(" "eio_readahead(<#mixed $fd#>,<#int $offset#>,<#int $length#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_poll(" "eio_poll(<##>)" "S" "int") ("f" "eio_open(" "eio_open(<#string $path#>,<#int $flags#>,<#int $mode#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_nthreads(" "eio_nthreads(<##>)" "S" "int") ("f" "eio_nreqs(" "eio_nreqs(<##>)" "S" "int") ("f" "eio_nready(" "eio_nready(<##>)" "S" "int") ("f" "eio_npending(" "eio_npending(<##>)" "S" "int") ("f" "eio_nop(" "eio_nop(<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_mknod(" "eio_mknod(<#string $path#>,<#int $mode#>,<#int $dev#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_mkdir(" "eio_mkdir(<#string $path#>,<#int $mode#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_lstat(" "eio_lstat(<#string $path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_link(" "eio_link(<#string $path#>,<#string $new_path#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_init(" "eio_init(<##>)" "S" "void") ("f" "eio_grp(" "eio_grp(<#callable $callback#>,<#string $data#>)" "S" "resource") ("f" "eio_grp_limit(" "eio_grp_limit(<#resource $grp#>,<#int $limit#>)" "S" "void") ("f" "eio_grp_cancel(" "eio_grp_cancel(<#resource $grp#>)" "S" "void") ("f" "eio_grp_add(" "eio_grp_add(<#resource $grp#>,<#resource $req#>)" "S" "void") ("f" "eio_get_last_error(" "eio_get_last_error(<#resource $req#>)" "S" "string") ("f" "eio_get_event_stream(" "eio_get_event_stream(<##>)" "S" "mixed") ("f" "eio_futime(" "eio_futime(<#mixed $fd#>,<#float $atime#>,<#float $mtime#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_ftruncate(" "eio_ftruncate(<#mixed $fd#>,<#int $offset#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_fsync(" "eio_fsync(<#mixed $fd#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_fstatvfs(" "eio_fstatvfs(<#mixed $fd#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_fstat(" "eio_fstat(<#mixed $fd#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_fdatasync(" "eio_fdatasync(<#mixed $fd#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_fchown(" "eio_fchown(<#mixed $fd#>,<#int $uid#>,<#int $gid#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_fchmod(" "eio_fchmod(<#mixed $fd#>,<#int $mode#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_fallocate(" "eio_fallocate(<#mixed $fd#>,<#int $mode#>,<#int $offset#>,<#int $length#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_event_loop(" "eio_event_loop(<##>)" "S" "bool") ("f" "eio_dup2(" "eio_dup2(<#mixed $fd#>,<#mixed $fd2#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_custom(" "eio_custom(<#callable $execute#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_close(" "eio_close(<#mixed $fd#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_chown(" "eio_chown(<#string $path#>,<#int $uid#>,<#int $gid#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_chmod(" "eio_chmod(<#string $path#>,<#int $mode#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "eio_cancel(" "eio_cancel(<#resource $req#>)" "S" "void") ("f" "eio_busy(" "eio_busy(<#int $delay#>,<#int $pri#>,<#callable $callback#>,<#mixed $data#>)" "S" "resource") ("f" "easter_days(" "easter_days(<#int $year#>,<#int $method#>)" "S" "int") ("f" "easter_date(" "easter_date(<#int $year#>)" "S" "int") ("f" "each(" "each(<#array &$array#>)" "S" "array") ("f" "dom_import_simplexml(" "dom_import_simplexml(<#SimpleXMLElement $node#>)" "S" "DOMElement") ("f" "dns_get_record(" "dns_get_record(<#string $hostname#>,<#int $type#>,<#array &$authns#>,<#array &$addtl#>,<#bool &$raw#>)" "S" "array") ("f" "dngettext(" "dngettext(<#string $domain#>,<#string $msgid1#>,<#string $msgid2#>,<#int $n#>)" "S" "string") ("f" "dl(" "dl(<#string $library#>)" "S" "bool") ("f" "disk_total_space(" "disk_total_space(<#string $directory#>)" "S" "float") ("f" "disk_free_space(" "disk_free_space(<#string $directory#>)" "S" "float") ("f" "dirname(" "dirname(<#string $path#>)" "S" "string") ("f" "dir(" "dir(<#string $directory#>,<#resource $context#>)" "S" "Directory") ("f" "dio_write(" "dio_write(<#resource $fd#>,<#string $data#>,<#int $len#>)" "S" "int") ("f" "dio_truncate(" "dio_truncate(<#resource $fd#>,<#int $offset#>)" "S" "bool") ("f" "dio_tcsetattr(" "dio_tcsetattr(<#resource $fd#>,<#array $options#>)" "S" "bool") ("f" "dio_stat(" "dio_stat(<#resource $fd#>)" "S" "array") ("f" "dio_seek(" "dio_seek(<#resource $fd#>,<#int $pos#>,<#int $whence#>)" "S" "int") ("f" "dio_read(" "dio_read(<#resource $fd#>,<#int $len#>)" "S" "string") ("f" "dio_open(" "dio_open(<#string $filename#>,<#int $flags#>,<#int $mode#>)" "S" "resource") ("f" "dio_fcntl(" "dio_fcntl(<#resource $fd#>,<#int $cmd#>,<#mixed $args#>)" "S" "mixed") ("f" "dio_close(" "dio_close(<#resource $fd#>)" "S" "void") ("f" "dgettext(" "dgettext(<#string $domain#>,<#string $message#>)" "S" "string") ("f" "delete(" "delete(<##>)" "S" "void") ("f" "deg2rad(" "deg2rad(<#float $number#>)" "S" "float") ("f" "define_syslog_variables(" "define_syslog_variables(<##>)" "S" "void") ("f" "defined(" "defined(<#string $name#>)" "S" "bool") ("f" "define(" "define(<#string $name#>,<#mixed $value#>,<#bool $case_insensitive#>)" "S" "bool") ("f" "decoct(" "decoct(<#int $number#>)" "S" "string") ("f" "dechex(" "dechex(<#int $number#>)" "S" "string") ("f" "decbin(" "decbin(<#int $number#>)" "S" "string") ("f" "debug_zval_dump(" "debug_zval_dump(<#mixed $variable#>,<#mixed $__args__#>)" "S" "void") ("f" "debug_print_backtrace(" "debug_print_backtrace(<#int $options#>,<#int $limit#>)" "S" "void") ("f" "debug_backtrace(" "debug_backtrace(<#int $options#>,<#int $limit#>)" "S" "array") ("f" "dcngettext(" "dcngettext(<#string $domain#>,<#string $msgid1#>,<#string $msgid2#>,<#int $n#>,<#int $category#>)" "S" "string") ("f" "dcgettext(" "dcgettext(<#string $domain#>,<#string $message#>,<#int $category#>)" "S" "string") ("f" "dbx_sort(" "dbx_sort(<#object $result#>,<#string $user_compare_function#>)" "S" "bool") ("f" "dbx_query(" "dbx_query(<#object $link_identifier#>,<#string $sql_statement#>,<#int $flags#>)" "S" "mixed") ("f" "dbx_fetch_row(" "dbx_fetch_row(<#object $result_identifier#>)" "S" "mixed") ("f" "dbx_escape_string(" "dbx_escape_string(<#object $link_identifier#>,<#string $text#>)" "S" "string") ("f" "dbx_error(" "dbx_error(<#object $link_identifier#>)" "S" "string") ("f" "dbx_connect(" "dbx_connect(<#mixed $module#>,<#string $host#>,<#string $database#>,<#string $username#>,<#string $password#>,<#int $persistent#>)" "S" "object") ("f" "dbx_compare(" "dbx_compare(<#array $row_a#>,<#array $row_b#>,<#string $column_key#>,<#int $flags#>)" "S" "int") ("f" "dbx_close(" "dbx_close(<#object $link_identifier#>)" "S" "int") ("f" "dbplus_xunlockrel(" "dbplus_xunlockrel(<#resource $relation#>)" "S" "int") ("f" "dbplus_xlockrel(" "dbplus_xlockrel(<#resource $relation#>)" "S" "int") ("f" "dbplus_update(" "dbplus_update(<#resource $relation#>,<#array $old#>,<#array $new#>)" "S" "int") ("f" "dbplus_unselect(" "dbplus_unselect(<#resource $relation#>)" "S" "int") ("f" "dbplus_unlockrel(" "dbplus_unlockrel(<#resource $relation#>)" "S" "int") ("f" "dbplus_undoprepare(" "dbplus_undoprepare(<#resource $relation#>)" "S" "int") ("f" "dbplus_undo(" "dbplus_undo(<#resource $relation#>)" "S" "int") ("f" "dbplus_tremove(" "dbplus_tremove(<#resource $relation#>,<#array $tuple#>,<#array &$current#>)" "S" "int") ("f" "dbplus_tcl(" "dbplus_tcl(<#int $sid#>,<#string $script#>)" "S" "string") ("f" "dbplus_sql(" "dbplus_sql(<#string $query#>,<#string $server#>,<#string $dbpath#>)" "S" "resource") ("f" "dbplus_setindex(" "dbplus_setindex(<#resource $relation#>,<#string $idx_name#>)" "S" "int") ("f" "dbplus_setindexbynumber(" "dbplus_setindexbynumber(<#resource $relation#>,<#int $idx_number#>)" "S" "int") ("f" "dbplus_savepos(" "dbplus_savepos(<#resource $relation#>)" "S" "int") ("f" "dbplus_rzap(" "dbplus_rzap(<#resource $relation#>)" "S" "int") ("f" "dbplus_runlink(" "dbplus_runlink(<#resource $relation#>)" "S" "int") ("f" "dbplus_rsecindex(" "dbplus_rsecindex(<#resource $relation#>,<#mixed $domlist#>,<#int $type#>)" "S" "mixed") ("f" "dbplus_rrename(" "dbplus_rrename(<#resource $relation#>,<#string $name#>)" "S" "int") ("f" "dbplus_rquery(" "dbplus_rquery(<#string $query#>,<#string $dbpath#>)" "S" "resource") ("f" "dbplus_ropen(" "dbplus_ropen(<#string $name#>)" "S" "resource") ("f" "dbplus_rkeys(" "dbplus_rkeys(<#resource $relation#>,<#mixed $domlist#>)" "S" "mixed") ("f" "dbplus_restorepos(" "dbplus_restorepos(<#resource $relation#>,<#array $tuple#>)" "S" "int") ("f" "dbplus_resolve(" "dbplus_resolve(<#string $relation_name#>)" "S" "array") ("f" "dbplus_rcrtlike(" "dbplus_rcrtlike(<#string $name#>,<#resource $relation#>,<#int $overwrite#>)" "S" "mixed") ("f" "dbplus_rcrtexact(" "dbplus_rcrtexact(<#string $name#>,<#resource $relation#>,<#bool $overwrite#>)" "S" "mixed") ("f" "dbplus_rcreate(" "dbplus_rcreate(<#string $name#>,<#mixed $domlist#>,<#bool $overwrite#>)" "S" "resource") ("f" "dbplus_rchperm(" "dbplus_rchperm(<#resource $relation#>,<#int $mask#>,<#string $user#>,<#string $group#>)" "S" "int") ("f" "dbplus_prev(" "dbplus_prev(<#resource $relation#>,<#array &$tuple#>)" "S" "int") ("f" "dbplus_open(" "dbplus_open(<#string $name#>)" "S" "resource") ("f" "dbplus_next(" "dbplus_next(<#resource $relation#>,<#array &$tuple#>)" "S" "int") ("f" "dbplus_lockrel(" "dbplus_lockrel(<#resource $relation#>)" "S" "int") ("f" "dbplus_last(" "dbplus_last(<#resource $relation#>,<#array &$tuple#>)" "S" "int") ("f" "dbplus_info(" "dbplus_info(<#resource $relation#>,<#string $key#>,<#array &$result#>)" "S" "int") ("f" "dbplus_getunique(" "dbplus_getunique(<#resource $relation#>,<#int $uniqueid#>)" "S" "int") ("f" "dbplus_getlock(" "dbplus_getlock(<#resource $relation#>,<#string $tuple#>)" "S" "int") ("f" "dbplus_freerlocks(" "dbplus_freerlocks(<#resource $relation#>)" "S" "int") ("f" "dbplus_freelock(" "dbplus_freelock(<#resource $relation#>,<#string $tuple#>)" "S" "int") ("f" "dbplus_freealllocks(" "dbplus_freealllocks(<##>)" "S" "int") ("f" "dbplus_flush(" "dbplus_flush(<#resource $relation#>)" "S" "int") ("f" "dbplus_first(" "dbplus_first(<#resource $relation#>,<#array &$tuple#>)" "S" "int") ("f" "dbplus_find(" "dbplus_find(<#resource $relation#>,<#array $constraints#>,<#mixed $tuple#>)" "S" "int") ("f" "dbplus_errno(" "dbplus_errno(<##>)" "S" "int") ("f" "dbplus_errcode(" "dbplus_errcode(<#int $errno#>)" "S" "string") ("f" "dbplus_curr(" "dbplus_curr(<#resource $relation#>,<#array &$tuple#>)" "S" "int") ("f" "dbplus_close(" "dbplus_close(<#resource $relation#>)" "S" "mixed") ("f" "dbplus_chdir(" "dbplus_chdir(<#string $newdir#>)" "S" "string") ("f" "dbplus_aql(" "dbplus_aql(<#string $query#>,<#string $server#>,<#string $dbpath#>)" "S" "resource") ("f" "dbplus_add(" "dbplus_add(<#resource $relation#>,<#array $tuple#>)" "S" "int") ("f" "dba_sync(" "dba_sync(<#resource $handle#>)" "S" "bool") ("f" "dbase_replace_record(" "dbase_replace_record(<#int $dbase_identifier#>,<#array $record#>,<#int $record_number#>)" "S" "bool") ("f" "dbase_pack(" "dbase_pack(<#int $dbase_identifier#>)" "S" "bool") ("f" "dbase_open(" "dbase_open(<#string $filename#>,<#int $mode#>)" "S" "int") ("f" "dbase_numrecords(" "dbase_numrecords(<#int $dbase_identifier#>)" "S" "int") ("f" "dbase_numfields(" "dbase_numfields(<#int $dbase_identifier#>)" "S" "int") ("f" "dbase_get_record_with_names(" "dbase_get_record_with_names(<#int $dbase_identifier#>,<#int $record_number#>)" "S" "array") ("f" "dbase_get_record(" "dbase_get_record(<#int $dbase_identifier#>,<#int $record_number#>)" "S" "array") ("f" "dbase_get_header_info(" "dbase_get_header_info(<#int $dbase_identifier#>)" "S" "array") ("f" "dbase_delete_record(" "dbase_delete_record(<#int $dbase_identifier#>,<#int $record_number#>)" "S" "bool") ("f" "dbase_create(" "dbase_create(<#string $filename#>,<#array $fields#>)" "S" "int") ("f" "dbase_close(" "dbase_close(<#int $dbase_identifier#>)" "S" "bool") ("f" "dbase_add_record(" "dbase_add_record(<#int $dbase_identifier#>,<#array $record#>)" "S" "bool") ("f" "dba_replace(" "dba_replace(<#string $key#>,<#string $value#>,<#resource $handle#>)" "S" "bool") ("f" "dba_popen(" "dba_popen(<#string $path#>,<#string $mode#>,<#string $handler#>,<#mixed $__args__#>)" "S" "resource") ("f" "dba_optimize(" "dba_optimize(<#resource $handle#>)" "S" "bool") ("f" "dba_open(" "dba_open(<#string $path#>,<#string $mode#>,<#string $handler#>,<#mixed $__args__#>)" "S" "resource") ("f" "dba_nextkey(" "dba_nextkey(<#resource $handle#>)" "S" "string") ("f" "dba_list(" "dba_list(<##>)" "S" "array") ("f" "dba_key_split(" "dba_key_split(<#mixed $key#>)" "S" "mixed") ("f" "dba_insert(" "dba_insert(<#string $key#>,<#string $value#>,<#resource $handle#>)" "S" "bool") ("f" "dba_handlers(" "dba_handlers(<#bool $full_info#>)" "S" "array") ("f" "dba_firstkey(" "dba_firstkey(<#resource $handle#>)" "S" "string") ("f" "dba_fetch(" "dba_fetch(<#string $key#>,<#resource $handle#>)" "S" "string") ("f" "dba_exists(" "dba_exists(<#string $key#>,<#resource $handle#>)" "S" "bool") ("f" "dba_delete(" "dba_delete(<#string $key#>,<#resource $handle#>)" "S" "bool") ("f" "dba_close(" "dba_close(<#resource $handle#>)" "S" "void") ("f" "db2_tables(" "db2_tables(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>,<#string $table_type#>)" "S" "resource") ("f" "db2_table_privileges(" "db2_table_privileges(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>)" "S" "resource") ("f" "db2_stmt_error(" "db2_stmt_error(<#resource $stmt#>)" "S" "string") ("f" "db2_stmt_errormsg(" "db2_stmt_errormsg(<#resource $stmt#>)" "S" "string") ("f" "db2_statistics(" "db2_statistics(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>,<#bool $unique#>)" "S" "resource") ("f" "db2_special_columns(" "db2_special_columns(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>,<#int $scope#>)" "S" "resource") ("f" "db2_set_option(" "db2_set_option(<#resource $resource#>,<#array $options#>,<#int $type#>)" "S" "bool") ("f" "db2_server_info(" "db2_server_info(<#resource $connection#>)" "S" "object") ("f" "db2_rollback(" "db2_rollback(<#resource $connection#>)" "S" "bool") ("f" "db2_result(" "db2_result(<#resource $stmt#>,<#mixed $column#>)" "S" "mixed") ("f" "db2_procedures(" "db2_procedures(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $procedure#>)" "S" "resource") ("f" "db2_procedure_columns(" "db2_procedure_columns(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $procedure#>,<#string $parameter#>)" "S" "resource") ("f" "db2_primary_keys(" "db2_primary_keys(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>)" "S" "resource") ("f" "db2_prepare(" "db2_prepare(<#resource $connection#>,<#string $statement#>,<#array $options#>)" "S" "resource") ("f" "db2_pconnect(" "db2_pconnect(<#string $database#>,<#string $username#>,<#string $password#>,<#array $options#>)" "S" "resource") ("f" "db2_pclose(" "db2_pclose(<#resource $resource#>)" "S" "bool") ("f" "db2_num_rows(" "db2_num_rows(<#resource $stmt#>)" "S" "int") ("f" "db2_num_fields(" "db2_num_fields(<#resource $stmt#>)" "S" "int") ("f" "db2_next_result(" "db2_next_result(<#resource $stmt#>)" "S" "resource") ("f" "db2_lob_read(" "db2_lob_read(<#resource $stmt#>,<#int $colnum#>,<#int $length#>)" "S" "string") ("f" "db2_last_insert_id(" "db2_last_insert_id(<#resource $resource#>)" "S" "string") ("f" "db2_get_option(" "db2_get_option(<#resource $resource#>,<#string $option#>)" "S" "string") ("f" "db2_free_stmt(" "db2_free_stmt(<#resource $stmt#>)" "S" "bool") ("f" "db2_free_result(" "db2_free_result(<#resource $stmt#>)" "S" "bool") ("f" "db2_foreign_keys(" "db2_foreign_keys(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>)" "S" "resource") ("f" "db2_field_width(" "db2_field_width(<#resource $stmt#>,<#mixed $column#>)" "S" "int") ("f" "db2_field_type(" "db2_field_type(<#resource $stmt#>,<#mixed $column#>)" "S" "string") ("f" "db2_field_scale(" "db2_field_scale(<#resource $stmt#>,<#mixed $column#>)" "S" "int") ("f" "db2_field_precision(" "db2_field_precision(<#resource $stmt#>,<#mixed $column#>)" "S" "int") ("f" "db2_field_num(" "db2_field_num(<#resource $stmt#>,<#mixed $column#>)" "S" "int") ("f" "db2_field_name(" "db2_field_name(<#resource $stmt#>,<#mixed $column#>)" "S" "string") ("f" "db2_field_display_size(" "db2_field_display_size(<#resource $stmt#>,<#mixed $column#>)" "S" "int") ("f" "db2_fetch_row(" "db2_fetch_row(<#resource $stmt#>,<#int $row_number#>)" "S" "bool") ("f" "db2_fetch_object(" "db2_fetch_object(<#resource $stmt#>,<#int $row_number#>)" "S" "object") ("f" "db2_fetch_both(" "db2_fetch_both(<#resource $stmt#>,<#int $row_number#>)" "S" "array") ("f" "db2_fetch_assoc(" "db2_fetch_assoc(<#resource $stmt#>,<#int $row_number#>)" "S" "array") ("f" "db2_fetch_array(" "db2_fetch_array(<#resource $stmt#>,<#int $row_number#>)" "S" "array") ("f" "db2_execute(" "db2_execute(<#resource $stmt#>,<#array $parameters#>)" "S" "bool") ("f" "db2_exec(" "db2_exec(<#resource $connection#>,<#string $statement#>,<#array $options#>)" "S" "resource") ("f" "db2_escape_string(" "db2_escape_string(<#string $string_literal#>)" "S" "string") ("f" "db2_cursor_type(" "db2_cursor_type(<#resource $stmt#>)" "S" "int") ("f" "db2_conn_error(" "db2_conn_error(<#resource $connection#>)" "S" "string") ("f" "db2_conn_errormsg(" "db2_conn_errormsg(<#resource $connection#>)" "S" "string") ("f" "db2_connect(" "db2_connect(<#string $database#>,<#string $username#>,<#string $password#>,<#array $options#>)" "S" "resource") ("f" "db2_commit(" "db2_commit(<#resource $connection#>)" "S" "bool") ("f" "db2_columns(" "db2_columns(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>,<#string $column_name#>)" "S" "resource") ("f" "db2_column_privileges(" "db2_column_privileges(<#resource $connection#>,<#string $qualifier#>,<#string $schema#>,<#string $table_name#>,<#string $column_name#>)" "S" "resource") ("f" "db2_close(" "db2_close(<#resource $connection#>)" "S" "bool") ("f" "db2_client_info(" "db2_client_info(<#resource $connection#>)" "S" "object") ("f" "db2_bind_param(" "db2_bind_param(<#resource $stmt#>,<#int $parameter_number#>,<#string $variable_name#>,<#int $parameter_type#>,<#int $data_type#>,<#int $precision#>,<#int $scale#>)" "S" "bool") ("f" "db2_autocommit(" "db2_autocommit(<#resource $connection#>,<#bool $value#>)" "S" "mixed") ("f" "date_sunset(" "date_sunset(<#int $timestamp#>,<#int $format#>,<#float $latitude#>,<#float $longitude#>,<#float $zenith#>,<#float $gmt_offset#>)" "S" "mixed") ("f" "date_sunrise(" "date_sunrise(<#int $timestamp#>,<#int $format#>,<#float $latitude#>,<#float $longitude#>,<#float $zenith#>,<#float $gmt_offset#>)" "S" "mixed") ("f" "date_sun_info(" "date_sun_info(<#int $time#>,<#float $latitude#>,<#float $longitude#>)" "S" "array") ("f" "date(" "date(<#string $format#>,<#int $timestamp#>)" "S" "string") ("f" "date_parse_from_format(" "date_parse_from_format(<#string $format#>,<#string $date#>)" "S" "array") ("f" "date_parse(" "date_parse(<#string $date#>)" "S" "array") ("f" "date_default_timezone_set(" "date_default_timezone_set(<#string $timezone_identifier#>)" "S" "bool") ("f" "date_default_timezone_get(" "date_default_timezone_get(<##>)" "S" "string") ("f" "cyrus_unbind(" "cyrus_unbind(<#resource $connection#>,<#string $trigger_name#>)" "S" "bool") ("f" "cyrus_query(" "cyrus_query(<#resource $connection#>,<#string $query#>)" "S" "array") ("f" "cyrus_connect(" "cyrus_connect(<#string $host#>,<#string $port#>,<#int $flags#>)" "S" "resource") ("f" "cyrus_close(" "cyrus_close(<#resource $connection#>)" "S" "bool") ("f" "cyrus_bind(" "cyrus_bind(<#resource $connection#>,<#array $callbacks#>)" "S" "bool") ("f" "cyrus_authenticate(" "cyrus_authenticate(<#resource $connection#>,<#string $mechlist#>,<#string $service#>,<#string $user#>,<#int $minssf#>,<#int $maxssf#>,<#string $authname#>,<#string $password#>)" "S" "void") ("f" "current(" "current(<#array &$array#>)" "S" "mixed") ("f" "curl_version(" "curl_version(<#int $age#>)" "S" "array") ("f" "curl_unescape(" "curl_unescape(<#resource $ch#>,<#string $str#>)" "S" "string") ("f" "curl_strerror(" "curl_strerror(<#int $errornum#>)" "S" "string") ("f" "curl_share_setopt(" "curl_share_setopt(<#resource $sh#>,<#int $option#>,<#string $value#>)" "S" "bool") ("f" "curl_share_init(" "curl_share_init(<##>)" "S" "resource") ("f" "curl_share_close(" "curl_share_close(<#resource $sh#>)" "S" "void") ("f" "curl_setopt(" "curl_setopt(<#resource $ch#>,<#int $option#>,<#mixed $value#>)" "S" "bool") ("f" "curl_setopt_array(" "curl_setopt_array(<#resource $ch#>,<#array $options#>)" "S" "bool") ("f" "curl_reset(" "curl_reset(<#resource $ch#>)" "S" "void") ("f" "curl_pause(" "curl_pause(<#resource $ch#>,<#int $bitmask#>)" "S" "int") ("f" "curl_multi_strerror(" "curl_multi_strerror(<#int $errornum#>)" "S" "string") ("f" "curl_multi_setopt(" "curl_multi_setopt(<#resource $mh#>,<#int $option#>,<#mixed $value#>)" "S" "bool") ("f" "curl_multi_select(" "curl_multi_select(<#resource $mh#>,<#float $timeout#>)" "S" "int") ("f" "curl_multi_remove_handle(" "curl_multi_remove_handle(<#resource $mh#>,<#resource $ch#>)" "S" "int") ("f" "curl_multi_init(" "curl_multi_init(<##>)" "S" "resource") ("f" "curl_multi_info_read(" "curl_multi_info_read(<#resource $mh#>,<#int &$msgs_in_queue#>)" "S" "array") ("f" "curl_multi_getcontent(" "curl_multi_getcontent(<#resource $ch#>)" "S" "string") ("f" "curl_multi_exec(" "curl_multi_exec(<#resource $mh#>,<#int &$still_running#>)" "S" "int") ("f" "curl_multi_close(" "curl_multi_close(<#resource $mh#>)" "S" "void") ("f" "curl_multi_add_handle(" "curl_multi_add_handle(<#resource $mh#>,<#resource $ch#>)" "S" "int") ("f" "curl_init(" "curl_init(<#string $url#>)" "S" "resource") ("f" "curl_getinfo(" "curl_getinfo(<#resource $ch#>,<#int $opt#>)" "S" "mixed") ("f" "curl_exec(" "curl_exec(<#resource $ch#>)" "S" "mixed") ("f" "curl_escape(" "curl_escape(<#resource $ch#>,<#string $str#>)" "S" "string") ("f" "curl_error(" "curl_error(<#resource $ch#>)" "S" "string") ("f" "curl_errno(" "curl_errno(<#resource $ch#>)" "S" "int") ("f" "curl_copy_handle(" "curl_copy_handle(<#resource $ch#>)" "S" "resource") ("f" "curl_close(" "curl_close(<#resource $ch#>)" "S" "void") ("f" "cubrid_version(" "cubrid_version(<##>)" "S" "string") ("f" "cubrid_unbuffered_query(" "cubrid_unbuffered_query(<#string $query#>,<#resource $conn_identifier#>)" "S" "resource") ("f" "cubrid_set_query_timeout(" "cubrid_set_query_timeout(<#resource $req_identifier#>,<#int $timeout#>)" "S" "bool") ("f" "cubrid_set_drop(" "cubrid_set_drop(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr_name#>,<#string $set_element#>)" "S" "bool") ("f" "cubrid_set_db_parameter(" "cubrid_set_db_parameter(<#resource $conn_identifier#>,<#int $param_type#>,<#int $param_value#>)" "S" "bool") ("f" "cubrid_set_autocommit(" "cubrid_set_autocommit(<#resource $conn_identifier#>,<#bool $mode#>)" "S" "bool") ("f" "cubrid_set_add(" "cubrid_set_add(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr_name#>,<#string $set_element#>)" "S" "bool") ("f" "cubrid_seq_put(" "cubrid_seq_put(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr_name#>,<#int $index#>,<#string $seq_element#>)" "S" "bool") ("f" "cubrid_seq_insert(" "cubrid_seq_insert(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr_name#>,<#int $index#>,<#string $seq_element#>)" "S" "bool") ("f" "cubrid_seq_drop(" "cubrid_seq_drop(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr_name#>,<#int $index#>)" "S" "bool") ("f" "cubrid_send_glo(" "cubrid_send_glo(<#resource $conn_identifier#>,<#string $oid#>)" "S" "int") ("f" "cubrid_schema(" "cubrid_schema(<#resource $conn_identifier#>,<#int $schema_type#>,<#string $class_name#>,<#string $attr_name#>)" "S" "array") ("f" "cubrid_save_to_glo(" "cubrid_save_to_glo(<#resource $conn_identifier#>,<#string $oid#>,<#string $file_name#>)" "S" "int") ("f" "cubrid_rollback(" "cubrid_rollback(<#resource $conn_identifier#>)" "S" "bool") ("f" "cubrid_result(" "cubrid_result(<#resource $result#>,<#int $row#>,<#mixed $field#>)" "S" "string") ("f" "cubrid_real_escape_string(" "cubrid_real_escape_string(<#string $unescaped_string#>,<#resource $conn_identifier#>)" "S" "string") ("f" "cubrid_query(" "cubrid_query(<#string $query#>,<#resource $conn_identifier#>)" "S" "resource") ("f" "cubrid_put(" "cubrid_put(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr#>,<#mixed $value#>)" "S" "int") ("f" "cubrid_prepare(" "cubrid_prepare(<#resource $conn_identifier#>,<#string $prepare_stmt#>,<#int $option#>)" "S" "resource") ("f" "cubrid_ping(" "cubrid_ping(<#resource $conn_identifier#>)" "S" "bool") ("f" "cubrid_pconnect_with_url(" "cubrid_pconnect_with_url(<#string $conn_url#>,<#string $userid#>,<#string $passwd#>)" "S" "resource") ("f" "cubrid_pconnect(" "cubrid_pconnect(<#string $host#>,<#int $port#>,<#string $dbname#>,<#string $userid#>,<#string $passwd#>)" "S" "resource") ("f" "cubrid_num_rows(" "cubrid_num_rows(<#resource $result#>)" "S" "int") ("f" "cubrid_num_fields(" "cubrid_num_fields(<#resource $result#>)" "S" "int") ("f" "cubrid_num_cols(" "cubrid_num_cols(<#resource $result#>)" "S" "int") ("f" "cubrid_next_result(" "cubrid_next_result(<#resource $result#>)" "S" "bool") ("f" "cubrid_new_glo(" "cubrid_new_glo(<#resource $conn_identifier#>,<#string $class_name#>,<#string $file_name#>)" "S" "string") ("f" "cubrid_move_cursor(" "cubrid_move_cursor(<#resource $req_identifier#>,<#int $offset#>,<#int $origin#>)" "S" "int") ("f" "cubrid_lock_write(" "cubrid_lock_write(<#resource $conn_identifier#>,<#string $oid#>)" "S" "bool") ("f" "cubrid_lock_read(" "cubrid_lock_read(<#resource $conn_identifier#>,<#string $oid#>)" "S" "bool") ("f" "cubrid_lob_size(" "cubrid_lob_size(<#resource $lob_identifier#>)" "S" "string") ("f" "cubrid_lob_send(" "cubrid_lob_send(<#resource $conn_identifier#>,<#resource $lob_identifier#>)" "S" "bool") ("f" "cubrid_lob_get(" "cubrid_lob_get(<#resource $conn_identifier#>,<#string $sql#>)" "S" "array") ("f" "cubrid_lob_export(" "cubrid_lob_export(<#resource $conn_identifier#>,<#resource $lob_identifier#>,<#string $path_name#>)" "S" "bool") ("f" "cubrid_lob_close(" "cubrid_lob_close(<#array $lob_identifier_array#>)" "S" "bool") ("f" "cubrid_lob2_write(" "cubrid_lob2_write(<#resource $lob_identifier#>,<#string $buf#>)" "S" "bool") ("f" "cubrid_lob2_tell(" "cubrid_lob2_tell(<#resource $lob_identifier#>)" "S" "int") ("f" "cubrid_lob2_tell64(" "cubrid_lob2_tell64(<#resource $lob_identifier#>)" "S" "string") ("f" "cubrid_lob2_size(" "cubrid_lob2_size(<#resource $lob_identifier#>)" "S" "int") ("f" "cubrid_lob2_size64(" "cubrid_lob2_size64(<#resource $lob_identifier#>)" "S" "string") ("f" "cubrid_lob2_seek(" "cubrid_lob2_seek(<#resource $lob_identifier#>,<#int $offset#>,<#int $origin#>)" "S" "bool") ("f" "cubrid_lob2_seek64(" "cubrid_lob2_seek64(<#resource $lob_identifier#>,<#string $offset#>,<#int $origin#>)" "S" "bool") ("f" "cubrid_lob2_read(" "cubrid_lob2_read(<#resource $lob_identifier#>,<#int $len#>)" "S" "string") ("f" "cubrid_lob2_new(" "cubrid_lob2_new(<#resource $conn_identifier#>,<#string $type#>)" "S" "resource") ("f" "cubrid_lob2_import(" "cubrid_lob2_import(<#resource $lob_identifier#>,<#string $file_name#>)" "S" "bool") ("f" "cubrid_lob2_export(" "cubrid_lob2_export(<#resource $lob_identifier#>,<#string $file_name#>)" "S" "bool") ("f" "cubrid_lob2_close(" "cubrid_lob2_close(<#resource $lob_identifier#>)" "S" "bool") ("f" "cubrid_lob2_bind(" "cubrid_lob2_bind(<#resource $req_identifier#>,<#int $bind_index#>,<#mixed $bind_value#>,<#string $bind_value_type#>)" "S" "bool") ("f" "cubrid_load_from_glo(" "cubrid_load_from_glo(<#resource $conn_identifier#>,<#string $oid#>,<#string $file_name#>)" "S" "int") ("f" "cubrid_list_dbs(" "cubrid_list_dbs(<#resource $conn_identifier#>)" "S" "array") ("f" "cubrid_is_instance(" "cubrid_is_instance(<#resource $conn_identifier#>,<#string $oid#>)" "S" "int") ("f" "cubrid_insert_id(" "cubrid_insert_id(<#resource $conn_identifier#>)" "S" "string") ("f" "cubrid_get_server_info(" "cubrid_get_server_info(<#resource $conn_identifier#>)" "S" "string") ("f" "cubrid_get_query_timeout(" "cubrid_get_query_timeout(<#resource $req_identifier#>)" "S" "int") ("f" "cubrid_get(" "cubrid_get(<#resource $conn_identifier#>,<#string $oid#>,<#mixed $attr#>)" "S" "mixed") ("f" "cubrid_get_db_parameter(" "cubrid_get_db_parameter(<#resource $conn_identifier#>)" "S" "array") ("f" "cubrid_get_client_info(" "cubrid_get_client_info(<##>)" "S" "string") ("f" "cubrid_get_class_name(" "cubrid_get_class_name(<#resource $conn_identifier#>,<#string $oid#>)" "S" "string") ("f" "cubrid_get_charset(" "cubrid_get_charset(<#resource $conn_identifier#>)" "S" "string") ("f" "cubrid_get_autocommit(" "cubrid_get_autocommit(<#resource $conn_identifier#>)" "S" "bool") ("f" "cubrid_free_result(" "cubrid_free_result(<#resource $req_identifier#>)" "S" "bool") ("f" "cubrid_field_type(" "cubrid_field_type(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "cubrid_field_table(" "cubrid_field_table(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "cubrid_field_seek(" "cubrid_field_seek(<#resource $result#>,<#int $field_offset#>)" "S" "bool") ("f" "cubrid_field_name(" "cubrid_field_name(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "cubrid_field_len(" "cubrid_field_len(<#resource $result#>,<#int $field_offset#>)" "S" "int") ("f" "cubrid_field_flags(" "cubrid_field_flags(<#resource $result#>,<#int $field_offset#>)" "S" "string") ("f" "cubrid_fetch_row(" "cubrid_fetch_row(<#resource $result#>,<#int $type#>)" "S" "array") ("f" "cubrid_fetch_object(" "cubrid_fetch_object(<#resource $result#>,<#string $class_name#>,<#array $params#>,<#int $type#>)" "S" "object") ("f" "cubrid_fetch(" "cubrid_fetch(<#resource $result#>,<#int $type#>)" "S" "mixed") ("f" "cubrid_fetch_lengths(" "cubrid_fetch_lengths(<#resource $result#>)" "S" "array") ("f" "cubrid_fetch_field(" "cubrid_fetch_field(<#resource $result#>,<#int $field_offset#>)" "S" "object") ("f" "cubrid_fetch_assoc(" "cubrid_fetch_assoc(<#resource $result#>,<#int $type#>)" "S" "array") ("f" "cubrid_fetch_array(" "cubrid_fetch_array(<#resource $result#>,<#int $type#>)" "S" "array") ("f" "cubrid_execute(" "cubrid_execute(<#resource $conn_identifier#>,<#string $sql#>,<#int $option#>)" "S" "resource") ("f" "cubrid_error(" "cubrid_error(<#resource $connection#>)" "S" "string") ("f" "cubrid_error_msg(" "cubrid_error_msg(<##>)" "S" "string") ("f" "cubrid_error_code(" "cubrid_error_code(<##>)" "S" "int") ("f" "cubrid_error_code_facility(" "cubrid_error_code_facility(<##>)" "S" "int") ("f" "cubrid_errno(" "cubrid_errno(<#resource $conn_identifier#>)" "S" "int") ("f" "cubrid_drop(" "cubrid_drop(<#resource $conn_identifier#>,<#string $oid#>)" "S" "bool") ("f" "cubrid_disconnect(" "cubrid_disconnect(<#resource $conn_identifier#>)" "S" "bool") ("f" "cubrid_db_name(" "cubrid_db_name(<#array $result#>,<#int $index#>)" "S" "string") ("f" "cubrid_data_seek(" "cubrid_data_seek(<#resource $result#>,<#int $row_number#>)" "S" "bool") ("f" "cubrid_current_oid(" "cubrid_current_oid(<#resource $req_identifier#>)" "S" "string") ("f" "cubrid_connect_with_url(" "cubrid_connect_with_url(<#string $conn_url#>,<#string $userid#>,<#string $passwd#>,<#bool $new_link#>)" "S" "resource") ("f" "cubrid_connect(" "cubrid_connect(<#string $host#>,<#int $port#>,<#string $dbname#>,<#string $userid#>,<#string $passwd#>,<#bool $new_link#>)" "S" "resource") ("f" "cubrid_commit(" "cubrid_commit(<#resource $conn_identifier#>)" "S" "bool") ("f" "cubrid_column_types(" "cubrid_column_types(<#resource $req_identifier#>)" "S" "array") ("f" "cubrid_column_names(" "cubrid_column_names(<#resource $req_identifier#>)" "S" "array") ("f" "cubrid_col_size(" "cubrid_col_size(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr_name#>)" "S" "int") ("f" "cubrid_col_get(" "cubrid_col_get(<#resource $conn_identifier#>,<#string $oid#>,<#string $attr_name#>)" "S" "array") ("f" "cubrid_close_request(" "cubrid_close_request(<#resource $req_identifier#>)" "S" "bool") ("f" "cubrid_close_prepare(" "cubrid_close_prepare(<#resource $req_identifier#>)" "S" "bool") ("f" "cubrid_close(" "cubrid_close(<#resource $conn_identifier#>)" "S" "bool") ("f" "cubrid_client_encoding(" "cubrid_client_encoding(<#resource $conn_identifier#>)" "S" "string") ("f" "cubrid_bind(" "cubrid_bind(<#resource $req_identifier#>,<#int $bind_index#>,<#mixed $bind_value#>,<#string $bind_value_type#>)" "S" "bool") ("f" "cubrid_affected_rows(" "cubrid_affected_rows(<#resource $conn_identifier#>)" "S" "int") ("f" "ctype_xdigit(" "ctype_xdigit(<#string $text#>)" "S" "bool") ("f" "ctype_upper(" "ctype_upper(<#string $text#>)" "S" "bool") ("f" "ctype_space(" "ctype_space(<#string $text#>)" "S" "bool") ("f" "ctype_punct(" "ctype_punct(<#string $text#>)" "S" "bool") ("f" "ctype_print(" "ctype_print(<#string $text#>)" "S" "bool") ("f" "ctype_lower(" "ctype_lower(<#string $text#>)" "S" "bool") ("f" "ctype_graph(" "ctype_graph(<#string $text#>)" "S" "bool") ("f" "ctype_digit(" "ctype_digit(<#string $text#>)" "S" "bool") ("f" "ctype_cntrl(" "ctype_cntrl(<#string $text#>)" "S" "bool") ("f" "ctype_alpha(" "ctype_alpha(<#string $text#>)" "S" "bool") ("f" "ctype_alnum(" "ctype_alnum(<#string $text#>)" "S" "bool") ("f" "crypt(" "crypt(<#string $str#>,<#string $salt#>)" "S" "string") ("f" "create_function(" "create_function(<#string $args#>,<#string $code#>)" "S" "string") ("f" "crc32(" "crc32(<#string $str#>)" "S" "int") ("f" "crack_opendict(" "crack_opendict(<#string $dictionary#>)" "S" "resource") ("f" "crack_getlastmessage(" "crack_getlastmessage(<##>)" "S" "string") ("f" "crack_closedict(" "crack_closedict(<#resource $dictionary#>)" "S" "bool") ("f" "crack_check(" "crack_check(<#resource $dictionary#>,<#string $password#>)" "S" "bool") ("f" "count(" "count(<#mixed $var#>,<#int $mode#>)" "S" "int") ("f" "count_chars(" "count_chars(<#string $string#>,<#int $mode#>)" "S" "mixed") ("f" "cosh(" "cosh(<#float $arg#>)" "S" "float") ("f" "cos(" "cos(<#float $arg#>)" "S" "float") ("f" "copy(" "copy(<#string $source#>,<#string $dest#>,<#resource $context#>)" "S" "bool") ("f" "convert_uuencode(" "convert_uuencode(<#string $data#>)" "S" "string") ("f" "convert_uudecode(" "convert_uudecode(<#string $data#>)" "S" "string") ("f" "convert_cyr_string(" "convert_cyr_string(<#string $str#>,<#string $from#>,<#string $to#>)" "S" "string") ("f" "constant(" "constant(<#string $name#>)" "S" "mixed") ("f" "connection_status(" "connection_status(<##>)" "S" "int") ("f" "connection_aborted(" "connection_aborted(<##>)" "S" "int") ("f" "com_print_typeinfo(" "com_print_typeinfo(<#object $comobject#>,<#string $dispinterface#>,<#bool $wantsink#>)" "S" "bool") ("f" "compact(" "compact(<#mixed $varname#>,<#mixed $__args__#>)" "S" "array") ("f" "com_message_pump(" "com_message_pump(<#int $timeoutms#>)" "S" "bool") ("f" "com_load_typelib(" "com_load_typelib(<#string $typelib_name#>,<#bool $case_insensitive#>)" "S" "bool") ("f" "com_get_active_object(" "com_get_active_object(<#string $progid#>,<#int $code_page#>)" "S" "variant") ("f" "com_event_sink(" "com_event_sink(<#variant $comobject#>,<#object $sinkobject#>,<#mixed $sinkinterface#>)" "S" "bool") ("f" "com_create_guid(" "com_create_guid(<##>)" "S" "string") ("f" "closelog(" "closelog(<##>)" "S" "bool") ("f" "closedir(" "closedir(<#resource $dir_handle#>)" "S" "void") ("f" "cli_set_process_title(" "cli_set_process_title(<#string $title#>)" "S" "bool") ("f" "cli_get_process_title(" "cli_get_process_title(<##>)" "S" "string") ("f" "clearstatcache(" "clearstatcache(<#bool $clear_realpath_cache#>,<#string $filename#>)" "S" "void") ("f" "class_uses(" "class_uses(<#mixed $class#>,<#bool $autoload#>)" "S" "array") ("f" "class_parents(" "class_parents(<#mixed $class#>,<#bool $autoload#>)" "S" "array") ("f" "classkit_method_rename(" "classkit_method_rename(<#string $classname#>,<#string $methodname#>,<#string $newname#>)" "S" "bool") ("f" "classkit_method_remove(" "classkit_method_remove(<#string $classname#>,<#string $methodname#>)" "S" "bool") ("f" "classkit_method_redefine(" "classkit_method_redefine(<#string $classname#>,<#string $methodname#>,<#string $args#>,<#string $code#>,<#int $flags#>)" "S" "bool") ("f" "classkit_method_copy(" "classkit_method_copy(<#string $dClass#>,<#string $dMethod#>,<#string $sClass#>,<#string $sMethod#>)" "S" "bool") ("f" "classkit_method_add(" "classkit_method_add(<#string $classname#>,<#string $methodname#>,<#string $args#>,<#string $code#>,<#int $flags#>)" "S" "bool") ("f" "classkit_import(" "classkit_import(<#string $filename#>)" "S" "array") ("f" "class_implements(" "class_implements(<#mixed $class#>,<#bool $autoload#>)" "S" "array") ("f" "class_exists(" "class_exists(<#string $class_name#>,<#bool $autoload#>)" "S" "bool") ("f" "class_alias(" "class_alias(<#string $original#>,<#string $alias#>,<#bool $autoload#>)" "S" "bool") ("f" "chunk_split(" "chunk_split(<#string $body#>,<#int $chunklen#>,<#string $end#>)" "S" "string") ("f" "chr(" "chr(<#int $ascii#>)" "S" "string") ("f" "chroot(" "chroot(<#string $directory#>)" "S" "bool") ("f" "chown(" "chown(<#string $filename#>,<#mixed $user#>)" "S" "bool") ("f" "chmod(" "chmod(<#string $filename#>,<#int $mode#>)" "S" "bool") ("f" "chgrp(" "chgrp(<#string $filename#>,<#mixed $group#>)" "S" "bool") ("f" "checkdnsrr(" "checkdnsrr(<#string $host#>,<#string $type#>)" "S" "bool") ("f" "checkdate(" "checkdate(<#int $month#>,<#int $day#>,<#int $year#>)" "S" "bool") ("f" "chdir(" "chdir(<#string $directory#>)" "S" "bool") ("f" "chdb_create(" "chdb_create(<#string $pathname#>,<#array $data#>)" "S" "bool") ("f" "ceil(" "ceil(<#float $value#>)" "S" "float") ("f" "cal_to_jd(" "cal_to_jd(<#int $calendar#>,<#int $month#>,<#int $day#>,<#int $year#>)" "S" "int") ("f" "call_user_method(" "call_user_method(<#string $method_name#>,<#object &$obj#>,<#mixed $parameter#>,<#mixed $__args__#>)" "S" "mixed") ("f" "call_user_method_array(" "call_user_method_array(<#string $method_name#>,<#object &$obj#>,<#array $paramarr#>)" "S" "mixed") ("f" "call_user_func(" "call_user_func(<#callable $callback#>,<#mixed $parameter#>,<#mixed $__args__#>)" "S" "mixed") ("f" "call_user_func_array(" "call_user_func_array(<#callable $callback#>,<#array $param_arr#>)" "S" "mixed") ("f" "cal_info(" "cal_info(<#int $calendar#>)" "S" "array") ("f" "cal_from_jd(" "cal_from_jd(<#int $jd#>,<#int $calendar#>)" "S" "array") ("f" "cal_days_in_month(" "cal_days_in_month(<#int $calendar#>,<#int $month#>,<#int $year#>)" "S" "int") ("f" "calcul_hmac(" "calcul_hmac(<#string $clent#>,<#string $siretcode#>,<#string $price#>,<#string $reference#>,<#string $validity#>,<#string $taxation#>,<#string $devise#>,<#string $language#>)" "S" "string") ("f" "calculhmac(" "calculhmac(<#string $clent#>,<#string $data#>)" "S" "string") ("f" "cairo_svg_version_to_string(" "cairo_svg_version_to_string(<#int $version#>)" "S" "string") ("f" "cairo_svg_surface_restrict_to_version(" "cairo_svg_surface_restrict_to_version(<#CairoSvgSurface $surface#>,<#int $version#>)" "S" "void") ("f" "cairo_svg_surface_create(" "cairo_svg_surface_create(<#string $file#>,<#float $width#>,<#float $height#>)" "S" "CairoSvgSurface") ("f" "cairo_surface_write_to_png(" "cairo_surface_write_to_png(<#CairoSurface $surface#>,<#resource $stream#>)" "S" "void") ("f" "cairo_surface_status(" "cairo_surface_status(<#CairoSurface $surface#>)" "S" "int") ("f" "cairo_surface_show_page(" "cairo_surface_show_page(<#CairoSurface $surface#>)" "S" "void") ("f" "cairo_surface_set_fallback_resolution(" "cairo_surface_set_fallback_resolution(<#CairoSurface $surface#>,<#float $x#>,<#float $y#>)" "S" "void") ("f" "cairo_surface_set_device_offset(" "cairo_surface_set_device_offset(<#CairoSurface $surface#>,<#float $x#>,<#float $y#>)" "S" "void") ("f" "cairo_surface_mark_dirty(" "cairo_surface_mark_dirty(<#CairoSurface $surface#>)" "S" "void") ("f" "cairo_surface_mark_dirty_rectangle(" "cairo_surface_mark_dirty_rectangle(<#CairoSurface $surface#>,<#float $x#>,<#float $y#>,<#float $width#>,<#float $height#>)" "S" "void") ("f" "cairo_surface_get_type(" "cairo_surface_get_type(<#CairoSurface $surface#>)" "S" "int") ("f" "cairo_surface_get_font_options(" "cairo_surface_get_font_options(<#CairoSurface $surface#>)" "S" "CairoFontOptions") ("f" "cairo_surface_get_device_offset(" "cairo_surface_get_device_offset(<#CairoSurface $surface#>)" "S" "array") ("f" "cairo_surface_get_content(" "cairo_surface_get_content(<#CairoSurface $surface#>)" "S" "int") ("f" "cairo_surface_flush(" "cairo_surface_flush(<#CairoSurface $surface#>)" "S" "void") ("f" "cairo_surface_finish(" "cairo_surface_finish(<#CairoSurface $surface#>)" "S" "void") ("f" "cairo_surface_create_similar(" "cairo_surface_create_similar(<#CairoSurface $surface#>,<#int $content#>,<#float $width#>,<#float $height#>)" "S" "CairoSurface") ("f" "cairo_surface_copy_page(" "cairo_surface_copy_page(<#CairoSurface $surface#>)" "S" "void") ("f" "cairo_scaled_font_text_extents(" "cairo_scaled_font_text_extents(<#CairoScaledFont $scaledfont#>,<#string $text#>)" "S" "array") ("f" "cairo_scaled_font_status(" "cairo_scaled_font_status(<#CairoScaledFont $scaledfont#>)" "S" "int") ("f" "cairo_scaled_font_glyph_extents(" "cairo_scaled_font_glyph_extents(<#CairoScaledFont $scaledfont#>,<#array $glyphs#>)" "S" "array") ("f" "cairo_scaled_font_get_type(" "cairo_scaled_font_get_type(<#CairoScaledFont $scaledfont#>)" "S" "int") ("f" "cairo_scaled_font_get_scale_matrix(" "cairo_scaled_font_get_scale_matrix(<#CairoScaledFont $scaledfont#>)" "S" "CairoMatrix") ("f" "cairo_scaled_font_get_font_options(" "cairo_scaled_font_get_font_options(<#CairoScaledFont $scaledfont#>)" "S" "CairoFontOptions") ("f" "cairo_scaled_font_get_font_matrix(" "cairo_scaled_font_get_font_matrix(<#CairoScaledFont $scaledfont#>)" "S" "CairoFontOptions") ("f" "cairo_scaled_font_get_font_face(" "cairo_scaled_font_get_font_face(<#CairoScaledFont $scaledfont#>)" "S" "CairoFontFace") ("f" "cairo_scaled_font_get_ctm(" "cairo_scaled_font_get_ctm(<#CairoScaledFont $scaledfont#>)" "S" "CairoMatrix") ("f" "cairo_scaled_font_extents(" "cairo_scaled_font_extents(<#CairoScaledFont $scaledfont#>)" "S" "array") ("f" "cairo_scaled_font_create(" "cairo_scaled_font_create(<#CairoFontFace $fontface#>,<#CairoMatrix $matrix#>,<#CairoMatrix $ctm#>,<#CairoFontOptions $fontoptions#>)" "S" "CairoScaledFont") ("f" "cairo_ps_surface_set_size(" "cairo_ps_surface_set_size(<#CairoPsSurface $surface#>,<#float $width#>,<#float $height#>)" "S" "void") ("f" "cairo_ps_surface_set_eps(" "cairo_ps_surface_set_eps(<#CairoPsSurface $surface#>,<#bool $level#>)" "S" "void") ("f" "cairo_ps_surface_restrict_to_level(" "cairo_ps_surface_restrict_to_level(<#CairoPsSurface $surface#>,<#int $level#>)" "S" "void") ("f" "cairo_ps_surface_get_eps(" "cairo_ps_surface_get_eps(<#CairoPsSurface $surface#>)" "S" "bool") ("f" "cairo_ps_surface_dsc_comment(" "cairo_ps_surface_dsc_comment(<#CairoPsSurface $surface#>,<#string $comment#>)" "S" "void") ("f" "cairo_ps_surface_dsc_begin_setup(" "cairo_ps_surface_dsc_begin_setup(<#CairoPsSurface $surface#>)" "S" "void") ("f" "cairo_ps_surface_dsc_begin_page_setup(" "cairo_ps_surface_dsc_begin_page_setup(<#CairoPsSurface $surface#>)" "S" "void") ("f" "cairo_ps_surface_create(" "cairo_ps_surface_create(<#string $file#>,<#float $width#>,<#float $height#>)" "S" "CairoPsSurface") ("f" "cairo_ps_level_to_string(" "cairo_ps_level_to_string(<#int $level#>)" "S" "string") ("f" "cairo_ps_get_levels(" "cairo_ps_get_levels(<##>)" "S" "array") ("f" "cairo_pdf_surface_set_size(" "cairo_pdf_surface_set_size(<#CairoPdfSurface $surface#>,<#float $width#>,<#float $height#>)" "S" "void") ("f" "cairo_pdf_surface_create(" "cairo_pdf_surface_create(<#string $file#>,<#float $width#>,<#float $height#>)" "S" "CairoPdfSurface") ("f" "cairo_pattern_status(" "cairo_pattern_status(<#CairoPattern $pattern#>)" "S" "int") ("f" "cairo_pattern_set_matrix(" "cairo_pattern_set_matrix(<#CairoPattern $pattern#>,<#CairoMatrix $matrix#>)" "S" "void") ("f" "cairo_pattern_set_filter(" "cairo_pattern_set_filter(<#CairoSurfacePattern $pattern#>,<#int $filter#>)" "S" "void") ("f" "cairo_pattern_set_extend(" "cairo_pattern_set_extend(<#string $pattern#>,<#string $extend#>)" "S" "void") ("f" "cairo_pattern_get_type(" "cairo_pattern_get_type(<#CairoPattern $pattern#>)" "S" "int") ("f" "cairo_pattern_get_surface(" "cairo_pattern_get_surface(<#CairoSurfacePattern $pattern#>)" "S" "CairoSurface") ("f" "cairo_pattern_get_rgba(" "cairo_pattern_get_rgba(<#CairoSolidPattern $pattern#>)" "S" "array") ("f" "cairo_pattern_get_radial_circles(" "cairo_pattern_get_radial_circles(<#CairoRadialGradient $pattern#>)" "S" "array") ("f" "cairo_pattern_get_matrix(" "cairo_pattern_get_matrix(<#CairoPattern $pattern#>)" "S" "CairoMatrix") ("f" "cairo_pattern_get_linear_points(" "cairo_pattern_get_linear_points(<#CairoLinearGradient $pattern#>)" "S" "array") ("f" "cairo_pattern_get_filter(" "cairo_pattern_get_filter(<#CairoSurfacePattern $pattern#>)" "S" "int") ("f" "cairo_pattern_get_extend(" "cairo_pattern_get_extend(<#string $pattern#>)" "S" "int") ("f" "cairo_pattern_get_color_stop_rgba(" "cairo_pattern_get_color_stop_rgba(<#CairoGradientPattern $pattern#>,<#int $index#>)" "S" "array") ("f" "cairo_pattern_get_color_stop_count(" "cairo_pattern_get_color_stop_count(<#CairoGradientPattern $pattern#>)" "S" "int") ("f" "cairo_pattern_create_rgb(" "cairo_pattern_create_rgb(<#float $red#>,<#float $green#>,<#float $blue#>)" "S" "CairoPattern") ("f" "cairo_pattern_create_rgba(" "cairo_pattern_create_rgba(<#float $red#>,<#float $green#>,<#float $blue#>,<#float $alpha#>)" "S" "CairoPattern") ("f" "cairo_pattern_create_radial(" "cairo_pattern_create_radial(<#float $x0#>,<#float $y0#>,<#float $r0#>,<#float $x1#>,<#float $y1#>,<#float $r1#>)" "S" "CairoPattern") ("f" "cairo_pattern_create_linear(" "cairo_pattern_create_linear(<#float $x0#>,<#float $y0#>,<#float $x1#>,<#float $y1#>)" "S" "CairoPattern") ("f" "cairo_pattern_create_for_surface(" "cairo_pattern_create_for_surface(<#CairoSurface $surface#>)" "S" "CairoPattern") ("f" "cairo_pattern_add_color_stop_rgb(" "cairo_pattern_add_color_stop_rgb(<#CairoGradientPattern $pattern#>,<#float $offset#>,<#float $red#>,<#float $green#>,<#float $blue#>)" "S" "void") ("f" "cairo_pattern_add_color_stop_rgba(" "cairo_pattern_add_color_stop_rgba(<#CairoGradientPattern $pattern#>,<#float $offset#>,<#float $red#>,<#float $green#>,<#float $blue#>,<#float $alpha#>)" "S" "void") ("f" "cairo_matrix_translate(" "cairo_matrix_translate(<#CairoMatrix $matrix#>,<#float $tx#>,<#float $ty#>)" "S" "void") ("f" "cairo_matrix_transform_point(" "cairo_matrix_transform_point(<#CairoMatrix $matrix#>,<#float $dx#>,<#float $dy#>)" "S" "array") ("f" "cairo_matrix_transform_distance(" "cairo_matrix_transform_distance(<#CairoMatrix $matrix#>,<#float $dx#>,<#float $dy#>)" "S" "array") ("f" "cairo_matrix_rotate(" "cairo_matrix_rotate(<#CairoMatrix $matrix#>,<#float $radians#>)" "S" "void") ("f" "cairo_matrix_multiply(" "cairo_matrix_multiply(<#CairoMatrix $matrix1#>,<#CairoMatrix $matrix2#>)" "S" "CairoMatrix") ("f" "cairo_matrix_invert(" "cairo_matrix_invert(<#CairoMatrix $matrix#>)" "S" "void") ("f" "cairo_image_surface_get_width(" "cairo_image_surface_get_width(<#CairoImageSurface $surface#>)" "S" "int") ("f" "cairo_image_surface_get_stride(" "cairo_image_surface_get_stride(<#CairoImageSurface $surface#>)" "S" "int") ("f" "cairo_image_surface_get_height(" "cairo_image_surface_get_height(<#CairoImageSurface $surface#>)" "S" "int") ("f" "cairo_image_surface_get_format(" "cairo_image_surface_get_format(<#CairoImageSurface $surface#>)" "S" "int") ("f" "cairo_image_surface_get_data(" "cairo_image_surface_get_data(<#CairoImageSurface $surface#>)" "S" "string") ("f" "cairo_image_surface_create_from_png(" "cairo_image_surface_create_from_png(<#string $file#>)" "S" "CairoImageSurface") ("f" "cairo_image_surface_create_for_data(" "cairo_image_surface_create_for_data(<#string $data#>,<#int $format#>,<#int $width#>,<#int $height#>,<#int $stride#>)" "S" "CairoImageSurface") ("f" "cairo_image_surface_create(" "cairo_image_surface_create(<#int $format#>,<#int $width#>,<#int $height#>)" "S" "CairoImageSurface") ("f" "cairo_format_stride_for_width(" "cairo_format_stride_for_width(<#int $format#>,<#int $width#>)" "S" "int") ("f" "cairo_font_options_status(" "cairo_font_options_status(<#CairoFontOptions $options#>)" "S" "int") ("f" "cairo_font_options_set_subpixel_order(" "cairo_font_options_set_subpixel_order(<#CairoFontOptions $options#>,<#int $subpixel_order#>)" "S" "void") ("f" "cairo_font_options_set_hint_style(" "cairo_font_options_set_hint_style(<#CairoFontOptions $options#>,<#int $hint_style#>)" "S" "void") ("f" "cairo_font_options_set_hint_metrics(" "cairo_font_options_set_hint_metrics(<#CairoFontOptions $options#>,<#int $hint_metrics#>)" "S" "void") ("f" "cairo_font_options_set_antialias(" "cairo_font_options_set_antialias(<#CairoFontOptions $options#>,<#int $antialias#>)" "S" "void") ("f" "cairo_font_options_merge(" "cairo_font_options_merge(<#CairoFontOptions $options#>,<#CairoFontOptions $other#>)" "S" "void") ("f" "cairo_font_options_hash(" "cairo_font_options_hash(<#CairoFontOptions $options#>)" "S" "int") ("f" "cairo_font_options_get_subpixel_order(" "cairo_font_options_get_subpixel_order(<#CairoFontOptions $options#>)" "S" "int") ("f" "cairo_font_options_get_hint_style(" "cairo_font_options_get_hint_style(<#CairoFontOptions $options#>)" "S" "int") ("f" "cairo_font_options_get_hint_metrics(" "cairo_font_options_get_hint_metrics(<#CairoFontOptions $options#>)" "S" "int") ("f" "cairo_font_options_get_antialias(" "cairo_font_options_get_antialias(<#CairoFontOptions $options#>)" "S" "int") ("f" "cairo_font_options_equal(" "cairo_font_options_equal(<#CairoFontOptions $options#>,<#CairoFontOptions $other#>)" "S" "bool") ("f" "cairo_font_options_create(" "cairo_font_options_create(<##>)" "S" "CairoFontOptions") ("f" "cairo_font_face_status(" "cairo_font_face_status(<#CairoFontFace $fontface#>)" "S" "int") ("f" "cairo_font_face_get_type(" "cairo_font_face_get_type(<#CairoFontFace $fontface#>)" "S" "int") ("f" "cairo_create(" "cairo_create(<#CairoSurface $surface#>)" "S" "CairoContext") ("f" "bzwrite(" "bzwrite(<#resource $bz#>,<#string $data#>,<#int $length#>)" "S" "int") ("f" "bzread(" "bzread(<#resource $bz#>,<#int $length#>)" "S" "string") ("f" "bzopen(" "bzopen(<#string $filename#>,<#string $mode#>)" "S" "resource") ("f" "bzflush(" "bzflush(<#resource $bz#>)" "S" "int") ("f" "bzerrstr(" "bzerrstr(<#resource $bz#>)" "S" "string") ("f" "bzerror(" "bzerror(<#resource $bz#>)" "S" "array") ("f" "bzerrno(" "bzerrno(<#resource $bz#>)" "S" "int") ("f" "bzdecompress(" "bzdecompress(<#string $source#>,<#int $small#>)" "S" "mixed") ("f" "bzcompress(" "bzcompress(<#string $source#>,<#int $blocksize#>,<#int $workfactor#>)" "S" "mixed") ("f" "bzclose(" "bzclose(<#resource $bz#>)" "S" "int") ("f" "bson_encode(" "bson_encode(<#mixed $anything#>)" "S" "string") ("f" "bson_decode(" "bson_decode(<#string $bson#>)" "S" "array") ("f" "boolval(" "boolval(<#mixed $var#>)" "S" "boolean") ("f" "blenc_encrypt(" "blenc_encrypt(<#string $plaintext#>,<#string $encodedfile#>,<#string $encryption_key#>)" "S" "string") ("f" "bindtextdomain(" "bindtextdomain(<#string $domain#>,<#string $directory#>)" "S" "string") ("f" "bind_textdomain_codeset(" "bind_textdomain_codeset(<#string $domain#>,<#string $codeset#>)" "S" "string") ("f" "bindec(" "bindec(<#string $binary_string#>)" "S" "number") ("f" "bin2hex(" "bin2hex(<#string $str#>)" "S" "string") ("f" "bcsub(" "bcsub(<#string $left_operand#>,<#string $right_operand#>,<#int $scale#>)" "S" "string") ("f" "bcsqrt(" "bcsqrt(<#string $operand#>,<#int $scale#>)" "S" "string") ("f" "bcscale(" "bcscale(<#int $scale#>)" "S" "bool") ("f" "bcpow(" "bcpow(<#string $left_operand#>,<#string $right_operand#>,<#int $scale#>)" "S" "string") ("f" "bcpowmod(" "bcpowmod(<#string $left_operand#>,<#string $right_operand#>,<#string $modulus#>,<#int $scale#>)" "S" "string") ("f" "bcompiler_write_included_filename(" "bcompiler_write_included_filename(<#resource $filehandle#>,<#string $filename#>)" "S" "bool") ("f" "bcompiler_write_header(" "bcompiler_write_header(<#resource $filehandle#>,<#string $write_ver#>)" "S" "bool") ("f" "bcompiler_write_functions_from_file(" "bcompiler_write_functions_from_file(<#resource $filehandle#>,<#string $fileName#>)" "S" "bool") ("f" "bcompiler_write_function(" "bcompiler_write_function(<#resource $filehandle#>,<#string $functionName#>)" "S" "bool") ("f" "bcompiler_write_footer(" "bcompiler_write_footer(<#resource $filehandle#>)" "S" "bool") ("f" "bcompiler_write_file(" "bcompiler_write_file(<#resource $filehandle#>,<#string $filename#>)" "S" "bool") ("f" "bcompiler_write_exe_footer(" "bcompiler_write_exe_footer(<#resource $filehandle#>,<#int $startpos#>)" "S" "bool") ("f" "bcompiler_write_constant(" "bcompiler_write_constant(<#resource $filehandle#>,<#string $constantName#>)" "S" "bool") ("f" "bcompiler_write_class(" "bcompiler_write_class(<#resource $filehandle#>,<#string $className#>,<#string $extends#>)" "S" "bool") ("f" "bcompiler_read(" "bcompiler_read(<#resource $filehandle#>)" "S" "bool") ("f" "bcompiler_parse_class(" "bcompiler_parse_class(<#string $class#>,<#string $callback#>)" "S" "bool") ("f" "bcompiler_load_exe(" "bcompiler_load_exe(<#string $filename#>)" "S" "bool") ("f" "bcompiler_load(" "bcompiler_load(<#string $filename#>)" "S" "bool") ("f" "bcmul(" "bcmul(<#string $left_operand#>,<#string $right_operand#>,<#int $scale#>)" "S" "string") ("f" "bcmod(" "bcmod(<#string $left_operand#>,<#string $modulus#>)" "S" "string") ("f" "bcdiv(" "bcdiv(<#string $left_operand#>,<#string $right_operand#>,<#int $scale#>)" "S" "string") ("f" "bccomp(" "bccomp(<#string $left_operand#>,<#string $right_operand#>,<#int $scale#>)" "S" "int") ("f" "bcadd(" "bcadd(<#string $left_operand#>,<#string $right_operand#>,<#int $scale#>)" "S" "string") ("f" "bbcode_set_flags(" "bbcode_set_flags(<#resource $bbcode_container#>,<#int $flags#>,<#int $mode#>)" "S" "bool") ("f" "bbcode_set_arg_parser(" "bbcode_set_arg_parser(<#resource $bbcode_container#>,<#resource $bbcode_arg_parser#>)" "S" "bool") ("f" "bbcode_parse(" "bbcode_parse(<#resource $bbcode_container#>,<#string $to_parse#>)" "S" "string") ("f" "bbcode_destroy(" "bbcode_destroy(<#resource $bbcode_container#>)" "S" "bool") ("f" "bbcode_create(" "bbcode_create(<#array $bbcode_initial_tags#>)" "S" "resource") ("f" "bbcode_add_smiley(" "bbcode_add_smiley(<#resource $bbcode_container#>,<#string $smiley#>,<#string $replace_by#>)" "S" "bool") ("f" "bbcode_add_element(" "bbcode_add_element(<#resource $bbcode_container#>,<#string $tag_name#>,<#array $tag_rules#>)" "S" "bool") ("f" "basename(" "basename(<#string $path#>,<#string $suffix#>)" "S" "string") ("f" "base_convert(" "base_convert(<#string $number#>,<#int $frombase#>,<#int $tobase#>)" "S" "string") ("f" "base64_encode(" "base64_encode(<#string $data#>)" "S" "string") ("f" "base64_decode(" "base64_decode(<#string $data#>,<#bool $strict#>)" "S" "string") ("f" "__autoload(" "__autoload(<#string $class#>)" "S" "void") ("f" "atanh(" "atanh(<#float $arg#>)" "S" "float") ("f" "atan(" "atan(<#float $arg#>)" "S" "float") ("f" "atan2(" "atan2(<#float $y#>,<#float $x#>)" "S" "float") ("f" "assert_options(" "assert_options(<#int $what#>,<#mixed $value#>)" "S" "mixed") ("f" "assert(" "assert(<#mixed $assertion#>,<#string $description#>)" "S" "bool") ("f" "asort(" "asort(<#array &$array#>,<#int $sort_flags#>)" "S" "bool") ("f" "asinh(" "asinh(<#float $arg#>)" "S" "float") ("f" "asin(" "asin(<#float $arg#>)" "S" "float") ("f" "arsort(" "arsort(<#array &$array#>,<#int $sort_flags#>)" "S" "bool") ("f" "array_walk_recursive(" "array_walk_recursive(<#array &$input#>,<#callable $funcname#>,<#mixed $userdata#>)" "S" "bool") ("f" "array_walk(" "array_walk(<#array &$array#>,<#callable $funcname#>,<#mixed $userdata#>)" "S" "bool") ("f" "array_values(" "array_values(<#array $input#>)" "S" "array") ("f" "array_unshift(" "array_unshift(<#array &$array#>,<#mixed $var#>,<#mixed $__args__#>)" "S" "int") ("f" "array_unique(" "array_unique(<#array $array#>,<#int $sort_flags#>)" "S" "array") ("f" "array_uintersect_uassoc(" "array_uintersect_uassoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $data_compare_func#>,<#callable $key_compare_func#>)" "S" "array") ("f" "array_uintersect_assoc(" "array_uintersect_assoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $data_compare_func#>)" "S" "array") ("f" "array_uintersect(" "array_uintersect(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $data_compare_func#>)" "S" "array") ("f" "array_udiff_uassoc(" "array_udiff_uassoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $data_compare_func#>,<#callable $key_compare_func#>)" "S" "array") ("f" "array_udiff_assoc(" "array_udiff_assoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $data_compare_func#>)" "S" "array") ("f" "array_udiff(" "array_udiff(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $data_compare_func#>)" "S" "array") ("f" "array_sum(" "array_sum(<#array $array#>)" "S" "number") ("f" "array_splice(" "array_splice(<#array &$input#>,<#int $offset#>,<#int $length#>,<#mixed $replacement#>)" "S" "array") ("f" "array_slice(" "array_slice(<#array $array#>,<#int $offset#>,<#int $length#>,<#bool $preserve_keys#>)" "S" "array") ("f" "array_shift(" "array_shift(<#array &$array#>)" "S" "mixed") ("f" "array_search(" "array_search(<#mixed $needle#>,<#array $haystack#>,<#bool $strict#>)" "S" "mixed") ("f" "array_reverse(" "array_reverse(<#array $array#>,<#bool $preserve_keys#>)" "S" "array") ("f" "array_replace_recursive(" "array_replace_recursive(<#array $array#>,<#array $array1#>,<#array $__args__#>)" "S" "array") ("f" "array_replace(" "array_replace(<#array $array#>,<#array $array1#>,<#array $__args__#>)" "S" "array") ("f" "array_reduce(" "array_reduce(<#array $input#>,<#callable $function#>,<#mixed $initial#>)" "S" "mixed") ("f" "array_rand(" "array_rand(<#array $input#>,<#int $num_req#>)" "S" "mixed") ("f" "array_push(" "array_push(<#array &$array#>,<#mixed $var#>,<#mixed $__args__#>)" "S" "int") ("f" "array_product(" "array_product(<#array $array#>)" "S" "number") ("f" "array_pop(" "array_pop(<#array &$array#>)" "S" "mixed") ("f" "array_pad(" "array_pad(<#array $input#>,<#int $pad_size#>,<#mixed $pad_value#>)" "S" "array") ("f" "array_multisort(" "array_multisort(<#array &$arr#>,<#mixed $arg#>,<#mixed $arg#>,<#mixed $__args__#>)" "S" "bool") ("f" "array_merge_recursive(" "array_merge_recursive(<#array $array1#>,<#array $__args__#>)" "S" "array") ("f" "array_merge(" "array_merge(<#array $array1#>,<#array $__args__#>)" "S" "array") ("f" "array_map(" "array_map(<#callable $callback#>,<#array $arr1#>,<#array $__args__#>)" "S" "array") ("f" "array_keys(" "array_keys(<#array $input#>,<#mixed $search_value#>,<#bool $strict#>)" "S" "array") ("f" "array_key_exists(" "array_key_exists(<#mixed $key#>,<#array $search#>)" "S" "bool") ("f" "array_intersect_ukey(" "array_intersect_ukey(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $key_compare_func#>)" "S" "array") ("f" "array_intersect_uassoc(" "array_intersect_uassoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $key_compare_func#>)" "S" "array") ("f" "array_intersect_key(" "array_intersect_key(<#array $array1#>,<#array $array2#>,<#array $__args__#>)" "S" "array") ("f" "array_intersect_assoc(" "array_intersect_assoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>)" "S" "array") ("f" "array_intersect(" "array_intersect(<#array $array1#>,<#array $array2#>,<#array $__args__#>)" "S" "array") ("f" "array_flip(" "array_flip(<#array $trans#>)" "S" "array") ("f" "array_filter(" "array_filter(<#array $input#>,<#callable $callback#>)" "S" "array") ("f" "array_fill_keys(" "array_fill_keys(<#array $keys#>,<#mixed $value#>)" "S" "array") ("f" "array_fill(" "array_fill(<#int $start_index#>,<#int $num#>,<#mixed $value#>)" "S" "array") ("f" "array_diff_ukey(" "array_diff_ukey(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $key_compare_func#>)" "S" "array") ("f" "array_diff_uassoc(" "array_diff_uassoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>,<#callable $key_compare_func#>)" "S" "array") ("f" "array_diff_key(" "array_diff_key(<#array $array1#>,<#array $array2#>,<#array $__args__#>)" "S" "array") ("f" "array_diff_assoc(" "array_diff_assoc(<#array $array1#>,<#array $array2#>,<#array $__args__#>)" "S" "array") ("f" "array_diff(" "array_diff(<#array $array1#>,<#array $array2#>,<#array $__args__#>)" "S" "array") ("f" "array_count_values(" "array_count_values(<#array $input#>)" "S" "array") ("f" "array_combine(" "array_combine(<#array $keys#>,<#array $values#>)" "S" "array") ("f" "array_column(" "array_column(<#array $input#>,<#mixed $column_key#>,<#mixed $index_key#>)" "S" "array") ("f" "array_chunk(" "array_chunk(<#array $input#>,<#int $size#>,<#bool $preserve_keys#>)" "S" "array") ("f" "array_change_key_case(" "array_change_key_case(<#array $input#>,<#int $case#>)" "S" "array") ("f" "apd_set_session(" "apd_set_session(<#int $debug_level#>)" "S" "void") ("f" "apd_set_session_trace(" "apd_set_session_trace(<#int $debug_level#>,<#string $dump_directory#>)" "S" "void") ("f" "apd_set_session_trace_socket(" "apd_set_session_trace_socket(<#string $tcp_server#>,<#int $socket_type#>,<#int $port#>,<#int $debug_level#>)" "S" "bool") ("f" "apd_set_pprof_trace(" "apd_set_pprof_trace(<#string $dump_directory#>,<#string $fragment#>)" "S" "string") ("f" "apd_get_active_symbols(" "apd_get_active_symbols(<##>)" "S" "array") ("f" "apd_echo(" "apd_echo(<#string $output#>)" "S" "bool") ("f" "apd_dump_regular_resources(" "apd_dump_regular_resources(<##>)" "S" "array") ("f" "apd_dump_persistent_resources(" "apd_dump_persistent_resources(<##>)" "S" "array") ("f" "apd_dump_function_table(" "apd_dump_function_table(<##>)" "S" "void") ("f" "apd_croak(" "apd_croak(<#string $warning#>,<#string $delimiter#>)" "S" "void") ("f" "apd_continue(" "apd_continue(<#int $debug_level#>)" "S" "bool") ("f" "apd_clunk(" "apd_clunk(<#string $warning#>,<#string $delimiter#>)" "S" "void") ("f" "apd_callstack(" "apd_callstack(<##>)" "S" "array") ("f" "apd_breakpoint(" "apd_breakpoint(<#int $debug_level#>)" "S" "bool") ("f" "apc_store(" "apc_store(<#string $key#>,<#mixed $var#>,<#int $ttl#>)" "S" "bool") ("f" "apc_sma_info(" "apc_sma_info(<#bool $limited#>)" "S" "array") ("f" "apc_load_constants(" "apc_load_constants(<#string $key#>,<#bool $case_sensitive#>)" "S" "bool") ("f" "apc_inc(" "apc_inc(<#string $key#>,<#int $step#>,<#bool &$success#>)" "S" "int") ("f" "apc_fetch(" "apc_fetch(<#mixed $key#>,<#bool &$success#>)" "S" "mixed") ("f" "apc_exists(" "apc_exists(<#mixed $keys#>)" "S" "mixed") ("f" "apc_delete(" "apc_delete(<#string $key#>)" "S" "mixed") ("f" "apc_delete_file(" "apc_delete_file(<#mixed $keys#>)" "S" "mixed") ("f" "apc_define_constants(" "apc_define_constants(<#string $key#>,<#array $constants#>,<#bool $case_sensitive#>)" "S" "bool") ("f" "apc_dec(" "apc_dec(<#string $key#>,<#int $step#>,<#bool &$success#>)" "S" "int") ("f" "apc_compile_file(" "apc_compile_file(<#string $filename#>,<#bool $atomic#>)" "S" "mixed") ("f" "apc_clear_cache(" "apc_clear_cache(<#string $cache_type#>)" "S" "bool") ("f" "apc_cas(" "apc_cas(<#string $key#>,<#int $old#>,<#int $new#>)" "S" "bool") ("f" "apc_cache_info(" "apc_cache_info(<#string $cache_type#>,<#bool $limited#>)" "S" "array") ("f" "apc_bin_loadfile(" "apc_bin_loadfile(<#string $filename#>,<#resource $context#>,<#int $flags#>)" "S" "bool") ("f" "apc_bin_load(" "apc_bin_load(<#string $data#>,<#int $flags#>)" "S" "bool") ("f" "apc_bin_dump(" "apc_bin_dump(<#array $files#>,<#array $user_vars#>)" "S" "string") ("f" "apc_bin_dumpfile(" "apc_bin_dumpfile(<#array $files#>,<#array $user_vars#>,<#string $filename#>,<#int $flags#>,<#resource $context#>)" "S" "int") ("f" "apc_add(" "apc_add(<#string $key#>,<#mixed $var#>,<#int $ttl#>)" "S" "bool") ("f" "apache_setenv(" "apache_setenv(<#string $variable#>,<#string $value#>,<#bool $walk_to_top#>)" "S" "bool") ("f" "apache_response_headers(" "apache_response_headers(<##>)" "S" "array") ("f" "apache_reset_timeout(" "apache_reset_timeout(<##>)" "S" "bool") ("f" "apache_request_headers(" "apache_request_headers(<##>)" "S" "array") ("f" "apache_note(" "apache_note(<#string $note_name#>,<#string $note_value#>)" "S" "string") ("f" "apache_lookup_uri(" "apache_lookup_uri(<#string $filename#>)" "S" "object") ("f" "apache_get_version(" "apache_get_version(<##>)" "S" "string") ("f" "apache_get_modules(" "apache_get_modules(<##>)" "S" "array") ("f" "apache_getenv(" "apache_getenv(<#string $variable#>,<#bool $walk_to_top#>)" "S" "string") ("f" "apache_child_terminate(" "apache_child_terminate(<##>)" "S" "bool") ("f" "addslashes(" "addslashes(<#string $str#>)" "S" "string") ("f" "addcslashes(" "addcslashes(<#string $str#>,<#string $charlist#>)" "S" "string") ("f" "acosh(" "acosh(<#float $arg#>)" "S" "float") ("f" "acos(" "acos(<#float $arg#>)" "S" "float") ("f" "abs(" "abs(<#mixed $number#>)" "S" "number")) ((#520# "Iterator") (#521# "Traversable") (#526# "DateTimeInterface") (#527# "DateTimeInterface") (#528# "RuntimeException") (#529# "Traversable") (#537# "RuntimeException") (#541# "Traversable") (#547# "Iterator,Countable") (#549# "ArrayAccess,Serializable") (#550# "Iterator,Countable,Serializable") (#551# "Iterator,Countable,Serializable") (#558# "SimpleXMLElement,RecursiveIterator,Countable") (#559# "Traversable") (#560# "SplType") (#561# "SplEnum") (#562# "SplType") (#563# "SplType") (#564# "SplType") (#569# "DOMCharacterData") (#570# "DOMNode") (#571# "DOMNode") (#573# "Traversable") (#577# "Traversable") (#580# "Exception") (#581# "DOMNode") (#582# "DOMNode") (#584# "DOMNode") (#585# "DOMNode") (#587# "DOMNode") (#589# "DOMNode") (#590# "DOMCharacterData") (#591# "DOMNode") (#593# "DOMText") (#594# "DOMNode") (#599# "IteratorAggregate,ArrayAccess,Serializable,Countable") (#600# "SplFileObject,SeekableIterator,RecursiveIterator") (#601# "SplFileInfo,RecursiveIterator,SeekableIterator") (#487# "RuntimeException") (#486# "RuntimeException") (#485# "Exception") (#484# "RuntimeException") (#483# "RuntimeException") (#482# "LogicException") (#481# "RuntimeException") (#480# "LogicException") (#479# "LogicException") (#478# "LogicException") (#477# "BadFunctionCallException") (#476# "LogicException") (#475# "Exception") (#610# "FilterIterator") (#611# "RecursiveIteratorIterator,OuterIterator") (#612# "RegexIterator,RecursiveIterator") (#613# "OuterIterator") (#614# "FilterIterator,OuterIterator,RecursiveIterator") (#615# "FilesystemIterator,SeekableIterator,RecursiveIterator") (#616# "CallbackFilterIterator,OuterIterator,RecursiveIterator") (#617# "CachingIterator,Countable,ArrayAccess,OuterIterator,RecursiveIterator") (#618# "ArrayIterator,RecursiveIterator") (#619# "RecursiveFilterIterator,RecursiveIterator,OuterIterator") (#620# "IteratorIterator") (#621# "Iterator") (#622# "IteratorIterator,OuterIterator") (#623# "OuterIterator") (#624# "IteratorIterator,OuterIterator") (#625# "FilesystemIterator,SeekableIterator,Countable") (#626# "IteratorIterator,OuterIterator") (#627# "DirectoryIterator,SeekableIterator") (#628# "Iterator") (#630# "SplFileInfo,SeekableIterator") (#631# "FilterIterator,OuterIterator") (#632# "IteratorIterator,OuterIterator,ArrayAccess,Countable") (#633# "ArrayAccess,SeekableIterator,Countable,Serializable") (#634# "Iterator") (#636# "ArrayAccess,SeekableIterator,Countable,Serializable") (#637# "Iterator") (#639# "OuterIterator") (#640# "Countable,Iterator,Serializable,ArrayAccess") (#642# "Iterator,ArrayAccess,Countable") (#643# "Iterator,Countable") (#644# "SplHeap,Iterator,Countable") (#645# "SplHeap,Iterator,Countable") (#646# "Iterator,Countable") (#647# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#648# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#649# "Iterator,ArrayAccess,Countable")))
)
