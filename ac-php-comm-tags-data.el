(provide 'ac-php-comm-tags-data)

(defvar ac-php-comm-tags-data-list
  '
(((#2="Imagick" (("m" "writeImagesFile" "resource $filehandle" "S" "bool" "Imagick" "public") ("m" "writeImages" "string $filename,bool $adjoin" "S" "bool" "Imagick" "public") ("m" "writeImageFile" "resource $filehandle" "S" "bool" "Imagick" "public") ("m" "writeImage" "string $filename = NULL" "S" "bool" "Imagick" "public") ("m" "whiteThresholdImage" "mixed $threshold" "S" "bool" "Imagick" "public") ("m" "waveImage" "float $amplitude,float $length" "S" "bool" "Imagick" "public") ("m" "vignetteImage" "float $blackPoint,float $whitePoint,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "valid" #1="" "S" "bool" "Imagick" "public") ("m" "unsharpMaskImage" "float $radius,float $sigma,float $amount,float $threshold,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "uniqueImageColors" #1# "S" "bool" "Imagick" "public") ("m" "trimImage" "float $fuzz" "S" "bool" "Imagick" "public") ("m" "transverseImage" #1# "S" "bool" "Imagick" "public") ("m" "transposeImage" #1# "S" "bool" "Imagick" "public") ("m" "transparentPaintImage" "mixed $target,float $alpha,float $fuzz,bool $invert" "S" "bool" "Imagick" "public") ("m" "transformImageColorspace" "int $colorspace" "S" "bool" "Imagick" "public") ("m" "transformImage" "string $crop,string $geometry" "S" "Imagick" "Imagick" "public") ("m" "__toString" #1# "S" "string" "Imagick" "public") ("m" "tintImage" "mixed $tint,mixed $opacity" "S" "bool" "Imagick" "public") ("m" "thumbnailImage" "int $columns,int $rows,bool $bestfit = false,bool $fill = false" "S" "bool" "Imagick" "public") ("m" "thresholdImage" "float $threshold,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "textureImage" "Imagick $texture_wand" "S" "bool" "Imagick" "public") ("m" "swirlImage" "float $degrees" "S" "bool" "Imagick" "public") ("m" "subImageMatch" "Imagick $Imagick,array &$offset,float &$similarity" "S" "Imagick" "Imagick" "public") ("m" "stripImage" #1# "S" "bool" "Imagick" "public") ("m" "stereoImage" "Imagick $offset_wand" "S" "bool" "Imagick" "public") ("m" "steganoImage" "Imagick $watermark_wand,int $offset" "S" "Imagick" "Imagick" "public") ("m" "statisticImage" "int $type,int $width,int $height,string $CHANNEL = Imagick::CHANNEL_DEFAULT" "S" "void" "Imagick" "public") ("m" "spreadImage" "float $radius" "S" "bool" "Imagick" "public") ("m" "spliceImage" "int $width,int $height,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "sparseColorImage" "int $SPARSE_METHOD,array $arguments,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "solarizeImage" "int $threshold" "S" "bool" "Imagick" "public") ("m" "smushImages" "string $stack,string $offset" "S" "Imagick" "Imagick" "public") ("m" "sketchImage" "float $radius,float $sigma,float $angle" "S" "bool" "Imagick" "public") ("m" "sigmoidalContrastImage" "bool $sharpen,float $alpha,float $beta,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "shearImage" "mixed $background,float $x_shear,float $y_shear" "S" "bool" "Imagick" "public") ("m" "shaveImage" "int $columns,int $rows" "S" "bool" "Imagick" "public") ("m" "sharpenImage" "float $radius,float $sigma,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "shadowImage" "float $opacity,float $sigma,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "shadeImage" "bool $gray,float $azimuth,float $elevation" "S" "bool" "Imagick" "public") ("m" "setType" "int $image_type" "S" "bool" "Imagick" "public") ("m" "setSizeOffset" "int $columns,int $rows,int $offset" "S" "bool" "Imagick" "public") ("m" "setSize" "int $columns,int $rows" "S" "bool" "Imagick" "public") ("m" "setSamplingFactors" "array $factors" "S" "bool" "Imagick" "public") ("m" "setResourceLimit" "int $type,int $limit" "S" "bool" "Imagick" "public") ("m" "setResolution" "float $x_resolution,float $y_resolution" "S" "bool" "Imagick" "public") ("m" "setRegistry" "string $key,string $value" "S" "void" "Imagick" "public") ("m" "setProgressMonitor" "callable $callback" "S" "void" "Imagick" "public") ("m" "setPointSize" "float $point_size" "S" "bool" "Imagick" "public") ("m" "setPage" "int $width,int $height,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "setOption" "string $key,string $value" "S" "bool" "Imagick" "public") ("m" "setLastIterator" #1# "S" "bool" "Imagick" "public") ("m" "setIteratorIndex" "int $index" "S" "bool" "Imagick" "public") ("m" "setInterlaceScheme" "int $interlace_scheme" "S" "bool" "Imagick" "public") ("m" "setImageWhitePoint" "float $x,float $y" "S" "bool" "Imagick" "public") ("m" "setImageVirtualPixelMethod" "int $method" "S" "bool" "Imagick" "public") ("m" "setImageUnits" "int $units" "S" "bool" "Imagick" "public") ("m" "setImageType" "int $image_type" "S" "bool" "Imagick" "public") ("m" "setImageTicksPerSecond" "int $ticks_per_second" "S" "bool" "Imagick" "public") ("m" "setImageScene" "int $scene" "S" "bool" "Imagick" "public") ("m" "setImageResolution" "float $x_resolution,float $y_resolution" "S" "bool" "Imagick" "public") ("m" "setImageRenderingIntent" "int $rendering_intent" "S" "bool" "Imagick" "public") ("m" "setImageRedPrimary" "float $x,float $y" "S" "bool" "Imagick" "public") ("m" "setImageProperty" "string $name,string $value" "S" "bool" "Imagick" "public") ("m" "setImageProfile" "string $name,string $profile" "S" "bool" "Imagick" "public") ("m" "setImagePage" "int $width,int $height,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "setImageOrientation" "int $orientation" "S" "bool" "Imagick" "public") ("m" "setImageOpacity" "float $opacity" "S" "bool" "Imagick" "public") ("m" "setImageMatteColor" "mixed $matte" "S" "bool" "Imagick" "public") ("m" "setImageMatte" "bool $matte" "S" "bool" "Imagick" "public") ("m" "setImageIterations" "int $iterations" "S" "bool" "Imagick" "public") ("m" "setImageInterpolateMethod" "int $method" "S" "bool" "Imagick" "public") ("m" "setImageInterlaceScheme" "int $interlace_scheme" "S" "bool" "Imagick" "public") ("m" "setImageIndex" "int $index" "S" "bool" "Imagick" "public") ("m" "setImageGreenPrimary" "float $x,float $y" "S" "bool" "Imagick" "public") ("m" "setImageGravity" "int $gravity" "S" "bool" "Imagick" "public") ("m" "setImageGamma" "float $gamma" "S" "bool" "Imagick" "public") ("m" "setImageFormat" "string $format" "S" "bool" "Imagick" "public") ("m" "setImageFilename" "string $filename" "S" "bool" "Imagick" "public") ("m" "setImageExtent" "int $columns,int $rows" "S" "bool" "Imagick" "public") ("m" "setImageDispose" "int $dispose" "S" "bool" "Imagick" "public") ("m" "setImageDepth" "int $depth" "S" "bool" "Imagick" "public") ("m" "setImageDelay" "int $delay" "S" "bool" "Imagick" "public") ("m" "setImageCompressionQuality" "int $quality" "S" "bool" "Imagick" "public") ("m" "setImageCompression" "int $compression" "S" "bool" "Imagick" "public") ("m" "setImageCompose" "int $compose" "S" "bool" "Imagick" "public") ("m" "setImageColorspace" "int $colorspace" "S" "bool" "Imagick" "public") ("m" "setImageColormapColor" "int $index,ImagickPixel $color" "S" "bool" "Imagick" "public") ("m" "setImageClipMask" "Imagick $clip_mask" "S" "bool" "Imagick" "public") ("m" "setImageChannelDepth" "int $channel,int $depth" "S" "bool" "Imagick" "public") ("m" "setImageBorderColor" "mixed $border" "S" "bool" "Imagick" "public") ("m" "setImageBluePrimary" "float $x,float $y" "S" "bool" "Imagick" "public") ("m" "setImageBiasQuantum" "string $bias" "S" "void" "Imagick" "public") ("m" "setImageBias" "float $bias" "S" "bool" "Imagick" "public") ("m" "setImageBackgroundColor" "mixed $background" "S" "bool" "Imagick" "public") ("m" "setImageAttribute" "string $key,string $value" "S" "void" "Imagick" "public") ("m" "setImageArtifact" "string $artifact,string $value" "S" "bool" "Imagick" "public") ("m" "setImageAlphaChannel" "int $mode" "S" "bool" "Imagick" "public") ("m" "setImage" "Imagick $replace" "S" "bool" "Imagick" "public") ("m" "setGravity" "int $gravity" "S" "bool" "Imagick" "public") ("m" "setFormat" "string $format" "S" "bool" "Imagick" "public") ("m" "setFont" "string $font" "S" "bool" "Imagick" "public") ("m" "setFirstIterator" #1# "S" "bool" "Imagick" "public") ("m" "setFilename" "string $filename" "S" "bool" "Imagick" "public") ("m" "setCompressionQuality" "int $quality" "S" "bool" "Imagick" "public") ("m" "setCompression" "int $compression" "S" "bool" "Imagick" "public") ("m" "setColorspace" "int $COLORSPACE" "S" "bool" "Imagick" "public") ("m" "setBackgroundColor" "mixed $background" "S" "bool" "Imagick" "public") ("m" "sepiaToneImage" "float $threshold" "S" "bool" "Imagick" "public") ("m" "separateImageChannel" "int $channel" "S" "bool" "Imagick" "public") ("m" "selectiveBlurImage" "float $radius,float $sigma,float $threshold,int $CHANNEL" "S" "void" "Imagick" "public") ("m" "segmentImage" "int $COLORSPACE,float $cluster_threshold,float $smooth_threshold,bool $verbose = false" "S" "bool" "Imagick" "public") ("m" "scaleImage" "int $cols,int $rows,bool $bestfit = false" "S" "bool" "Imagick" "public") ("m" "sampleImage" "int $columns,int $rows" "S" "bool" "Imagick" "public") ("m" "roundCorners" "float $x_rounding,float $y_rounding,float $stroke_width = 10,float $displace = 5,float $size_correction = -6" "S" "bool" "Imagick" "public") ("m" "rotationalBlurImage" "string $angle,string $CHANNEL = Imagick::CHANNEL_DEFAULT" "S" "void" "Imagick" "public") ("m" "rotateImage" "mixed $background,float $degrees" "S" "bool" "Imagick" "public") ("m" "rollImage" "int $x,int $y" "S" "bool" "Imagick" "public") ("m" "resizeImage" "int $columns,int $rows,int $filter,float $blur,bool $bestfit = false" "S" "bool" "Imagick" "public") ("m" "resetImagePage" "string $page" "S" "bool" "Imagick" "public") ("m" "resampleImage" "float $x_resolution,float $y_resolution,int $filter,float $blur" "S" "bool" "Imagick" "public") ("m" "render" #1# "S" "bool" "Imagick" "public") ("m" "removeImageProfile" "string $name" "S" "string" "Imagick" "public") ("m" "removeImage" #1# "S" "bool" "Imagick" "public") ("m" "remapImage" "Imagick $replacement,int $DITHER" "S" "bool" "Imagick" "public") ("m" "reduceNoiseImage" "float $radius" "S" "bool" "Imagick" "public") ("m" "recolorImage" "array $matrix" "S" "bool" "Imagick" "public") ("m" "readImages" "string $filenames" "S" "Imagick" "Imagick" "public") ("m" "readImageFile" "resource $filehandle,string $fileName = null" "S" "bool" "Imagick" "public") ("m" "readImageBlob" "string $image,string $filename" "S" "bool" "Imagick" "public") ("m" "readImage" "string $filename" "S" "bool" "Imagick" "public") ("m" "randomThresholdImage" "float $low,float $high,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "raiseImage" "int $width,int $height,int $x,int $y,bool $raise" "S" "bool" "Imagick" "public") ("m" "radialBlurImage" "float $angle,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "queryFormats" "string $pattern = \"*\"" "S" "array" "Imagick" "public") ("m" "queryFonts" "string $pattern = \"*\"" "S" "array" "Imagick" "public") ("m" "queryFontMetrics" "ImagickDraw $properties,string $text,bool $multiline" "S" "array" "Imagick" "public") ("m" "quantizeImages" "int $numberColors,int $colorspace,int $treedepth,bool $dither,bool $measureError" "S" "bool" "Imagick" "public") ("m" "quantizeImage" "int $numberColors,int $colorspace,int $treedepth,bool $dither,bool $measureError" "S" "bool" "Imagick" "public") ("m" "profileImage" "string $name,string $profile" "S" "bool" "Imagick" "public") ("m" "previousImage" #1# "S" "bool" "Imagick" "public") ("m" "previewImages" "int $preview" "S" "bool" "Imagick" "public") ("m" "posterizeImage" "int $levels,bool $dither" "S" "bool" "Imagick" "public") ("m" "polaroidImage" "ImagickDraw $properties,float $angle" "S" "bool" "Imagick" "public") ("m" "pingImageFile" "resource $filehandle,string $fileName" "S" "bool" "Imagick" "public") ("m" "pingImageBlob" "string $image" "S" "bool" "Imagick" "public") ("m" "pingImage" "string $filename" "S" "bool" "Imagick" "public") ("m" "paintTransparentImage" "mixed $target,float $alpha,float $fuzz" "S" "bool" "Imagick" "public") ("m" "paintOpaqueImage" "mixed $target,mixed $fill,float $fuzz,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "paintFloodfillImage" "mixed $fill,float $fuzz,mixed $bordercolor,int $x,int $y,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "orderedPosterizeImage" "string $threshold_map,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "optimizeImageLayers" #1# "S" "bool" "Imagick" "public") ("m" "opaquePaintImage" "mixed $target,mixed $fill,float $fuzz,bool $invert,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "oilPaintImage" "float $radius" "S" "bool" "Imagick" "public") ("m" "normalizeImage" "int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "nextImage" #1# "S" "bool" "Imagick" "public") ("m" "newPseudoImage" "int $columns,int $rows,string $pseudoString" "S" "bool" "Imagick" "public") ("m" "newImage" "int $cols,int $rows,mixed $background,string $format" "S" "bool" "Imagick" "public") ("m" "negateImage" "bool $gray,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "motionBlurImage" "float $radius,float $sigma,float $angle,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "mosaicImages" #1# "S" "Imagick" "Imagick" "public") ("m" "morphology" "int $morphologyMethod,int $iterations,ImagickKernel $ImagickKernel,string $CHANNEL" "S" "void" "Imagick" "public") ("m" "morphImages" "int $number_frames" "S" "Imagick" "Imagick" "public") ("m" "montageImage" "ImagickDraw $draw,string $tile_geometry,string $thumbnail_geometry,int $mode,string $frame" "S" "Imagick" "Imagick" "public") ("m" "modulateImage" "float $brightness,float $saturation,float $hue" "S" "bool" "Imagick" "public") ("m" "minifyImage" #1# "S" "bool" "Imagick" "public") ("m" "mergeImageLayers" "int $layer_method" "S" "Imagick" "Imagick" "public") ("m" "medianFilterImage" "float $radius" "S" "bool" "Imagick" "public") ("m" "matteFloodfillImage" "float $alpha,float $fuzz,mixed $bordercolor,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "mapImage" "Imagick $map,bool $dither" "S" "bool" "Imagick" "public") ("m" "magnifyImage" #1# "S" "bool" "Imagick" "public") ("m" "listRegistry" #1# "S" "array" "Imagick" "public") ("m" "liquidRescaleImage" "int $width,int $height,float $delta_x,float $rigidity" "S" "bool" "Imagick" "public") ("m" "linearStretchImage" "float $blackPoint,float $whitePoint" "S" "bool" "Imagick" "public") ("m" "levelImage" "float $blackPoint,float $gamma,float $whitePoint,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "labelImage" "string $label" "S" "bool" "Imagick" "public") ("m" "inverseFourierTransformImage" "string $complement,string $magnitude" "S" "void" "Imagick" "public") ("m" "importImagePixels" "int $x,int $y,int $width,int $height,string $map,int $storage,array $pixels" "S" "bool" "Imagick" "public") ("m" "implodeImage" "float $radius" "S" "bool" "Imagick" "public") ("m" "identifyImage" "bool $appendRawOutput = false" "S" "array" "Imagick" "public") ("m" "identifyFormat" "string $embedText" "S" "string" "Imagick" "public") ("m" "hasPreviousImage" #1# "S" "bool" "Imagick" "public") ("m" "hasNextImage" #1# "S" "bool" "Imagick" "public") ("m" "haldClutImage" "Imagick $clut,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "getVersion" #1# "S" "array" "Imagick" "public") ("m" "getSizeOffset" #1# "S" "int" "Imagick" "public") ("m" "getSize" #1# "S" "array" "Imagick" "public") ("m" "getSamplingFactors" #1# "S" "array" "Imagick" "public") ("m" "getResourceLimit" "int $type" "S" "int" "Imagick" "public") ("m" "getResource" "int $type" "S" "int" "Imagick" "public") ("m" "getReleaseDate" #1# "S" "string" "Imagick" "public") ("m" "getRegistry" "string $key" "S" "string" "Imagick" "public") ("m" "getQuantumRange" #1# "S" "array" "Imagick" "public") ("m" "getQuantumDepth" #1# "S" "array" "Imagick" "public") ("m" "getQuantum" #1# "S" "int" "Imagick" "public") ("m" "getPointSize" #1# "S" "float" "Imagick" "public") ("m" "getPixelRegionIterator" "int $x,int $y,int $columns,int $rows" "S" "ImagickPixelIterator" "Imagick" "public") ("m" "getPixelIterator" #1# "S" "ImagickPixelIterator" "Imagick" "public") ("m" "getPage" #1# "S" "array" "Imagick" "public") ("m" "getPackageName" #1# "S" "string" "Imagick" "public") ("m" "getOption" "string $key" "S" "string" "Imagick" "public") ("m" "getNumberImages" #1# "S" "int" "Imagick" "public") ("m" "getIteratorIndex" #1# "S" "int" "Imagick" "public") ("m" "getInterlaceScheme" #1# "S" "int" "Imagick" "public") ("m" "getImageWidth" #1# "S" "int" "Imagick" "public") ("m" "getImageWhitePoint" #1# "S" "array" "Imagick" "public") ("m" "getImageVirtualPixelMethod" #1# "S" "int" "Imagick" "public") ("m" "getImageUnits" #1# "S" "int" "Imagick" "public") ("m" "getImageType" #1# "S" "int" "Imagick" "public") ("m" "getImageTotalInkDensity" #1# "S" "float" "Imagick" "public") ("m" "getImageTicksPerSecond" #1# "S" "int" "Imagick" "public") ("m" "getImageSize" #1# "S" "int" "Imagick" "public") ("m" "getImageSignature" #1# "S" "string" "Imagick" "public") ("m" "getImageScene" #1# "S" "int" "Imagick" "public") ("m" "getImagesBlob" #1# "S" "string" "Imagick" "public") ("m" "getImageResolution" #1# "S" "array" "Imagick" "public") ("m" "getImageRenderingIntent" #1# "S" "int" "Imagick" "public") ("m" "getImageRegion" "int $width,int $height,int $x,int $y" "S" "Imagick" "Imagick" "public") ("m" "getImageRedPrimary" #1# "S" "array" "Imagick" "public") ("m" "getImageProperty" "string $name" "S" "string" "Imagick" "public") ("m" "getImageProperties" "string $pattern = \"*\",bool $only_names = true" "S" "array" "Imagick" "public") ("m" "getImageProfiles" "string $pattern = \"*\",bool $only_names = true" "S" "array" "Imagick" "public") ("m" "getImageProfile" "string $name" "S" "string" "Imagick" "public") ("m" "getImagePixelColor" "int $x,int $y" "S" "ImagickPixel" "Imagick" "public") ("m" "getImagePage" #1# "S" "array" "Imagick" "public") ("m" "getImageOrientation" #1# "S" "int" "Imagick" "public") ("m" "getImageMimeType" #1# "S" "string" "Imagick" "public") ("m" "getImageMatteColor" #1# "S" "ImagickPixel" "Imagick" "public") ("m" "getImageMatte" #1# "S" "bool" "Imagick" "public") ("m" "getImageMagickLicense" #1# "S" "string" "Imagick" "public") ("m" "getImageLength" #1# "S" "int" "Imagick" "public") ("m" "getImageIterations" #1# "S" "int" "Imagick" "public") ("m" "getImageInterpolateMethod" #1# "S" "int" "Imagick" "public") ("m" "getImageInterlaceScheme" #1# "S" "int" "Imagick" "public") ("m" "getImageIndex" #1# "S" "int" "Imagick" "public") ("m" "getImageHistogram" #1# "S" "array" "Imagick" "public") ("m" "getImageHeight" #1# "S" "int" "Imagick" "public") ("m" "getImageGreenPrimary" #1# "S" "array" "Imagick" "public") ("m" "getImageGravity" #1# "S" "int" "Imagick" "public") ("m" "getImageGeometry" #1# "S" "array" "Imagick" "public") ("m" "getImageGamma" #1# "S" "float" "Imagick" "public") ("m" "getImageFormat" #1# "S" "string" "Imagick" "public") ("m" "getImageFilename" #1# "S" "string" "Imagick" "public") ("m" "getImageExtrema" #1# "S" "array" "Imagick" "public") ("m" "getImageDistortion" "MagickWand $reference,int $metric" "S" "float" "Imagick" "public") ("m" "getImageDispose" #1# "S" "int" "Imagick" "public") ("m" "getImageDepth" #1# "S" "int" "Imagick" "public") ("m" "getImageDelay" #1# "S" "int" "Imagick" "public") ("m" "getImageCompressionQuality" #1# "S" "int" "Imagick" "public") ("m" "getImageCompression" #1# "S" "int" "Imagick" "public") ("m" "getImageCompose" #1# "S" "int" "Imagick" "public") ("m" "getImageColorspace" #1# "S" "int" "Imagick" "public") ("m" "getImageColors" #1# "S" "int" "Imagick" "public") ("m" "getImageColormapColor" "int $index" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageClipMask" #1# "S" "Imagick" "Imagick" "public") ("m" "getImageChannelStatistics" #1# "S" "array" "Imagick" "public") ("m" "getImageChannelRange" "int $channel" "S" "array" "Imagick" "public") ("m" "getImageChannelMean" "int $channel" "S" "array" "Imagick" "public") ("m" "getImageChannelKurtosis" "int $channel = Imagick::CHANNEL_DEFAULT" "S" "array" "Imagick" "public") ("m" "getImageChannelExtrema" "int $channel" "S" "array" "Imagick" "public") ("m" "getImageChannelDistortions" "Imagick $reference,int $metric,int $channel = Imagick::CHANNEL_DEFAULT" "S" "float" "Imagick" "public") ("m" "getImageChannelDistortion" "Imagick $reference,int $channel,int $metric" "S" "float" "Imagick" "public") ("m" "getImageChannelDepth" "int $channel" "S" "int" "Imagick" "public") ("m" "getImageBorderColor" #1# "S" "ImagickPixel" "Imagick" "public") ("m" "getImageBluePrimary" #1# "S" "array" "Imagick" "public") ("m" "getImageBlob" #1# "S" "string" "Imagick" "public") ("m" "getImageBackgroundColor" #1# "S" "ImagickPixel" "Imagick" "public") ("m" "getImageAttribute" "string $key" "S" "string" "Imagick" "public") ("m" "getImageArtifact" "string $artifact" "S" "string" "Imagick" "public") ("m" "getImageAlphaChannel" #1# "S" "int" "Imagick" "public") ("m" "getImage" #1# "S" "Imagick" "Imagick" "public") ("m" "getHomeURL" #1# "S" "string" "Imagick" "public") ("m" "getGravity" #1# "S" "int" "Imagick" "public") ("m" "getFormat" #1# "S" "string" "Imagick" "public") ("m" "getFont" #1# "S" "string" "Imagick" "public") ("m" "getFilename" #1# "S" "string" "Imagick" "public") ("m" "getCopyright" #1# "S" "string" "Imagick" "public") ("m" "getCompressionQuality" #1# "S" "int" "Imagick" "public") ("m" "getCompression" #1# "S" "int" "Imagick" "public") ("m" "getColorspace" #1# "S" "int" "Imagick" "public") ("m" "gaussianBlurImage" "float $radius,float $sigma,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "gammaImage" "float $gamma,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "fxImage" "string $expression,int $channel = Imagick::CHANNEL_ALL" "S" "Imagick" "Imagick" "public") ("m" "functionImage" "int $function,array $arguments,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "frameImage" "mixed $matte_color,int $width,int $height,int $inner_bevel,int $outer_bevel" "S" "bool" "Imagick" "public") ("m" "forwardFourierTransformimage" "bool $magnitude" "S" "void" "Imagick" "public") ("m" "flopImage" #1# "S" "bool" "Imagick" "public") ("m" "floodFillPaintImage" "mixed $fill,float $fuzz,mixed $target,int $x,int $y,bool $invert,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "flipImage" #1# "S" "bool" "Imagick" "public") ("m" "flattenImages" #1# "S" "Imagick" "Imagick" "public") ("m" "filter" "ImagickKernel $ImagickKernel,int $CHANNEL = Imagick::CHANNEL_DEFAULT" "S" "void" "Imagick" "public") ("m" "extentImage" "int $width,int $height,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "exportImagePixels" "int $x,int $y,int $width,int $height,string $map,int $STORAGE" "S" "array" "Imagick" "public") ("m" "evaluateImage" "int $op,float $constant,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "equalizeImage" #1# "S" "bool" "Imagick" "public") ("m" "enhanceImage" #1# "S" "bool" "Imagick" "public") ("m" "encipherImage" "string $passphrase" "S" "bool" "Imagick" "public") ("m" "embossImage" "float $radius,float $sigma" "S" "bool" "Imagick" "public") ("m" "edgeImage" "float $radius" "S" "bool" "Imagick" "public") ("m" "drawImage" "ImagickDraw $draw" "S" "bool" "Imagick" "public") ("m" "distortImage" "int $method,array $arguments,bool $bestfit" "S" "bool" "Imagick" "public") ("m" "displayImages" "string $servername" "S" "bool" "Imagick" "public") ("m" "displayImage" "string $servername" "S" "bool" "Imagick" "public") ("m" "destroy" #1# "S" "bool" "Imagick" "public") ("m" "despeckleImage" #1# "S" "bool" "Imagick" "public") ("m" "deskewImage" "float $threshold" "S" "bool" "Imagick" "public") ("m" "deleteImageProperty" "string $name" "S" "void" "Imagick" "public") ("m" "deleteImageArtifact" "string $artifact" "S" "bool" "Imagick" "public") ("m" "deconstructImages" #1# "S" "Imagick" "Imagick" "public") ("m" "decipherImage" "string $passphrase" "S" "bool" "Imagick" "public") ("m" "cycleColormapImage" "int $displace" "S" "bool" "Imagick" "public") ("m" "current" #1# "S" "Imagick" "Imagick" "public") ("m" "cropThumbnailImage" "int $width,int $height" "S" "bool" "Imagick" "public") ("m" "cropImage" "int $width,int $height,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "count" "string $mode" "S" "void" "Imagick" "public") ("m" "convolveImage" "array $kernel,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "contrastStretchImage" "float $black_point,float $white_point,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "contrastImage" "bool $sharpen" "S" "bool" "Imagick" "public") ("m" "__construct" "mixed $files" #357="S" "void" "Imagick" "public") ("m" "compositeImage" "Imagick $composite_object,int $composite,int $x,int $y,int $channel = Imagick::CHANNEL_ALL" "S" "bool" "Imagick" "public") ("m" "compareImages" "Imagick $compare,int $metric" "S" "array" "Imagick" "public") ("m" "compareImageLayers" "int $method" "S" "Imagick" "Imagick" "public") ("m" "compareImageChannels" "Imagick $image,int $channelType,int $metricType" "S" "array" "Imagick" "public") ("m" "commentImage" "string $comment" "S" "bool" "Imagick" "public") ("m" "combineImages" "int $channelType" "S" "Imagick" "Imagick" "public") ("m" "colorMatrixImage" "string $color_matrix = Imagick::CHANNEL_DEFAULT" "S" "void" "Imagick" "public") ("m" "colorizeImage" "mixed $colorize,mixed $opacity" "S" "bool" "Imagick" "public") ("m" "colorFloodfillImage" "mixed $fill,float $fuzz,mixed $bordercolor,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "coalesceImages" #1# "S" "Imagick" "Imagick" "public") ("m" "clutImage" "Imagick $lookup_table,float $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "clone_" #1# "S" "Imagick" "Imagick" "public") ("m" "clipPathImage" "string $pathname,bool $inside" "S" "bool" "Imagick" "public") ("m" "clipImagePath" "string $pathname,string $inside" "S" "void" "Imagick" "public") ("m" "clipImage" #1# "S" "bool" "Imagick" "public") ("m" "clear" #1# "S" "bool" "Imagick" "public") ("m" "clampImage" "string $CHANNEL = Imagick::CHANNEL_DEFAULT" "S" "void" "Imagick" "public") ("m" "chopImage" "int $width,int $height,int $x,int $y" "S" "bool" "Imagick" "public") ("m" "charcoalImage" "float $radius,float $sigma" "S" "bool" "Imagick" "public") ("m" "brightnessContrastImage" "string $brightness,string $contrast,string $CHANNEL = Imagick::CHANNEL_DEFAULT" "S" "void" "Imagick" "public") ("m" "borderImage" "mixed $bordercolor,int $width,int $height" "S" "bool" "Imagick" "public") ("m" "blurImage" "float $radius,float $sigma,int $channel" "S" "bool" "Imagick" "public") ("m" "blueShiftImage" "float $factor = 1.5" "S" "void" "Imagick" "public") ("m" "blackThresholdImage" "mixed $threshold" "S" "bool" "Imagick" "public") ("m" "averageImages" #1# "S" "Imagick" "Imagick" "public") ("m" "autoLevelImage" "string $CHANNEL = Imagick::CHANNEL_DEFAULT" "S" "void" "Imagick" "public") ("m" "appendImages" "bool $stack = false" "S" "Imagick" "Imagick" "public") ("m" "annotateImage" "ImagickDraw $draw_settings,float $x,float $y,float $angle,string $text" "S" "bool" "Imagick" "public") ("m" "animateImages" "string $x_server" "S" "bool" "Imagick" "public") ("m" "affineTransformImage" "ImagickDraw $matrix" "S" "bool" "Imagick" "public") ("m" "addNoiseImage" "int $noise_type,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "addImage" "Imagick $source" "S" "bool" "Imagick" "public") ("m" "adaptiveThresholdImage" "int $width,int $height,int $offset" "S" "bool" "Imagick" "public") ("m" "adaptiveSharpenImage" "float $radius,float $sigma,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" "Imagick" "public") ("m" "adaptiveResizeImage" "int $columns,int $rows,bool $bestfit = false" "S" "bool" "Imagick" "public") ("m" "adaptiveBlurImage" "float $radius,float $sigma,int $channel = Imagick::CHANNEL_DEFAULT" "S" "bool" #2# "public"))) (#4="DatePeriod" (("m" "__construct" "string $isostr,int $options" #356="S" "void" "DatePeriod" "public") ("m" "__construct" "DateTimeInterface $start,DateInterval $interval,DateTimeInterface $end,int $options" "S" "void" "DatePeriod" "public") ("m" "__construct" "DateTimeInterface $start,DateInterval $interval,int $recurrences,int $options" "S" "void" "DatePeriod" "public") ("d" #3="EXCLUDE_START_DATE" #3# "S" "integer" #4# "public"))) (#5="DateInterval" (("m" "format" "string $format" "S" "string" "DateInterval" "public") ("m" "createFromDateString" "string $time" "S" "DateInterval" "DateInterval" "public") ("m" "__construct" "string $interval_spec" #355="S" "void" "DateInterval" "public") ("p" "days" #1# "S" "mixed" "DateInterval" "public") ("p" "invert" #1# "S" "integer" "DateInterval" "public") ("p" "s" #1# "S" "integer" "DateInterval" "public") ("p" "i" #1# "S" "integer" "DateInterval" "public") ("p" "h" #1# "S" "integer" "DateInterval" "public") ("p" "d" #1# "S" "integer" "DateInterval" "public") ("p" "m" #1# "S" "integer" "DateInterval" "public") ("p" "y" #1# "S" "integer" #5# "public"))) (#20="DateTimeZone" (("m" "listIdentifiers" "int $what = DateTimeZone::ALL,string $country = NULL" "S" "array" "DateTimeZone" "public") ("m" "listAbbreviations" #1# "S" "array" "DateTimeZone" "public") ("m" "getTransitions" "int $timestamp_begin,int $timestamp_end" "S" "array" "DateTimeZone" "public") ("m" "getOffset" "DateTime $datetime" "S" "int" "DateTimeZone" "public") ("m" "getName" #1# "S" "string" "DateTimeZone" "public") ("m" "getLocation" #1# "S" "array" "DateTimeZone" "public") ("m" "__construct" "string $timezone" #354="S" "void" "DateTimeZone" "public") ("d" #6="PER_COUNTRY" #6# "S" "integer" "DateTimeZone" "public") ("d" #7="ALL_WITH_BC" #7# "S" "integer" "DateTimeZone" "public") ("d" #8="ALL" #8# "S" "integer" "DateTimeZone" "public") ("d" #9="UTC" #9# "S" "integer" "DateTimeZone" "public") ("d" #10="PACIFIC" #10# "S" "integer" "DateTimeZone" "public") ("d" #11="INDIAN" #11# "S" "integer" "DateTimeZone" "public") ("d" #12="EUROPE" #12# "S" "integer" "DateTimeZone" "public") ("d" #13="AUSTRALIA" #13# "S" "integer" "DateTimeZone" "public") ("d" #14="ATLANTIC" #14# "S" "integer" "DateTimeZone" "public") ("d" #15="ASIA" #15# "S" "integer" "DateTimeZone" "public") ("d" #16="ARCTIC" #16# "S" "integer" "DateTimeZone" "public") ("d" #17="ANTARCTICA" #17# "S" "integer" "DateTimeZone" "public") ("d" #18="AMERICA" #18# "S" "integer" "DateTimeZone" "public") ("d" #19="AFRICA" #19# "S" "integer" #20# "public"))) (#21="DateTimeInterface" (("m" "__wakeup" #1# "S" "void" "DateTimeInterface" "public") ("m" "getTimezone" #1# "S" "DateTimeZone" "DateTimeInterface" "public") ("m" "getTimestamp" #1# "S" "int" "DateTimeInterface" "public") ("m" "getOffset" #1# "S" "int" "DateTimeInterface" "public") ("m" "format" "string $format" "S" "string" "DateTimeInterface" "public") ("m" "diff" "DateTimeInterface $datetime2,bool $absolute = false" "S" "DateInterval" #21# "public"))) (#22="DateTimeImmutable" (("m" "__wakeup" #1# "S" "void" "DateTimeImmutable" "public") ("m" "getTimezone" #1# "S" "DateTimeZone" "DateTimeImmutable" "public") ("m" "getTimestamp" #1# "S" "int" "DateTimeImmutable" "public") ("m" "getOffset" #1# "S" "int" "DateTimeImmutable" "public") ("m" "format" "string $format" "S" "string" "DateTimeImmutable" "public") ("m" "diff" "DateTimeInterface $datetime2,bool $absolute = false" "S" "DateInterval" "DateTimeImmutable" "public") ("m" "sub" "DateInterval $interval" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTimezone" "DateTimeZone $timezone" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTimestamp" "int $unixtimestamp" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTime" "int $hour,int $minute,int $second = 0" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setISODate" "int $year,int $week,int $day = 1" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setDate" "int $year,int $month,int $day" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "__set_state" "array $array" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "modify" "string $modify" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "getLastErrors" #1# "S" "array" "DateTimeImmutable" "public") ("m" "createFromMutable" "DateTime $datetime" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "createFromFormat" "string $format,string $time,DateTimeZone $timezone" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "add" "DateInterval $interval" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "__construct" "string $time = \"now\",DateTimeZone $timezone = NULL" #353="S" "void" #22# "public"))) (#34="DateTime" (("m" "__wakeup" #1# "S" "void" "DateTime" "public") ("m" "getTimezone" #1# "S" "DateTimeZone" "DateTime" "public") ("m" "getTimestamp" #1# "S" "int" "DateTime" "public") ("m" "getOffset" #1# "S" "int" "DateTime" "public") ("m" "format" "string $format" "S" "string" "DateTime" "public") ("m" "diff" "DateTimeInterface $datetime2,bool $absolute = false" "S" "DateInterval" "DateTime" "public") ("m" "sub" "DateInterval $interval" "S" "DateTime" "DateTime" "public") ("m" "setTimezone" "DateTimeZone $timezone" "S" "DateTime" "DateTime" "public") ("m" "setTimestamp" "int $unixtimestamp" "S" "DateTime" "DateTime" "public") ("m" "setTime" "int $hour,int $minute,int $second = 0" "S" "DateTime" "DateTime" "public") ("m" "setISODate" "int $year,int $week,int $day = 1" "S" "DateTime" "DateTime" "public") ("m" "setDate" "int $year,int $month,int $day" "S" "DateTime" "DateTime" "public") ("m" "__set_state" "array $array" "S" "DateTime" "DateTime" "public") ("m" "modify" "string $modify" "S" "DateTime" "DateTime" "public") ("m" "getLastErrors" #1# "S" "array" "DateTime" "public") ("m" "createFromFormat" "string $format,string $time,DateTimeZone $timezone" "S" "DateTime" "DateTime" "public") ("m" "add" "DateInterval $interval" "S" "DateTime" "DateTime" "public") ("m" "__construct" "string $time = \"now\",DateTimeZone $timezone = NULL" #352="S" "void" "DateTime" "public") ("d" #23="W3C" #23# "S" "string" "DateTime" "public") ("d" #24="RSS" #24# "S" "string" "DateTime" "public") ("d" #25="RFC3339" #25# "S" "string" "DateTime" "public") ("d" #26="RFC2822" #26# "S" "string" "DateTime" "public") ("d" #27="RFC1123" #27# "S" "string" "DateTime" "public") ("d" #28="RFC1036" #28# "S" "string" "DateTime" "public") ("d" #29="RFC850" #29# "S" "string" "DateTime" "public") ("d" #30="RFC822" #30# "S" "string" "DateTime" "public") ("d" #31="ISO8601" #31# "S" "string" "DateTime" "public") ("d" #32="COOKIE" #32# "S" "string" "DateTime" "public") ("d" #33="ATOM" #33# "S" "string" #34# "public"))) (#35="PDOException" (("p" "code" #1# "S" "string" "PDOException" "protected") ("p" "errorInfo" #1# "S" "array" #35# "public"))) (#36="PDOStatement" (("m" "setFetchMode" "int $mode" "S" "bool" "PDOStatement" "public") ("m" "setAttribute" "int $attribute,mixed $value" "S" "bool" "PDOStatement" "public") ("m" "rowCount" #1# "S" "int" "PDOStatement" "public") ("m" "nextRowset" #1# "S" "bool" "PDOStatement" "public") ("m" "getColumnMeta" "int $column" "S" "array" "PDOStatement" "public") ("m" "getAttribute" "int $attribute" "S" "mixed" "PDOStatement" "public") ("m" "fetchObject" "string $class_name = \"stdClass\",array $ctor_args" "S" "mixed" "PDOStatement" "public") ("m" "fetchColumn" "int $column_number = 0" "S" "mixed" "PDOStatement" "public") ("m" "fetchAll" ")" "S" "array" "PDOStatement" "public") ("m" "fetch" "int $fetch_style,int $cursor_orientation = PDO::FETCH_ORI_NEXT,int $cursor_offset = 0" "S" "mixed" "PDOStatement" "public") ("m" "execute" "array $input_parameters" "S" "bool" "PDOStatement" "public") ("m" "errorInfo" #1# "S" "array" "PDOStatement" "public") ("m" "errorCode" #1# "S" "string" "PDOStatement" "public") ("m" "debugDumpParams" #1# "S" "void" "PDOStatement" "public") ("m" "columnCount" #1# "S" "int" "PDOStatement" "public") ("m" "closeCursor" #1# "S" "bool" "PDOStatement" "public") ("m" "bindValue" "mixed $parameter,mixed $value,int $data_type = PDO::PARAM_STR" "S" "bool" "PDOStatement" "public") ("m" "bindParam" "mixed $parameter,mixed &$variable,int $data_type = PDO::PARAM_STR,int $length,mixed $driver_options" "S" "bool" "PDOStatement" "public") ("m" "bindColumn" "mixed $column,mixed &$param,int $type,int $maxlen,mixed $driverdata" "S" "bool" "PDOStatement" "public") ("p" "queryString" #1# "S" "string" #36# "public"))) (#37="PDO" (("m" "setAttribute" "int $attribute,mixed $value" "S" "bool" "PDO" "public") ("m" "rollBack" #1# "S" "bool" "PDO" "public") ("m" "quote" "string $string,int $parameter_type = PDO::PARAM_STR" "S" "string" "PDO" "public") ("m" "query" "string $statement" "S" "PDOStatement" "PDO" "public") ("m" "prepare" ")" "S" "PDOStatement" "PDO" "public") ("m" "lastInsertId" "string $name = NULL" "S" "string" "PDO" "public") ("m" "inTransaction" #1# "S" "bool" "PDO" "public") ("m" "getAvailableDrivers" #1# "S" "array" "PDO" "public") ("m" "getAttribute" "int $attribute" "S" "mixed" "PDO" "public") ("m" "exec" "string $statement" "S" "int" "PDO" "public") ("m" "errorInfo" #1# "S" "array" "PDO" "public") ("m" "errorCode" #1# "S" "mixed" "PDO" "public") ("m" "commit" #1# "S" "bool" "PDO" "public") ("m" "beginTransaction" #1# "S" "bool" "PDO" "public") ("m" "__construct" "string $dsn,string $username,string $password,array $options" #351="S" "void" #37# "public"))) (#38="SQLite3Result" (("m" "reset" #1# "S" "bool" "SQLite3Result" "public") ("m" "numColumns" #1# "S" "int" "SQLite3Result" "public") ("m" "finalize" #1# "S" "bool" "SQLite3Result" "public") ("m" "fetchArray" "int $mode = SQLITE3_BOTH" "S" "array" "SQLite3Result" "public") ("m" "columnType" "int $column_number" "S" "int" "SQLite3Result" "public") ("m" "columnName" "int $column_number" "S" "string" #38# "public"))) (#39="SQLite3Stmt" (("m" "reset" #1# "S" "bool" "SQLite3Stmt" "public") ("m" "paramCount" #1# "S" "int" "SQLite3Stmt" "public") ("m" "execute" #1# "S" "SQLite3Result" "SQLite3Stmt" "public") ("m" "close" #1# "S" "bool" "SQLite3Stmt" "public") ("m" "clear" #1# "S" "bool" "SQLite3Stmt" "public") ("m" "bindValue" "string $sql_param,mixed $value,int $type" "S" "bool" "SQLite3Stmt" "public") ("m" "bindParam" "string $sql_param,mixed &$param,int $type" "S" "bool" #39# "public"))) (#40="SQLite3" (("m" "version" #1# "S" "array" "SQLite3" "public") ("m" "querySingle" "string $query,bool $entire_row = false" "S" "mixed" "SQLite3" "public") ("m" "query" "string $query" "S" "SQLite3Result" "SQLite3" "public") ("m" "prepare" "string $query" "S" "SQLite3Stmt" "SQLite3" "public") ("m" "open" "string $filename,int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE,string $encryption_key" "S" "void" "SQLite3" "public") ("m" "loadExtension" "string $shared_library" "S" "bool" "SQLite3" "public") ("m" "lastInsertRowID" #1# "S" "int" "SQLite3" "public") ("m" "lastErrorMsg" #1# "S" "string" "SQLite3" "public") ("m" "lastErrorCode" #1# "S" "int" "SQLite3" "public") ("m" "exec" "string $query" "S" "bool" "SQLite3" "public") ("m" "escapeString" "string $value" "S" "string" "SQLite3" "public") ("m" "createFunction" "string $name,mixed $callback,int $argument_count = -1" "S" "bool" "SQLite3" "public") ("m" "createCollation" "string $name,callable $callback" "S" "bool" "SQLite3" "public") ("m" "createAggregate" "string $name,mixed $step_callback,mixed $final_callback,int $argument_count = -1" "S" "bool" "SQLite3" "public") ("m" "__construct" "string $filename,int $flags,string $encryption_key" #350="S" "void" "SQLite3" "public") ("m" "close" #1# "S" "bool" "SQLite3" "public") ("m" "changes" #1# "S" "int" "SQLite3" "public") ("m" "busyTimeout" "int $msecs" "S" "bool" #40# "public"))) (#41="mysqli_sql_exception" (("p" "sqlstate" #1# "S" "string" #41# "protected"))) (#42="mysqli_warning" (("m" "next" #1# "S" "void" "mysqli_warning" "public") ("m" "__construct" #1# #349="S" "void" "mysqli_warning" "public") ("p" "errno" #1# "S" "int" "mysqli_warning" "public") ("p" "sqlstate" #1# "S" "int" "mysqli_warning" "public") ("p" "message" #1# "S" "string" #42# "public"))) (#43="mysqli_driver" (("m" "embedded_server_start" "bool $start,array $arguments,array $groups" "S" "bool" "mysqli_driver" "public") ("m" "embedded_server_end" #1# "S" "void" "mysqli_driver" "public") ("p" "report_mode" #1# "S" "int" "mysqli_driver" "public") ("p" "reconnect" #1# "S" "bool" "mysqli_driver" "public") ("p" "embedded" #1# "S" "string" "mysqli_driver" "public") ("p" "driver_version" #1# "S" "string" "mysqli_driver" "public") ("p" "client_version" #1# "S" "string" "mysqli_driver" "public") ("p" "client_info" #1# "S" "string" #43# "public"))) (#44="mysqli_result" (("m" "free" #1# "S" "void" "mysqli_result" "public") ("m" "field_seek" "int $fieldnr" "S" "bool" "mysqli_result" "public") ("m" "fetch_row" #1# "S" "mixed" "mysqli_result" "public") ("m" "fetch_object" "string $class_name = \"stdClass\",array $params" "S" "object" "mysqli_result" "public") ("m" "fetch_fields" #1# "S" "array" "mysqli_result" "public") ("m" "fetch_field" #1# "S" "object" "mysqli_result" "public") ("m" "fetch_field_direct" "int $fieldnr" "S" "object" "mysqli_result" "public") ("m" "fetch_assoc" #1# "S" "array" "mysqli_result" "public") ("m" "fetch_array" "int $resulttype = MYSQLI_BOTH" "S" "mixed" "mysqli_result" "public") ("m" "fetch_all" "int $resulttype = MYSQLI_NUM" "S" "mixed" "mysqli_result" "public") ("m" "data_seek" "int $offset" "S" "bool" "mysqli_result" "public") ("p" "num_rows" #1# "S" "int" "mysqli_result" "public") ("p" "lengths" #1# "S" "array" "mysqli_result" "public") ("p" "field_count" #1# "S" "int" "mysqli_result" "public") ("p" "current_field" #1# "S" "int" #44# "public"))) (#45="mysqli_stmt" (("m" "store_result" #1# "S" "bool" "mysqli_stmt" "public") ("m" "send_long_data" "int $param_nr,string $data" "S" "bool" "mysqli_stmt" "public") ("m" "result_metadata" #1# "S" "mysqli_result" "mysqli_stmt" "public") ("m" "reset" #1# "S" "bool" "mysqli_stmt" "public") ("m" "prepare" "string $query" "S" "mixed" "mysqli_stmt" "public") ("m" "get_warnings" "mysqli_stmt $stmt" "S" "object" "mysqli_stmt" "public") ("m" "get_result" #1# "S" "mysqli_result" "mysqli_stmt" "public") ("m" "free_result" #1# "S" "void" "mysqli_stmt" "public") ("m" "fetch" #1# "S" "bool" "mysqli_stmt" "public") ("m" "execute" #1# "S" "bool" "mysqli_stmt" "public") ("m" "data_seek" "int $offset" "S" "void" "mysqli_stmt" "public") ("m" "close" #1# "S" "bool" "mysqli_stmt" "public") ("m" "bind_result" "mixed &$var1,mixed $__args__" "S" "bool" "mysqli_stmt" "public") ("m" "bind_param" "string $types,mixed &$var1,mixed $__args__" "S" "bool" "mysqli_stmt" "public") ("m" "attr_set" "int $attr,int $mode" "S" "bool" "mysqli_stmt" "public") ("m" "attr_get" "int $attr" "S" "int" "mysqli_stmt" "public") ("m" "__construct" "mysqli $link,string $query" #348="S" "void" "mysqli_stmt" "public") ("p" "sqlstate" #1# "S" "string" "mysqli_stmt" "public") ("p" "param_count" #1# "S" "int" "mysqli_stmt" "public") ("p" "num_rows" #1# "S" "int" "mysqli_stmt" "public") ("p" "insert_id" #1# "S" "int" "mysqli_stmt" "public") ("p" "field_count" #1# "S" "int" "mysqli_stmt" "public") ("p" "error" #1# "S" "string" "mysqli_stmt" "public") ("p" "error_list" #1# "S" "array" "mysqli_stmt" "public") ("p" "errno" #1# "S" "int" "mysqli_stmt" "public") ("p" "affected_rows" #1# "S" "int" #45# "public"))) (#46="mysqli" (("m" "use_result" #1# "S" "mysqli_result" "mysqli" "public") ("m" "store_result" "int $option" "S" "mysqli_result" "mysqli" "public") ("m" "stmt_init" #1# "S" "mysqli_stmt" "mysqli" "public") ("m" "stat" #1# "S" "string" "mysqli" "public") ("m" "ssl_set" "string $key,string $cert,string $ca,string $capath,string $cipher" "S" "bool" "mysqli" "public") ("m" "set_local_infile_handler" "mysqli $link,callable $read_func" "S" "bool" "mysqli" "public") ("m" "set_charset" "string $charset" "S" "bool" "mysqli" "public") ("m" "send_query" "string $query" "S" "bool" "mysqli" "public") ("m" "select_db" "string $dbname" "S" "bool" "mysqli" "public") ("m" "rpl_query_type" "string $query" "S" "int" "mysqli" "public") ("m" "rollback" "int $flags,string $name" "S" "bool" "mysqli" "public") ("m" "refresh" "int $options" "S" "bool" "mysqli" "public") ("m" "reap_async_query" #1# "S" "mysqli_result" "mysqli" "public") ("m" "real_query" "string $query" "S" "bool" "mysqli" "public") ("m" "escape_string" "string $escapestr" "S" "string" "mysqli" "public") ("m" "real_connect" "string $host,string $username,string $passwd,string $dbname,int $port,string $socket,int $flags" "S" "bool" "mysqli" "public") ("m" "query" "string $query,int $resultmode = MYSQLI_STORE_RESULT" "S" "mixed" "mysqli" "public") ("m" "prepare" "string $query" "S" "mysqli_stmt" "mysqli" "public") ("m" "poll" "array &$read,array &$error,array &$reject,int $sec,int $usec" "S" "int" "mysqli" "public") ("m" "ping" #1# "S" "bool" "mysqli" "public") ("m" "options" "int $option,mixed $value" "S" "bool" "mysqli" "public") ("m" "next_result" #1# "S" "bool" "mysqli" "public") ("m" "multi_query" "string $query" "S" "bool" "mysqli" "public") ("m" "more_results" #1# "S" "bool" "mysqli" "public") ("m" "kill" "int $processid" "S" "bool" "mysqli" "public") ("m" "init" #1# "S" "mysqli" "mysqli" "public") ("m" "get_warnings" #1# "S" "mysqli_warning" "mysqli" "public") ("m" "get_connection_stats" #1# "S" "bool" "mysqli" "public") ("m" "get_client_info" #1# "S" "string" "mysqli" "public") ("m" "get_charset" #1# "S" "object" "mysqli" "public") ("m" "dump_debug_info" #1# "S" "bool" "mysqli" "public") ("m" "debug" "string $message" "S" "bool" "mysqli" "public") ("m" "commit" "int $flags,string $name" "S" "bool" "mysqli" "public") ("m" "close" #1# "S" "bool" "mysqli" "public") ("m" "character_set_name" #1# "S" "string" "mysqli" "public") ("m" "change_user" "string $user,string $password,string $database" "S" "bool" "mysqli" "public") ("m" "autocommit" "bool $mode" "S" "bool" "mysqli" "public") ("m" "__construct" "\"mysqli.default_socket\")'" #347="S" "void" "mysqli" "public") ("p" "warning_count" #1# "S" "int" "mysqli" "public") ("p" "thread_id" #1# "S" "int" "mysqli" "public") ("p" "sqlstate" #1# "S" "string" "mysqli" "public") ("p" "insert_id" #1# "S" "mixed" "mysqli" "public") ("p" "info" #1# "S" "string" "mysqli" "public") ("p" "server_version" #1# "S" "int" "mysqli" "public") ("p" "server_info" #1# "S" "string" "mysqli" "public") ("p" "protocol_version" #1# "S" "string" "mysqli" "public") ("p" "host_info" #1# "S" "string" "mysqli" "public") ("p" "client_version" #1# "S" "int" "mysqli" "public") ("p" "field_count" #1# "S" "int" "mysqli" "public") ("p" "error" #1# "S" "string" "mysqli" "public") ("p" "error_list" #1# "S" "array" "mysqli" "public") ("p" "errno" #1# "S" "int" "mysqli" "public") ("p" "connect_error" #1# "S" "string" "mysqli" "public") ("p" "connect_errno" #1# "S" "int" "mysqli" "public") ("p" "client_version" #1# "S" "int" "mysqli" "public") ("p" "client_info" #1# "S" "string" "mysqli" "public") ("p" "affected_rows" #1# "S" "int" #46# "public"))) (#53="HttpResponse" (("m" "status" "int $status" "S" "bool" "HttpResponse" "public") ("m" "setThrottleDelay" "float $seconds" "S" "bool" "HttpResponse" "public") ("m" "setStream" "resource $stream" "S" "bool" "HttpResponse" "public") ("m" "setLastModified" "int $timestamp" "S" "bool" "HttpResponse" "public") ("m" "setHeader" "string $name,mixed $value,bool $replace = true" "S" "bool" "HttpResponse" "public") ("m" "setGzip" "bool $gzip" "S" "bool" "HttpResponse" "public") ("m" "setFile" "string $file" "S" "bool" "HttpResponse" "public") ("m" "setETag" "string $etag" "S" "bool" "HttpResponse" "public") ("m" "setData" "mixed $data" "S" "bool" "HttpResponse" "public") ("m" "setContentType" "string $content_type" "S" "bool" "HttpResponse" "public") ("m" "setContentDisposition" "string $filename,bool $inline = false" "S" "bool" "HttpResponse" "public") ("m" "setCacheControl" "string $control,int $max_age = 0,bool $must_revalidate = true" "S" "bool" "HttpResponse" "public") ("m" "setCache" "bool $cache" "S" "bool" "HttpResponse" "public") ("m" "setBufferSize" "int $bytes" "S" "bool" "HttpResponse" "public") ("m" "send" "bool $clean_ob = true" "S" "bool" "HttpResponse" "public") ("m" "redirect" "string $url,array $params,bool $session = false,int $status" "S" "void" "HttpResponse" "public") ("m" "guessContentType" "string $magic_file,int $magic_mode = MAGIC_MIME" "S" "string" "HttpResponse" "public") ("m" "getThrottleDelay" #1# "S" "float" "HttpResponse" "public") ("m" "getStream" #1# "S" "resource" "HttpResponse" "public") ("m" "getRequestHeaders" #1# "S" "array" "HttpResponse" "public") ("m" "getRequestBodyStream" #1# "S" "resource" "HttpResponse" "public") ("m" "getRequestBody" #1# "S" "string" "HttpResponse" "public") ("m" "getLastModified" #1# "S" "int" "HttpResponse" "public") ("m" "getHeader" "string $name" "S" "mixed" "HttpResponse" "public") ("m" "getGzip" #1# "S" "bool" "HttpResponse" "public") ("m" "getFile" #1# "S" "string" "HttpResponse" "public") ("m" "getETag" #1# "S" "string" "HttpResponse" "public") ("m" "getData" #1# "S" "string" "HttpResponse" "public") ("m" "getContentType" #1# "S" "string" "HttpResponse" "public") ("m" "getContentDisposition" #1# "S" "string" "HttpResponse" "public") ("m" "getCacheControl" #1# "S" "string" "HttpResponse" "public") ("m" "getCache" #1# "S" "bool" "HttpResponse" "public") ("m" "getBufferSize" #1# "S" "int" "HttpResponse" "public") ("m" "capture" #1# "S" "void" "HttpResponse" "public") ("d" #47="REDIRECT_TEMP" #47# "S" "integer" "HttpResponse" "public") ("d" #48="REDIRECT_PROXY" #48# "S" "integer" "HttpResponse" "public") ("d" #49="REDIRECT_POST" #49# "S" "integer" "HttpResponse" "public") ("d" #50="REDIRECT_FOUND" #50# "S" "integer" "HttpResponse" "public") ("d" #51="REDIRECT_PERM" #51# "S" "integer" "HttpResponse" "public") ("d" #52="REDIRECT" #52# "S" "integer" "HttpResponse" "public") ("p" "throttleDelay" #1# "S" "double" "HttpResponse" "protected") ("p" "bufferSize" #1# "S" "integer" "HttpResponse" "protected") ("p" "contentDisposition" #1# "S" "string" "HttpResponse" "protected") ("p" "contentType" #1# "S" "string" "HttpResponse" "protected") ("p" "cacheControl" #1# "S" "string" "HttpResponse" "protected") ("p" "lastModified" #1# "S" "integer" "HttpResponse" "protected") ("p" "eTag" #1# "S" "string" "HttpResponse" "protected") ("p" "gzip" #1# "S" "boolean" "HttpResponse" "protected") ("p" "cache" #1# "S" "boolean" #53# "protected"))) (#54="HttpRequestPool" (("m" "socketSelect" "float $timeout = 0" "S" "bool" "HttpRequestPool" "protected") ("m" "socketPerform" #1# "S" "bool" "HttpRequestPool" "protected") ("m" "send" #1# "S" "bool" "HttpRequestPool" "public") ("m" "reset" #1# "S" "void" "HttpRequestPool" "public") ("m" "getFinishedRequests" #1# "S" "array" "HttpRequestPool" "public") ("m" "getAttachedRequests" #1# "S" "array" "HttpRequestPool" "public") ("m" "detach" "HttpRequest $request" "S" "bool" "HttpRequestPool" "public") ("m" "__destruct" #1# "S" "void" "HttpRequestPool" "public") ("m" "__construct" "HttpRequest $request,HttpRequest $__args__" #346="S" "void" "HttpRequestPool" "public") ("m" "attach" "HttpRequest $request" "S" "bool" #54# "public"))) (#100="HttpRequest" (("m" "setUrl" "string $url" "S" "bool" "HttpRequest" "public") ("m" "setSslOptions" "array $options" "S" "bool" "HttpRequest" "public") ("m" "setRawPostData" "string $raw_post_data" "S" "bool" "HttpRequest" "public") ("m" "setQueryData" "mixed $query_data" "S" "bool" "HttpRequest" "public") ("m" "setPutFile" "string $file = \"\"" "S" "bool" "HttpRequest" "public") ("m" "setPutData" "string $put_data" "S" "bool" "HttpRequest" "public") ("m" "setPostFiles" "array $post_files" "S" "bool" "HttpRequest" "public") ("m" "setPostFields" "array $post_data" "S" "bool" "HttpRequest" "public") ("m" "setOptions" "array $options" "S" "bool" "HttpRequest" "public") ("m" "setMethod" "int $request_method" "S" "bool" "HttpRequest" "public") ("m" "setHeaders" "array $headers" "S" "bool" "HttpRequest" "public") ("m" "setCookies" "array $cookies" "S" "bool" "HttpRequest" "public") ("m" "setContentType" "string $content_type" "S" "bool" "HttpRequest" "public") ("m" "setBody" "string $request_body_data" "S" "bool" "HttpRequest" "public") ("m" "send" #1# "S" "HttpMessage" "HttpRequest" "public") ("m" "resetCookies" "bool $session_only = false" "S" "bool" "HttpRequest" "public") ("m" "getUrl" #1# "S" "string" "HttpRequest" "public") ("m" "getSslOptions" #1# "S" "array" "HttpRequest" "public") ("m" "getResponseStatus" #1# "S" "string" "HttpRequest" "public") ("m" "getResponseMessage" #1# "S" "HttpMessage" "HttpRequest" "public") ("m" "getResponseInfo" "string $name" "S" "mixed" "HttpRequest" "public") ("m" "getResponseHeader" "string $name" "S" "mixed" "HttpRequest" "public") ("m" "getResponseData" #1# "S" "array" "HttpRequest" "public") ("m" "getResponseCookies" "int $flags = 0,array $allowed_extras" "S" "array" "HttpRequest" "public") ("m" "getResponseCode" #1# "S" "int" "HttpRequest" "public") ("m" "getResponseBody" #1# "S" "string" "HttpRequest" "public") ("m" "getRequestMessage" #1# "S" "HttpMessage" "HttpRequest" "public") ("m" "getRawResponseMessage" #1# "S" "string" "HttpRequest" "public") ("m" "getRawRequestMessage" #1# "S" "string" "HttpRequest" "public") ("m" "getRawPostData" #1# "S" "string" "HttpRequest" "public") ("m" "getQueryData" #1# "S" "string" "HttpRequest" "public") ("m" "getPutFile" #1# "S" "string" "HttpRequest" "public") ("m" "getPutData" #1# "S" "string" "HttpRequest" "public") ("m" "getPostFiles" #1# "S" "array" "HttpRequest" "public") ("m" "getPostFields" #1# "S" "array" "HttpRequest" "public") ("m" "getOptions" #1# "S" "array" "HttpRequest" "public") ("m" "getMethod" #1# "S" "int" "HttpRequest" "public") ("m" "getHistory" #1# "S" "HttpMessage" "HttpRequest" "public") ("m" "getHeaders" #1# "S" "array" "HttpRequest" "public") ("m" "getCookies" #1# "S" "array" "HttpRequest" "public") ("m" "getContentType" #1# "S" "string" "HttpRequest" "public") ("m" "enableCookies" #1# "S" "bool" "HttpRequest" "public") ("m" "__construct" "string $url,int $request_method = HTTP_METH_GET,array $options" #345="S" "void" "HttpRequest" "public") ("m" "clearHistory" #1# "S" "void" "HttpRequest" "public") ("m" "addSslOptions" "array $options" "S" "bool" "HttpRequest" "public") ("m" "addRawPostData" "string $raw_post_data" "S" "bool" "HttpRequest" "public") ("m" "addQueryData" "array $query_params" "S" "bool" "HttpRequest" "public") ("m" "addPutData" "string $put_data" "S" "bool" "HttpRequest" "public") ("m" "addPostFile" "string $name,string $file,string $content_type = \"application/x-octetstream\"" "S" "bool" "HttpRequest" "public") ("m" "addPostFields" "array $post_data" "S" "bool" "HttpRequest" "public") ("m" "addHeaders" "array $headers" "S" "bool" "HttpRequest" "public") ("m" "addCookies" "array $cookies" "S" "bool" "HttpRequest" "public") ("p" "recordHistory" #1# "S" "boolean" "HttpRequest" "public") ("d" #55="IPRESOLVE_ANY" #55# "S" "integer" "HttpRequest" "public") ("d" #56="IPRESOLVE_V6" #56# "S" "integer" "HttpRequest" "public") ("d" #57="IPRESOLVE_V4" #57# "S" "integer" "HttpRequest" "public") ("d" #58="SSL_VERSION_ANY" #58# "S" "integer" "HttpRequest" "public") ("d" #59="SSL_VERSION_SSLv3" #59# "S" "integer" "HttpRequest" "public") ("d" #60="SSL_VERSION_SSLv2" #60# "S" "integer" "HttpRequest" "public") ("d" #61="SSL_VERSION_TLSv1" #61# "S" "integer" "HttpRequest" "public") ("d" #62="PROXY_HTTP" #62# "S" "integer" "HttpRequest" "public") ("d" #63="PROXY_SOCKS5" #63# "S" "integer" "HttpRequest" "public") ("d" #64="PROXY_SOCKS4" #64# "S" "integer" "HttpRequest" "public") ("d" #65="AUTH_ANY" #65# "S" "integer" "HttpRequest" "public") ("d" #66="AUTH_GSSNEG" #66# "S" "integer" "HttpRequest" "public") ("d" #67="AUTH_NTLM" #67# "S" "integer" "HttpRequest" "public") ("d" #68="AUTH_DIGEST" #68# "S" "integer" "HttpRequest" "public") ("d" #69="AUTH_BASIC" #69# "S" "integer" "HttpRequest" "public") ("d" #70="VERSION_ANY" #70# "S" "integer" "HttpRequest" "public") ("d" #71="VERSION_1_1" #71# "S" "integer" "HttpRequest" "public") ("d" #72="VERSION_1_0" #72# "S" "integer" "HttpRequest" "public") ("d" #73="METH_ACL" #73# "S" "integer" "HttpRequest" "public") ("d" #74="METH_MKACTIVITY" #74# "S" "integer" "HttpRequest" "public") ("d" #75="METH_BASELINE_CONTROL" #75# "S" "integer" "HttpRequest" "public") ("d" #76="METH_MERGE" #76# "S" "integer" "HttpRequest" "public") ("d" #77="METH_LABEL" #77# "S" "integer" "HttpRequest" "public") ("d" #78="METH_UPDATE" #78# "S" "integer" "HttpRequest" "public") ("d" #79="METH_MKWORKSPACE" #79# "S" "integer" "HttpRequest" "public") ("d" #80="METH_UNCHECKOUT" #80# "S" "integer" "HttpRequest" "public") ("d" #81="METH_CHECKIN" #81# "S" "integer" "HttpRequest" "public") ("d" #82="METH_CHECKOUT" #82# "S" "integer" "HttpRequest" "public") ("d" #83="METH_REPORT" #83# "S" "integer" "HttpRequest" "public") ("d" #84="METH_VERSION_CONTROL" #84# "S" "integer" "HttpRequest" "public") ("d" #85="METH_UNLOCK" #85# "S" "integer" "HttpRequest" "public") ("d" #86="METH_LOCK" #86# "S" "integer" "HttpRequest" "public") ("d" #87="METH_MOVE" #87# "S" "integer" "HttpRequest" "public") ("d" #88="METH_COPY" #88# "S" "integer" "HttpRequest" "public") ("d" #89="METH_MKCOL" #89# "S" "integer" "HttpRequest" "public") ("d" #90="METH_PROPPATCH" #90# "S" "integer" "HttpRequest" "public") ("d" #91="METH_PROPFIND" #91# "S" "integer" "HttpRequest" "public") ("d" #92="METH_CONNECT" #92# "S" "integer" "HttpRequest" "public") ("d" #93="METH_TRACE" #93# "S" "integer" "HttpRequest" "public") ("d" #94="METH_OPTIONS" #94# "S" "integer" "HttpRequest" "public") ("d" #95="METH_DELETE" #95# "S" "integer" "HttpRequest" "public") ("d" #96="METH_PUT" #96# "S" "integer" "HttpRequest" "public") ("d" #97="METH_POST" #97# "S" "integer" "HttpRequest" "public") ("d" #98="METH_HEAD" #98# "S" "integer" "HttpRequest" "public") ("d" #99="METH_GET" #99# "S" "integer" #100# "public"))) (#107="HttpQueryString" (("m" "xlate" "string $ie,string $oe" "S" "bool" "HttpQueryString" "public") ("m" "toString" #1# "S" "string" "HttpQueryString" "public") ("m" "toArray" #1# "S" "array" "HttpQueryString" "public") ("m" "singleton" "bool $global = true" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "set" "mixed $params" "S" "string" "HttpQueryString" "public") ("m" "mod" "mixed $params" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "get" "string $key,mixed $type = 0,mixed $defval = NULL,bool $delete = false" "S" "mixed" "HttpQueryString" "public") ("m" "__construct" "bool $global = true,mixed $add" #344="S" "void" "HttpQueryString" "public") ("d" #101="TYPE_OBJECT" #101# "S" "int" "HttpQueryString" "public") ("d" #102="TYPE_ARRAY" #102# "S" "int" "HttpQueryString" "public") ("d" #103="TYPE_STRING" #103# "S" "int" "HttpQueryString" "public") ("d" #104="TYPE_FLOAT" #104# "S" "int" "HttpQueryString" "public") ("d" #105="TYPE_INT" #105# "S" "int" "HttpQueryString" "public") ("d" #106="TYPE_BOOL" #106# "S" "int" #107# "public"))) (#114="HttpMessage" (("m" "toString" "bool $include_parent = false" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" #1# "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "int $type" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "string $status" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "int $code" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "string $url" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "string $method" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "string $version" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "array $headers" "S" "void" "HttpMessage" "public") ("m" "setBody" "string $body" "S" "void" "HttpMessage" "public") ("m" "send" #1# "S" "bool" "HttpMessage" "public") ("m" "reverse" #1# "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "HttpMessage $message,bool $top = true" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "string $magic_file,int $magic_mode = MAGIC_MIME" "S" "string" "HttpMessage" "public") ("m" "getType" #1# "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" #1# "S" "string" "HttpMessage" "public") ("m" "getResponseCode" #1# "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" #1# "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" #1# "S" "string" "HttpMessage" "public") ("m" "getParentMessage" #1# "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" #1# "S" "string" "HttpMessage" "public") ("m" "getHeaders" #1# "S" "array" "HttpMessage" "public") ("m" "getHeader" "string $header" "S" "string" "HttpMessage" "public") ("m" "getBody" #1# "S" "string" "HttpMessage" "public") ("m" "fromString" "string $raw_message,string $class_name = \"HttpMessage\"" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "int $message_type,string $class_name = \"HttpMessage\"" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "string $raw_message,string $class_name = \"HttpMessage\"" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" #1# "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "string $message" #343="S" "void" "HttpMessage" "public") ("m" "addHeaders" "array $headers,bool $append = false" "S" "void" "HttpMessage" "public") ("d" #108="TYPE_RESPONSE" #108# "S" "int" "HttpMessage" "public") ("d" #109="TYPE_REQUEST" #109# "S" "int" "HttpMessage" "public") ("d" #110="TYPE_NONE" #110# "S" "int" "HttpMessage" "public") ("p" "parentMessage" #1# "S" "HttpMessage" "HttpMessage" "protected") ("p" "responseStatus" #1# "S" "string" "HttpMessage" "protected") ("p" "responseCode" #1# "S" "int" "HttpMessage" "protected") ("p" "string" #1# "S" "requestUrl" "HttpMessage" "protected") ("p" "requestMethod" #1# "S" "string" "HttpMessage" "protected") ("p" "headers" #1# "S" "array" "HttpMessage" "protected") ("p" "httpVersion" #1# "S" "float" "HttpMessage" "protected") ("p" "body" #1# "S" "string" "HttpMessage" "protected") ("p" "type" #1# "S" "int" "HttpMessage" "protected") ("m" "toString" "bool $include_parent = false" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" #1# "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "int $type" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "string $status" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "int $code" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "string $url" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "string $method" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "string $version" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "array $headers" "S" "void" "HttpMessage" "public") ("m" "setBody" "string $body" "S" "void" "HttpMessage" "public") ("m" "send" #1# "S" "bool" "HttpMessage" "public") ("m" "reverse" #1# "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "HttpMessage $message,bool $top = true" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "string $magic_file,int $magic_mode = MAGIC_MIME" "S" "string" "HttpMessage" "public") ("m" "getType" #1# "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" #1# "S" "string" "HttpMessage" "public") ("m" "getResponseCode" #1# "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" #1# "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" #1# "S" "string" "HttpMessage" "public") ("m" "getParentMessage" #1# "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" #1# "S" "string" "HttpMessage" "public") ("m" "getHeaders" #1# "S" "array" "HttpMessage" "public") ("m" "getHeader" "string $header" "S" "string" "HttpMessage" "public") ("m" "getBody" #1# "S" "string" "HttpMessage" "public") ("m" "fromString" "string $raw_message,string $class_name = \"HttpMessage\"" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "int $message_type,string $class_name = \"HttpMessage\"" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "string $raw_message,string $class_name = \"HttpMessage\"" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" #1# "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "string $message" "S" "void" "HttpMessage" "public") ("m" "addHeaders" "array $headers,bool $append = false" "S" "void" "HttpMessage" "public") ("p" "parentMessage" #1# "S" "HttpMessage" "HttpMessage" "protected") ("p" "responseStatus" #1# "S" "string" "HttpMessage" "protected") ("p" "responseCode" #1# "S" "int" "HttpMessage" "protected") ("p" "requestUrl" #1# "S" "string" "HttpMessage" "protected") ("p" "requestMethod" #1# "S" "string" "HttpMessage" "protected") ("p" "headers" #1# "S" "array" "HttpMessage" "protected") ("p" "httpVersion" #1# "S" "float" "HttpMessage" "protected") ("p" "body" #1# "S" "string" "HttpMessage" "protected") ("p" "type" #1# "S" "int" "HttpMessage" "protected") ("d" #111="TYPE_RESPONSE" #111# "S" "int" "HttpMessage" "public") ("d" #112="TYPE_REQUEST" #112# "S" "int" "HttpMessage" "public") ("d" #113="TYPE_NONE" #113# "S" "int" #114# "public"))) (#118="HttpInflateStream" (("m" "update" "string $data" "S" "string" "HttpInflateStream" "public") ("m" "flush" "string $data" "S" "string" "HttpInflateStream" "public") ("m" "finish" "string $data" "S" "string" "HttpInflateStream" "public") ("m" "factory" "int $flags = 0,string $class_name = \"HttpInflateStream\"" "S" "HttpInflateStream" "HttpInflateStream" "public") ("m" "__construct" "int $flags = 0" #342="S" "void" "HttpInflateStream" "public") ("d" #115="FLUSH_FULL" #115# "S" "int" "HttpInflateStream" "public") ("d" #116="FLUSH_SYNC" #116# "S" "int" "HttpInflateStream" "public") ("d" #117="FLUSH_NONE" #117# "S" "int" #118# "public"))) (#133="HttpDeflateStream" (("m" "update" "string $data" "S" "string" "HttpDeflateStream" "public") ("m" "flush" "string $data" "S" "string" "HttpDeflateStream" "public") ("m" "finish" "string $data" "S" "string" "HttpDeflateStream" "public") ("m" "factory" "int $flags = 0,string $class_name = \"HttpDeflateStream\"" "S" "HttpDeflateStream" "HttpDeflateStream" "public") ("m" "__construct" "int $flags = 0" #341="S" "void" "HttpDeflateStream" "public") ("d" #119="FLUSH_FULL" #119# "S" "int" "HttpDeflateStream" "public") ("d" #120="FLUSH_SYNC" #120# "S" "int" "HttpDeflateStream" "public") ("d" #121="FLUSH_NONE" #121# "S" "int" "HttpDeflateStream" "public") ("d" #122="STRATEGY_FIXED" #122# "S" "int" "HttpDeflateStream" "public") ("d" #123="STRATEGY_RLE" #123# "S" "int" "HttpDeflateStream" "public") ("d" #124="STRATEGY_HUFF" #124# "S" "int" "HttpDeflateStream" "public") ("d" #125="STRATEGY_FILT" #125# "S" "int" "HttpDeflateStream" "public") ("d" #126="STRATEGY_DEF" #126# "S" "int" "HttpDeflateStream" "public") ("d" #127="LEVEL_MAX" #127# "S" "int" "HttpDeflateStream" "public") ("d" #128="LEVEL_MIN" #128# "S" "int" "HttpDeflateStream" "public") ("d" #129="LEVEL_DEF" #129# "S" "int" "HttpDeflateStream" "public") ("d" #130="TYPE_RAW" #130# "S" "int" "HttpDeflateStream" "public") ("d" #131="TYPE_ZLIB" #131# "S" "int" "HttpDeflateStream" "public") ("d" #132="TYPE_GZIP" #132# "S" "int" #133# "public"))) (#134="Memcache" (("m" "setServerParams" "string $host,int $port = 11211,int $timeout,int $retry_interval = false,bool $status,callback $failure_callback" "S" "bool" "Memcache" "public") ("m" "setCompressThreshold" "int $threshold,float $min_savings" "S" "bool" "Memcache" "public") ("m" "set" "string $key,mixed $var,int $flag,int $expire" "S" "bool" "Memcache" "public") ("m" "replace" "string $key,mixed $var,int $flag,int $expire" "S" "bool" "Memcache" "public") ("m" "pconnect" "string $host,int $port,int $timeout" "S" "mixed" "Memcache" "public") ("m" "increment" "string $key,int $value = 1" "S" "int" "Memcache" "public") ("m" "getVersion" #1# "S" "string" "Memcache" "public") ("m" "getStats" "string $type,int $slabid,int $limit = 100" "S" "array" "Memcache" "public") ("m" "getServerStatus" "string $host,int $port = 11211" "S" "int" "Memcache" "public") ("m" "getExtendedStats" "string $type,int $slabid,int $limit = 100" "S" "array" "Memcache" "public") ("m" "get" "string $key,int &$flags" "S" "string" "Memcache" "public") ("m" "flush" #1# "S" "bool" "Memcache" "public") ("m" "delete" "string $key,int $timeout = 0" "S" "bool" "Memcache" "public") ("m" "decrement" "string $key,int $value = 1" "S" "int" "Memcache" "public") ("m" "connect" "string $host,int $port,int $timeout" "S" "bool" "Memcache" "public") ("m" "close" #1# "S" "bool" "Memcache" "public") ("m" "addServer" "string $host,int $port = 11211,bool $persistent,int $weight,int $timeout,int $retry_interval,bool $status,callback $failure_callback,int $timeoutms" "S" "bool" "Memcache" "public") ("m" "add" "string $key,mixed $var,int $flag,int $expire" "S" "bool" #134# "public"))) (#157="XMLReader" (("m" "xml" "string $source,string $encoding,int $options = 0" "S" "bool" "XMLReader" "public") ("m" "setSchema" "string $filename" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchemaSource" "string $source" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchema" "string $filename" "S" "bool" "XMLReader" "public") ("m" "setParserProperty" "int $property,bool $value" "S" "bool" "XMLReader" "public") ("m" "readString" #1# "S" "string" "XMLReader" "public") ("m" "readOuterXML" #1# "S" "string" "XMLReader" "public") ("m" "readInnerXML" #1# "S" "string" "XMLReader" "public") ("m" "read" #1# "S" "bool" "XMLReader" "public") ("m" "open" "string $URI,string $encoding,int $options = 0" "S" "bool" "XMLReader" "public") ("m" "next" "string $localname" "S" "bool" "XMLReader" "public") ("m" "moveToNextAttribute" #1# "S" "bool" "XMLReader" "public") ("m" "moveToFirstAttribute" #1# "S" "bool" "XMLReader" "public") ("m" "moveToElement" #1# "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNs" "string $localName,string $namespaceURI" "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNo" "int $index" "S" "bool" "XMLReader" "public") ("m" "moveToAttribute" "string $name" "S" "bool" "XMLReader" "public") ("m" "lookupNamespace" "string $prefix" "S" "string" "XMLReader" "public") ("m" "isValid" #1# "S" "bool" "XMLReader" "public") ("m" "getParserProperty" "int $property" "S" "bool" "XMLReader" "public") ("m" "getAttributeNs" "string $localName,string $namespaceURI" "S" "string" "XMLReader" "public") ("m" "getAttributeNo" "int $index" "S" "string" "XMLReader" "public") ("m" "getAttribute" "string $name" "S" "string" "XMLReader" "public") ("m" "expand" "DOMNode $basenode" "S" "DOMNode" "XMLReader" "public") ("m" "close" #1# "S" "bool" "XMLReader" "public") ("p" "xmlLang" #1# "S" "string" "XMLReader" "public") ("p" "value" #1# "S" "string" "XMLReader" "public") ("p" "prefix" #1# "S" "string" "XMLReader" "public") ("p" "nodeType" #1# "S" "int" "XMLReader" "public") ("p" "namespaceURI" #1# "S" "string" "XMLReader" "public") ("p" "name" #1# "S" "string" "XMLReader" "public") ("p" "localName" #1# "S" "string" "XMLReader" "public") ("p" "isEmptyElement" #1# "S" "bool" "XMLReader" "public") ("p" "isDefault" #1# "S" "bool" "XMLReader" "public") ("p" "hasValue" #1# "S" "bool" "XMLReader" "public") ("p" "hasAttributes" #1# "S" "bool" "XMLReader" "public") ("p" "depth" #1# "S" "int" "XMLReader" "public") ("p" "attributeCount" #1# "S" "int" "XMLReader" "public") ("d" #135="SUBST_ENTITIES" #135# "S" "int" "XMLReader" "public") ("d" #136="VALIDATE" #136# "S" "int" "XMLReader" "public") ("d" #137="DEFAULTATTRS" #137# "S" "int" "XMLReader" "public") ("d" #138="LOADDTD" #138# "S" "int" "XMLReader" "public") ("d" #139="XML_DECLARATION" #139# "S" "int" "XMLReader" "public") ("d" #140="END_ENTITY" #140# "S" "int" "XMLReader" "public") ("d" #141="END_ELEMENT" #141# "S" "int" "XMLReader" "public") ("d" #142="SIGNIFICANT_WHITESPACE" #142# "S" "int" "XMLReader" "public") ("d" #143="WHITESPACE" #143# "S" "int" "XMLReader" "public") ("d" #144="NOTATION" #144# "S" "int" "XMLReader" "public") ("d" #145="DOC_FRAGMENT" #145# "S" "int" "XMLReader" "public") ("d" #146="DOC_TYPE" #146# "S" "int" "XMLReader" "public") ("d" #147="DOC" #147# "S" "int" "XMLReader" "public") ("d" #148="COMMENT" #148# "S" "int" "XMLReader" "public") ("d" #149="PI" #149# "S" "int" "XMLReader" "public") ("d" #150="ENTITY" #150# "S" "int" "XMLReader" "public") ("d" #151="ENTITY_REF" #151# "S" "int" "XMLReader" "public") ("d" #152="CDATA" #152# "S" "int" "XMLReader" "public") ("d" #153="TEXT" #153# "S" "int" "XMLReader" "public") ("d" #154="ATTRIBUTE" #154# "S" "int" "XMLReader" "public") ("d" #155="ELEMENT" #155# "S" "int" "XMLReader" "public") ("d" #156="NONE" #156# "S" "int" #157# "public"))) (#158="SimpleXMLIterator" (("m" "valid" #1# "S" "bool" "SimpleXMLIterator" "public") ("m" "rewind" #1# "S" "void" "SimpleXMLIterator" "public") ("m" "next" #1# "S" "void" "SimpleXMLIterator" "public") ("m" "key" #1# "S" "mixed" "SimpleXMLIterator" "public") ("m" "hasChildren" #1# "S" "bool" "SimpleXMLIterator" "public") ("m" "getChildren" #1# "S" "SimpleXMLIterator" "SimpleXMLIterator" "public") ("m" "current" #1# "S" "mixed" #158# "public"))) (#159="SimpleXMLElement" (("m" "xpath" "string $path" "S" "array" "SimpleXMLElement" "public") ("m" "__toString" #1# "S" "string" "SimpleXMLElement" "public") ("m" "registerXPathNamespace" "string $prefix,string $ns" "S" "bool" "SimpleXMLElement" "public") ("m" "getNamespaces" "bool $recursive = false" "S" "array" "SimpleXMLElement" "public") ("m" "getName" #1# "S" "string" "SimpleXMLElement" "public") ("m" "getDocNamespaces" "bool $recursive = false,bool $from_root = true" "S" "array" "SimpleXMLElement" "public") ("m" "count" #1# "S" "int" "SimpleXMLElement" "public") ("m" "children" "string $ns,bool $is_prefix = false" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "attributes" "string $ns = NULL,bool $is_prefix = false" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "asXML" "string $filename" "S" "mixed" "SimpleXMLElement" "public") ("m" "addChild" "string $name,string $value,string $namespace" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "addAttribute" "string $name,string $value,string $namespace" "S" "void" "SimpleXMLElement" "public") ("m" "__construct" "string $data,int $options = 0,bool $data_is_url = false,string $ns = \"\",bool $is_prefix = false" #340="S" "void" #159# "public"))) (#161="SplString" (("d" #160="__default" #160# "S" "string" #161# "public"))) (#165="SplBool" (("d" #162="true" #162# "S" "boolean" "SplBool" "public") ("d" #163="false" #163# "S" "boolean" "SplBool" "public") ("d" #164="__default" #164# "S" "boolean" #165# "public"))) (#167="SplEnum" (("m" "getConstList" "bool $include_default = false" "S" "array" "SplEnum" "public") ("d" #166="__default" #166# "S" "NULL" #167# "public"))) (#169="SplFloat" (("d" #168="__default" #168# "S" "float" #169# "public"))) (#171="SplInt" (("d" #170="__default" #170# "S" "integer" #171# "public"))) (#173="SplType" (("m" "__construct" "mixed $initial_value,bool $strict" #339="S" "void" "SplType" "public") ("d" #172="__default" #172# "S" "NULL" #173# "public"))) (#174="ZipArchive" (("m" "unchangeName" "string $name" "S" "bool" "ZipArchive" "public") ("m" "unchangeIndex" "int $index" "S" "bool" "ZipArchive" "public") ("m" "unchangeArchive" #1# "S" "bool" "ZipArchive" "public") ("m" "unchangeAll" #1# "S" "bool" "ZipArchive" "public") ("m" "statName" "string $name,int $flags" "S" "array" "ZipArchive" "public") ("m" "statIndex" "int $index,int $flags" "S" "array" "ZipArchive" "public") ("m" "setPassword" "string $password" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesName" "string $name,int $opsys,int $attr,int $flags" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesIndex" "int $index,int $opsys,int $attr,int $flags" "S" "bool" "ZipArchive" "public") ("m" "setCompressionName" "string $name,int $comp_method,int $comp_flags = 0" "S" "bool" "ZipArchive" "public") ("m" "setCompressionIndex" "int $index,int $comp_method,int $comp_flags = 0" "S" "bool" "ZipArchive" "public") ("m" "setCommentName" "string $name,string $comment" "S" "bool" "ZipArchive" "public") ("m" "setCommentIndex" "int $index,string $comment" "S" "bool" "ZipArchive" "public") ("m" "setArchiveComment" "string $comment" "S" "bool" "ZipArchive" "public") ("m" "renameName" "string $name,string $newname" "S" "bool" "ZipArchive" "public") ("m" "renameIndex" "int $index,string $newname" "S" "bool" "ZipArchive" "public") ("m" "open" "string $filename,int $flags" "S" "mixed" "ZipArchive" "public") ("m" "locateName" "string $name,int $flags" "S" "int" "ZipArchive" "public") ("m" "getStream" "string $name" "S" "resource" "ZipArchive" "public") ("m" "getStatusString" #1# "S" "string" "ZipArchive" "public") ("m" "getNameIndex" "int $index,int $flags" "S" "string" "ZipArchive" "public") ("m" "getFromName" "string $name,int $length = 0,int $flags" "S" "string" "ZipArchive" "public") ("m" "getFromIndex" "int $index,int $length = 0,int $flags" "S" "string" "ZipArchive" "public") ("m" "getExternalAttributesName" "string $name,int &$opsys,int &$attr,int $flags" "S" "bool" "ZipArchive" "public") ("m" "GetExternalAttributesIndex" "int $index,int &$opsys,int &$attr,int $flags" "S" "bool" "ZipArchive" "public") ("m" "getCommentName" "string $name,int $flags" "S" "string" "ZipArchive" "public") ("m" "getCommentIndex" "int $index,int $flags" "S" "string" "ZipArchive" "public") ("m" "getArchiveComment" "int $flags" "S" "string" "ZipArchive" "public") ("m" "extractTo" "string $destination,mixed $entries" "S" "bool" "ZipArchive" "public") ("m" "deleteName" "string $name" "S" "bool" "ZipArchive" "public") ("m" "deleteIndex" "int $index" "S" "bool" "ZipArchive" "public") ("m" "close" #1# "S" "bool" "ZipArchive" "public") ("m" "addPattern" ")" "S" "bool" "ZipArchive" "public") ("m" "addGlob" ")" "S" "bool" "ZipArchive" "public") ("m" "addFromString" "string $localname,string $contents" "S" "bool" "ZipArchive" "public") ("m" "addFile" "string $filename,string $localname = NULL,int $start = 0,int $length = 0" "S" "bool" "ZipArchive" "public") ("m" "addEmptyDir" "string $dirname" "S" "bool" #174# "public"))) (#175="DOMXPath" (("m" "registerPhpFunctions" "mixed $restrict" "S" "void" "DOMXPath" "public") ("m" "registerNamespace" "string $prefix,string $namespaceURI" "S" "bool" "DOMXPath" "public") ("m" "query" "string $expression,DOMNode $contextnode,bool $registerNodeNS = true" "S" "DOMNodeList" "DOMXPath" "public") ("m" "evaluate" "string $expression,DOMNode $contextnode,bool $registerNodeNS = true" "S" "mixed" "DOMXPath" "public") ("m" "__construct" "DOMDocument $doc" #338="S" "void" "DOMXPath" "public") ("p" "document" #1# "S" "DOMDocument" #175# "public"))) (#176="DOMText" (("m" "splitText" "int $offset" "S" "DOMText" "DOMText" "public") ("m" "isWhitespaceInElementContent" #1# "S" "bool" "DOMText" "public") ("m" "__construct" "string $value" #337="S" "void" "DOMText" "public") ("p" "wholeText" #1# "S" "string" #176# "public"))) (#177="DOMProcessingInstruction" (("m" "__construct" "string $name,string $value" #336="S" "void" "DOMProcessingInstruction" "public") ("p" "data" #1# "S" "string" "DOMProcessingInstruction" "public") ("p" "target" #1# "S" "string" #177# "public"))) (#178="DOMNotation" (("p" "systemId" #1# "S" "string" "DOMNotation" "public") ("p" "publicId" #1# "S" "string" #178# "public"))) (#179="DOMNodeList" (("m" "item" "int $index" "S" "DOMNode" "DOMNodeList" "public") ("p" "length" #1# "S" "int" #179# "public"))) (#180="DOMNode" (("m" "replaceChild" "DOMNode $newnode,DOMNode $oldnode" "S" "DOMNode" "DOMNode" "public") ("m" "removeChild" "DOMNode $oldnode" "S" "DOMNode" "DOMNode" "public") ("m" "normalize" #1# "S" "void" "DOMNode" "public") ("m" "lookupPrefix" "string $namespaceURI" "S" "string" "DOMNode" "public") ("m" "lookupNamespaceURI" "string $prefix" "S" "string" "DOMNode" "public") ("m" "isSupported" "string $feature,string $version" "S" "bool" "DOMNode" "public") ("m" "isSameNode" "DOMNode $node" "S" "bool" "DOMNode" "public") ("m" "isDefaultNamespace" "string $namespaceURI" "S" "bool" "DOMNode" "public") ("m" "insertBefore" "DOMNode $newnode,DOMNode $refnode" "S" "DOMNode" "DOMNode" "public") ("m" "hasChildNodes" #1# "S" "bool" "DOMNode" "public") ("m" "hasAttributes" #1# "S" "bool" "DOMNode" "public") ("m" "getNodePath" #1# "S" "string" "DOMNode" "public") ("m" "getLineNo" #1# "S" "int" "DOMNode" "public") ("m" "cloneNode" "bool $deep" "S" "DOMNode" "DOMNode" "public") ("m" "C14NFile" "string $uri,bool $exclusive,bool $with_comments,array $xpath,array $ns_prefixes" "S" "int" "DOMNode" "public") ("m" "C14N" "bool $exclusive,bool $with_comments,array $xpath,array $ns_prefixes" "S" "string" "DOMNode" "public") ("m" "appendChild" "DOMNode $newnode" "S" "DOMNode" "DOMNode" "public") ("p" "textContent" #1# "S" "string" "DOMNode" "public") ("p" "baseURI" #1# "S" "string" "DOMNode" "public") ("p" "localName" #1# "S" "string" "DOMNode" "public") ("p" "prefix" #1# "S" "string" "DOMNode" "public") ("p" "namespaceURI" #1# "S" "string" "DOMNode" "public") ("p" "ownerDocument" #1# "S" "DOMDocument" "DOMNode" "public") ("p" "attributes" #1# "S" "DOMNamedNodeMap" "DOMNode" "public") ("p" "nextSibling" #1# "S" "DOMNode" "DOMNode" "public") ("p" "previousSibling" #1# "S" "DOMNode" "DOMNode" "public") ("p" "lastChild" #1# "S" "DOMNode" "DOMNode" "public") ("p" "firstChild" #1# "S" "DOMNode" "DOMNode" "public") ("p" "childNodes" #1# "S" "DOMNodeList" "DOMNode" "public") ("p" "parentNode" #1# "S" "DOMNode" "DOMNode" "public") ("p" "nodeType" #1# "S" "int" "DOMNode" "public") ("p" "nodeValue" #1# "S" "string" "DOMNode" "public") ("p" "nodeName" #1# "S" "string" #180# "public"))) (#181="DOMNamedNodeMap" (("m" "item" "int $index" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItemNS" "string $namespaceURI,string $localName" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItem" "string $name" "S" "DOMNode" "DOMNamedNodeMap" "public") ("p" "length" #1# "S" "int" #181# "public"))) (#182="DOMImplementation" (("m" "hasFeature" "string $feature,string $version" "S" "bool" "DOMImplementation" "public") ("m" "createDocumentType" "string $qualifiedName = NULL,string $publicId = NULL,string $systemId = NULL" "S" "DOMDocumentType" "DOMImplementation" "public") ("m" "createDocument" "string $namespaceURI = NULL,string $qualifiedName = NULL,DOMDocumentType $doctype = NULL" "S" "DOMDocument" "DOMImplementation" "public") ("m" "__construct" #1# #335="S" "void" #182# "public"))) (#183="DOMException" (("p" "code" #1# "S" "int" #183# "public"))) (#184="DOMEntityReference" (("m" "__construct" "string $name" #334="S" "void" #184# "public"))) (#185="DOMEntity" (("p" "version" #1# "S" "string" "DOMEntity" "public") ("p" "encoding" #1# "S" "string" "DOMEntity" "public") ("p" "actualEncoding" #1# "S" "string" "DOMEntity" "public") ("p" "notationName" #1# "S" "string" "DOMEntity" "public") ("p" "systemId" #1# "S" "string" "DOMEntity" "public") ("p" "publicId" #1# "S" "string" #185# "public"))) (#186="DOMElement" (("m" "setIdAttributeNS" "string $namespaceURI,string $localName,bool $isId" "S" "void" "DOMElement" "public") ("m" "setIdAttributeNode" "DOMAttr $attr,bool $isId" "S" "void" "DOMElement" "public") ("m" "setIdAttribute" "string $name,bool $isId" "S" "void" "DOMElement" "public") ("m" "setAttributeNS" "string $namespaceURI,string $qualifiedName,string $value" "S" "void" "DOMElement" "public") ("m" "setAttributeNodeNS" "DOMAttr $attr" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttributeNode" "DOMAttr $attr" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttribute" "string $name,string $value" "S" "DOMAttr" "DOMElement" "public") ("m" "removeAttributeNS" "string $namespaceURI,string $localName" "S" "bool" "DOMElement" "public") ("m" "removeAttributeNode" "DOMAttr $oldnode" "S" "bool" "DOMElement" "public") ("m" "removeAttribute" "string $name" "S" "bool" "DOMElement" "public") ("m" "hasAttributeNS" "string $namespaceURI,string $localName" "S" "bool" "DOMElement" "public") ("m" "hasAttribute" "string $name" "S" "bool" "DOMElement" "public") ("m" "getElementsByTagNameNS" "string $namespaceURI,string $localName" "S" "DOMNodeList" "DOMElement" "public") ("m" "getElementsByTagName" "string $name" "S" "DOMNodeList" "DOMElement" "public") ("m" "getAttributeNS" "string $namespaceURI,string $localName" "S" "string" "DOMElement" "public") ("m" "getAttributeNodeNS" "string $namespaceURI,string $localName" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttributeNode" "string $name" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttribute" "string $name" "S" "string" "DOMElement" "public") ("m" "__construct" "string $name,string $value,string $namespaceURI" #333="S" "void" "DOMElement" "public") ("p" "tagName" #1# "S" "string" "DOMElement" "public") ("p" "schemaTypeInfo" #1# "S" "bool" #186# "public"))) (#187="DOMDocumentType" (("p" "internalSubset" #1# "S" "string" "DOMDocumentType" "public") ("p" "notations" #1# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" "entities" #1# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" "name" #1# "S" "string" "DOMDocumentType" "public") ("p" "systemId" #1# "S" "string" "DOMDocumentType" "public") ("p" "publicId" #1# "S" "string" #187# "public"))) (#188="DOMDocumentFragment" (("m" "appendXML" "string $data" "S" "bool" #188# "public"))) (#189="DOMDocument" (("m" "xinclude" "int $options" "S" "int" "DOMDocument" "public") ("m" "validate" #1# "S" "bool" "DOMDocument" "public") ("m" "schemaValidateSource" "string $source,int $flags" "S" "bool" "DOMDocument" "public") ("m" "schemaValidate" "string $filename,int $flags" "S" "bool" "DOMDocument" "public") ("m" "saveXML" "DOMNode $node,int $options" "S" "string" "DOMDocument" "public") ("m" "saveHTMLFile" "string $filename" "S" "int" "DOMDocument" "public") ("m" "saveHTML" "DOMNode $node = NULL" "S" "string" "DOMDocument" "public") ("m" "save" "string $filename,int $options" "S" "int" "DOMDocument" "public") ("m" "relaxNGValidateSource" "string $source" "S" "bool" "DOMDocument" "public") ("m" "relaxNGValidate" "string $filename" "S" "bool" "DOMDocument" "public") ("m" "registerNodeClass" "string $baseclass,string $extendedclass" "S" "bool" "DOMDocument" "public") ("m" "normalizeDocument" #1# "S" "void" "DOMDocument" "public") ("m" "loadXML" "string $source,int $options = 0" "S" "mixed" "DOMDocument" "public") ("m" "loadHTMLFile" "string $filename,int $options = 0" "S" "bool" "DOMDocument" "public") ("m" "loadHTML" "string $source,int $options = 0" "S" "bool" "DOMDocument" "public") ("m" "load" "string $filename,int $options = 0" "S" "mixed" "DOMDocument" "public") ("m" "importNode" "DOMNode $importedNode,bool $deep" "S" "DOMNode" "DOMDocument" "public") ("m" "getElementsByTagNameNS" "string $namespaceURI,string $localName" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementsByTagName" "string $name" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementById" "string $elementId" "S" "DOMElement" "DOMDocument" "public") ("m" "createTextNode" "string $content" "S" "DOMText" "DOMDocument" "public") ("m" "createProcessingInstruction" "string $target,string $data" "S" "DOMProcessingInstruction" "DOMDocument" "public") ("m" "createEntityReference" "string $name" "S" "DOMEntityReference" "DOMDocument" "public") ("m" "createElementNS" "string $namespaceURI,string $qualifiedName,string $value" "S" "DOMElement" "DOMDocument" "public") ("m" "createElement" "string $name,string $value" "S" "DOMElement" "DOMDocument" "public") ("m" "createDocumentFragment" #1# "S" "DOMDocumentFragment" "DOMDocument" "public") ("m" "createComment" "string $data" "S" "DOMComment" "DOMDocument" "public") ("m" "createCDATASection" "string $data" "S" "DOMCDATASection" "DOMDocument" "public") ("m" "createAttributeNS" "string $namespaceURI,string $qualifiedName" "S" "DOMAttr" "DOMDocument" "public") ("m" "createAttribute" "string $name" "S" "DOMAttr" "DOMDocument" "public") ("m" "__construct" "string $version,string $encoding" #332="S" "void" "DOMDocument" "public") ("p" "xmlVersion" #1# "S" "string" "DOMDocument" "public") ("p" "xmlStandalone" #1# "S" "bool" "DOMDocument" "public") ("p" "xmlEncoding" #1# "S" "string" "DOMDocument" "public") ("p" "version" #1# "S" "string" "DOMDocument" "public") ("p" "validateOnParse" #1# "S" "bool" "DOMDocument" "public") ("p" "substituteEntities" #1# "S" "bool" "DOMDocument" "public") ("p" "strictErrorChecking" #1# "S" "bool" "DOMDocument" "public") ("p" "standalone" #1# "S" "bool" "DOMDocument" "public") ("p" "resolveExternals" #1# "S" "bool" "DOMDocument" "public") ("p" "recover" #1# "S" "bool" "DOMDocument" "public") ("p" "preserveWhiteSpace" #1# "S" "bool" "DOMDocument" "public") ("p" "implementation" #1# "S" "DOMImplementation" "DOMDocument" "public") ("p" "formatOutput" #1# "S" "bool" "DOMDocument" "public") ("p" "encoding" #1# "S" "string" "DOMDocument" "public") ("p" "documentURI" #1# "S" "string" "DOMDocument" "public") ("p" "documentElement" #1# "S" "DOMElement" "DOMDocument" "public") ("p" "doctype" #1# "S" "DOMDocumentType" "DOMDocument" "public") ("p" "config" #1# "S" "DOMConfiguration" "DOMDocument" "public") ("p" "actualEncoding" #1# "S" "string" #189# "public"))) (#190="DOMComment" (("m" "__construct" "string $value" #331="S" "void" #190# "public"))) (#191="DOMCharacterData" (("m" "substringData" "int $offset,int $count" "S" "string" "DOMCharacterData" "public") ("m" "replaceData" "int $offset,int $count,string $data" "S" "void" "DOMCharacterData" "public") ("m" "insertData" "int $offset,string $data" "S" "void" "DOMCharacterData" "public") ("m" "deleteData" "int $offset,int $count" "S" "void" "DOMCharacterData" "public") ("m" "appendData" "string $data" "S" "void" "DOMCharacterData" "public") ("p" "length" #1# "S" "int" "DOMCharacterData" "public") ("p" "data" #1# "S" "string" #191# "public"))) (#192="DOMCdataSection" (("m" "__construct" "string $value" #330="S" "void" #192# "public"))) (#193="DOMAttr" (("m" "isId" #1# "S" "bool" "DOMAttr" "public") ("m" "__construct" "string $name,string $value" #329="S" "void" "DOMAttr" "public") ("p" "value" #1# "S" "string" "DOMAttr" "public") ("p" "specified" #1# "S" "bool" "DOMAttr" "public") ("p" "schemaTypeInfo" #1# "S" "bool" "DOMAttr" "public") ("p" "ownerElement" #1# "S" "DOMElement" "DOMAttr" "public") ("p" "name" #1# "S" "string" #193# "public"))) (#194="SplSubject" (("m" "notify" #1# "S" "void" "SplSubject" "public") ("m" "detach" "SplObserver $observer" "S" "void" "SplSubject" "public") ("m" "attach" "SplObserver $observer" "S" "void" #194# "public"))) (#195="SplObserver" (("m" "update" "SplSubject $subject" "S" "void" #195# "public"))) (#198="ArrayObject" (("m" "unserialize" "string $serialized" "S" "void" "ArrayObject" "public") ("m" "uksort" "callable $cmp_function" "S" "void" "ArrayObject" "public") ("m" "uasort" "callable $cmp_function" "S" "void" "ArrayObject" "public") ("m" "setIteratorClass" "string $iterator_class" "S" "void" "ArrayObject" "public") ("m" "setFlags" "int $flags" "S" "void" "ArrayObject" "public") ("m" "serialize" #1# "S" "string" "ArrayObject" "public") ("m" "offsetUnset" "mixed $index" "S" "void" "ArrayObject" "public") ("m" "offsetSet" "mixed $index,mixed $newval" "S" "void" "ArrayObject" "public") ("m" "offsetGet" "mixed $index" "S" "mixed" "ArrayObject" "public") ("m" "offsetExists" "mixed $index" "S" "bool" "ArrayObject" "public") ("m" "natsort" #1# "S" "void" "ArrayObject" "public") ("m" "natcasesort" #1# "S" "void" "ArrayObject" "public") ("m" "ksort" #1# "S" "void" "ArrayObject" "public") ("m" "getIteratorClass" #1# "S" "string" "ArrayObject" "public") ("m" "getIterator" #1# "S" "ArrayIterator" "ArrayObject" "public") ("m" "getFlags" #1# "S" "int" "ArrayObject" "public") ("m" "getArrayCopy" #1# "S" "array" "ArrayObject" "public") ("m" "exchangeArray" "mixed $input" "S" "array" "ArrayObject" "public") ("m" "count" #1# "S" "int" "ArrayObject" "public") ("m" "asort" #1# "S" "void" "ArrayObject" "public") ("m" "append" "mixed $value" "S" "void" "ArrayObject" "public") ("m" "__construct" "mixed $input = null,int $flags = 0,string $iterator_class = \"ArrayIterator\"" #328="S" "void" "ArrayObject" "public") ("d" #196="ARRAY_AS_PROPS" #196# "S" "integer" "ArrayObject" "public") ("d" #197="STD_PROP_LIST" #197# "S" "integer" #198# "public"))) (#199="SplTempFileObject" (("m" "__construct" "int $max_memory" #327="S" "void" #199# "public"))) (#204="SplFileObject" (("m" "valid" #1# "S" "bool" "SplFileObject" "public") ("m" "__toString" #1# "S" "void" "SplFileObject" "public") ("m" "setMaxLineLen" "int $max_len" "S" "void" "SplFileObject" "public") ("m" "setFlags" "int $flags" "S" "void" "SplFileObject" "public") ("m" "setCsvControl" "string $delimiter = \",\",string $enclosure = \"\\\"\",string $escape = \"\\\\\"" "S" "void" "SplFileObject" "public") ("m" "seek" "int $line_pos" "S" "void" "SplFileObject" "public") ("m" "rewind" #1# "S" "void" "SplFileObject" "public") ("m" "next" #1# "S" "void" "SplFileObject" "public") ("m" "key" #1# "S" "int" "SplFileObject" "public") ("m" "hasChildren" #1# "S" "bool" "SplFileObject" "public") ("m" "getMaxLineLen" #1# "S" "int" "SplFileObject" "public") ("m" "getFlags" #1# "S" "int" "SplFileObject" "public") ("m" "getCsvControl" #1# "S" "array" "SplFileObject" "public") ("m" "getChildren" #1# "S" "void" "SplFileObject" "public") ("m" "fwrite" "string $str,int $length" "S" "int" "SplFileObject" "public") ("m" "ftruncate" "int $size" "S" "bool" "SplFileObject" "public") ("m" "ftell" #1# "S" "int" "SplFileObject" "public") ("m" "fstat" #1# "S" "array" "SplFileObject" "public") ("m" "fseek" "int $offset,int $whence = SEEK_SET" "S" "int" "SplFileObject" "public") ("m" "fscanf" "string $format,$args" "S" "mixed" "SplFileObject" "public") ("m" "fread" "int $length" "S" "string" "SplFileObject" "public") ("m" "fputcsv" "array $fields,string $delimiter = \",\",string $enclosure = '\"',string $escape = \"\\\\\"" "S" "int" "SplFileObject" "public") ("m" "fpassthru" #1# "S" "int" "SplFileObject" "public") ("m" "flock" "int $operation,int &$wouldblock" "S" "bool" "SplFileObject" "public") ("m" "fgetss" "string $allowable_tags" "S" "string" "SplFileObject" "public") ("m" "fgets" #1# "S" "string" "SplFileObject" "public") ("m" "fgetcsv" "string $delimiter = \",\",string $enclosure = \"\\\"\",string $escape = \"\\\\\"" "S" "array" "SplFileObject" "public") ("m" "fgetc" #1# "S" "string" "SplFileObject" "public") ("m" "fflush" #1# "S" "bool" "SplFileObject" "public") ("m" "eof" #1# "S" "bool" "SplFileObject" "public") ("m" "current" #1# "S" "string" "SplFileObject" "public") ("d" #200="READ_CSV" #200# "S" "integer" "SplFileObject" "public") ("d" #201="SKIP_EMPTY" #201# "S" "integer" "SplFileObject" "public") ("d" #202="READ_AHEAD" #202# "S" "integer" "SplFileObject" "public") ("d" #203="DROP_NEW_LINE" #203# "S" "integer" #204# "public"))) (#205="SplFileInfo" (("m" "__toString" #1# "S" "void" "SplFileInfo" "public") ("m" "setInfoClass" "string $class_name = \"SplFileInfo\"" "S" "void" "SplFileInfo" "public") ("m" "setFileClass" "string $class_name = \"SplFileObject\"" "S" "void" "SplFileInfo" "public") ("m" "openFile" "string $open_mode = \"r\",bool $use_include_path = false,resource $context = NULL" "S" "SplFileObject" "SplFileInfo" "public") ("m" "isWritable" #1# "S" "bool" "SplFileInfo" "public") ("m" "isReadable" #1# "S" "bool" "SplFileInfo" "public") ("m" "isLink" #1# "S" "bool" "SplFileInfo" "public") ("m" "isFile" #1# "S" "bool" "SplFileInfo" "public") ("m" "isExecutable" #1# "S" "bool" "SplFileInfo" "public") ("m" "isDir" #1# "S" "bool" "SplFileInfo" "public") ("m" "getType" #1# "S" "string" "SplFileInfo" "public") ("m" "getSize" #1# "S" "int" "SplFileInfo" "public") ("m" "getRealPath" #1# "S" "string" "SplFileInfo" "public") ("m" "getPerms" #1# "S" "int" "SplFileInfo" "public") ("m" "getPathname" #1# "S" "string" "SplFileInfo" "public") ("m" "getPathInfo" "string $class_name" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getPath" #1# "S" "string" "SplFileInfo" "public") ("m" "getOwner" #1# "S" "int" "SplFileInfo" "public") ("m" "getMTime" #1# "S" "int" "SplFileInfo" "public") ("m" "getLinkTarget" #1# "S" "string" "SplFileInfo" "public") ("m" "getInode" #1# "S" "int" "SplFileInfo" "public") ("m" "getGroup" #1# "S" "int" "SplFileInfo" "public") ("m" "getFilename" #1# "S" "string" "SplFileInfo" "public") ("m" "getFileInfo" "string $class_name" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getExtension" #1# "S" "string" "SplFileInfo" "public") ("m" "getCTime" #1# "S" "int" "SplFileInfo" "public") ("m" "getBasename" "string $suffix" "S" "string" "SplFileInfo" "public") ("m" "getATime" #1# "S" "int" "SplFileInfo" "public") ("m" "__construct" "string $file_name" #326="S" "void" #205# "public"))) (#325="UnexpectedValueException" nil) (#324="UnderflowException" nil) (#323="RuntimeException" nil) (#322="RangeException" nil) (#321="OverflowException" nil) (#320="OutOfRangeException" nil) (#319="OutOfBoundsException" nil) (#318="LengthException" nil) (#317="InvalidArgumentException" nil) (#316="DomainException" nil) (#315="BadMethodCallException" nil) (#314="BadFunctionCallException" nil) (#313="LogicException" nil) (#206="Exception" (("m" "__clone" #1# "S" "private" "Exception" "public") ("m" "__toString" #1# "S" "string" "Exception" "public") ("m" "getTraceAsString" #1# "S" "string" "Exception" "public") ("m" "getTrace" #1# "S" "array" "Exception" "public") ("m" "getLine" #1# "S" "int" "Exception" "public") ("m" "getFile" #1# "S" "string" "Exception" "public") ("m" "getCode" #1# "S" "int" "Exception" "public") ("m" "getPrevious" #1# "S" "Exception" "Exception" "public") ("m" "getMessage" #1# "S" "string" "Exception" "public") ("m" "__construct" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312="S" "void" "Exception" "public") ("p" "line" #1# "S" "int" "Exception" "protected") ("p" "file" #1# "S" "string" "Exception" "protected") ("p" "code" #1# "S" "int" "Exception" "protected") ("p" "message" #1# "S" "string" #206# "protected"))) (#442="Traversable" nil) (#207="Iterator" (("m" "valid" #1# "S" "boolean" "Iterator" "public") ("m" "rewind" #1# "S" "void" "Iterator" "public") ("m" "next" #1# "S" "void" "Iterator" "public") ("m" "key" #1# "S" "scalar" "Iterator" "public") ("m" "current" #1# "S" "mixed" #207# "public"))) (#208="Countable" (("m" "count" #1# "S" "int" #208# "public"))) (#209="RecursiveIterator" (("m" "hasChildren" #1# "S" "bool" "RecursiveIterator" "public") ("m" "getChildren" #1# "S" "RecursiveIterator" #209# "public"))) (#216="RegexIterator" (("m" "setPregFlags" "int $preg_flags" "S" "void" "RegexIterator" "public") ("m" "setMode" "int $mode" "S" "void" "RegexIterator" "public") ("m" "setFlags" "int $flags" "S" "void" "RegexIterator" "public") ("m" "getRegex" #1# "S" "string" "RegexIterator" "public") ("m" "getPregFlags" #1# "S" "int" "RegexIterator" "public") ("m" "getMode" #1# "S" "int" "RegexIterator" "public") ("m" "getFlags" #1# "S" "int" "RegexIterator" "public") ("m" "accept" #1# "S" "bool" "RegexIterator" "public") ("m" "__construct" "Iterator $iterator,string $regex,int $mode = self::MATCH,int $flags = 0,int $preg_flags = 0" #311="S" "void" "RegexIterator" "public") ("d" #210="USE_KEY" #210# "S" "integer" "RegexIterator" "public") ("d" #211="REPLACE" #211# "S" "integer" "RegexIterator" "public") ("d" #212="SPLIT" #212# "S" "integer" "RegexIterator" "public") ("d" #213="ALL_MATCHES" #213# "S" "integer" "RegexIterator" "public") ("d" #214="GET_MATCH" #214# "S" "integer" "RegexIterator" "public") ("d" #215="MATCH" #215# "S" "integer" #216# "public"))) (#225="RecursiveTreeIterator" (("m" "valid" #1# "S" "bool" "RecursiveTreeIterator" "public") ("m" "setPrefixPart" "int $part,string $value" "S" "void" "RecursiveTreeIterator" "public") ("m" "rewind" #1# "S" "void" "RecursiveTreeIterator" "public") ("m" "nextElement" #1# "S" "void" "RecursiveTreeIterator" "public") ("m" "next" #1# "S" "void" "RecursiveTreeIterator" "public") ("m" "key" #1# "S" "string" "RecursiveTreeIterator" "public") ("m" "getPrefix" #1# "S" "string" "RecursiveTreeIterator" "public") ("m" "getPostfix" #1# "S" "void" "RecursiveTreeIterator" "public") ("m" "getEntry" #1# "S" "string" "RecursiveTreeIterator" "public") ("m" "endIteration" #1# "S" "void" "RecursiveTreeIterator" "public") ("m" "endChildren" #1# "S" "void" "RecursiveTreeIterator" "public") ("m" "current" #1# "S" "string" "RecursiveTreeIterator" "public") ("m" "__construct" "RecursiveIterator_IteratorAggregate $it,int $flags = RecursiveTreeIterator::BYPASS_KEY,int $cit_flags = CachingIterator::CATCH_GET_CHILD,int $mode = RecursiveIteratorIterator::SELF_FIRST" #310="S" "void" "RecursiveTreeIterator" "public") ("m" "callHasChildren" #1# "S" "bool" "RecursiveTreeIterator" "public") ("m" "callGetChildren" #1# "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginIteration" #1# "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginChildren" #1# "S" "void" "RecursiveTreeIterator" "public") ("d" #217="PREFIX_RIGHT" #217# "S" "integer" "RecursiveTreeIterator" "public") ("d" #218="PREFIX_END_LAST" #218# "S" "integer" "RecursiveTreeIterator" "public") ("d" #219="PREFIX_END_HAS_NEXT" #219# "S" "integer" "RecursiveTreeIterator" "public") ("d" #220="PREFIX_MID_LAST" #220# "S" "integer" "RecursiveTreeIterator" "public") ("d" #221="PREFIX_MID_HAS_NEXT" #221# "S" "integer" "RecursiveTreeIterator" "public") ("d" #222="PREFIX_LEFT" #222# "S" "integer" "RecursiveTreeIterator" "public") ("d" #223="BYPASS_KEY" #223# "S" "integer" "RecursiveTreeIterator" "public") ("d" #224="BYPASS_CURRENT" #224# "S" "integer" #225# "public"))) (#226="RecursiveRegexIterator" (("m" "hasChildren" #1# "S" "bool" "RecursiveRegexIterator" "public") ("m" "getChildren" #1# "S" "RecursiveRegexIterator" "RecursiveRegexIterator" "public") ("m" "__construct" "RecursiveIterator $iterator,string $regex,int $mode = self::MATCH,int $flags = 0,int $preg_flags = 0" #309="S" "void" #226# "public"))) (#231="RecursiveIteratorIterator" (("m" "valid" #1# "S" "bool" "RecursiveIteratorIterator" "public") ("m" "setMaxDepth" "string $max_depth = -1" "S" "void" "RecursiveIteratorIterator" "public") ("m" "rewind" #1# "S" "void" "RecursiveIteratorIterator" "public") ("m" "nextElement" #1# "S" "void" "RecursiveIteratorIterator" "public") ("m" "next" #1# "S" "void" "RecursiveIteratorIterator" "public") ("m" "key" #1# "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getSubIterator" "int $level" "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "getMaxDepth" #1# "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getInnerIterator" #1# "S" "iterator" "RecursiveIteratorIterator" "public") ("m" "getDepth" #1# "S" "int" "RecursiveIteratorIterator" "public") ("m" "endIteration" #1# "S" "void" "RecursiveIteratorIterator" "public") ("m" "endChildren" #1# "S" "void" "RecursiveIteratorIterator" "public") ("m" "current" #1# "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "__construct" "Traversable $iterator,int $mode = RecursiveIteratorIterator::LEAVES_ONLY,int $flags = 0" #308="S" "void" "RecursiveIteratorIterator" "public") ("m" "callHasChildren" #1# "S" "bool" "RecursiveIteratorIterator" "public") ("m" "callGetChildren" #1# "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "beginIteration" #1# "S" "void" "RecursiveIteratorIterator" "public") ("m" "beginChildren" #1# "S" "void" "RecursiveIteratorIterator" "public") ("d" #227="CATCH_GET_CHILD" #227# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #228="CHILD_FIRST" #228# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #229="SELF_FIRST" #229# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #230="LEAVES_ONLY" #230# "S" "integer" #231# "public"))) (#232="RecursiveFilterIterator" (("m" "hasChildren" #1# "S" "bool" "RecursiveFilterIterator" "public") ("m" "getChildren" #1# "S" "RecursiveFilterIterator" "RecursiveFilterIterator" "public") ("m" "__construct" "RecursiveIterator $iterator" #307="S" "void" #232# "public"))) (#233="RecursiveDirectoryIterator" (("m" "rewind" #1# "S" "void" "RecursiveDirectoryIterator" "public") ("m" "next" #1# "S" "void" "RecursiveDirectoryIterator" "public") ("m" "key" #1# "S" "string" "RecursiveDirectoryIterator" "public") ("m" "hasChildren" "bool $allow_links = false" "S" "bool" "RecursiveDirectoryIterator" "public") ("m" "getSubPathname" #1# "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getSubPath" #1# "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getChildren" #1# "S" "mixed" "RecursiveDirectoryIterator" "public") ("m" "__construct" "string $path,int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO" #306="S" "void" #233# "public"))) (#234="RecursiveCallbackFilterIterator" (("m" "hasChildren" #1# "S" "void" "RecursiveCallbackFilterIterator" "public") ("m" "getChildren" #1# "S" "RecursiveCallbackFilterIterator" "RecursiveCallbackFilterIterator" "public") ("m" "__construct" "RecursiveIterator $iterator,string $callback" #305="S" "void" #234# "public"))) (#235="RecursiveCachingIterator" (("m" "hasChildren" #1# "S" "bool" "RecursiveCachingIterator" "public") ("m" "getChildren" #1# "S" "RecursiveCachingIterator" "RecursiveCachingIterator" "public") ("m" "__construct" "Iterator $iterator,string $flags = self::CALL_TOSTRING" #304="S" "void" #235# "public"))) (#236="RecursiveArrayIterator" (("m" "hasChildren" #1# "S" "bool" "RecursiveArrayIterator" "public") ("m" "getChildren" #1# "S" "RecursiveArrayIterator" #236# "public"))) (#237="ParentIterator" (("m" "rewind" #1# "S" "void" "ParentIterator" "public") ("m" "next" #1# "S" "void" "ParentIterator" "public") ("m" "hasChildren" #1# "S" "bool" "ParentIterator" "public") ("m" "getChildren" #1# "S" "ParentIterator" "ParentIterator" "public") ("m" "__construct" "RecursiveIterator $iterator" #303="S" "void" "ParentIterator" "public") ("m" "accept" #1# "S" "bool" #237# "public"))) (#238="NoRewindIterator" (("m" "valid" #1# "S" "bool" "NoRewindIterator" "public") ("m" "rewind" #1# "S" "void" "NoRewindIterator" "public") ("m" "next" #1# "S" "void" "NoRewindIterator" "public") ("m" "key" #1# "S" "mixed" "NoRewindIterator" "public") ("m" "getInnerIterator" #1# "S" "iterator" "NoRewindIterator" "public") ("m" "current" #1# "S" "mixed" "NoRewindIterator" "public") ("m" "__construct" "Iterator $iterator" #302="S" "void" #238# "public"))) (#243="MultipleIterator" (("m" "valid" #1# "S" "void" "MultipleIterator" "public") ("m" "setFlags" "int $flags" "S" "void" "MultipleIterator" "public") ("m" "rewind" #1# "S" "void" "MultipleIterator" "public") ("m" "next" #1# "S" "void" "MultipleIterator" "public") ("m" "key" #1# "S" "array" "MultipleIterator" "public") ("m" "getFlags" #1# "S" "void" "MultipleIterator" "public") ("m" "detachIterator" "Iterator $iterator" "S" "void" "MultipleIterator" "public") ("m" "current" #1# "S" "array" "MultipleIterator" "public") ("m" "countIterators" #1# "S" "void" "MultipleIterator" "public") ("m" "containsIterator" "Iterator $iterator" "S" "void" "MultipleIterator" "public") ("m" "attachIterator" "Iterator $iterator,string $infos" "S" "void" "MultipleIterator" "public") ("m" "__construct" "int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC" #301="S" "void" "MultipleIterator" "public") ("d" #239="MIT_KEYS_ASSOC" #239# "S" "integer" "MultipleIterator" "public") ("d" #240="MIT_KEYS_NUMERIC" #240# "S" "integer" "MultipleIterator" "public") ("d" #241="MIT_NEED_ALL" #241# "S" "integer" "MultipleIterator" "public") ("d" #242="MIT_NEED_ANY" #242# "S" "integer" #243# "public"))) (#244="LimitIterator" (("m" "valid" #1# "S" "bool" "LimitIterator" "public") ("m" "seek" "int $position" "S" "int" "LimitIterator" "public") ("m" "rewind" #1# "S" "void" "LimitIterator" "public") ("m" "next" #1# "S" "void" "LimitIterator" "public") ("m" "key" #1# "S" "mixed" "LimitIterator" "public") ("m" "getPosition" #1# "S" "int" "LimitIterator" "public") ("m" "getInnerIterator" #1# "S" "Iterator" "LimitIterator" "public") ("m" "current" #1# "S" "mixed" "LimitIterator" "public") ("m" "__construct" "Iterator $iterator,int $offset = 0,int $count = -1" #300="S" "void" #244# "public"))) (#245="InfiniteIterator" (("m" "next" #1# "S" "void" "InfiniteIterator" "public") ("m" "__construct" "Iterator $iterator" #299="S" "void" #245# "public"))) (#246="GlobIterator" (("m" "count" #1# "S" "int" "GlobIterator" "public") ("m" "__construct" "string $path,int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO" #298="S" "void" #246# "public"))) (#247="FilterIterator" (("m" "valid" #1# "S" "bool" "FilterIterator" "public") ("m" "rewind" #1# "S" "void" "FilterIterator" "public") ("m" "next" #1# "S" "void" "FilterIterator" "public") ("m" "key" #1# "S" "mixed" "FilterIterator" "public") ("m" "getInnerIterator" #1# "S" "Iterator" "FilterIterator" "public") ("m" "current" #1# "S" "mixed" "FilterIterator" "public") ("m" "__construct" "Iterator $iterator" #297="S" "void" "FilterIterator" "public") ("m" "accept" #1# "S" "bool" #247# "public"))) (#259="FilesystemIterator" (("m" "setFlags" "int $flags" "S" "void" "FilesystemIterator" "public") ("m" "rewind" #1# "S" "void" "FilesystemIterator" "public") ("m" "next" #1# "S" "void" "FilesystemIterator" "public") ("m" "key" #1# "S" "string" "FilesystemIterator" "public") ("m" "getFlags" #1# "S" "int" "FilesystemIterator" "public") ("m" "current" #1# "S" "mixed" "FilesystemIterator" "public") ("m" "__construct" "string $path,int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS" #296="S" "void" "FilesystemIterator" "public") ("d" #248="UNIX_PATHS" #248# "S" "integer" "FilesystemIterator" "public") ("d" #249="SKIP_DOTS" #249# "S" "integer" "FilesystemIterator" "public") ("d" #250="NEW_CURRENT_AND_KEY" #250# "S" "integer" "FilesystemIterator" "public") ("d" #251="KEY_MODE_MASK" #251# "S" "integer" "FilesystemIterator" "public") ("d" #252="FOLLOW_SYMLINKS" #252# "S" "integer" "FilesystemIterator" "public") ("d" #253="KEY_AS_FILENAME" #253# "S" "integer" "FilesystemIterator" "public") ("d" #254="KEY_AS_PATHNAME" #254# "S" "integer" "FilesystemIterator" "public") ("d" #255="CURRENT_MODE_MASK" #255# "S" "integer" "FilesystemIterator" "public") ("d" #256="CURRENT_AS_SELF" #256# "S" "integer" "FilesystemIterator" "public") ("d" #257="CURRENT_AS_FILEINFO" #257# "S" "integer" "FilesystemIterator" "public") ("d" #258="CURRENT_AS_PATHNAME" #258# "S" "integer" #259# "public"))) (#260="EmptyIterator" (("m" "valid" #1# "S" "void" "EmptyIterator" "public") ("m" "rewind" #1# "S" "void" "EmptyIterator" "public") ("m" "next" #1# "S" "void" "EmptyIterator" "public") ("m" "key" #1# "S" "void" "EmptyIterator" "public") ("m" "current" #1# "S" "void" #260# "public"))) (#261="DirectoryIterator" (("m" "valid" #1# "S" "bool" "DirectoryIterator" "public") ("m" "__toString" #1# "S" "string" "DirectoryIterator" "public") ("m" "seek" "int $position" "S" "void" "DirectoryIterator" "public") ("m" "rewind" #1# "S" "void" "DirectoryIterator" "public") ("m" "next" #1# "S" "void" "DirectoryIterator" "public") ("m" "key" #1# "S" "string" "DirectoryIterator" "public") ("m" "isWritable" #1# "S" "bool" "DirectoryIterator" "public") ("m" "isReadable" #1# "S" "bool" "DirectoryIterator" "public") ("m" "isLink" #1# "S" "bool" "DirectoryIterator" "public") ("m" "isFile" #1# "S" "bool" "DirectoryIterator" "public") ("m" "isExecutable" #1# "S" "bool" "DirectoryIterator" "public") ("m" "isDot" #1# "S" "bool" "DirectoryIterator" "public") ("m" "isDir" #1# "S" "bool" "DirectoryIterator" "public") ("m" "getType" #1# "S" "string" "DirectoryIterator" "public") ("m" "getSize" #1# "S" "int" "DirectoryIterator" "public") ("m" "getPerms" #1# "S" "int" "DirectoryIterator" "public") ("m" "getPathname" #1# "S" "string" "DirectoryIterator" "public") ("m" "getPath" #1# "S" "string" "DirectoryIterator" "public") ("m" "getOwner" #1# "S" "int" "DirectoryIterator" "public") ("m" "getMTime" #1# "S" "int" "DirectoryIterator" "public") ("m" "getInode" #1# "S" "int" "DirectoryIterator" "public") ("m" "getGroup" #1# "S" "int" "DirectoryIterator" "public") ("m" "getFilename" #1# "S" "string" "DirectoryIterator" "public") ("m" "getExtension" #1# "S" "string" "DirectoryIterator" "public") ("m" "getCTime" #1# "S" "int" "DirectoryIterator" "public") ("m" "getBasename" "string $suffix" "S" "string" "DirectoryIterator" "public") ("m" "getATime" #1# "S" "int" "DirectoryIterator" "public") ("m" "current" #1# "S" "DirectoryIterator" "DirectoryIterator" "public") ("m" "__construct" "string $path" #295="S" "void" #261# "public"))) (#262="CallbackFilterIterator" (("m" "accept" #1# "S" "string" "CallbackFilterIterator" "public") ("m" "__construct" "Iterator $iterator,callable $callback" #294="S" "void" #262# "public"))) (#269="CachingIterator" (("m" "valid" #1# "S" "void" "CachingIterator" "public") ("m" "__toString" #1# "S" "void" "CachingIterator" "public") ("m" "setFlags" "bitmask $flags" "S" "void" "CachingIterator" "public") ("m" "rewind" #1# "S" "void" "CachingIterator" "public") ("m" "offsetUnset" "string $index" "S" "void" "CachingIterator" "public") ("m" "offsetSet" "string $index,string $newval" "S" "void" "CachingIterator" "public") ("m" "offsetGet" "string $index" "S" "void" "CachingIterator" "public") ("m" "offsetExists" "string $index" "S" "void" "CachingIterator" "public") ("m" "next" #1# "S" "void" "CachingIterator" "public") ("m" "key" #1# "S" "scalar" "CachingIterator" "public") ("m" "hasNext" #1# "S" "void" "CachingIterator" "public") ("m" "getInnerIterator" #1# "S" "Iterator" "CachingIterator" "public") ("m" "getFlags" #1# "S" "void" "CachingIterator" "public") ("m" "getCache" #1# "S" "array" "CachingIterator" "public") ("m" "current" #1# "S" "void" "CachingIterator" "public") ("m" "count" #1# "S" "int" "CachingIterator" "public") ("m" "__construct" "Iterator $iterator,string $flags = self::CALL_TOSTRING" #293="S" "void" "CachingIterator" "public") ("d" #263="FULL_CACHE" #263# "S" "void" "CachingIterator" "public") ("d" #264="TOSTRING_USE_INNER" #264# "S" "void" "CachingIterator" "public") ("d" #265="TOSTRING_USE_CURRENT" #265# "S" "void" "CachingIterator" "public") ("d" #266="TOSTRING_USE_KEY" #266# "S" "void" "CachingIterator" "public") ("d" #267="CATCH_GET_CHILD" #267# "S" "void" "CachingIterator" "public") ("d" #268="CALL_TOSTRING" #268# "S" "void" #269# "public"))) (#270="SeekableIterator" (("m" "seek" "int $position" "S" "void" "SeekableIterator" "public") ("m" "seek" "int $position" "S" "void" #270# "public"))) (#271="ArrayIterator" (("m" "valid" #1# "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "string $serialized" "S" "string" "ArrayIterator" "public") ("m" "uksort" "string $cmp_function" "S" "void" "ArrayIterator" "public") ("m" "uasort" "string $cmp_function" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "string $flags" "S" "void" "ArrayIterator" "public") ("m" "serialize" #1# "S" "string" "ArrayIterator" "public") ("m" "seek" "int $position" "S" "void" "ArrayIterator" "public") ("m" "rewind" #1# "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "string $index" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "string $index,string $newval" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "string $index" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "string $index" "S" "void" "ArrayIterator" "public") ("m" "next" #1# "S" "void" "ArrayIterator" "public") ("m" "natsort" #1# "S" "void" "ArrayIterator" "public") ("m" "natcasesort" #1# "S" "void" "ArrayIterator" "public") ("m" "ksort" #1# "S" "void" "ArrayIterator" "public") ("m" "key" #1# "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" #1# "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" #1# "S" "array" "ArrayIterator" "public") ("m" "current" #1# "S" "mixed" "ArrayIterator" "public") ("m" "count" #1# "S" "int" "ArrayIterator" "public") ("m" "__construct" "),int $flags = 0" #292="S" "void" "ArrayIterator" "public") ("m" "asort" #1# "S" "void" "ArrayIterator" "public") ("m" "append" "mixed $value" "S" "void" "ArrayIterator" "public") ("m" "valid" #1# "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "string $serialized" "S" "string" "ArrayIterator" "public") ("m" "uksort" "string $cmp_function" "S" "void" "ArrayIterator" "public") ("m" "uasort" "string $cmp_function" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "string $flags" "S" "void" "ArrayIterator" "public") ("m" "serialize" #1# "S" "string" "ArrayIterator" "public") ("m" "seek" "int $position" "S" "void" "ArrayIterator" "public") ("m" "rewind" #1# "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "string $index" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "string $index,string $newval" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "string $index" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "string $index" "S" "void" "ArrayIterator" "public") ("m" "next" #1# "S" "void" "ArrayIterator" "public") ("m" "natsort" #1# "S" "void" "ArrayIterator" "public") ("m" "natcasesort" #1# "S" "void" "ArrayIterator" "public") ("m" "ksort" #1# "S" "void" "ArrayIterator" "public") ("m" "key" #1# "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" #1# "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" #1# "S" "array" "ArrayIterator" "public") ("m" "current" #1# "S" "mixed" "ArrayIterator" "public") ("m" "count" #1# "S" "int" "ArrayIterator" "public") ("m" "__construct" "),int $flags = 0" "S" "void" "ArrayIterator" "public") ("m" "asort" #1# "S" "void" "ArrayIterator" "public") ("m" "append" "mixed $value" "S" "void" #271# "public"))) (#272="OuterIterator" (("m" "getInnerIterator" #1# "S" "Iterator" "OuterIterator" "public") ("m" "getInnerIterator" #1# "S" "Iterator" #272# "public"))) (#273="IteratorIterator" (("m" "valid" #1# "S" "bool" "IteratorIterator" "public") ("m" "rewind" #1# "S" "void" "IteratorIterator" "public") ("m" "next" #1# "S" "void" "IteratorIterator" "public") ("m" "key" #1# "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" #1# "S" "Traversable" "IteratorIterator" "public") ("m" "current" #1# "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "Traversable $iterator" #290="S" "void" "IteratorIterator" "public") ("m" "valid" #1# "S" "bool" "IteratorIterator" "public") ("m" "rewind" #1# "S" "void" "IteratorIterator" "public") ("m" "next" #1# "S" "void" "IteratorIterator" "public") ("m" "key" #1# "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" #1# "S" "Traversable" "IteratorIterator" "public") ("m" "current" #1# "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "Traversable $iterator" "S" nil #273# "public"))) (#274="SplObjectStorage" (("m" "valid" #1# "S" "bool" "SplObjectStorage" "public") ("m" "unserialize" "string $serialized" "S" "void" "SplObjectStorage" "public") ("m" "setInfo" "mixed $data" "S" "void" "SplObjectStorage" "public") ("m" "serialize" #1# "S" "string" "SplObjectStorage" "public") ("m" "rewind" #1# "S" "void" "SplObjectStorage" "public") ("m" "removeAllExcept" "SplObjectStorage $storage" "S" "void" "SplObjectStorage" "public") ("m" "removeAll" "SplObjectStorage $storage" "S" "void" "SplObjectStorage" "public") ("m" "offsetUnset" "object $object" "S" "void" "SplObjectStorage" "public") ("m" "offsetSet" "object $object,mixed $data = NULL" "S" "void" "SplObjectStorage" "public") ("m" "offsetGet" "object $object" "S" "mixed" "SplObjectStorage" "public") ("m" "offsetExists" "object $object" "S" "bool" "SplObjectStorage" "public") ("m" "next" #1# "S" "void" "SplObjectStorage" "public") ("m" "key" #1# "S" "int" "SplObjectStorage" "public") ("m" "getInfo" #1# "S" "mixed" "SplObjectStorage" "public") ("m" "getHash" "object $object" "S" "string" "SplObjectStorage" "public") ("m" "detach" "object $object" "S" "void" "SplObjectStorage" "public") ("m" "current" #1# "S" "object" "SplObjectStorage" "public") ("m" "count" #1# "S" "int" "SplObjectStorage" "public") ("m" "contains" "object $object" "S" "bool" "SplObjectStorage" "public") ("m" "attach" "object $object,mixed $data = NULL" "S" "void" "SplObjectStorage" "public") ("m" "addAll" "SplObjectStorage $storage" "S" "void" #274# "public"))) (#275="SplFixedArray" (("m" "__wakeup" #1# "S" "void" "SplFixedArray" "public") ("m" "valid" #1# "S" "bool" "SplFixedArray" "public") ("m" "toArray" #1# "S" "array" "SplFixedArray" "public") ("m" "setSize" "int $size" "S" "int" "SplFixedArray" "public") ("m" "rewind" #1# "S" "void" "SplFixedArray" "public") ("m" "offsetUnset" "int $index" "S" "void" "SplFixedArray" "public") ("m" "offsetSet" "int $index,mixed $newval" "S" "void" "SplFixedArray" "public") ("m" "offsetGet" "int $index" "S" "mixed" "SplFixedArray" "public") ("m" "offsetExists" "int $index" "S" "bool" "SplFixedArray" "public") ("m" "next" #1# "S" "void" "SplFixedArray" "public") ("m" "key" #1# "S" "int" "SplFixedArray" "public") ("m" "getSize" #1# "S" "int" "SplFixedArray" "public") ("m" "fromArray" "array $array,bool $save_indexes = true" "S" "SplFixedArray" "SplFixedArray" "public") ("m" "current" #1# "S" "mixed" "SplFixedArray" "public") ("m" "count" #1# "S" "int" "SplFixedArray" "public") ("m" "__construct" "int $size = 0" #289="S" nil #275# "public"))) (#276="SplPriorityQueue" (("m" "valid" #1# "S" "bool" "SplPriorityQueue" "public") ("m" "top" #1# "S" "mixed" "SplPriorityQueue" "public") ("m" "setExtractFlags" "int $flags" "S" "void" "SplPriorityQueue" "public") ("m" "rewind" #1# "S" "void" "SplPriorityQueue" "public") ("m" "recoverFromCorruption" #1# "S" "void" "SplPriorityQueue" "public") ("m" "next" #1# "S" "void" "SplPriorityQueue" "public") ("m" "key" #1# "S" "mixed" "SplPriorityQueue" "public") ("m" "isEmpty" #1# "S" "bool" "SplPriorityQueue" "public") ("m" "insert" "mixed $value,mixed $priority" "S" "void" "SplPriorityQueue" "public") ("m" "extract" #1# "S" "mixed" "SplPriorityQueue" "public") ("m" "current" #1# "S" "mixed" "SplPriorityQueue" "public") ("m" "count" #1# "S" "int" "SplPriorityQueue" "public") ("m" "compare" "mixed $priority1,mixed $priority2" "S" "int" "SplPriorityQueue" "public") ("m" "__construct" #1# #288="S" nil #276# "public"))) (#277="SplMinHeap" (("m" "compare" "mixed $value1,mixed $value2" "S" "int" #277# "protected"))) (#278="SplMaxHeap" (("m" "compare" "mixed $value1,mixed $value2" "S" "int" #278# "protected"))) (#279="SplHeap" (("m" "valid" #1# "S" "bool" "SplHeap" "public") ("m" "top" #1# "S" "mixed" "SplHeap" "public") ("m" "rewind" #1# "S" "void" "SplHeap" "public") ("m" "recoverFromCorruption" #1# "S" "void" "SplHeap" "public") ("m" "next" #1# "S" "void" "SplHeap" "public") ("m" "key" #1# "S" "mixed" "SplHeap" "public") ("m" "isEmpty" #1# "S" "bool" "SplHeap" "public") ("m" "insert" "mixed $value" "S" "void" "SplHeap" "public") ("m" "extract" #1# "S" "mixed" "SplHeap" "public") ("m" "current" #1# "S" "mixed" "SplHeap" "public") ("m" "count" #1# "S" "int" "SplHeap" "public") ("m" "compare" "mixed $value1,mixed $value2" "S" "protected" "SplHeap" "public") ("m" "__construct" #1# #287="S" nil #279# "public"))) (#280="SplQueue" (("m" "setIteratorMode" "int $mode" "S" "void" "SplQueue" "public") ("m" "enqueue" "mixed $value" "S" "void" "SplQueue" "public") ("m" "dequeue" #1# "S" "mixed" "SplQueue" "public") ("m" "__construct" #1# #286="S" nil #280# "public"))) (#281="SplStack" (("m" "setIteratorMode" "int $mode" "S" "void" "SplStack" "public") ("m" "__construct" #1# #285="S" nil #281# "public"))) (#282="SplDoublyLinkedList" (("m" "valid" #1# "S" "bool" "SplDoublyLinkedList" "public") ("m" "unshift" "mixed $value" "S" "void" "SplDoublyLinkedList" "public") ("m" "unserialize" "string $serialized" "S" "void" "SplDoublyLinkedList" "public") ("m" "top" #1# "S" "mixed" "SplDoublyLinkedList" "public") ("m" "shift" #1# "S" "mixed" "SplDoublyLinkedList" "public") ("m" "setIteratorMode" "int $mode" "S" "void" "SplDoublyLinkedList" "public") ("m" "serialize" #1# "S" "string" "SplDoublyLinkedList" "public") ("m" "rewind" #1# "S" "void" "SplDoublyLinkedList" "public") ("m" "push" "mixed $value" "S" "void" "SplDoublyLinkedList" "public") ("m" "prev" #1# "S" "void" "SplDoublyLinkedList" "public") ("m" "pop" #1# "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetUnset" "mixed $index" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetSet" "mixed $index,mixed $newval" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetGet" "mixed $index" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetExists" "mixed $index" "S" "bool" "SplDoublyLinkedList" "public") ("m" "next" #1# "S" "void" "SplDoublyLinkedList" "public") ("m" "key" #1# "S" "mixed" "SplDoublyLinkedList" "public") ("m" "isEmpty" #1# "S" "bool" "SplDoublyLinkedList" "public") ("m" "getIteratorMode" #1# "S" "int" "SplDoublyLinkedList" "public") ("m" "current" #1# "S" "mixed" "SplDoublyLinkedList" "public") ("m" "count" #1# "S" "int" "SplDoublyLinkedList" "public") ("m" "bottom" #1# "S" "mixed" "SplDoublyLinkedList" "public") ("m" "add" "mixed $index,mixed $newval" "S" "void" "SplDoublyLinkedList" "public") ("m" "__construct" #1# #283="S" nil #282# "public")))) ((#284="c" "SplDoublyLinkedList(" #1# #283# #487="SplDoublyLinkedList") (#284# "SplStack(" #1# #285# #486="SplStack") (#284# "SplQueue(" #1# #286# #485="SplQueue") (#284# "SplHeap(" #1# #287# #484="SplHeap") (#284# "SplMaxHeap(" #1# #287# #483="SplMaxHeap") (#284# "SplMinHeap(" #1# #287# #482="SplMinHeap") (#284# "SplPriorityQueue(" #1# #288# #481="SplPriorityQueue") (#284# "SplFixedArray(" "int $size = 0" #289# #480="SplFixedArray") (#291="c" "SplObjectStorage(" "SplObjectStorage()" #479="S" #478="SplObjectStorage") (#284# "IteratorIterator(" "Traversable $iterator" #290# #477="IteratorIterator") (#291# "OuterIterator(" "OuterIterator()" #476="S" #475="OuterIterator") (#284# "ArrayIterator(" "),int $flags = 0" #292# #474="ArrayIterator") (#291# "SeekableIterator(" "SeekableIterator()" #473="S" #472="SeekableIterator") (#284# "ArrayIterator(" "),int $flags = 0" #292# #471="ArrayIterator") (#284# "CachingIterator(" "Iterator $iterator,string $flags = self::CALL_TOSTRING" #293# #470="CachingIterator") (#284# "CallbackFilterIterator(" "Iterator $iterator,callable $callback" #294# #469="CallbackFilterIterator") (#284# "DirectoryIterator(" "string $path" #295# #468="DirectoryIterator") (#291# "EmptyIterator(" "EmptyIterator()" #467="S" #466="EmptyIterator") (#284# "FilesystemIterator(" "string $path,int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS" #296# #465="FilesystemIterator") (#284# "FilterIterator(" "Iterator $iterator" #297# #464="FilterIterator") (#284# "GlobIterator(" "string $path,int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO" #298# #463="GlobIterator") (#284# "InfiniteIterator(" "Iterator $iterator" #299# #462="InfiniteIterator") (#284# "IteratorIterator(" "Traversable $iterator" #290# #461="IteratorIterator") (#284# "LimitIterator(" "Iterator $iterator,int $offset = 0,int $count = -1" #300# #460="LimitIterator") (#284# "MultipleIterator(" "int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC" #301# #459="MultipleIterator") (#284# "NoRewindIterator(" "Iterator $iterator" #302# #458="NoRewindIterator") (#284# "ParentIterator(" "RecursiveIterator $iterator" #303# #457="ParentIterator") (#284# "RecursiveArrayIterator(" "),int $flags = 0" #292# #456="RecursiveArrayIterator") (#284# "RecursiveCachingIterator(" "Iterator $iterator,string $flags = self::CALL_TOSTRING" #304# #455="RecursiveCachingIterator") (#284# "RecursiveCallbackFilterIterator(" "RecursiveIterator $iterator,string $callback" #305# #454="RecursiveCallbackFilterIterator") (#284# "RecursiveDirectoryIterator(" "string $path,int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO" #306# #453="RecursiveDirectoryIterator") (#284# "RecursiveFilterIterator(" "RecursiveIterator $iterator" #307# #452="RecursiveFilterIterator") (#284# "RecursiveIteratorIterator(" "Traversable $iterator,int $mode = RecursiveIteratorIterator::LEAVES_ONLY,int $flags = 0" #308# #451="RecursiveIteratorIterator") (#284# "RecursiveRegexIterator(" "RecursiveIterator $iterator,string $regex,int $mode = self::MATCH,int $flags = 0,int $preg_flags = 0" #309# #450="RecursiveRegexIterator") (#284# "RecursiveTreeIterator(" "RecursiveIterator_IteratorAggregate $it,int $flags = RecursiveTreeIterator::BYPASS_KEY,int $cit_flags = CachingIterator::CATCH_GET_CHILD,int $mode = RecursiveIteratorIterator::SELF_FIRST" #310# #449="RecursiveTreeIterator") (#284# "RegexIterator(" "Iterator $iterator,string $regex,int $mode = self::MATCH,int $flags = 0,int $preg_flags = 0" #311# #448="RegexIterator") (#284# "Exception(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #441="Exception") (#284# "LogicException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #313#) (#284# "BadFunctionCallException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #314#) (#284# "BadMethodCallException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #315#) (#284# "DomainException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #316#) (#284# "InvalidArgumentException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #317#) (#284# "LengthException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #318#) (#284# "OutOfBoundsException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #319#) (#284# "OutOfRangeException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #320#) (#284# "OverflowException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #321#) (#284# "RangeException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #322#) (#284# "RuntimeException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #323#) (#284# "UnderflowException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #324#) (#284# "UnexpectedValueException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #325#) (#284# "SplFileInfo(" "string $file_name" #326# #440="SplFileInfo") (#284# "SplFileObject(" "string $file_name" #326# #439="SplFileObject") (#284# "SplTempFileObject(" "int $max_memory" #327# #438="SplTempFileObject") (#284# "ArrayObject(" "mixed $input = null,int $flags = 0,string $iterator_class = \"ArrayIterator\"" #328# #437="ArrayObject") (#291# "SplObserver(" "SplObserver()" #436="S" #435="SplObserver") (#291# "SplSubject(" "SplSubject()" #434="S" #433="SplSubject") (#284# "DOMAttr(" "string $name,string $value" #329# #432="DOMAttr") (#284# "DOMCdataSection(" "string $value" #330# #431="DOMCdataSection") (#291# "DOMCharacterData(" "DOMCharacterData()" #430="S" #429="DOMCharacterData") (#284# "DOMComment(" "string $value" #331# #428="DOMComment") (#284# "DOMDocument(" "string $version,string $encoding" #332# #427="DOMDocument") (#291# "DOMDocumentFragment(" "DOMDocumentFragment()" #426="S" #425="DOMDocumentFragment") (#291# "DOMDocumentType(" "DOMDocumentType()" #424="S" #423="DOMDocumentType") (#284# "DOMElement(" "string $name,string $value,string $namespaceURI" #333# #422="DOMElement") (#291# "DOMEntity(" "DOMEntity()" #421="S" #420="DOMEntity") (#284# "DOMEntityReference(" "string $name" #334# #419="DOMEntityReference") (#284# "DOMException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #418="DOMException") (#284# "DOMImplementation(" #1# #335# #417="DOMImplementation") (#291# "DOMNamedNodeMap(" "DOMNamedNodeMap()" #416="S" #415="DOMNamedNodeMap") (#291# "DOMNode(" "DOMNode()" #414="S" #413="DOMNode") (#291# "DOMNodeList(" "DOMNodeList()" #412="S" #411="DOMNodeList") (#291# "DOMNotation(" "DOMNotation()" #410="S" #409="DOMNotation") (#284# "DOMProcessingInstruction(" "string $name,string $value" #336# #408="DOMProcessingInstruction") (#284# "DOMText(" "string $value" #337# #407="DOMText") (#284# "DOMXPath(" "DOMDocument $doc" #338# #406="DOMXPath") (#291# "ZipArchive(" "ZipArchive()" #405="S" #404="ZipArchive") (#284# "SplType(" "mixed $initial_value,bool $strict" #339# #403="SplType") (#284# "SplInt(" "mixed $initial_value,bool $strict" #339# #402="SplInt") (#284# "SplFloat(" "mixed $initial_value,bool $strict" #339# #401="SplFloat") (#284# "SplEnum(" "mixed $initial_value,bool $strict" #339# #400="SplEnum") (#284# "SplBool(" "mixed $initial_value,bool $strict" #339# #399="SplBool") (#284# "SplString(" "mixed $initial_value,bool $strict" #339# #398="SplString") (#284# "SimpleXMLElement(" "string $data,int $options = 0,bool $data_is_url = false,string $ns = \"\",bool $is_prefix = false" #340# #397="SimpleXMLElement") (#284# "SimpleXMLIterator(" "string $data,int $options = 0,bool $data_is_url = false,string $ns = \"\",bool $is_prefix = false" #340# #396="SimpleXMLIterator") (#291# "XMLReader(" "XMLReader()" #395="S" #394="XMLReader") (#291# "Memcache(" "Memcache()" #393="S" #392="Memcache") (#284# "HttpDeflateStream(" "int $flags = 0" #341# #391="HttpDeflateStream") (#284# "HttpInflateStream(" "int $flags = 0" #342# #390="HttpInflateStream") (#284# "HttpMessage(" "string $message" #343# #389="HttpMessage") (#284# "HttpMessage(" "string $message" #343# #388="HttpMessage") (#284# "HttpQueryString(" "bool $global = true,mixed $add" #344# #387="HttpQueryString") (#284# "HttpRequest(" "string $url,int $request_method = HTTP_METH_GET,array $options" #345# #386="HttpRequest") (#284# "HttpRequestPool(" "HttpRequest $request,HttpRequest $__args__" #346# #385="HttpRequestPool") (#291# "HttpResponse(" "HttpResponse()" #384="S" #383="HttpResponse") (#284# "mysqli(" "\"mysqli.default_socket\")'" #347# #382="mysqli") (#284# "mysqli_stmt(" "mysqli $link,string $query" #348# #381="mysqli_stmt") (#291# "mysqli_result(" "mysqli_result()" #380="S" #379="mysqli_result") (#291# "mysqli_driver(" "mysqli_driver()" #378="S" #377="mysqli_driver") (#284# "mysqli_warning(" #1# #349# #376="mysqli_warning") (#284# "mysqli_sql_exception(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #375="mysqli_sql_exception") (#284# "SQLite3(" "string $filename,int $flags,string $encryption_key" #350# #374="SQLite3") (#291# "SQLite3Stmt(" "SQLite3Stmt()" #373="S" #372="SQLite3Stmt") (#291# "SQLite3Result(" "SQLite3Result()" #371="S" #370="SQLite3Result") (#284# "PDO(" "string $dsn,string $username,string $password,array $options" #351# #369="PDO") (#291# "PDOStatement(" "PDOStatement()" #368="S" #367="PDOStatement") (#284# "PDOException(" "string $message = \"\",int $code = 0,Exception $previous = NULL" #312# #366="PDOException") (#284# "DateTime(" "string $time = \"now\",DateTimeZone $timezone = NULL" #352# #365="DateTime") (#284# "DateTimeImmutable(" "string $time = \"now\",DateTimeZone $timezone = NULL" #353# #364="DateTimeImmutable") (#291# "DateTimeInterface(" "DateTimeInterface()" #363="S" #362="DateTimeInterface") (#284# "DateTimeZone(" "string $timezone" #354# #361="DateTimeZone") (#284# "DateInterval(" "string $interval_spec" #355# #360="DateInterval") (#284# "DatePeriod(" "string $isostr,int $options" #356# #359="DatePeriod") (#284# "Imagick(" "mixed $files" #357# #358="Imagick") ("c" #358# "Imagick" "S" #358#) ("c" #359# "DatePeriod" "S" #359#) ("c" #360# "DateInterval" "S" #360#) ("c" #361# "DateTimeZone" "S" #361#) ("c" #362# "DateTimeInterface" #363# #362#) ("c" #364# "DateTimeImmutable" "S" #364#) ("c" #365# "DateTime" "S" #365#) ("c" #366# "PDOException" "S" #366#) ("c" #367# "PDOStatement" #368# #367#) ("c" #369# "PDO" "S" #369#) ("c" #370# "SQLite3Result" #371# #370#) ("c" #372# "SQLite3Stmt" #373# #372#) ("c" #374# "SQLite3" "S" #374#) ("c" #375# "mysqli_sql_exception" "S" #375#) ("c" #376# "mysqli_warning" "S" #376#) ("c" #377# "mysqli_driver" #378# #377#) ("c" #379# "mysqli_result" #380# #379#) ("c" #381# "mysqli_stmt" "S" #381#) ("c" #382# "mysqli" "S" #382#) ("c" #383# "HttpResponse" #384# #383#) ("c" #385# "HttpRequestPool" "S" #385#) ("c" #386# "HttpRequest" "S" #386#) ("c" #387# "HttpQueryString" "S" #387#) ("c" #388# "HttpMessage" "S" #388#) ("c" #389# "HttpMessage" "S" #389#) ("c" #390# "HttpInflateStream" "S" #390#) ("c" #391# "HttpDeflateStream" "S" #391#) ("c" #392# "Memcache" #393# #392#) ("c" #394# "XMLReader" #395# #394#) ("c" #396# "SimpleXMLIterator" "S" #396#) ("c" #397# "SimpleXMLElement" "S" #397#) ("c" #398# "SplString" "S" #398#) ("c" #399# "SplBool" "S" #399#) ("c" #400# "SplEnum" "S" #400#) ("c" #401# "SplFloat" "S" #401#) ("c" #402# "SplInt" "S" #402#) ("c" #403# "SplType" "S" #403#) ("c" #404# "ZipArchive" #405# #404#) ("c" #406# "DOMXPath" "S" #406#) ("c" #407# "DOMText" "S" #407#) ("c" #408# "DOMProcessingInstruction" "S" #408#) ("c" #409# "DOMNotation" #410# #409#) ("c" #411# "DOMNodeList" #412# #411#) ("c" #413# "DOMNode" #414# #413#) ("c" #415# "DOMNamedNodeMap" #416# #415#) ("c" #417# "DOMImplementation" "S" #417#) ("c" #418# "DOMException" "S" #418#) ("c" #419# "DOMEntityReference" "S" #419#) ("c" #420# "DOMEntity" #421# #420#) ("c" #422# "DOMElement" "S" #422#) ("c" #423# "DOMDocumentType" #424# #423#) ("c" #425# "DOMDocumentFragment" #426# #425#) ("c" #427# "DOMDocument" "S" #427#) ("c" #428# "DOMComment" "S" #428#) ("c" #429# "DOMCharacterData" #430# #429#) ("c" #431# "DOMCdataSection" "S" #431#) ("c" #432# "DOMAttr" "S" #432#) ("c" #433# "SplSubject" #434# #433#) ("c" #435# "SplObserver" #436# #435#) ("c" #437# "ArrayObject" "S" #437#) ("c" #438# "SplTempFileObject" "S" #438#) ("c" #439# "SplFileObject" "S" #439#) ("c" #440# "SplFileInfo" "S" #440#) ("c" #325# "UnexpectedValueException" "S" #325#) ("c" #324# "UnderflowException" "S" #324#) ("c" #323# "RuntimeException" "S" #323#) ("c" #322# "RangeException" "S" #322#) ("c" #321# "OverflowException" "S" #321#) ("c" #320# "OutOfRangeException" "S" #320#) ("c" #319# "OutOfBoundsException" "S" #319#) ("c" #318# "LengthException" "S" #318#) ("c" #317# "InvalidArgumentException" "S" #317#) ("c" #316# "DomainException" "S" #316#) ("c" #315# "BadMethodCallException" "S" #315#) ("c" #314# "BadFunctionCallException" "S" #314#) ("c" #313# "LogicException" "S" #313#) ("c" #441# "Exception" "S" #441#) ("i" #442# "Traversable" "S" #442#) ("i" #443="Iterator" "Iterator" "S" #443#) ("i" #444="SeekableIterator" "SeekableIterator" "S" #444#) ("i" #445="OuterIterator" "OuterIterator" "S" #445#) ("i" #446="Countable" "Countable" "S" #446#) ("i" #447="RecursiveIterator" "RecursiveIterator" "S" #447#) ("c" #448# "RegexIterator" "S" #448#) ("c" #449# "RecursiveTreeIterator" "S" #449#) ("c" #450# "RecursiveRegexIterator" "S" #450#) ("c" #451# "RecursiveIteratorIterator" "S" #451#) ("c" #452# "RecursiveFilterIterator" "S" #452#) ("c" #453# "RecursiveDirectoryIterator" "S" #453#) ("c" #454# "RecursiveCallbackFilterIterator" "S" #454#) ("c" #455# "RecursiveCachingIterator" "S" #455#) ("c" #456# "RecursiveArrayIterator" "S" #456#) ("c" #457# "ParentIterator" "S" #457#) ("c" #458# "NoRewindIterator" "S" #458#) ("c" #459# "MultipleIterator" "S" #459#) ("c" #460# "LimitIterator" "S" #460#) ("c" #461# "IteratorIterator" "S" #461#) ("c" #462# "InfiniteIterator" "S" #462#) ("c" #463# "GlobIterator" "S" #463#) ("c" #464# "FilterIterator" "S" #464#) ("c" #465# "FilesystemIterator" "S" #465#) ("c" #466# "EmptyIterator" #467# #466#) ("c" #468# "DirectoryIterator" "S" #468#) ("c" #469# "CallbackFilterIterator" "S" #469#) ("c" #470# "CachingIterator" "S" #470#) ("c" #471# "ArrayIterator" "S" #471#) ("c" #472# "SeekableIterator" #473# #472#) ("c" #474# "ArrayIterator" "S" #474#) ("c" #475# "OuterIterator" #476# #475#) ("c" #477# "IteratorIterator" "S" #477#) ("c" #478# "SplObjectStorage" #479# #478#) ("c" #480# "SplFixedArray" "S" #480#) ("c" #481# "SplPriorityQueue" "S" #481#) ("c" #482# "SplMinHeap" "S" #482#) ("c" #483# "SplMaxHeap" "S" #483#) ("c" #484# "SplHeap" "S" #484#) ("c" #485# "SplQueue" "S" #485#) ("c" #486# "SplStack" "S" #486#) ("c" #487# "SplDoublyLinkedList" "S" #487#) ("f" "zlib_get_coding_type(" #1# "S" "string") ("f" "zlib_encode(" "string $data,string $encoding,string $level" "S" "string") ("f" "zlib_decode(" "string $data,string $max_decoded_len" "S" "string") ("f" "zip_read(" "resource $zip" "S" "resource") ("f" "zip_open(" "string $filename" "S" "resource") ("f" "zip_entry_read(" "resource $zip_entry,int $length" "S" "string") ("f" "zip_entry_open(" "resource $zip,resource $zip_entry,string $mode" "S" "bool") ("f" "zip_entry_name(" "resource $zip_entry" "S" "string") ("f" "zip_entry_filesize(" "resource $zip_entry" "S" "int") ("f" "zip_entry_compressionmethod(" "resource $zip_entry" "S" "string") ("f" "zip_entry_compressedsize(" "resource $zip_entry" "S" "int") ("f" "zip_entry_close(" "resource $zip_entry" "S" "bool") ("f" "zip_close(" "resource $zip" "S" "void") ("f" "zend_version(" #1# "S" "string") ("f" "zend_thread_id(" #1# "S" "int") ("f" "zend_logo_guid(" #1# "S" "string") ("f" "yp_order(" "string $domain,string $map" "S" "int") ("f" "yp_next(" "string $domain,string $map,string $key" "S" "array") ("f" "yp_match(" "string $domain,string $map,string $key" "S" "string") ("f" "yp_master(" "string $domain,string $map" "S" "string") ("f" "yp_get_default_domain(" #1# "S" "string") ("f" "yp_first(" "string $domain,string $map" "S" "array") ("f" "yp_err_string(" "int $errorcode" "S" "string") ("f" "yp_errno(" #1# "S" "int") ("f" "yp_cat(" "string $domain,string $map" "S" "array") ("f" "yp_all(" "string $domain,string $map,string $callback" "S" "void") ("f" "yaz_wait(" "array &$options" "S" "mixed") ("f" "yaz_syntax(" "resource $id,string $syntax" "S" "void") ("f" "yaz_sort(" "resource $id,string $criteria" "S" "void") ("f" "yaz_set_option(" "resource $id,string $name,string $value" "S" "void") ("f" "yaz_search(" "resource $id,string $type,string $query" "S" "bool") ("f" "yaz_schema(" "resource $id,string $schema" "S" "void") ("f" "yaz_scan(" "resource $id,string $type,string $startterm,array $flags" "S" "void") ("f" "yaz_scan_result(" "resource $id,array &$result" "S" "array") ("f" "yaz_record(" "resource $id,int $pos,string $type" "S" "string") ("f" "yaz_range(" "resource $id,int $start,int $number" "S" "void") ("f" "yaz_present(" "resource $id" "S" "bool") ("f" "yaz_itemorder(" "resource $id,array $args" "S" "void") ("f" "yaz_hits(" "resource $id,array &$searchresult" "S" "int") ("f" "yaz_get_option(" "resource $id,string $name" "S" "string") ("f" "yaz_es(" "resource $id,string $type,array $args" "S" "void") ("f" "yaz_es_result(" "resource $id" "S" "array") ("f" "yaz_error(" "resource $id" "S" "string") ("f" "yaz_errno(" "resource $id" "S" "int") ("f" "yaz_element(" "resource $id,string $elementset" "S" "bool") ("f" "yaz_database(" "resource $id,string $databases" "S" "bool") ("f" "yaz_connect(" "string $zurl,mixed $options" "S" "mixed") ("f" "yaz_close(" "resource $id" "S" "bool") ("f" "yaz_ccl_parse(" "resource $id,string $query,array &$result" "S" "bool") ("f" "yaz_ccl_conf(" "resource $id,array $config" "S" "void") ("f" "yaz_addinfo(" "resource $id" "S" "string") ("f" "yaml_parse_url(" "string $url,int $pos,int &$ndocs,array $callbacks" "S" "mixed") ("f" "yaml_parse(" "string $input,int $pos,int &$ndocs,array $callbacks" "S" "mixed") ("f" "yaml_parse_file(" "string $filename,int $pos,int &$ndocs,array $callbacks" "S" "mixed") ("f" "yaml_emit(" "mixed $data,int $encoding,int $linebreak,array $callbacks" "S" "string") ("f" "yaml_emit_file(" "string $filename,mixed $data,int $encoding,int $linebreak,array $callbacks" "S" "bool") ("f" "xml_set_unparsed_entity_decl_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xml_set_start_namespace_decl_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xml_set_processing_instruction_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xml_set_object(" "resource $parser,object &$object" "S" "pool") ("f" "xml_set_notation_decl_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xml_set_external_entity_ref_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xml_set_end_namespace_decl_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xml_set_element_handler(" "resource $parser,callable $start_element_handler,callable $end_element_handler" "S" "bool") ("f" "xml_set_default_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xml_set_character_data_handler(" "resource $parser,callable $handler" "S" "bool") ("f" "xmlrpc_set_type(" "string &$value,string $type" "S" "bool") ("f" "xmlrpc_server_register_method(" "resource $server,string $method_name,string $function" "S" "bool") ("f" "xmlrpc_server_register_introspection_callback(" "resource $server,string $function" "S" "bool") ("f" "xmlrpc_server_destroy(" "resource $server" "S" "int") ("f" "xmlrpc_server_create(" #1# "S" "resource") ("f" "xmlrpc_server_call_method(" "resource $server,string $xml,mixed $user_data,array $output_options" "S" "string") ("f" "xmlrpc_server_add_introspection_data(" "resource $server,array $desc" "S" "int") ("f" "xmlrpc_parse_method_descriptions(" "string $xml" "S" "array") ("f" "xmlrpc_is_fault(" "array $arg" "S" "bool") ("f" "xmlrpc_get_type(" "mixed $value" "S" "string") ("f" "xmlrpc_encode(" "mixed $value" "S" "string") ("f" "xmlrpc_encode_request(" "string $method,mixed $params,array $output_options" "S" "string") ("f" "xmlrpc_decode_request(" "string $xml,string &$method,string $encoding" "S" "mixed") ("f" "xmlrpc_decode(" "string $xml,string $encoding" "S" "mixed") ("f" "xml_parser_set_option(" "resource $parser,int $option,mixed $value" "S" "bool") ("f" "xml_parser_get_option(" "resource $parser,int $option" "S" "mixed") ("f" "xml_parser_free(" "resource $parser" "S" "bool") ("f" "xml_parser_create(" "string $encoding" "S" "resource") ("f" "xml_parser_create_ns(" "string $encoding,string $sep" "S" "resource") ("f" "xml_parse(" "resource $parser,string $data,bool $is_final" "S" "int") ("f" "xml_parse_into_struct(" "resource $parser,string $data,array &$values,array &$index" "S" "int") ("f" "xml_get_error_code(" "resource $parser" "S" "int") ("f" "xml_get_current_line_number(" "resource $parser" "S" "int") ("f" "xml_get_current_column_number(" "resource $parser" "S" "int") ("f" "xml_get_current_byte_index(" "resource $parser" "S" "int") ("f" "xml_error_string(" "int $code" "S" "string") ("f" "xhprof_sample_enable(" #1# "S" "void") ("f" "xhprof_sample_disable(" #1# "S" "array") ("f" "xhprof_enable(" "int $flags,array $options" "S" "void") ("f" "xhprof_disable(" #1# "S" "array") ("f" "xdiff_string_patch(" "string $str,string $patch,int $flags,string &$error" "S" "string") ("f" "xdiff_string_patch_binary(" "string $str,string $patch" "S" "string") ("f" "xdiff_string_merge3(" "string $old_data,string $new_data1,string $new_data2,string &$error" "S" "mixed") ("f" "xdiff_string_diff(" "string $old_data,string $new_data,int $context,bool $minimal" "S" "string") ("f" "xdiff_string_bpatch(" "string $str,string $patch" "S" "string") ("f" "xdiff_string_bdiff(" "string $old_data,string $new_data" "S" "string") ("f" "xdiff_string_bdiff(" "string $old_data,string $new_data" "S" "string") ("f" "xdiff_string_bdiff(" "string $old_data,string $new_data" "S" "string") ("f" "xdiff_string_bdiff_size(" "string $patch" "S" "int") ("f" "xdiff_file_rabdiff(" "string $old_file,string $new_file,string $dest" "S" "bool") ("f" "xdiff_file_patch(" "string $file,string $patch,string $dest,int $flags" "S" "mixed") ("f" "xdiff_file_patch_binary(" "string $file,string $patch,string $dest" "S" "bool") ("f" "xdiff_file_merge3(" "string $old_file,string $new_file1,string $new_file2,string $dest" "S" "mixed") ("f" "xdiff_file_diff(" "string $old_file,string $new_file,string $dest,int $context,bool $minimal" "S" "bool") ("f" "xdiff_file_diff_binary(" "string $old_file,string $new_file,string $dest" "S" "bool") ("f" "xdiff_file_bpatch(" "string $file,string $patch,string $dest" "S" "bool") ("f" "xdiff_file_bdiff_size(" "string $file" "S" "int") ("f" "xdiff_file_bdiff(" "string $old_file,string $new_file,string $dest" "S" "bool") ("f" "xattr_supported(" "string $filename,int $flags" "S" "bool") ("f" "xattr_set(" "string $filename,string $name,string $value,int $flags" "S" "bool") ("f" "xattr_remove(" "string $filename,string $name,int $flags" "S" "bool") ("f" "xattr_list(" "string $filename,int $flags" "S" "array") ("f" "xattr_get(" "string $filename,string $name,int $flags" "S" "string") ("f" "wordwrap(" "string $str,int $width,string $break,bool $cut" "S" "string") ("f" "wincache_unlock(" "string $key" "S" "bool") ("f" "wincache_ucache_set(" "mixed $key,mixed $value,int $ttl" "S" "bool") ("f" "wincache_ucache_meminfo(" #1# "S" "array") ("f" "wincache_ucache_info(" "bool $summaryonly,string $key" "S" "array") ("f" "wincache_ucache_inc(" "string $key,int $inc_by,bool &$success" "S" "mixed") ("f" "wincache_ucache_get(" "mixed $key,bool &$success" "S" "mixed") ("f" "wincache_ucache_exists(" "string $key" "S" "bool") ("f" "wincache_ucache_delete(" "mixed $key" "S" "bool") ("f" "wincache_ucache_dec(" "string $key,int $dec_by,bool &$success" "S" "mixed") ("f" "wincache_ucache_clear(" #1# "S" "bool") ("f" "wincache_ucache_cas(" "string $key,int $old_value,int $new_value" "S" "bool") ("f" "wincache_ucache_add(" "string $key,mixed $value,int $ttl" "S" "bool") ("f" "wincache_scache_meminfo(" #1# "S" "array") ("f" "wincache_scache_info(" "bool $summaryonly" "S" "array") ("f" "wincache_rplist_meminfo(" #1# "S" "array") ("f" "wincache_rplist_fileinfo(" "bool $summaryonly" "S" "array") ("f" "wincache_refresh_if_changed(" "array $files" "S" "bool") ("f" "wincache_ocache_meminfo(" #1# "S" "array") ("f" "wincache_ocache_fileinfo(" "bool $summaryonly" "S" "array") ("f" "wincache_lock(" "string $key,bool $isglobal" "S" "bool") ("f" "wincache_fcache_meminfo(" #1# "S" "array") ("f" "wincache_fcache_fileinfo(" "bool $summaryonly" "S" "array") ("f" "win32_stop_service(" "string $servicename,string $machine" "S" "int") ("f" "win32_start_service(" "string $servicename,string $machine" "S" "int") ("f" "win32_start_service_ctrl_dispatcher(" "string $name" "S" "mixed") ("f" "win32_set_service_status(" "int $status,int $checkpoint" "S" "bool") ("f" "win32_query_service_status(" "string $servicename,string $machine" "S" "mixed") ("f" "win32_ps_stat_proc(" "int $pid" "S" "array") ("f" "win32_ps_stat_mem(" #1# "S" "array") ("f" "win32_ps_list_procs(" #1# "S" "array") ("f" "win32_pause_service(" "string $servicename,string $machine" "S" "int") ("f" "win32_get_last_control_message(" #1# "S" "int") ("f" "win32_delete_service(" "string $servicename,string $machine" "S" "mixed") ("f" "win32_create_service(" "array $details,string $machine" "S" "mixed") ("f" "win32_continue_service(" "string $servicename,string $machine" "S" "int") ("f" "wddx_serialize_vars(" "mixed $var_name,mixed $__args__" "S" "string") ("f" "wddx_serialize_value(" "mixed $var,string $comment" "S" "string") ("f" "wddx_packet_start(" "string $comment" "S" "resource") ("f" "wddx_packet_end(" "resource $packet_id" "S" "string") ("f" "wddx_deserialize(" "string $packet" "S" "mixed") ("f" "wddx_add_vars(" "resource $packet_id,mixed $var_name,mixed $__args__" "S" "bool") ("f" "vsprintf(" "string $format,array $args" "S" "string") ("f" "vprintf(" "string $format,array $args" "S" "int") ("f" "vpopmail_set_user_quota(" "string $user,string $domain,string $quota" "S" "bool") ("f" "vpopmail_passwd(" "string $user,string $domain,string $password,bool $apop" "S" "bool") ("f" "vpopmail_error(" #1# "S" "string") ("f" "vpopmail_del_user(" "string $user,string $domain" "S" "bool") ("f" "vpopmail_del_domain_ex(" "string $domain" "S" "bool") ("f" "vpopmail_del_domain(" "string $domain" "S" "bool") ("f" "vpopmail_auth_user(" "string $user,string $domain,string $password,string $apop" "S" "bool") ("f" "vpopmail_alias_get(" "string $alias,string $domain" "S" "array") ("f" "vpopmail_alias_get_all(" "string $domain" "S" "array") ("f" "vpopmail_alias_del_domain(" "string $domain" "S" "bool") ("f" "vpopmail_alias_del(" "string $user,string $domain" "S" "bool") ("f" "vpopmail_alias_add(" "string $user,string $domain,string $alias" "S" "bool") ("f" "vpopmail_add_user(" "string $user,string $domain,string $password,string $gecos,bool $apop" "S" "bool") ("f" "vpopmail_add_domain_ex(" "string $domain,string $passwd,string $quota,string $bounce,bool $apop" "S" "bool") ("f" "vpopmail_add_domain(" "string $domain,string $dir,int $uid,int $gid" "S" "bool") ("f" "vpopmail_add_alias_domain_ex(" "string $olddomain,string $newdomain" "S" "bool") ("f" "vpopmail_add_alias_domain(" "string $domain,string $aliasdomain" "S" "bool") ("f" "virtual(" "string $filename" "S" "bool") ("f" "vfprintf(" "resource $handle,string $format,array $args" "S" "int") ("f" "version_compare(" "string $version1,string $version2,string $operator" "S" "mixed") ("f" "variant_xor(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_sub(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_set(" "variant $variant,mixed $value" "S" "void") ("f" "variant_set_type(" "variant $variant,int $type" "S" "void") ("f" "variant_round(" "mixed $variant,int $decimals" "S" "mixed") ("f" "variant_pow(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_or(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_not(" "mixed $variant" "S" "mixed") ("f" "variant_neg(" "mixed $variant" "S" "mixed") ("f" "variant_mul(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_mod(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_int(" "mixed $variant" "S" "mixed") ("f" "variant_imp(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_idiv(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_get_type(" "variant $variant" "S" "int") ("f" "variant_fix(" "mixed $variant" "S" "mixed") ("f" "variant_eqv(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_div(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_date_to_timestamp(" "variant $variant" "S" "int") ("f" "variant_date_from_timestamp(" "int $timestamp" "S" "variant") ("f" "variant_cmp(" "mixed $left,mixed $right,int $lcid,int $flags" "S" "int") ("f" "variant_cat(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_cast(" "variant $variant,int $type" "S" "variant") ("f" "variant_and(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_add(" "mixed $left,mixed $right" "S" "mixed") ("f" "variant_abs(" "mixed $val" "S" "mixed") ("f" "var_export(" "mixed $expression,bool $return" "S" "mixed") ("f" "var_dump(" "mixed $expression,mixed $__args__" "S" "void") ("f" "utf8_encode(" "string $data" "S" "string") ("f" "utf8_decode(" "string $data" "S" "string") ("f" "usort(" "array &$array,callable $cmp_function" "S" "bool") ("f" "usleep(" "int $micro_seconds" "S" "void") ("f" "use_soap_error_handler(" "bool $handler" "S" "bool") ("f" "urlencode(" "string $str" "S" "string") ("f" "urldecode(" "string $str" "S" "string") ("f" "uopz_undefine(" "string $class,string $constant" "S" "void") ("f" "uopz_restore(" "string $class,string $function" "S" "void") ("f" "uopz_rename(" "string $class,string $function,string $rename" "S" "void") ("f" "uopz_redefine(" "string $class,string $constant,mixed $value" "S" "void") ("f" "uopz_overload(" "int $opcode,Callable $callable" "S" "void") ("f" "uopz_implement(" "string $class,string $interface" "S" "void") ("f" "uopz_function(" "string $class,string $function,Closure $handler,int $modifiers" "S" "void") ("f" "uopz_flags(" "string $class,string $function,int $flags" "S" "int") ("f" "uopz_extend(" "string $class,string $parent" "S" "void") ("f" "uopz_delete(" "string $class,string $function" "S" "void") ("f" "uopz_copy(" "string $class,string $function" "S" "Closure") ("f" "uopz_compose(" "string $name,array $classes,array $methods,array $properties,int $flags" "S" "void") ("f" "uopz_backup(" "string $class,string $function" "S" "void") ("f" "untaint(" "string &$string,string $__args__" "S" "bool") ("f" "unserialize(" "string $str" "S" "mixed") ("f" "unregister_tick_function(" "string $function_name" "S" "void") ("f" "unpack(" "string $format,string $data" "S" "array") ("f" "unlink(" "string $filename,resource $context" "S" "bool") ("f" "unixtojd(" "int $timestamp" "S" "int") ("f" "uniqid(" "string $prefix,bool $more_entropy" "S" "string") ("f" "umask(" "int $mask" "S" "int") ("f" "uksort(" "array &$array,callable $cmp_function" "S" "bool") ("f" "udm_set_agent_param(" "resource $agent,int $var,string $val" "S" "bool") ("f" "udm_load_ispell_data(" "resource $agent,int $var,string $val1,string $val2,int $flag" "S" "bool") ("f" "udm_hash32(" "resource $agent,string $str" "S" "int") ("f" "udm_get_res_param(" "resource $res,int $param" "S" "string") ("f" "udm_get_res_field(" "resource $res,int $row,int $field" "S" "string") ("f" "udm_get_doc_count(" "resource $agent" "S" "int") ("f" "udm_free_res(" "resource $res" "S" "bool") ("f" "udm_free_ispell_data(" "int $agent" "S" "bool") ("f" "udm_free_agent(" "resource $agent" "S" "int") ("f" "udm_find(" "resource $agent,string $query" "S" "resource") ("f" "udm_error(" "resource $agent" "S" "string") ("f" "udm_errno(" "resource $agent" "S" "int") ("f" "udm_crc32(" "resource $agent,string $str" "S" "int") ("f" "udm_clear_search_limits(" "resource $agent" "S" "bool") ("f" "udm_check_charset(" "resource $agent,string $charset" "S" "bool") ("f" "udm_cat_path(" "resource $agent,string $category" "S" "array") ("f" "udm_cat_list(" "resource $agent,string $category" "S" "array") ("f" "udm_api_version(" #1# "S" "int") ("f" "udm_alloc_agent(" "string $dbaddr,string $dbmode" "S" "resource") ("f" "udm_alloc_agent_array(" "array $databases" "S" "resource") ("f" "udm_add_search_limit(" "resource $agent,int $var,string $val" "S" "bool") ("f" "ucwords(" "string $str" "S" "string") ("f" "ucfirst(" "string $str" "S" "string") ("f" "uasort(" "array &$array,callable $cmp_function" "S" "bool") ("f" "trim(" "string $str,string $charlist" "S" "string") ("f" "trigger_error(" "string $error_msg,int $error_type" "S" "bool") ("f" "trait_exists(" "string $traitname,bool $autoload" "S" "bool") ("f" "trader_wma(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_willr(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_wclprice(" "array $high,array $low,array $close" "S" "array") ("f" "trader_var(" "array $real,integer $timePeriod,float $nbDev" "S" "array") ("f" "trader_ultosc(" "array $high,array $low,array $close,integer $timePeriod1,integer $timePeriod2,integer $timePeriod3" "S" "array") ("f" "trader_typprice(" "array $high,array $low,array $close" "S" "array") ("f" "trader_tsf(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_trix(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_trima(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_trange(" "array $high,array $low,array $close" "S" "array") ("f" "trader_tema(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_tanh(" "array $real" "S" "array") ("f" "trader_tan(" "array $real" "S" "array") ("f" "trader_t3(" "array $real,integer $timePeriod,float $vFactor" "S" "array") ("f" "trader_sum(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_sub(" "array $real0,array $real1" "S" "array") ("f" "trader_stochrsi(" "array $real,integer $timePeriod,integer $fastK_Period,integer $fastD_Period,integer $fastD_MAType" "S" "array") ("f" "trader_stochf(" "array $high,array $low,array $close,integer $fastK_Period,integer $fastD_Period,integer $fastD_MAType" "S" "array") ("f" "trader_stoch(" "array $high,array $low,array $close,integer $fastK_Period,integer $slowK_Period,integer $slowK_MAType,integer $slowD_Period,integer $slowD_MAType" "S" "array") ("f" "trader_stddev(" "array $real,integer $timePeriod,float $nbDev" "S" "array") ("f" "trader_sqrt(" "array $real" "S" "array") ("f" "trader_sma(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_sinh(" "array $real" "S" "array") ("f" "trader_sin(" "array $real" "S" "array") ("f" "trader_set_unstable_period(" "integer $functionId,integer $timePeriod" "S" "void") ("f" "trader_set_compat(" "integer $compatId" "S" "void") ("f" "trader_sarext(" "array $high,array $low,float $startValue,float $offsetOnReverse,float $accelerationInitLong,float $accelerationLong,float $accelerationMaxLong,float $accelerationInitShort,float $accelerationShort,float $accelerationMaxShort" "S" "array") ("f" "trader_sar(" "array $high,array $low,float $acceleration,float $maximum" "S" "array") ("f" "trader_rsi(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_rocr(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_rocr100(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_rocp(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_roc(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_ppo(" "array $real,integer $fastPeriod,integer $slowPeriod,integer $mAType" "S" "array") ("f" "trader_plus_dm(" "array $high,array $low,integer $timePeriod" "S" "array") ("f" "trader_plus_di(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_obv(" "array $real,array $volume" "S" "array") ("f" "trader_natr(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_mult(" "array $real0,array $real1" "S" "array") ("f" "trader_mom(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_minus_dm(" "array $high,array $low,integer $timePeriod" "S" "array") ("f" "trader_minus_di(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_minmaxindex(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_minmax(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_minindex(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_min(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_midprice(" "array $high,array $low,integer $timePeriod" "S" "array") ("f" "trader_midpoint(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_mfi(" "array $high,array $low,array $close,array $volume,integer $timePeriod" "S" "array") ("f" "trader_medprice(" "array $high,array $low" "S" "array") ("f" "trader_maxindex(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_max(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_mavp(" "array $real,array $periods,integer $minPeriod,integer $maxPeriod,integer $mAType" "S" "array") ("f" "trader_mama(" "array $real,float $fastLimit,float $slowLimit" "S" "array") ("f" "trader_macdfix(" "array $real,integer $signalPeriod" "S" "array") ("f" "trader_macdext(" "array $real,integer $fastPeriod,integer $fastMAType,integer $slowPeriod,integer $slowMAType,integer $signalPeriod,integer $signalMAType" "S" "array") ("f" "trader_macd(" "array $real,integer $fastPeriod,integer $slowPeriod,integer $signalPeriod" "S" "array") ("f" "trader_ma(" "array $real,integer $timePeriod,integer $mAType" "S" "array") ("f" "trader_log10(" "array $real" "S" "array") ("f" "trader_ln(" "array $real" "S" "array") ("f" "trader_linearreg_slope(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_linearreg_intercept(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_linearreg(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_linearreg_angle(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_kama(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_ht_trendmode(" "array $real" "S" "array") ("f" "trader_ht_trendline(" "array $real" "S" "array") ("f" "trader_ht_sine(" "array $real" "S" "array") ("f" "trader_ht_phasor(" "array $real" "S" "array") ("f" "trader_ht_dcphase(" "array $real" "S" "array") ("f" "trader_ht_dcperiod(" "array $real" "S" "array") ("f" "trader_get_unstable_period(" "integer $functionId" "S" "integer") ("f" "trader_get_compat(" #1# "S" "integer") ("f" "trader_floor(" "array $real" "S" "array") ("f" "trader_exp(" "array $real" "S" "array") ("f" "trader_errno(" #1# "S" "integer") ("f" "trader_ema(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_dx(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_div(" "array $real0,array $real1" "S" "array") ("f" "trader_dema(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_cosh(" "array $real" "S" "array") ("f" "trader_cos(" "array $real" "S" "array") ("f" "trader_correl(" "array $real0,array $real1,integer $timePeriod" "S" "array") ("f" "trader_cmo(" "array $real,integer $timePeriod" "S" "array") ("f" "trader_ceil(" "array $real" "S" "array") ("f" "trader_cdlxsidegap3methods(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlupsidegap2crows(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlunique3river(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdltristar(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlthrusting(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdltasukigap(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdltakuri(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlsticksandwich(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlstalledpattern(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlspinningtop(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlshortline(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlshootingstar(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlseparatinglines(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlrisefall3methods(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlrickshawman(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlpiercing(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlonneck(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlmorningstar(" "array $open,array $high,array $low,array $close,float $penetration" "S" "array") ("f" "trader_cdlmorningdojistar(" "array $open,array $high,array $low,array $close,float $penetration" "S" "array") ("f" "trader_cdlmathold(" "array $open,array $high,array $low,array $close,float $penetration" "S" "array") ("f" "trader_cdlmatchinglow(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlmarubozu(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdllongline(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdllongleggeddoji(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlladderbottom(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlkickingbylength(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlkicking(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlinvertedhammer(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlinneck(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlidentical3crows(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlhomingpigeon(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlhikkakemod(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlhikkake(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlhighwave(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlharamicross(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlharami(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlhangingman(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlhammer(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlgravestonedoji(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlgapsidesidewhite(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdleveningstar(" "array $open,array $high,array $low,array $close,float $penetration" "S" "array") ("f" "trader_cdleveningdojistar(" "array $open,array $high,array $low,array $close,float $penetration" "S" "array") ("f" "trader_cdlengulfing(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdldragonflydoji(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdldojistar(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdldoji(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdldarkcloudcover(" "array $open,array $high,array $low,array $close,float $penetration" "S" "array") ("f" "trader_cdlcounterattack(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlconcealbabyswall(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlclosingmarubozu(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlbreakaway(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlbelthold(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdladvanceblock(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdlabandonedbaby(" "array $open,array $high,array $low,array $close,float $penetration" "S" "array") ("f" "trader_cdl3whitesoldiers(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdl3starsinsouth(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdl3outside(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdl3linestrike(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdl3inside(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdl3blackcrows(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cdl2crows(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_cci(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_bop(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_beta(" "array $real0,array $real1,integer $timePeriod" "S" "array") ("f" "trader_bbands(" "array $real,integer $timePeriod,float $nbDevUp,float $nbDevDn,integer $mAType" "S" "array") ("f" "trader_avgprice(" "array $open,array $high,array $low,array $close" "S" "array") ("f" "trader_atr(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_atan(" "array $real" "S" "array") ("f" "trader_asin(" "array $real" "S" "array") ("f" "trader_aroonosc(" "array $high,array $low,integer $timePeriod" "S" "array") ("f" "trader_aroon(" "array $high,array $low,integer $timePeriod" "S" "array") ("f" "trader_apo(" "array $real,integer $fastPeriod,integer $slowPeriod,integer $mAType" "S" "array") ("f" "trader_adxr(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_adx(" "array $high,array $low,array $close,integer $timePeriod" "S" "array") ("f" "trader_adosc(" "array $high,array $low,array $close,array $volume,integer $fastPeriod,integer $slowPeriod" "S" "array") ("f" "trader_add(" "array $real0,array $real1" "S" "array") ("f" "trader_ad(" "array $high,array $low,array $close,array $volume" "S" "array") ("f" "trader_acos(" "array $real" "S" "array") ("f" "touch(" "string $filename,int $time,int $atime" "S" "bool") ("f" "token_name(" "int $token" "S" "string") ("f" "token_get_all(" "string $source" "S" "array") ("f" "tmpfile(" #1# "S" "resource") ("f" "timezone_version_get(" #1# "S" "string") ("f" "timezone_name_from_abbr(" "string $abbr,int $gmtOffset,int $isdst" "S" "string") ("f" "time_sleep_until(" "float $timestamp" "S" "bool") ("f" "time_nanosleep(" "int $seconds,int $nanoseconds" "S" "mixed") ("f" "time(" #1# "S" "int") ("f" "tidy_warning_count(" "tidy $object" "S" "int") ("f" "tidy_setopt(" "string $option,mixed $value" "S" "bool") ("f" "tidy_set_encoding(" "string $encoding" "S" "bool") ("f" "tidy_save_config(" "string $filename" "S" "bool") ("f" "tidy_reset_config(" #1# "S" "bool") ("f" "tidy_load_config(" "string $filename,string $encoding" "S" "void") ("f" "tidy_get_output(" "tidy $object" "S" "string") ("f" "tidy_error_count(" "tidy $object" "S" "int") ("f" "tidy_config_count(" "tidy $object" "S" "int") ("f" "tidy_access_count(" "tidy $object" "S" "int") ("f" "textdomain(" "string $text_domain" "S" "string") ("f" "tempnam(" "string $dir,string $prefix" "S" "string") ("f" "tcpwrap_check(" "string $daemon,string $address,string $user,bool $nodns" "S" "bool") ("f" "tanh(" "float $arg" "S" "float") ("f" "tan(" "float $arg" "S" "float") ("f" "taint(" "string &$string,string $__args__" "S" "bool") ("f" "system(" "string $command,int &$return_var" "S" "string") ("f" "syslog(" "int $priority,string $message" "S" "bool") ("f" "sys_get_temp_dir(" #1# "S" "string") ("f" "sys_getloadavg(" #1# "S" "array") ("f" "symlink(" "string $target,string $link" "S" "bool") ("f" "sybase_unbuffered_query(" "string $query,resource $link_identifier,bool $store_result" "S" "resource") ("f" "sybase_set_message_handler(" "callable $handler,resource $link_identifier" "S" "bool") ("f" "sybase_select_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "sybase_result(" "resource $result,int $row,mixed $field" "S" "string") ("f" "sybase_query(" "string $query,resource $link_identifier" "S" "mixed") ("f" "sybase_pconnect(" "string $servername,string $username,string $password,string $charset,string $appname" "S" "resource") ("f" "sybase_num_rows(" "resource $result" "S" "int") ("f" "sybase_num_fields(" "resource $result" "S" "int") ("f" "sybase_min_server_severity(" "int $severity" "S" "void") ("f" "sybase_min_message_severity(" "int $severity" "S" "void") ("f" "sybase_min_error_severity(" "int $severity" "S" "void") ("f" "sybase_min_client_severity(" "int $severity" "S" "void") ("f" "sybase_get_last_message(" #1# "S" "string") ("f" "sybase_free_result(" "resource $result" "S" "bool") ("f" "sybase_field_seek(" "resource $result,int $field_offset" "S" "bool") ("f" "sybase_fetch_row(" "resource $result" "S" "array") ("f" "sybase_fetch_object(" "resource $result,mixed $object" "S" "object") ("f" "sybase_fetch_field(" "resource $result,int $field_offset" "S" "object") ("f" "sybase_fetch_assoc(" "resource $result" "S" "array") ("f" "sybase_fetch_array(" "resource $result" "S" "array") ("f" "sybase_deadlock_retry_count(" "int $retry_count" "S" "void") ("f" "sybase_data_seek(" "resource $result_identifier,int $row_number" "S" "bool") ("f" "sybase_connect(" "string $servername,string $username,string $password,string $charset,string $appname,bool $new" "S" "resource") ("f" "sybase_close(" "resource $link_identifier" "S" "bool") ("f" "sybase_affected_rows(" "resource $link_identifier" "S" "int") ("f" "svn_update(" "string $path,int $revno,bool $recurse" "S" "int") ("f" "svn_status(" "string $path,int $flags" "S" "array") ("f" "svn_revert(" "string $path,bool $recursive" "S" "bool") ("f" "svn_repos_recover(" "string $path" "S" "bool") ("f" "svn_repos_open(" "string $path" "S" "resource") ("f" "svn_repos_hotcopy(" "string $repospath,string $destpath,bool $cleanlogs" "S" "bool") ("f" "svn_repos_fs(" "resource $repos" "S" "resource") ("f" "svn_repos_fs_commit_txn(" "resource $txn" "S" "int") ("f" "svn_repos_fs_begin_txn_for_commit(" "resource $repos,int $rev,string $author,string $log_msg" "S" "resource") ("f" "svn_repos_create(" "string $path,array $config,array $fsconfig" "S" "resource") ("f" "svn_mkdir(" "string $path,string $log_message" "S" "bool") ("f" "svn_ls(" "string $repos_url,int $revision_no,bool $recurse,bool $peg" "S" "array") ("f" "svn_log(" "string $repos_url,int $start_revision,int $end_revision,int $limit,int $flags" "S" "array") ("f" "svn_import(" "string $path,string $url,bool $nonrecursive" "S" "bool") ("f" "svn_fs_youngest_rev(" "resource $fs" "S" "int") ("f" "svn_fs_txn_root(" "resource $txn" "S" "resource") ("f" "svn_fs_revision_root(" "resource $fs,int $revnum" "S" "resource") ("f" "svn_fs_revision_prop(" "resource $fs,int $revnum,string $propname" "S" "string") ("f" "svn_fs_props_changed(" "resource $root1,string $path1,resource $root2,string $path2" "S" "bool") ("f" "svn_fs_node_prop(" "resource $fsroot,string $path,string $propname" "S" "string") ("f" "svn_fs_node_created_rev(" "resource $fsroot,string $path" "S" "int") ("f" "svn_fs_make_file(" "resource $root,string $path" "S" "bool") ("f" "svn_fs_make_dir(" "resource $root,string $path" "S" "bool") ("f" "svn_fs_is_file(" "resource $root,string $path" "S" "bool") ("f" "svn_fs_is_dir(" "resource $root,string $path" "S" "bool") ("f" "svn_fs_file_length(" "resource $fsroot,string $path" "S" "int") ("f" "svn_fs_file_contents(" "resource $fsroot,string $path" "S" "resource") ("f" "svn_fs_dir_entries(" "resource $fsroot,string $path" "S" "array") ("f" "svn_fs_delete(" "resource $root,string $path" "S" "bool") ("f" "svn_fs_copy(" "resource $from_root,string $from_path,resource $to_root,string $to_path" "S" "bool") ("f" "svn_fs_contents_changed(" "resource $root1,string $path1,resource $root2,string $path2" "S" "bool") ("f" "svn_fs_check_path(" "resource $fsroot,string $path" "S" "int") ("f" "svn_fs_change_node_prop(" "resource $root,string $path,string $name,string $value" "S" "bool") ("f" "svn_fs_begin_txn2(" "resource $repos,int $rev" "S" "resource") ("f" "svn_fs_apply_text(" "resource $root,string $path" "S" "resource") ("f" "svn_fs_abort_txn(" "resource $txn" "S" "bool") ("f" "svn_export(" "string $frompath,string $topath,bool $working_copy,int $revision_no" "S" "bool") ("f" "svn_diff(" "string $path1,int $rev1,string $path2,int $rev2" "S" "array") ("f" "svn_delete(" "string $path,bool $force" "S" "bool") ("f" "svn_commit(" "string $log,array $targets,bool $recursive" "S" "array") ("f" "svn_client_version(" #1# "S" "string") ("f" "svn_cleanup(" "string $workingdir" "S" "bool") ("f" "svn_checkout(" "string $repos,string $targetpath,int $revision,int $flags" "S" "bool") ("f" "svn_cat(" "string $repos_url,int $revision_no" "S" "string") ("f" "svn_blame(" "string $repository_url,int $revision_no" "S" "array") ("f" "svn_auth_set_parameter(" "string $key,string $value" "S" "void") ("f" "svn_auth_get_parameter(" "string $key" "S" "string") ("f" "svn_add(" "string $path,bool $recursive,bool $force" "S" "bool") ("f" "substr(" "string $string,int $start,int $length" "S" "string") ("f" "substr_replace(" "mixed $string,mixed $replacement,mixed $start,mixed $length" "S" "mixed") ("f" "substr_count(" "string $haystack,string $needle,int $offset,int $length" "S" "int") ("f" "substr_compare(" "string $main_str,string $str,int $offset,int $length,bool $case_insensitivity" "S" "int") ("f" "str_word_count(" "string $string,int $format,string $charlist" "S" "mixed") ("f" "strval(" "mixed $var" "S" "string") ("f" "strtr(" "string $str,string $from,string $to" "S" "string") ("f" "strtoupper(" "string $string" "S" "string") ("f" "strtotime(" "string $time,int $now" "S" "int") ("f" "strtolower(" "string $str" "S" "string") ("f" "strtok(" "string $str,string $token" "S" "string") ("f" "strstr(" "string $haystack,mixed $needle,bool $before_needle" "S" "string") ("f" "strspn(" "string $subject,string $mask,int $start,int $length" "S" "int") ("f" "str_split(" "string $string,int $split_length" "S" "array") ("f" "str_shuffle(" "string $str" "S" "string") ("f" "strrpos(" "string $haystack,string $needle,int $offset" "S" "int") ("f" "str_rot13(" "string $str" "S" "string") ("f" "strripos(" "string $haystack,string $needle,int $offset" "S" "int") ("f" "strrev(" "string $string" "S" "string") ("f" "str_replace(" "mixed $search,mixed $replace,mixed $subject,int &$count" "S" "mixed") ("f" "str_repeat(" "string $input,int $multiplier" "S" "string") ("f" "strrchr(" "string $haystack,mixed $needle" "S" "string") ("f" "strptime(" "string $date,string $format" "S" "array") ("f" "strpos(" "string $haystack,mixed $needle,int $offset" "S" "mixed") ("f" "strpbrk(" "string $haystack,string $char_list" "S" "string") ("f" "str_pad(" "string $input,int $pad_length,string $pad_string,int $pad_type" "S" "string") ("f" "strncmp(" "string $str1,string $str2,int $len" "S" "int") ("f" "strncasecmp(" "string $str1,string $str2,int $len" "S" "int") ("f" "strnatcmp(" "string $str1,string $str2" "S" "int") ("f" "strnatcasecmp(" "string $str1,string $str2" "S" "int") ("f" "strlen(" "string $string" "S" "int") ("f" "stristr(" "string $haystack,mixed $needle,bool $before_needle" "S" "string") ("f" "str_ireplace(" "mixed $search,mixed $replace,mixed $subject,int &$count" "S" "mixed") ("f" "strip_tags(" "string $str,string $allowable_tags" "S" "string") ("f" "stripslashes(" "string $str" "S" "string") ("f" "stripos(" "string $haystack,string $needle,int $offset" "S" "int") ("f" "stripcslashes(" "string $str" "S" "string") ("f" "str_getcsv(" "string $input,string $delimiter,string $enclosure,string $escape" "S" "array") ("f" "strftime(" "string $format,int $timestamp" "S" "string") ("f" "stream_wrapper_unregister(" "string $protocol" "S" "bool") ("f" "stream_wrapper_restore(" "string $protocol" "S" "bool") ("f" "stream_supports_lock(" "resource $stream" "S" "bool") ("f" "stream_socket_shutdown(" "resource $stream,int $how" "S" "bool") ("f" "stream_socket_server(" "string $local_socket,int &$errno,string &$errstr,int $flags,resource $context" "S" "resource") ("f" "stream_socket_sendto(" "resource $socket,string $data,int $flags,string $address" "S" "int") ("f" "stream_socket_recvfrom(" "resource $socket,int $length,int $flags,string &$address" "S" "string") ("f" "stream_socket_pair(" "int $domain,int $type,int $protocol" "S" "array") ("f" "stream_socket_get_name(" "resource $handle,bool $want_peer" "S" "string") ("f" "stream_socket_enable_crypto(" "resource $stream,bool $enable,int $crypto_type,resource $session_stream" "S" "mixed") ("f" "stream_socket_client(" "string $remote_socket,int &$errno,string &$errstr,float $timeout,int $flags,resource $context" "S" "resource") ("f" "stream_socket_accept(" "resource $server_socket,float $timeout,string &$peername" "S" "resource") ("f" "stream_set_write_buffer(" "resource $stream,int $buffer" "S" "int") ("f" "stream_set_timeout(" "resource $stream,int $seconds,int $microseconds" "S" "bool") ("f" "stream_set_read_buffer(" "resource $stream,int $buffer" "S" "int") ("f" "stream_set_chunk_size(" "resource $fp,int $chunk_size" "S" "int") ("f" "stream_set_blocking(" "resource $stream,int $mode" "S" "bool") ("f" "stream_select(" "array &$read,array &$write,array &$except,int $tv_sec,int $tv_usec" "S" "int") ("f" "stream_resolve_include_path(" "string $filename" "S" "string") ("f" "stream_register_wrapper(" "string $protocol,string $classname" "S" "boolean") ("f" "stream_notification_callback(" "int $notification_code,int $severity,string $message,int $message_code,int $bytes_transferred,int $bytes_max" "S" "void") ("f" "stream_is_local(" "mixed $stream_or_url" "S" "bool") ("f" "stream_get_wrappers(" #1# "S" "array") ("f" "stream_get_transports(" #1# "S" "array") ("f" "stream_get_meta_data(" "int $fp" "S" "array") ("f" "stream_get_line(" "resource $handle,int $length,string $ending" "S" "string") ("f" "stream_get_filters(" #1# "S" "array") ("f" "stream_get_contents(" "resource $handle,int $maxlength,int $offset" "S" "string") ("f" "stream_filter_remove(" "resource $stream_filter" "S" "bool") ("f" "stream_filter_register(" "string $filtername,string $classname" "S" "bool") ("f" "stream_filter_prepend(" "resource $stream,string $filtername,int $read_write,mixed $params" "S" "resource") ("f" "stream_filter_append(" "resource $stream,string $filtername,int $read_write,mixed $params" "S" "resource") ("f" "stream_encoding(" "resource $stream,string $encoding" "S" "bool") ("f" "stream_copy_to_stream(" "resource $source,resource $dest,int $maxlength,int $offset" "S" "int") ("f" "stream_context_set_params(" "resource $stream_or_context,array $params" "S" "bool") ("f" "stream_context_set_option(" "resource $stream_or_context,string $wrapper,string $option,mixed $value" "S" "bool") ("f" "stream_context_set_default(" "array $options" "S" "resource") ("f" "stream_context_get_params(" "resource $stream_or_context" "S" "array") ("f" "stream_context_get_options(" "resource $stream_or_context" "S" "array") ("f" "stream_context_get_default(" "array $options" "S" "resource") ("f" "stream_context_create(" "array $options,array $params" "S" "resource") ("f" "stream_bucket_prepend(" "resource $brigade,resource $bucket" "S" "void") ("f" "stream_bucket_new(" "resource $stream,string $buffer" "S" "object") ("f" "stream_bucket_make_writeable(" "resource $brigade" "S" "object") ("f" "stream_bucket_append(" "resource $brigade,resource $bucket" "S" "void") ("f" "strcspn(" "string $str1,string $str2,int $start,int $length" "S" "int") ("f" "strcoll(" "string $str1,string $str2" "S" "int") ("f" "strcmp(" "string $str1,string $str2" "S" "int") ("f" "strcasecmp(" "string $str1,string $str2" "S" "int") ("f" "stomp_version(" #1# "S" "string") ("f" "stomp_connect_error(" #1# "S" "string") ("f" "stats_variance(" "array $a,bool $sample" "S" "float") ("f" "stats_stat_powersum(" "array $arr,float $power" "S" "float") ("f" "stats_stat_percentile(" "float $df,float $xnonc" "S" "float") ("f" "stats_stat_paired_t(" "array $arr1,array $arr2" "S" "float") ("f" "stats_stat_noncentral_t(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_stat_innerproduct(" "array $arr1,array $arr2" "S" "float") ("f" "stats_stat_independent_t(" "array $arr1,array $arr2" "S" "float") ("f" "stats_stat_gennch(" "int $n" "S" "float") ("f" "stats_stat_correlation(" "array $arr1,array $arr2" "S" "float") ("f" "stats_stat_binomial_coef(" "int $x,int $n" "S" "float") ("f" "stats_standard_deviation(" "array $a,bool $sample" "S" "float") ("f" "stats_skew(" "array $a" "S" "float") ("f" "stats_rand_setall(" "int $iseed1,int $iseed2" "S" "void") ("f" "stats_rand_ranf(" #1# "S" "float") ("f" "stats_rand_phrase_to_seeds(" "string $phrase" "S" "array") ("f" "stats_rand_get_seeds(" #1# "S" "array") ("f" "stats_rand_gen_t(" "float $df" "S" "float") ("f" "stats_rand_gen_normal(" "float $av,float $sd" "S" "float") ("f" "stats_rand_gen_noncentral_t(" "float $df,float $xnonc" "S" "float") ("f" "stats_rand_gen_noncentral_f(" "float $dfn,float $dfd,float $xnonc" "S" "float") ("f" "stats_rand_gen_noncenral_chisquare(" "float $df,float $xnonc" "S" "float") ("f" "stats_rand_gen_iuniform(" "int $low,int $high" "S" "int") ("f" "stats_rand_gen_ipoisson(" "float $mu" "S" "int") ("f" "stats_rand_gen_int(" #1# "S" "int") ("f" "stats_rand_gen_ibinomial_negative(" "int $n,float $p" "S" "int") ("f" "stats_rand_gen_ibinomial(" "int $n,float $pp" "S" "int") ("f" "stats_rand_gen_gamma(" "float $a,float $r" "S" "float") ("f" "stats_rand_gen_funiform(" "float $low,float $high" "S" "float") ("f" "stats_rand_gen_f(" "float $dfn,float $dfd" "S" "float") ("f" "stats_rand_gen_exponential(" "float $av" "S" "float") ("f" "stats_rand_gen_chisquare(" "float $df" "S" "float") ("f" "stats_rand_gen_beta(" "float $a,float $b" "S" "float") ("f" "stats_kurtosis(" "array $a" "S" "float") ("f" "stats_harmonic_mean(" "array $a" "S" "number") ("f" "stats_den_uniform(" "float $x,float $a,float $b" "S" "float") ("f" "stats_dens_weibull(" "float $x,float $a,float $b" "S" "float") ("f" "stats_dens_t(" "float $x,float $dfr" "S" "float") ("f" "stats_dens_pmf_poisson(" "float $x,float $lb" "S" "float") ("f" "stats_dens_pmf_hypergeometric(" "float $n1,float $n2,float $N1,float $N2" "S" "float") ("f" "stats_dens_pmf_binomial(" "float $x,float $n,float $pi" "S" "float") ("f" "stats_dens_normal(" "float $x,float $ave,float $stdev" "S" "float") ("f" "stats_dens_negative_binomial(" "float $x,float $n,float $pi" "S" "float") ("f" "stats_dens_logistic(" "float $x,float $ave,float $stdev" "S" "float") ("f" "stats_dens_laplace(" "float $x,float $ave,float $stdev" "S" "float") ("f" "stats_dens_gamma(" "float $x,float $shape,float $scale" "S" "float") ("f" "stats_dens_f(" "float $x,float $dfr1,float $dfr2" "S" "float") ("f" "stats_dens_exponential(" "float $x,float $scale" "S" "float") ("f" "stats_dens_chisquare(" "float $x,float $dfr" "S" "float") ("f" "stats_dens_cauchy(" "float $x,float $ave,float $stdev" "S" "float") ("f" "stats_dens_beta(" "float $x,float $a,float $b" "S" "float") ("f" "stats_covariance(" "array $a,array $b" "S" "float") ("f" "stats_cdf_weibull(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_uniform(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_t(" "float $par1,float $par2,int $which" "S" "float") ("f" "stats_cdf_poisson(" "float $par1,float $par2,int $which" "S" "float") ("f" "stats_cdf_noncentral_f(" "float $par1,float $par2,float $par3,float $par4,int $which" "S" "float") ("f" "stats_cdf_noncentral_chisquare(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_negative_binomial(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_logistic(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_laplace(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_gamma(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_f(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_exponential(" "float $par1,float $par2,int $which" "S" "float") ("f" "stats_cdf_chisquare(" "float $par1,float $par2,int $which" "S" "float") ("f" "stats_cdf_cauchy(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_binomial(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_cdf_beta(" "float $par1,float $par2,float $par3,int $which" "S" "float") ("f" "stats_absolute_deviation(" "array $a" "S" "float") ("f" "stat(" "string $filename" "S" "array") ("f" "ssh2_tunnel(" "resource $session,string $host,int $port" "S" "resource") ("f" "ssh2_shell(" "resource $session,string $term_type,array $env,int $width,int $height,int $width_height_type" "S" "resource") ("f" "ssh2_sftp_unlink(" "resource $sftp,string $filename" "S" "bool") ("f" "ssh2_sftp_symlink(" "resource $sftp,string $target,string $link" "S" "bool") ("f" "ssh2_sftp_stat(" "resource $sftp,string $path" "S" "array") ("f" "ssh2_sftp_rmdir(" "resource $sftp,string $dirname" "S" "bool") ("f" "ssh2_sftp(" "resource $session" "S" "resource") ("f" "ssh2_sftp_rename(" "resource $sftp,string $from,string $to" "S" "bool") ("f" "ssh2_sftp_realpath(" "resource $sftp,string $filename" "S" "string") ("f" "ssh2_sftp_readlink(" "resource $sftp,string $link" "S" "string") ("f" "ssh2_sftp_mkdir(" "resource $sftp,string $dirname,int $mode,bool $recursive" "S" "bool") ("f" "ssh2_sftp_lstat(" "resource $sftp,string $path" "S" "array") ("f" "ssh2_sftp_chmod(" "resource $sftp,string $filename,int $mode" "S" "bool") ("f" "ssh2_scp_send(" "resource $session,string $local_file,string $remote_file,int $create_mode" "S" "bool") ("f" "ssh2_scp_recv(" "resource $session,string $remote_file,string $local_file" "S" "bool") ("f" "ssh2_publickey_remove(" "resource $pkey,string $algoname,string $blob" "S" "bool") ("f" "ssh2_publickey_list(" "resource $pkey" "S" "array") ("f" "ssh2_publickey_init(" "resource $session" "S" "resource") ("f" "ssh2_publickey_add(" "resource $pkey,string $algoname,string $blob,bool $overwrite,array $attributes" "S" "bool") ("f" "ssh2_methods_negotiated(" "resource $session" "S" "array") ("f" "ssh2_fingerprint(" "resource $session,int $flags" "S" "string") ("f" "ssh2_fetch_stream(" "resource $channel,int $streamid" "S" "resource") ("f" "ssh2_exec(" "resource $session,string $command,string $pty,array $env,int $width,int $height,int $width_height_type" "S" "resource") ("f" "ssh2_connect(" "string $host,int $port,array $methods,array $callbacks" "S" "resource") ("f" "ssh2_auth_pubkey_file(" "resource $session,string $username,string $pubkeyfile,string $privkeyfile,string $passphrase" "S" "bool") ("f" "ssh2_auth_password(" "resource $session,string $username,string $password" "S" "bool") ("f" "ssh2_auth_none(" "resource $session,string $username" "S" "mixed") ("f" "ssh2_auth_hostbased_file(" "resource $session,string $username,string $hostname,string $pubkeyfile,string $privkeyfile,string $passphrase,string $local_username" "S" "bool") ("f" "ssh2_auth_agent(" "resource $session,string $username" "S" "bool") ("f" "ssdeep_fuzzy_hash(" "string $to_hash" "S" "string") ("f" "ssdeep_fuzzy_hash_filename(" "string $file_name" "S" "string") ("f" "ssdeep_fuzzy_compare(" "string $signature1,string $signature2" "S" "int") ("f" "sscanf(" "string $str,string $format,mixed &$__args__" "S" "mixed") ("f" "srand(" "int $seed" "S" "void") ("f" "sqrt(" "float $arg" "S" "float") ("f" "sqlsrv_server_info(" "resource $conn" "S" "array") ("f" "sqlsrv_send_stream_data(" "resource $stmt" "S" "bool") ("f" "sqlsrv_rows_affected(" "resource $stmt" "S" "int") ("f" "sqlsrv_rollback(" "resource $conn" "S" "bool") ("f" "sqlsrv_query(" "resource $conn,string $sql,array $params,array $options" "S" "mixed") ("f" "sqlsrv_prepare(" "resource $conn,string $sql,array $params,array $options" "S" "mixed") ("f" "sqlsrv_num_rows(" "resource $stmt" "S" "mixed") ("f" "sqlsrv_num_fields(" "resource $stmt" "S" "mixed") ("f" "sqlsrv_next_result(" "resource $stmt" "S" "mixed") ("f" "sqlsrv_has_rows(" "resource $stmt" "S" "bool") ("f" "sqlsrv_get_field(" "resource $stmt,int $fieldIndex,int $getAsType" "S" "mixed") ("f" "sqlsrv_get_config(" "string $setting" "S" "mixed") ("f" "sqlsrv_free_stmt(" "resource $stmt" "S" "bool") ("f" "sqlsrv_field_metadata(" "resource $stmt" "S" "mixed") ("f" "sqlsrv_fetch_object(" "resource $stmt,string $className,array $ctorParams,int $row,int $offset" "S" "mixed") ("f" "sqlsrv_fetch(" "resource $stmt,int $row,int $offset" "S" "mixed") ("f" "sqlsrv_fetch_array(" "resource $stmt,int $fetchType,int $row,int $offset" "S" "array") ("f" "sqlsrv_execute(" "resource $stmt" "S" "bool") ("f" "sqlsrv_errors(" "int $errorsOrWarnings" "S" "mixed") ("f" "sqlsrv_connect(" "string $serverName,array $connectionInfo" "S" "resource") ("f" "sqlsrv_configure(" "string $setting,mixed $value" "S" "bool") ("f" "sqlsrv_commit(" "resource $conn" "S" "bool") ("f" "sqlsrv_close(" "resource $conn" "S" "bool") ("f" "sqlsrv_client_info(" "resource $conn" "S" "array") ("f" "sqlsrv_cancel(" "resource $stmt" "S" "bool") ("f" "sqlsrv_begin_transaction(" "resource $conn" "S" "bool") ("f" "sql_regcase(" "string $string" "S" "string") ("f" "sqlite_valid(" "resource $result" "S" "bool") ("f" "sqlite_unbuffered_query(" "resource $dbhandle,string $query,int $result_type,string &$error_msg" "S" "resource") ("f" "sqlite_udf_encode_binary(" "string $data" "S" "string") ("f" "sqlite_udf_decode_binary(" "string $data" "S" "string") ("f" "sqlite_single_query(" "resource $db,string $query,bool $first_row_only,bool $decode_binary" "S" "array") ("f" "sqlite_seek(" "resource $result,int $rownum" "S" "bool") ("f" "sqlite_rewind(" "resource $result" "S" "bool") ("f" "sqlite_query(" "resource $dbhandle,string $query,int $result_type,string &$error_msg" "S" "resource") ("f" "sqlite_prev(" "resource $result" "S" "bool") ("f" "sqlite_popen(" "string $filename,int $mode,string &$error_message" "S" "resource") ("f" "sqlite_open(" "string $filename,int $mode,string &$error_message" "S" "resource") ("f" "sqlite_num_rows(" "resource $result" "S" "int") ("f" "sqlite_num_fields(" "resource $result" "S" "int") ("f" "sqlite_next(" "resource $result" "S" "bool") ("f" "sqlite_libversion(" #1# "S" "string") ("f" "sqlite_libencoding(" #1# "S" "string") ("f" "sqlite_last_insert_rowid(" "resource $dbhandle" "S" "int") ("f" "sqlite_last_error(" "resource $dbhandle" "S" "int") ("f" "sqlite_has_prev(" "resource $result" "S" "bool") ("f" "sqlite_has_more(" "resource $result" "S" "bool") ("f" "sqlite_field_name(" "resource $result,int $field_index" "S" "string") ("f" "sqlite_fetch_single(" "resource $result,bool $decode_binary" "S" "string") ("f" "sqlite_fetch_object(" "resource $result,string $class_name,array $ctor_params,bool $decode_binary" "S" "object") ("f" "sqlite_fetch_column_types(" "string $table_name,resource $dbhandle,int $result_type" "S" "array") ("f" "sqlite_fetch_array(" "resource $result,int $result_type,bool $decode_binary" "S" "array") ("f" "sqlite_fetch_all(" "resource $result,int $result_type,bool $decode_binary" "S" "array") ("f" "sqlite_factory(" "string $filename,int $mode,string &$error_message" "S" "SQLiteDatabase") ("f" "sqlite_exec(" "resource $dbhandle,string $query,string &$error_msg" "S" "bool") ("f" "sqlite_escape_string(" "string $item" "S" "string") ("f" "sqlite_error_string(" "int $error_code" "S" "string") ("f" "sqlite_current(" "resource $result,int $result_type,bool $decode_binary" "S" "array") ("f" "sqlite_create_function(" "resource $dbhandle,string $function_name,callable $callback,int $num_args" "S" "void") ("f" "sqlite_create_aggregate(" "resource $dbhandle,string $function_name,callable $step_func,callable $finalize_func,int $num_args" "S" "void") ("f" "sqlite_column(" "resource $result,mixed $index_or_name,bool $decode_binary" "S" "mixed") ("f" "sqlite_close(" "resource $dbhandle" "S" "void") ("f" "sqlite_changes(" "resource $dbhandle" "S" "int") ("f" "sqlite_busy_timeout(" "resource $dbhandle,int $milliseconds" "S" "void") ("f" "sqlite_array_query(" "resource $dbhandle,string $query,int $result_type,bool $decode_binary" "S" "array") ("f" "sprintf(" "string $format,mixed $args,mixed $__args__" "S" "string") ("f" "spl_object_hash(" "object $obj" "S" "string") ("f" "spliti(" "string $pattern,string $string,int $limit" "S" "array") ("f" "split(" "string $pattern,string $string,int $limit" "S" "array") ("f" "spl_classes(" #1# "S" "array") ("f" "spl_autoload(" "string $class_name,string $file_extensions" "S" "void") ("f" "spl_autoload_unregister(" "mixed $autoload_function" "S" "bool") ("f" "spl_autoload_register(" "callback $autoload_function" "S" "bool") ("f" "spl_autoload_functions(" #1# "S" "array") ("f" "spl_autoload_extensions(" "string $file_extensions" "S" "string") ("f" "spl_autoload_call(" "string $class_name" "S" "void") ("f" "soundex(" "string $str" "S" "string") ("f" "sort(" "array &$array,int $sort_flags" "S" "bool") ("f" "solr_get_version(" #1# "S" "string") ("f" "socket_write(" "resource $socket,string $buffer,int $length" "S" "int") ("f" "socket_strerror(" "int $errno" "S" "string") ("f" "socket_shutdown(" "resource $socket,int $how" "S" "bool") ("f" "socket_set_option(" "resource $socket,int $level,int $optname,mixed $optval" "S" "bool") ("f" "socket_set_nonblock(" "resource $socket" "S" "bool") ("f" "socket_set_block(" "resource $socket" "S" "bool") ("f" "socket_sendto(" "resource $socket,string $buf,int $len,int $flags,string $addr,int $port" "S" "int") ("f" "socket_sendmsg(" "resource $socket,array $message,int $flags" "S" "int") ("f" "socket_send(" "resource $socket,string $buf,int $len,int $flags" "S" "int") ("f" "socket_select(" "array &$read,array &$write,array &$except,int $tv_sec,int $tv_usec" "S" "int") ("f" "socket_recvmsg(" "resource $socket,string $message,int $flags" "S" "int") ("f" "socket_recv(" "resource $socket,string &$buf,int $len,int $flags" "S" "int") ("f" "socket_recvfrom(" "resource $socket,string &$buf,int $len,int $flags,string &$name,int &$port" "S" "int") ("f" "socket_read(" "resource $socket,int $length,int $type" "S" "string") ("f" "socket_listen(" "resource $socket,int $backlog" "S" "bool") ("f" "socket_last_error(" "resource $socket" "S" "int") ("f" "socket_import_stream(" "resource $stream" "S" "resource") ("f" "socket_getsockname(" "resource $socket,string &$addr,int &$port" "S" "bool") ("f" "socket_getpeername(" "resource $socket,string &$address,int &$port" "S" "bool") ("f" "socket_get_option(" "resource $socket,int $level,int $optname" "S" "mixed") ("f" "socket_create(" "int $domain,int $type,int $protocol" "S" "resource") ("f" "socket_create_pair(" "int $domain,int $type,int $protocol,array &$fd" "S" "bool") ("f" "socket_create_listen(" "int $port,int $backlog" "S" "resource") ("f" "socket_connect(" "resource $socket,string $address,int $port" "S" "bool") ("f" "socket_cmsg_space(" "int $level,int $type" "S" "int") ("f" "socket_close(" "resource $socket" "S" "void") ("f" "socket_clear_error(" "resource $socket" "S" "void") ("f" "socket_bind(" "resource $socket,string $address,int $port" "S" "bool") ("f" "socket_accept(" "resource $socket" "S" "resource") ("f" "snmpwalkoid(" "string $hostname,string $community,string $object_id,int $timeout,int $retries" "S" "array") ("f" "snmpwalk(" "string $hostname,string $community,string $object_id,int $timeout,int $retries" "S" "array") ("f" "snmp_set_valueretrieval(" "int $method" "S" "bool") ("f" "snmp_set_quick_print(" "bool $quick_print" "S" "void") ("f" "snmp_set_oid_output_format(" "int $oid_format" "S" "bool") ("f" "snmp_set_oid_numeric_print(" "int $oid_format" "S" "void") ("f" "snmp_set_enum_print(" "int $enum_print" "S" "bool") ("f" "snmpset(" "string $hostname,string $community,string $object_id,string $type,mixed $value,int $timeout,int $retries" "S" "bool") ("f" "snmprealwalk(" "string $host,string $community,string $object_id,int $timeout,int $retries" "S" "array") ("f" "snmp_read_mib(" "string $filename" "S" "bool") ("f" "snmp_get_valueretrieval(" #1# "S" "int") ("f" "snmpget(" "string $hostname,string $community,string $object_id,int $timeout,int $retries" "S" "string") ("f" "snmp_get_quick_print(" #1# "S" "bool") ("f" "snmpgetnext(" "string $host,string $community,string $object_id,int $timeout,int $retries" "S" "string") ("f" "snmp3_walk(" "string $host,string $sec_name,string $sec_level,string $auth_protocol,string $auth_passphrase,string $priv_protocol,string $priv_passphrase,string $object_id,string $timeout,string $retries" "S" "array") ("f" "snmp3_set(" "string $host,string $sec_name,string $sec_level,string $auth_protocol,string $auth_passphrase,string $priv_protocol,string $priv_passphrase,string $object_id,string $type,string $value,int $timeout,int $retries" "S" "bool") ("f" "snmp3_real_walk(" "string $host,string $sec_name,string $sec_level,string $auth_protocol,string $auth_passphrase,string $priv_protocol,string $priv_passphrase,string $object_id,string $timeout,string $retries" "S" "array") ("f" "snmp3_get(" "string $host,string $sec_name,string $sec_level,string $auth_protocol,string $auth_passphrase,string $priv_protocol,string $priv_passphrase,string $object_id,string $timeout,string $retries" "S" "string") ("f" "snmp3_getnext(" "string $host,string $sec_name,string $sec_level,string $auth_protocol,string $auth_passphrase,string $priv_protocol,string $priv_passphrase,string $object_id,string $timeout,string $retries" "S" "string") ("f" "snmp2_walk(" "string $host,string $community,string $object_id,string $timeout,string $retries" "S" "array") ("f" "snmp2_set(" "string $host,string $community,string $object_id,string $type,string $value,string $timeout,string $retries" "S" "bool") ("f" "snmp2_real_walk(" "string $host,string $community,string $object_id,string $timeout,string $retries" "S" "array") ("f" "snmp2_get(" "string $host,string $community,string $object_id,string $timeout,string $retries" "S" "string") ("f" "snmp2_getnext(" "string $host,string $community,string $object_id,string $timeout,string $retries" "S" "string") ("f" "sleep(" "int $seconds" "S" "int") ("f" "sinh(" "float $arg" "S" "float") ("f" "sin(" "float $arg" "S" "float") ("f" "simplexml_load_string(" "string $data,string $class_name,int $options,string $ns,bool $is_prefix" "S" "SimpleXMLElement") ("f" "simplexml_load_file(" "string $filename,string $class_name,int $options,string $ns,bool $is_prefix" "S" "SimpleXMLElement") ("f" "simplexml_import_dom(" "DOMNode $node,string $class_name" "S" "SimpleXMLElement") ("f" "similar_text(" "string $first,string $second,float &$percent" "S" "int") ("f" "shuffle(" "array &$array" "S" "bool") ("f" "shm_remove_var(" "resource $shm_identifier,int $variable_key" "S" "bool") ("f" "shm_remove(" "resource $shm_identifier" "S" "bool") ("f" "shm_put_var(" "resource $shm_identifier,int $variable_key,mixed $variable" "S" "bool") ("f" "shmop_write(" "int $shmid,string $data,int $offset" "S" "int") ("f" "shmop_size(" "int $shmid" "S" "int") ("f" "shmop_read(" "int $shmid,int $start,int $count" "S" "string") ("f" "shmop_open(" "int $key,string $flags,int $mode,int $size" "S" "int") ("f" "shmop_delete(" "int $shmid" "S" "bool") ("f" "shmop_close(" "int $shmid" "S" "void") ("f" "shm_has_var(" "resource $shm_identifier,int $variable_key" "S" "bool") ("f" "shm_get_var(" "resource $shm_identifier,int $variable_key" "S" "mixed") ("f" "shm_detach(" "resource $shm_identifier" "S" "bool") ("f" "shm_attach(" "int $key,int $memsize,int $perm" "S" "resource") ("f" "shell_exec(" "string $cmd" "S" "string") ("f" "sha1(" "string $str,bool $raw_output" "S" "string") ("f" "sha1_file(" "string $filename,bool $raw_output" "S" "string") ("f" "settype(" "mixed &$var,string $type" "S" "bool") ("f" "set_time_limit(" "int $seconds" "S" "void") ("f" "setthreadtitle(" "string $title" "S" "bool") ("f" "setrawcookie(" "string $name,string $value,int $expire,string $path,string $domain,bool $secure,bool $httponly" "S" "bool") ("f" "setproctitle(" "string $title" "S" "void") ("f" "set_magic_quotes_runtime(" "bool $new_setting" "S" "bool") ("f" "setlocale(" "int $category,string $locale,string $__args__" "S" "string") ("f" "set_include_path(" "string $new_include_path" "S" "string") ("f" "set_exception_handler(" "callable $exception_handler" "S" "callable") ("f" "set_error_handler(" "callable $error_handler,int $error_types" "S" "mixed") ("f" "setcookie(" "string $name,string $value,int $expire,string $path,string $domain,bool $secure,bool $httponly" "S" "bool") ("f" "session_write_close(" #1# "S" "void") ("f" "session_unset(" #1# "S" "void") ("f" "session_unregister(" "string $name" "S" "bool") ("f" "session_status(" #1# "S" "int") ("f" "session_start(" #1# "S" "bool") ("f" "session_set_save_handler(" "callable $open,callable $close,callable $read,callable $write,callable $destroy,callable $gc,callable $create_sid" "S" "bool") ("f" "session_set_cookie_params(" "int $lifetime,string $path,string $domain,bool $secure,bool $httponly" "S" "void") ("f" "session_save_path(" "string $path" "S" "string") ("f" "session_reset(" #1# "S" "bool") ("f" "session_register_shutdown(" #1# "S" "void") ("f" "session_register(" "mixed $name,mixed $__args__" "S" "bool") ("f" "session_regenerate_id(" "bool $delete_old_session" "S" "bool") ("f" "session_pgsql_status(" #1# "S" "array") ("f" "session_pgsql_set_field(" "string $value" "S" "bool") ("f" "session_pgsql_reset(" #1# "S" "bool") ("f" "session_pgsql_get_field(" #1# "S" "string") ("f" "session_pgsql_get_error(" "bool $with_error_message" "S" "array") ("f" "session_pgsql_add_error(" "int $error_level,string $error_message" "S" "bool") ("f" "session_name(" "string $name" "S" "string") ("f" "session_module_name(" "string $module" "S" "string") ("f" "session_is_registered(" "string $name" "S" "bool") ("f" "session_id(" "string $id" "S" "string") ("f" "session_get_cookie_params(" #1# "S" "array") ("f" "session_encode(" #1# "S" "string") ("f" "session_destroy(" #1# "S" "bool") ("f" "session_decode(" "string $data" "S" "bool") ("f" "session_cache_limiter(" "string $cache_limiter" "S" "string") ("f" "session_cache_expire(" "string $new_cache_expire" "S" "int") ("f" "session_abort(" #1# "S" "bool") ("f" "serialize(" "mixed $value" "S" "string") ("f" "sem_remove(" "resource $sem_identifier" "S" "bool") ("f" "sem_release(" "resource $sem_identifier" "S" "bool") ("f" "sem_get(" "int $key,int $max_acquire,int $perm,int $auto_release" "S" "resource") ("f" "sem_acquire(" "resource $sem_identifier" "S" "bool") ("f" "scandir(" "string $directory,int $sorting_order,resource $context" "S" "array") ("f" "runkit_superglobals(" #1# "S" "array") ("f" "runkit_sandbox_output_handler(" "object $sandbox,mixed $callback" "S" "mixed") ("f" "runkit_return_value_used(" #1# "S" "bool") ("f" "runkit_method_rename(" "string $classname,string $methodname,string $newname" "S" "bool") ("f" "runkit_method_remove(" "string $classname,string $methodname" "S" "bool") ("f" "runkit_method_redefine(" "string $classname,string $methodname,string $args,string $code,int $flags" "S" "bool") ("f" "runkit_method_copy(" "string $dClass,string $dMethod,string $sClass,string $sMethod" "S" "bool") ("f" "runkit_method_add(" "string $classname,string $methodname,string $args,string $code,int $flags" "S" "bool") ("f" "runkit_lint_file(" "string $filename" "S" "bool") ("f" "runkit_lint(" "string $code" "S" "bool") ("f" "runkit_import(" "string $filename,int $flags" "S" "bool") ("f" "runkit_function_rename(" "string $funcname,string $newname" "S" "bool") ("f" "runkit_function_remove(" "string $funcname" "S" "bool") ("f" "runkit_function_redefine(" "string $funcname,string $arglist,string $code" "S" "bool") ("f" "runkit_function_copy(" "string $funcname,string $targetname" "S" "bool") ("f" "runkit_function_add(" "string $funcname,string $arglist,string $code" "S" "bool") ("f" "runkit_constant_remove(" "string $constname" "S" "bool") ("f" "runkit_constant_redefine(" "string $constname,mixed $newvalue" "S" "bool") ("f" "runkit_constant_add(" "string $constname,mixed $value" "S" "bool") ("f" "runkit_class_emancipate(" "string $classname" "S" "bool") ("f" "runkit_class_adopt(" "string $classname,string $parentname" "S" "bool") ("f" "rtrim(" "string $str,string $charlist" "S" "string") ("f" "rsort(" "array &$array,int $sort_flags" "S" "bool") ("f" "rrd_xport(" "array $options" "S" "array") ("f" "rrd_version(" #1# "S" "string") ("f" "rrd_update(" "string $filename,array $options" "S" "bool") ("f" "rrd_tune(" "string $filename,array $options" "S" "bool") ("f" "rrd_restore(" "string $xml_file,string $rrd_file,array $options" "S" "bool") ("f" "rrd_lastupdate(" "string $filename" "S" "array") ("f" "rrd_last(" "string $filename" "S" "int") ("f" "rrd_info(" "string $filename" "S" "array") ("f" "rrd_graph(" "string $filename,array $options" "S" "array") ("f" "rrd_first(" "string $file,int $raaindex" "S" "int") ("f" "rrd_fetch(" "string $filename,array $options" "S" "array") ("f" "rrd_error(" #1# "S" "string") ("f" "rrd_create(" "string $filename,array $options" "S" "bool") ("f" "rrdc_disconnect(" #1# "S" "void") ("f" "rpm_version(" #1# "S" "string") ("f" "rpm_open(" "string $filename" "S" "resource") ("f" "rpm_is_valid(" "string $filename" "S" "bool") ("f" "rpm_get_tag(" "resource $rpmr,int $tagnum" "S" "mixed") ("f" "rpm_close(" "resource $rpmr" "S" "bool") ("f" "round(" "float $val,int $precision,int $mode" "S" "float") ("f" "rmdir(" "string $dirname,resource $context" "S" "bool") ("f" "rewinddir(" "resource $dir_handle" "S" "void") ("f" "rewind(" "resource $handle" "S" "bool") ("f" "restore_include_path(" #1# "S" "void") ("f" "restore_exception_handler(" #1# "S" "bool") ("f" "restore_error_handler(" #1# "S" "bool") ("f" "reset(" "array &$array" "S" "mixed") ("f" "rename_function(" "string $original_name,string $new_name" "S" "bool") ("f" "rename(" "string $oldname,string $newname,resource $context" "S" "bool") ("f" "register_tick_function(" "callable $function,mixed $arg,mixed $__args__" "S" "bool") ("f" "register_shutdown_function(" "callable $callback,mixed $parameter,mixed $__args__" "S" "void") ("f" "recode_string(" "string $request,string $string" "S" "string") ("f" "recode_file(" "string $request,resource $input,resource $output" "S" "bool") ("f" "realpath(" "string $path" "S" "string") ("f" "realpath_cache_size(" #1# "S" "int") ("f" "realpath_cache_get(" #1# "S" "array") ("f" "readlink(" "string $path" "S" "string") ("f" "readline_write_history(" "string $filename" "S" "bool") ("f" "readline(" "string $prompt" "S" "string") ("f" "readline_redisplay(" #1# "S" "void") ("f" "readline_read_history(" "string $filename" "S" "bool") ("f" "readline_on_new_line(" #1# "S" "void") ("f" "readline_list_history(" #1# "S" "array") ("f" "readline_info(" "string $varname,string $newvalue" "S" "mixed") ("f" "readline_completion_function(" "callable $function" "S" "bool") ("f" "readline_clear_history(" #1# "S" "bool") ("f" "readline_callback_read_char(" #1# "S" "void") ("f" "readline_callback_handler_remove(" #1# "S" "bool") ("f" "readline_callback_handler_install(" "string $prompt,callable $callback" "S" "bool") ("f" "readline_add_history(" "string $line" "S" "bool") ("f" "readgzfile(" "string $filename,int $use_include_path" "S" "int") ("f" "readfile(" "string $filename,bool $use_include_path,resource $context" "S" "int") ("f" "readdir(" "resource $dir_handle" "S" "string") ("f" "rawurlencode(" "string $str" "S" "string") ("f" "rawurldecode(" "string $str" "S" "string") ("f" "rar_wrapper_cache_stats(" #1# "S" "string") ("f" "range(" "mixed $start,mixed $limit,number $step" "S" "array") ("f" "rand(" #1# "S" "int") ("f" "radius_strerror(" "resource $radius_handle" "S" "string") ("f" "radius_server_secret(" "resource $radius_handle" "S" "string") ("f" "radius_send_request(" "resource $radius_handle" "S" "int") ("f" "radius_salt_encrypt_attr(" "resource $radius_handle,string $data" "S" "string") ("f" "radius_request_authenticator(" "resource $radius_handle" "S" "string") ("f" "radius_put_vendor_string(" "resource $radius_handle,int $vendor,int $type,string $value,int $options,int $tag" "S" "bool") ("f" "radius_put_vendor_int(" "resource $radius_handle,int $vendor,int $type,int $value,int $options,int $tag" "S" "bool") ("f" "radius_put_vendor_attr(" "resource $radius_handle,int $vendor,int $type,string $value,int $options,int $tag" "S" "bool") ("f" "radius_put_vendor_addr(" "resource $radius_handle,int $vendor,int $type,string $addr" "S" "bool") ("f" "radius_put_string(" "resource $radius_handle,int $type,string $value,int $options,int $tag" "S" "bool") ("f" "radius_put_int(" "resource $radius_handle,int $type,int $value,int $options,int $tag" "S" "bool") ("f" "radius_put_attr(" "resource $radius_handle,int $type,string $value,int $options,int $tag" "S" "bool") ("f" "radius_put_addr(" "resource $radius_handle,int $type,string $addr,int $options,int $tag" "S" "bool") ("f" "radius_get_vendor_attr(" "string $data" "S" "array") ("f" "radius_get_tagged_attr_tag(" "string $data" "S" "integer") ("f" "radius_get_tagged_attr_data(" "string $data" "S" "string") ("f" "radius_get_attr(" "resource $radius_handle" "S" "mixed") ("f" "radius_demangle(" "resource $radius_handle,string $mangled" "S" "string") ("f" "radius_demangle_mppe_key(" "resource $radius_handle,string $mangled" "S" "string") ("f" "radius_cvt_string(" "string $data" "S" "string") ("f" "radius_cvt_int(" "string $data" "S" "int") ("f" "radius_cvt_addr(" "string $data" "S" "string") ("f" "radius_create_request(" "resource $radius_handle,int $type" "S" "bool") ("f" "radius_config(" "resource $radius_handle,string $file" "S" "bool") ("f" "radius_close(" "resource $radius_handle" "S" "bool") ("f" "radius_auth_open(" #1# "S" "resource") ("f" "radius_add_server(" "resource $radius_handle,string $hostname,int $port,string $secret,int $timeout,int $max_tries" "S" "bool") ("f" "radius_acct_open(" #1# "S" "resource") ("f" "rad2deg(" "float $number" "S" "float") ("f" "quotemeta(" "string $str" "S" "string") ("f" "quoted_printable_encode(" "string $str" "S" "string") ("f" "quoted_printable_decode(" "string $str" "S" "string") ("f" "px_update_record(" "resource $pxdoc,array $data,int $num" "S" "bool") ("f" "px_timestamp2string(" "resource $pxdoc,float $value,string $format" "S" "string") ("f" "px_set_value(" "resource $pxdoc,string $name,float $value" "S" "bool") ("f" "px_set_targetencoding(" "resource $pxdoc,string $encoding" "S" "bool") ("f" "px_set_tablename(" "resource $pxdoc,string $name" "S" "void") ("f" "px_set_parameter(" "resource $pxdoc,string $name,string $value" "S" "bool") ("f" "px_set_blob_file(" "resource $pxdoc,string $filename" "S" "bool") ("f" "px_retrieve_record(" "resource $pxdoc,int $num,int $mode" "S" "array") ("f" "px_put_record(" "resource $pxdoc,array $record,int $recpos" "S" "bool") ("f" "px_open_fp(" "resource $pxdoc,resource $file" "S" "bool") ("f" "px_numrecords(" "resource $pxdoc" "S" "int") ("f" "px_numfields(" "resource $pxdoc" "S" "int") ("f" "px_new(" #1# "S" "resource") ("f" "px_insert_record(" "resource $pxdoc,array $data" "S" "int") ("f" "px_get_value(" "resource $pxdoc,string $name" "S" "float") ("f" "px_get_schema(" "resource $pxdoc,int $mode" "S" "array") ("f" "px_get_record(" "resource $pxdoc,int $num,int $mode" "S" "array") ("f" "px_get_parameter(" "resource $pxdoc,string $name" "S" "string") ("f" "px_get_info(" "resource $pxdoc" "S" "array") ("f" "px_get_field(" "resource $pxdoc,int $fieldno" "S" "array") ("f" "px_delete_record(" "resource $pxdoc,int $num" "S" "bool") ("f" "px_delete(" "resource $pxdoc" "S" "bool") ("f" "px_date2string(" "resource $pxdoc,int $value,string $format" "S" "string") ("f" "px_create_fp(" "resource $pxdoc,resource $file,array $fielddesc" "S" "bool") ("f" "px_close(" "resource $pxdoc" "S" "bool") ("f" "putenv(" "string $setting" "S" "bool") ("f" "ps_translate(" "resource $psdoc,float $x,float $y" "S" "bool") ("f" "ps_symbol_width(" "resource $psdoc,int $ord,int $fontid,float $size" "S" "float") ("f" "ps_symbol_name(" "resource $psdoc,int $ord,int $fontid" "S" "string") ("f" "ps_symbol(" "resource $psdoc,int $ord" "S" "bool") ("f" "ps_stroke(" "resource $psdoc" "S" "bool") ("f" "ps_stringwidth(" "resource $psdoc,string $text,int $fontid,float $size" "S" "float") ("f" "ps_string_geometry(" "resource $psdoc,string $text,int $fontid,float $size" "S" "array") ("f" "ps_show_xy(" "resource $psdoc,string $text,float $x,float $y" "S" "bool") ("f" "ps_show_xy2(" "resource $psdoc,string $text,int $len,float $xcoor,float $ycoor" "S" "bool") ("f" "ps_show_boxed(" "resource $psdoc,string $text,float $left,float $bottom,float $width,float $height,string $hmode,string $feature" "S" "int") ("f" "ps_show(" "resource $psdoc,string $text" "S" "bool") ("f" "ps_show2(" "resource $psdoc,string $text,int $len" "S" "bool") ("f" "ps_shfill(" "resource $psdoc,int $shadingid" "S" "bool") ("f" "ps_shading_pattern(" "resource $psdoc,int $shadingid,string $optlist" "S" "int") ("f" "ps_shading(" "resource $psdoc,string $type,float $x0,float $y0,float $x1,float $y1,float $c1,float $c2,float $c3,float $c4,string $optlist" "S" "int") ("f" "ps_set_value(" "resource $psdoc,string $name,float $value" "S" "bool") ("f" "ps_set_text_pos(" "resource $psdoc,float $x,float $y" "S" "bool") ("f" "ps_setpolydash(" "resource $psdoc,float $arr" "S" "bool") ("f" "ps_set_parameter(" "resource $psdoc,string $name,string $value" "S" "bool") ("f" "ps_setoverprintmode(" "resource $psdoc,int $mode" "S" "bool") ("f" "ps_setmiterlimit(" "resource $psdoc,float $value" "S" "bool") ("f" "ps_setlinewidth(" "resource $psdoc,float $width" "S" "bool") ("f" "ps_setlinejoin(" "resource $psdoc,int $type" "S" "bool") ("f" "ps_setlinecap(" "resource $psdoc,int $type" "S" "bool") ("f" "ps_set_info(" "resource $p,string $key,string $val" "S" "bool") ("f" "ps_setgray(" "resource $psdoc,float $gray" "S" "bool") ("f" "ps_setfont(" "resource $psdoc,int $fontid,float $size" "S" "bool") ("f" "ps_setflat(" "resource $psdoc,float $value" "S" "bool") ("f" "ps_setdash(" "resource $psdoc,float $on,float $off" "S" "bool") ("f" "ps_setcolor(" "resource $psdoc,string $type,string $colorspace,float $c1,float $c2,float $c3,float $c4" "S" "bool") ("f" "ps_set_border_style(" "resource $psdoc,string $style,float $width" "S" "bool") ("f" "ps_set_border_dash(" "resource $psdoc,float $black,float $white" "S" "bool") ("f" "ps_set_border_color(" "resource $psdoc,float $red,float $green,float $blue" "S" "bool") ("f" "ps_scale(" "resource $psdoc,float $x,float $y" "S" "bool") ("f" "ps_save(" "resource $psdoc" "S" "bool") ("f" "ps_rotate(" "resource $psdoc,float $rot" "S" "bool") ("f" "ps_restore(" "resource $psdoc" "S" "bool") ("f" "ps_rect(" "resource $psdoc,float $x,float $y,float $width,float $height" "S" "bool") ("f" "ps_place_image(" "resource $psdoc,int $imageid,float $x,float $y,float $scale" "S" "bool") ("f" "pspell_suggest(" "int $dictionary_link,string $word" "S" "array") ("f" "pspell_store_replacement(" "int $dictionary_link,string $misspelled,string $correct" "S" "bool") ("f" "pspell_save_wordlist(" "int $dictionary_link" "S" "bool") ("f" "pspell_new_personal(" "string $personal,string $language,string $spelling,string $jargon,string $encoding,int $mode" "S" "int") ("f" "pspell_new(" "string $language,string $spelling,string $jargon,string $encoding,int $mode" "S" "int") ("f" "pspell_new_config(" "int $config" "S" "int") ("f" "pspell_config_save_repl(" "int $dictionary_link,bool $flag" "S" "bool") ("f" "pspell_config_runtogether(" "int $dictionary_link,bool $flag" "S" "bool") ("f" "pspell_config_repl(" "int $dictionary_link,string $file" "S" "bool") ("f" "pspell_config_personal(" "int $dictionary_link,string $file" "S" "bool") ("f" "pspell_config_mode(" "int $dictionary_link,int $mode" "S" "bool") ("f" "pspell_config_ignore(" "int $dictionary_link,int $n" "S" "bool") ("f" "pspell_config_dict_dir(" "int $conf,string $directory" "S" "bool") ("f" "pspell_config_data_dir(" "int $conf,string $directory" "S" "bool") ("f" "pspell_config_create(" "string $language,string $spelling,string $jargon,string $encoding" "S" "int") ("f" "pspell_clear_session(" "int $dictionary_link" "S" "bool") ("f" "pspell_check(" "int $dictionary_link,string $word" "S" "bool") ("f" "pspell_add_to_session(" "int $dictionary_link,string $word" "S" "bool") ("f" "pspell_add_to_personal(" "int $dictionary_link,string $word" "S" "bool") ("f" "ps_open_memory_image(" "resource $psdoc,int $gd" "S" "int") ("f" "ps_open_image(" "resource $psdoc,string $type,string $source,string $data,int $lenght,int $width,int $height,int $components,int $bpc,string $params" "S" "int") ("f" "ps_open_image_file(" "resource $psdoc,string $type,string $filename,string $stringparam,int $intparam" "S" "int") ("f" "ps_open_file(" "resource $psdoc,string $filename" "S" "bool") ("f" "ps_new(" #1# "S" "resource") ("f" "ps_moveto(" "resource $psdoc,float $x,float $y" "S" "bool") ("f" "ps_makespotcolor(" "resource $psdoc,string $name,int $reserved" "S" "int") ("f" "ps_lineto(" "resource $psdoc,float $x,float $y" "S" "bool") ("f" "ps_include_file(" "resource $psdoc,string $file" "S" "bool") ("f" "ps_hyphenate(" "resource $psdoc,string $text" "S" "array") ("f" "ps_get_value(" "resource $psdoc,string $name,float $modifier" "S" "float") ("f" "ps_get_parameter(" "resource $psdoc,string $name,float $modifier" "S" "string") ("f" "ps_get_buffer(" "resource $psdoc" "S" "string") ("f" "ps_findfont(" "resource $psdoc,string $fontname,string $encoding,bool $embed" "S" "int") ("f" "ps_fill_stroke(" "resource $psdoc" "S" "bool") ("f" "ps_fill(" "resource $psdoc" "S" "bool") ("f" "ps_end_template(" "resource $psdoc" "S" "bool") ("f" "ps_end_pattern(" "resource $psdoc" "S" "bool") ("f" "ps_end_page(" "resource $psdoc" "S" "bool") ("f" "ps_delete(" "resource $psdoc" "S" "bool") ("f" "ps_curveto(" "resource $psdoc,float $x1,float $y1,float $x2,float $y2,float $x3,float $y3" "S" "bool") ("f" "ps_continue_text(" "resource $psdoc,string $text" "S" "bool") ("f" "ps_closepath_stroke(" "resource $psdoc" "S" "bool") ("f" "ps_closepath(" "resource $psdoc" "S" "bool") ("f" "ps_close_image(" "resource $psdoc,int $imageid" "S" "void") ("f" "ps_close(" "resource $psdoc" "S" "bool") ("f" "ps_clip(" "resource $psdoc" "S" "bool") ("f" "ps_circle(" "resource $psdoc,float $x,float $y,float $radius" "S" "bool") ("f" "ps_begin_template(" "resource $psdoc,float $width,float $height" "S" "int") ("f" "ps_begin_pattern(" "resource $psdoc,float $width,float $height,float $xstep,float $ystep,int $painttype" "S" "int") ("f" "ps_begin_page(" "resource $psdoc,float $width,float $height" "S" "bool") ("f" "ps_arcn(" "resource $psdoc,float $x,float $y,float $radius,float $alpha,float $beta" "S" "bool") ("f" "ps_arc(" "resource $psdoc,float $x,float $y,float $radius,float $alpha,float $beta" "S" "bool") ("f" "ps_add_weblink(" "resource $psdoc,float $llx,float $lly,float $urx,float $ury,string $url" "S" "bool") ("f" "ps_add_pdflink(" "resource $psdoc,float $llx,float $lly,float $urx,float $ury,string $filename,int $page,string $dest" "S" "bool") ("f" "ps_add_note(" "resource $psdoc,float $llx,float $lly,float $urx,float $ury,string $contents,string $title,string $icon,int $open" "S" "bool") ("f" "ps_add_locallink(" "resource $psdoc,float $llx,float $lly,float $urx,float $ury,int $page,string $dest" "S" "bool") ("f" "ps_add_launchlink(" "resource $psdoc,float $llx,float $lly,float $urx,float $ury,string $filename" "S" "bool") ("f" "ps_add_bookmark(" "resource $psdoc,string $text,int $parent,int $open" "S" "int") ("f" "property_exists(" "mixed $class,string $property" "S" "bool") ("f" "proc_terminate(" "resource $process,int $signal" "S" "bool") ("f" "proc_open(" "string $cmd,array $descriptorspec,array &$pipes,string $cwd,array $env,array $other_options" "S" "resource") ("f" "proc_nice(" "int $increment" "S" "bool") ("f" "proc_get_status(" "resource $process" "S" "array") ("f" "proc_close(" "resource $process" "S" "int") ("f" "print_r(" "mixed $expression,bool $return" "S" "bool") ("f" "printf(" "string $format,mixed $args,mixed $__args__" "S" "int") ("f" "prev(" "array &$array" "S" "mixed") ("f" "preg_split(" "string $pattern,string $subject,int $limit,int $flags" "S" "array") ("f" "preg_replace(" "mixed $pattern,mixed $replacement,mixed $subject,int $limit,int &$count" "S" "mixed") ("f" "preg_replace_callback(" "mixed $pattern,callable $callback,mixed $subject,int $limit,int &$count" "S" "mixed") ("f" "preg_quote(" "string $str,string $delimiter" "S" "string") ("f" "preg_match(" "string $pattern,string $subject,array &$matches,int $flags,int $offset" "S" "int") ("f" "preg_match_all(" "string $pattern,string $subject,array &$matches,int $flags,int $offset" "S" "int") ("f" "preg_last_error(" #1# "S" "int") ("f" "preg_grep(" "string $pattern,array $input,int $flags" "S" "array") ("f" "preg_filter(" "mixed $pattern,mixed $replacement,mixed $subject,int $limit,int &$count" "S" "mixed") ("f" "pow(" "number $base,number $exp" "S" "number") ("f" "posix_uname(" #1# "S" "array") ("f" "posix_ttyname(" "mixed $fd" "S" "string") ("f" "posix_times(" #1# "S" "array") ("f" "posix_strerror(" "int $errno" "S" "string") ("f" "posix_setuid(" "int $uid" "S" "bool") ("f" "posix_setsid(" #1# "S" "int") ("f" "posix_setpgid(" "int $pid,int $pgid" "S" "bool") ("f" "posix_setgid(" "int $gid" "S" "bool") ("f" "posix_seteuid(" "int $uid" "S" "bool") ("f" "posix_setegid(" "int $gid" "S" "bool") ("f" "posix_mknod(" "string $pathname,int $mode,int $major,int $minor" "S" "bool") ("f" "posix_mkfifo(" "string $pathname,int $mode" "S" "bool") ("f" "posix_kill(" "int $pid,int $sig" "S" "bool") ("f" "posix_isatty(" "mixed $fd" "S" "bool") ("f" "posix_initgroups(" "string $name,int $base_group_id" "S" "bool") ("f" "posix_getuid(" #1# "S" "int") ("f" "posix_getsid(" "int $pid" "S" "int") ("f" "posix_getrlimit(" #1# "S" "array") ("f" "posix_getpwuid(" "int $uid" "S" "array") ("f" "posix_getpwnam(" "string $username" "S" "array") ("f" "posix_getppid(" #1# "S" "int") ("f" "posix_getpid(" #1# "S" "int") ("f" "posix_getpgrp(" #1# "S" "int") ("f" "posix_getpgid(" "int $pid" "S" "int") ("f" "posix_getlogin(" #1# "S" "string") ("f" "posix_get_last_error(" #1# "S" "int") ("f" "posix_getgroups(" #1# "S" "array") ("f" "posix_getgrnam(" "string $name" "S" "array") ("f" "posix_getgrgid(" "int $gid" "S" "array") ("f" "posix_getgid(" #1# "S" "int") ("f" "posix_geteuid(" #1# "S" "int") ("f" "posix_getegid(" #1# "S" "int") ("f" "posix_getcwd(" #1# "S" "string") ("f" "posix_ctermid(" #1# "S" "string") ("f" "posix_access(" "string $file,int $mode" "S" "bool") ("f" "popen(" "string $command,string $mode" "S" "resource") ("f" "png2wbmp(" "string $pngname,string $wbmpname,int $dest_height,int $dest_width,int $threshold" "S" "bool") ("f" "pi(" #1# "S" "float") ("f" "phpversion(" "string $extension" "S" "string") ("f" "php_uname(" "string $mode" "S" "string") ("f" "php_strip_whitespace(" "string $filename" "S" "string") ("f" "php_sapi_name(" #1# "S" "string") ("f" "php_logo_guid(" #1# "S" "string") ("f" "php_ini_scanned_files(" #1# "S" "string") ("f" "php_ini_loaded_file(" #1# "S" "string") ("f" "phpinfo(" "int $what" "S" "bool") ("f" "phpcredits(" "int $flag" "S" "bool") ("f" "php_check_syntax(" "string $filename,string &$error_message" "S" "bool") ("f" "pg_version(" "resource $connection" "S" "array") ("f" "pg_update(" "resource $connection,string $table_name,array $data,array $condition,int $options" "S" "mixed") ("f" "pg_untrace(" "resource $connection" "S" "bool") ("f" "pg_unescape_bytea(" "string $data" "S" "string") ("f" "pg_tty(" "resource $connection" "S" "string") ("f" "pg_transaction_status(" "resource $connection" "S" "int") ("f" "pg_trace(" "string $pathname,string $mode,resource $connection" "S" "bool") ("f" "pg_socket(" "resource $connection" "S" "resource") ("f" "pg_set_error_verbosity(" "resource $connection,int $verbosity" "S" "int") ("f" "pg_set_client_encoding(" "resource $connection,string $encoding" "S" "int") ("f" "pg_send_query_params(" "resource $connection,string $query,array $params" "S" "bool") ("f" "pg_send_query(" "resource $connection,string $query" "S" "bool") ("f" "pg_send_prepare(" "resource $connection,string $stmtname,string $query" "S" "bool") ("f" "pg_send_execute(" "resource $connection,string $stmtname,array $params" "S" "bool") ("f" "pg_select(" "resource $connection,string $table_name,array $assoc_array,int $options" "S" "mixed") ("f" "pg_result_status(" "resource $result" "S" "int") ("f" "pg_result_seek(" "resource $result,int $offset" "S" "array") ("f" "pg_result_error(" "resource $result" "S" "string") ("f" "pg_result_error_field(" "resource $result,int $fieldcode" "S" "string") ("f" "pg_query(" "resource $connection,string $query" "S" "resource") ("f" "pg_query_params(" "resource $connection,string $query,array $params" "S" "resource") ("f" "pg_put_line(" "resource $connection,string $data" "S" "bool") ("f" "pg_prepare(" "resource $connection,string $stmtname,string $query" "S" "resource") ("f" "pg_port(" "resource $connection" "S" "int") ("f" "pg_ping(" "resource $connection" "S" "bool") ("f" "pg_pconnect(" "string $connection_string,int $connect_type" "S" "resource") ("f" "pg_parameter_status(" "resource $connection,string $param_name" "S" "string") ("f" "pg_options(" "resource $connection" "S" "string") ("f" "pg_num_rows(" "resource $result" "S" "int") ("f" "pg_num_fields(" "resource $result" "S" "int") ("f" "pg_meta_data(" "resource $connection,string $table_name" "S" "array") ("f" "pg_lo_write(" "resource $large_object,string $data" "S" "int") ("f" "pg_lo_unlink(" "resource $connection,int $oid" "S" "bool") ("f" "pg_lo_truncate(" "resource $large_object,int $size" "S" "bool") ("f" "pg_lo_tell(" "resource $large_object" "S" "int") ("f" "pg_lo_seek(" "resource $large_object,int $offset,int $whence" "S" "bool") ("f" "pg_lo_read(" "resource $large_object,int $len" "S" "string") ("f" "pg_lo_read_all(" "resource $large_object" "S" "int") ("f" "pg_lo_open(" "resource $connection,int $oid,string $mode" "S" "resource") ("f" "pg_lo_import(" "resource $connection,string $pathname,mixed $object_id" "S" "int") ("f" "pg_lo_export(" "resource $connection,int $oid,string $pathname" "S" "bool") ("f" "pg_lo_create(" "resource $connection" "S" "int") ("f" "pg_lo_close(" "resource $large_object" "S" "bool") ("f" "pg_last_oid(" "resource $result" "S" "int") ("f" "pg_last_notice(" "resource $connection" "S" "string") ("f" "pg_last_error(" "resource $connection" "S" "string") ("f" "pg_insert(" "resource $connection,string $table_name,array $assoc_array,int $options" "S" "mixed") ("f" "pg_host(" "resource $connection" "S" "string") ("f" "pg_get_result(" "resource $connection" "S" "resource") ("f" "pg_get_pid(" "resource $connection" "S" "int") ("f" "pg_get_notify(" "resource $connection,int $result_type" "S" "array") ("f" "pg_free_result(" "resource $result" "S" "bool") ("f" "pg_flush(" "resource $connection" "S" "mixed") ("f" "pg_field_type(" "resource $result,int $field_number" "S" "string") ("f" "pg_field_type_oid(" "resource $result,int $field_number" "S" "int") ("f" "pg_field_table(" "resource $result,int $field_number,bool $oid_only" "S" "mixed") ("f" "pg_field_size(" "resource $result,int $field_number" "S" "int") ("f" "pg_field_prtlen(" "resource $result,int $row_number,string $field_name" "S" "int") ("f" "pg_field_num(" "resource $result,string $field_name" "S" "int") ("f" "pg_field_name(" "resource $result,int $field_number" "S" "string") ("f" "pg_field_is_null(" "resource $result,int $row,mixed $field" "S" "int") ("f" "pg_fetch_row(" "resource $result,int $row" "S" "array") ("f" "pg_fetch_result(" "resource $result,int $row,mixed $field" "S" "mixed") ("f" "pg_fetch_object(" "resource $result,int $row,int $result_type" "S" "object") ("f" "pg_fetch_assoc(" "resource $result,int $row" "S" "array") ("f" "pg_fetch_array(" "resource $result,int $row,int $result_type" "S" "array") ("f" "pg_fetch_all_columns(" "resource $result,int $column" "S" "array") ("f" "pg_fetch_all(" "resource $result" "S" "array") ("f" "pg_execute(" "resource $connection,string $stmtname,array $params" "S" "resource") ("f" "pg_escape_string(" "string $data" "S" "string") ("f" "pg_escape_literal(" "resource $connection,string $data" "S" "string") ("f" "pg_escape_identifier(" "resource $connection,string $data" "S" "string") ("f" "pg_escape_bytea(" "string $data" "S" "string") ("f" "pg_end_copy(" "resource $connection" "S" "bool") ("f" "pg_delete(" "resource $connection,string $table_name,array $assoc_array,int $options" "S" "mixed") ("f" "pg_dbname(" "resource $connection" "S" "string") ("f" "pg_copy_to(" "resource $connection,string $table_name,string $delimiter,string $null_as" "S" "array") ("f" "pg_copy_from(" "resource $connection,string $table_name,array $rows,string $delimiter,string $null_as" "S" "bool") ("f" "pg_convert(" "resource $connection,string $table_name,array $assoc_array,int $options" "S" "array") ("f" "pg_consume_input(" "resource $connection" "S" "bool") ("f" "pg_connect(" "string $connection_string" "S" "resource") ("f" "pg_connect_poll(" "resource $connection" "S" "int") ("f" "pg_connection_status(" "resource $connection" "S" "int") ("f" "pg_connection_reset(" "resource $connection" "S" "bool") ("f" "pg_connection_busy(" "resource $connection" "S" "bool") ("f" "pg_close(" "resource $connection" "S" "bool") ("f" "pg_client_encoding(" "resource $connection" "S" "string") ("f" "pg_cancel_query(" "resource $connection" "S" "bool") ("f" "pg_affected_rows(" "resource $result" "S" "int") ("f" "pfsockopen(" "string $hostname,int $port,int &$errno,string &$errstr,float $timeout" "S" "resource") ("f" "PDF_utf8_to_utf16(" "resource $pdfdoc,string $utf8string,string $ordering" "S" "string") ("f" "PDF_utf32_to_utf16(" "resource $pdfdoc,string $utf32string,string $ordering" "S" "string") ("f" "PDF_utf16_to_utf8(" "resource $pdfdoc,string $utf16string" "S" "string") ("f" "PDF_translate(" "resource $p,float $tx,float $ty" "S" "bool") ("f" "PDF_suspend_page(" "resource $pdfdoc,string $optlist" "S" "bool") ("f" "PDF_stroke(" "resource $p" "S" "bool") ("f" "PDF_stringwidth(" "resource $p,string $text,int $font,float $fontsize" "S" "float") ("f" "PDF_skew(" "resource $p,float $alpha,float $beta" "S" "bool") ("f" "PDF_show_xy(" "resource $p,string $text,float $x,float $y" "S" "bool") ("f" "PDF_show_boxed(" "resource $p,string $text,float $left,float $top,float $width,float $height,string $mode,string $feature" "S" "int") ("f" "PDF_show(" "resource $pdfdoc,string $text" "S" "bool") ("f" "PDF_shfill(" "resource $pdfdoc,int $shading" "S" "bool") ("f" "PDF_shading_pattern(" "resource $pdfdoc,int $shading,string $optlist" "S" "int") ("f" "PDF_shading(" "resource $pdfdoc,string $shtype,float $x0,float $y0,float $x1,float $y1,float $c1,float $c2,float $c3,float $c4,string $optlist" "S" "int") ("f" "PDF_set_value(" "resource $p,string $key,float $value" "S" "bool") ("f" "PDF_set_text_pos(" "resource $p,float $x,float $y" "S" "bool") ("f" "PDF_setrgbcolor_stroke(" "resource $p,float $red,float $green,float $blue" "S" "bool") ("f" "PDF_setrgbcolor_fill(" "resource $p,float $red,float $green,float $blue" "S" "bool") ("f" "PDF_setrgbcolor(" "resource $p,float $red,float $green,float $blue" "S" "bool") ("f" "PDF_set_parameter(" "resource $p,string $key,string $value" "S" "bool") ("f" "PDF_setmiterlimit(" "resource $pdfdoc,float $miter" "S" "bool") ("f" "PDF_setmatrix(" "resource $p,float $a,float $b,float $c,float $d,float $e,float $f" "S" "bool") ("f" "PDF_setlinewidth(" "resource $p,float $width" "S" "bool") ("f" "PDF_setlinejoin(" "resource $p,int $value" "S" "bool") ("f" "PDF_setlinecap(" "resource $p,int $linecap" "S" "bool") ("f" "PDF_set_layer_dependency(" "resource $pdfdoc,string $type,string $optlist" "S" "bool") ("f" "PDF_set_info(" "resource $p,string $key,string $value" "S" "bool") ("f" "PDF_set_gstate(" "resource $pdfdoc,int $gstate" "S" "bool") ("f" "PDF_setgray_stroke(" "resource $p,float $g" "S" "bool") ("f" "PDF_setgray_fill(" "resource $p,float $g" "S" "bool") ("f" "PDF_setgray(" "resource $p,float $g" "S" "bool") ("f" "PDF_setfont(" "resource $pdfdoc,int $font,float $fontsize" "S" "bool") ("f" "PDF_setflat(" "resource $pdfdoc,float $flatness" "S" "bool") ("f" "PDF_setdashpattern(" "resource $pdfdoc,string $optlist" "S" "bool") ("f" "PDF_setdash(" "resource $pdfdoc,float $b,float $w" "S" "bool") ("f" "PDF_setcolor(" "resource $p,string $fstype,string $colorspace,float $c1,float $c2,float $c3,float $c4" "S" "bool") ("f" "PDF_set_border_style(" "resource $pdfdoc,string $style,float $width" "S" "bool") ("f" "PDF_set_border_dash(" "resource $pdfdoc,float $black,float $white" "S" "bool") ("f" "PDF_set_border_color(" "resource $p,float $red,float $green,float $blue" "S" "bool") ("f" "PDF_scale(" "resource $p,float $sx,float $sy" "S" "bool") ("f" "PDF_save(" "resource $p" "S" "bool") ("f" "PDF_rotate(" "resource $p,float $phi" "S" "bool") ("f" "PDF_resume_page(" "resource $pdfdoc,string $optlist" "S" "bool") ("f" "PDF_restore(" "resource $p" "S" "bool") ("f" "PDF_rect(" "resource $p,float $x,float $y,float $width,float $height" "S" "bool") ("f" "PDF_process_pdi(" "resource $pdfdoc,int $doc,int $page,string $optlist" "S" "int") ("f" "PDF_place_pdi_page(" "resource $pdfdoc,int $page,float $x,float $y,float $sx,float $sy" "S" "bool") ("f" "PDF_place_image(" "resource $pdfdoc,int $image,float $x,float $y,float $scale" "S" "bool") ("f" "PDF_pcos_get_string(" "resource $p,int $doc,string $path" "S" "string") ("f" "PDF_pcos_get_stream(" "resource $p,int $doc,string $optlist,string $path" "S" "string") ("f" "PDF_pcos_get_number(" "resource $p,int $doc,string $path" "S" "float") ("f" "PDF_open_pdi_page(" "resource $p,int $doc,int $pagenumber,string $optlist" "S" "int") ("f" "PDF_open_pdi(" "resource $pdfdoc,string $filename,string $optlist,int $len" "S" "int") ("f" "PDF_open_pdi_document(" "resource $p,string $filename,string $optlist" "S" "int") ("f" "PDF_open_memory_image(" "resource $p,resource $image" "S" "int") ("f" "PDF_open_image(" "resource $p,string $imagetype,string $source,string $data,int $length,int $width,int $height,int $components,int $bpc,string $params" "S" "int") ("f" "PDF_open_image_file(" "resource $p,string $imagetype,string $filename,string $stringparam,int $intparam" "S" "int") ("f" "PDF_open_file(" "resource $p,string $filename" "S" "bool") ("f" "PDF_open_ccitt(" "resource $pdfdoc,string $filename,int $width,int $height,int $BitReverse,int $k,int $Blackls1" "S" "int") ("f" "PDF_new(" #1# "S" "resource") ("f" "PDF_moveto(" "resource $p,float $x,float $y" "S" "bool") ("f" "PDF_makespotcolor(" "resource $p,string $spotname" "S" "int") ("f" "PDF_load_image(" "resource $pdfdoc,string $imagetype,string $filename,string $optlist" "S" "int") ("f" "PDF_load_iccprofile(" "resource $pdfdoc,string $profilename,string $optlist" "S" "int") ("f" "PDF_load_font(" "resource $pdfdoc,string $fontname,string $encoding,string $optlist" "S" "int") ("f" "PDF_load_3ddata(" "resource $pdfdoc,string $filename,string $optlist" "S" "int") ("f" "PDF_lineto(" "resource $p,float $x,float $y" "S" "bool") ("f" "PDF_initgraphics(" "resource $p" "S" "bool") ("f" "PDF_info_textline(" "resource $pdfdoc,string $text,string $keyword,string $optlist" "S" "float") ("f" "PDF_info_textflow(" "resource $pdfdoc,int $textflow,string $keyword" "S" "float") ("f" "PDF_info_table(" "resource $pdfdoc,int $table,string $keyword" "S" "float") ("f" "PDF_info_matchbox(" "resource $pdfdoc,string $boxname,int $num,string $keyword" "S" "float") ("f" "PDF_info_font(" "resource $pdfdoc,int $font,string $keyword,string $optlist" "S" "float") ("f" "PDF_get_value(" "resource $p,string $key,float $modifier" "S" "float") ("f" "PDF_get_pdi_value(" "resource $p,string $key,int $doc,int $page,int $reserved" "S" "float") ("f" "PDF_get_pdi_parameter(" "resource $p,string $key,int $doc,int $page,int $reserved" "S" "string") ("f" "PDF_get_parameter(" "resource $p,string $key,float $modifier" "S" "string") ("f" "PDF_get_minorversion(" #1# "S" "int") ("f" "PDF_get_majorversion(" #1# "S" "int") ("f" "PDF_get_errnum(" "resource $pdfdoc" "S" "int") ("f" "PDF_get_errmsg(" "resource $pdfdoc" "S" "string") ("f" "PDF_get_buffer(" "resource $p" "S" "string") ("f" "PDF_get_apiname(" "resource $pdfdoc" "S" "string") ("f" "PDF_fit_textline(" "resource $pdfdoc,string $text,float $x,float $y,string $optlist" "S" "bool") ("f" "PDF_fit_textflow(" "resource $pdfdoc,int $textflow,float $llx,float $lly,float $urx,float $ury,string $optlist" "S" "string") ("f" "PDF_fit_table(" "resource $pdfdoc,int $table,float $llx,float $lly,float $urx,float $ury,string $optlist" "S" "string") ("f" "PDF_fit_pdi_page(" "resource $pdfdoc,int $page,float $x,float $y,string $optlist" "S" "bool") ("f" "PDF_fit_image(" "resource $pdfdoc,int $image,float $x,float $y,string $optlist" "S" "bool") ("f" "PDF_findfont(" "resource $p,string $fontname,string $encoding,int $embed" "S" "int") ("f" "PDF_fill_textblock(" "resource $pdfdoc,int $page,string $blockname,string $text,string $optlist" "S" "int") ("f" "PDF_fill_stroke(" "resource $p" "S" "bool") ("f" "PDF_fill_pdfblock(" "resource $pdfdoc,int $page,string $blockname,int $contents,string $optlist" "S" "int") ("f" "PDF_fill_imageblock(" "resource $pdfdoc,int $page,string $blockname,int $image,string $optlist" "S" "int") ("f" "PDF_fill(" "resource $p" "S" "bool") ("f" "PDF_end_template(" "resource $p" "S" "bool") ("f" "PDF_end_pattern(" "resource $p" "S" "bool") ("f" "PDF_endpath(" "resource $p" "S" "bool") ("f" "PDF_end_page_ext(" "resource $pdfdoc,string $optlist" "S" "bool") ("f" "PDF_end_page(" "resource $p" "S" "bool") ("f" "PDF_end_layer(" "resource $pdfdoc" "S" "bool") ("f" "PDF_end_item(" "resource $pdfdoc,int $id" "S" "bool") ("f" "PDF_end_glyph(" "resource $pdfdoc" "S" "bool") ("f" "PDF_end_font(" "resource $pdfdoc" "S" "bool") ("f" "PDF_end_document(" "resource $pdfdoc,string $optlist" "S" "bool") ("f" "PDF_encoding_set_char(" "resource $pdfdoc,string $encoding,int $slot,string $glyphname,int $uv" "S" "bool") ("f" "PDF_delete_textflow(" "resource $pdfdoc,int $textflow" "S" "bool") ("f" "PDF_delete_table(" "resource $pdfdoc,int $table,string $optlist" "S" "bool") ("f" "PDF_delete_pvf(" "resource $pdfdoc,string $filename" "S" "int") ("f" "PDF_delete(" "resource $pdfdoc" "S" "bool") ("f" "PDF_define_layer(" "resource $pdfdoc,string $name,string $optlist" "S" "int") ("f" "PDF_curveto(" "resource $p,float $x1,float $y1,float $x2,float $y2,float $x3,float $y3" "S" "bool") ("f" "PDF_create_textflow(" "resource $pdfdoc,string $text,string $optlist" "S" "int") ("f" "PDF_create_pvf(" "resource $pdfdoc,string $filename,string $data,string $optlist" "S" "bool") ("f" "PDF_create_gstate(" "resource $pdfdoc,string $optlist" "S" "int") ("f" "PDF_create_fieldgroup(" "resource $pdfdoc,string $name,string $optlist" "S" "bool") ("f" "PDF_create_field(" "resource $pdfdoc,float $llx,float $lly,float $urx,float $ury,string $name,string $type,string $optlist" "S" "bool") ("f" "PDF_create_bookmark(" "resource $pdfdoc,string $text,string $optlist" "S" "int") ("f" "PDF_create_annotation(" "resource $pdfdoc,float $llx,float $lly,float $urx,float $ury,string $type,string $optlist" "S" "bool") ("f" "PDF_create_action(" "resource $pdfdoc,string $type,string $optlist" "S" "int") ("f" "PDF_create_3dview(" "resource $pdfdoc,string $username,string $optlist" "S" "int") ("f" "PDF_continue_text(" "resource $p,string $text" "S" "bool") ("f" "PDF_concat(" "resource $p,float $a,float $b,float $c,float $d,float $e,float $f" "S" "bool") ("f" "PDF_close_pdi_page(" "resource $p,int $page" "S" "bool") ("f" "PDF_close_pdi(" "resource $p,int $doc" "S" "bool") ("f" "PDF_closepath_stroke(" "resource $p" "S" "bool") ("f" "PDF_closepath_fill_stroke(" "resource $p" "S" "bool") ("f" "PDF_closepath(" "resource $p" "S" "bool") ("f" "PDF_close_image(" "resource $p,int $image" "S" "bool") ("f" "PDF_close(" "resource $p" "S" "bool") ("f" "PDF_clip(" "resource $p" "S" "bool") ("f" "PDF_circle(" "resource $pdfdoc,float $x,float $y,float $r" "S" "bool") ("f" "PDF_begin_template(" "resource $pdfdoc,float $width,float $height" "S" "int") ("f" "PDF_begin_template_ext(" "resource $pdfdoc,float $width,float $height,string $optlist" "S" "int") ("f" "PDF_begin_pattern(" "resource $pdfdoc,float $width,float $height,float $xstep,float $ystep,int $painttype" "S" "int") ("f" "PDF_begin_page_ext(" "resource $pdfdoc,float $width,float $height,string $optlist" "S" "bool") ("f" "PDF_begin_page(" "resource $pdfdoc,float $width,float $height" "S" "bool") ("f" "PDF_begin_layer(" "resource $pdfdoc,int $layer" "S" "bool") ("f" "PDF_begin_item(" "resource $pdfdoc,string $tag,string $optlist" "S" "int") ("f" "PDF_begin_glyph(" "resource $pdfdoc,string $glyphname,float $wx,float $llx,float $lly,float $urx,float $ury" "S" "bool") ("f" "PDF_begin_font(" "resource $pdfdoc,string $filename,float $a,float $b,float $c,float $d,float $e,float $f,string $optlist" "S" "bool") ("f" "PDF_begin_document(" "resource $pdfdoc,string $filename,string $optlist" "S" "int") ("f" "PDF_attach_file(" "resource $pdfdoc,float $llx,float $lly,float $urx,float $ury,string $filename,string $description,string $author,string $mimetype,string $icon" "S" "bool") ("f" "PDF_arcn(" "resource $p,float $x,float $y,float $r,float $alpha,float $beta" "S" "bool") ("f" "PDF_arc(" "resource $p,float $x,float $y,float $r,float $alpha,float $beta" "S" "bool") ("f" "PDF_add_weblink(" "resource $pdfdoc,float $lowerleftx,float $lowerlefty,float $upperrightx,float $upperrighty,string $url" "S" "bool") ("f" "PDF_add_thumbnail(" "resource $pdfdoc,int $image" "S" "bool") ("f" "PDF_add_textflow(" "resource $pdfdoc,int $textflow,string $text,string $optlist" "S" "int") ("f" "PDF_add_table_cell(" "resource $pdfdoc,int $table,int $column,int $row,string $text,string $optlist" "S" "int") ("f" "PDF_add_pdflink(" "resource $pdfdoc,float $bottom_left_x,float $bottom_left_y,float $up_right_x,float $up_right_y,string $filename,int $page,string $dest" "S" "bool") ("f" "PDF_add_note(" "resource $pdfdoc,float $llx,float $lly,float $urx,float $ury,string $contents,string $title,string $icon,int $open" "S" "bool") ("f" "PDF_add_nameddest(" "resource $pdfdoc,string $name,string $optlist" "S" "bool") ("f" "PDF_add_locallink(" "resource $pdfdoc,float $lowerleftx,float $lowerlefty,float $upperrightx,float $upperrighty,int $page,string $dest" "S" "bool") ("f" "PDF_add_launchlink(" "resource $pdfdoc,float $llx,float $lly,float $urx,float $ury,string $filename" "S" "bool") ("f" "PDF_activate_item(" "resource $pdfdoc,int $id" "S" "bool") ("f" "pcntl_wtermsig(" "int $status" "S" "int") ("f" "pcntl_wstopsig(" "int $status" "S" "int") ("f" "pcntl_wifstopped(" "int $status" "S" "bool") ("f" "pcntl_wifsignaled(" "int $status" "S" "bool") ("f" "pcntl_wifexited(" "int $status" "S" "bool") ("f" "pcntl_wexitstatus(" "int $status" "S" "int") ("f" "pcntl_waitpid(" "int $pid,int &$status,int $options" "S" "int") ("f" "pcntl_wait(" "int &$status,int $options" "S" "int") ("f" "pcntl_strerror(" "int $errno" "S" "string") ("f" "pcntl_sigwaitinfo(" "array $set,array &$siginfo" "S" "int") ("f" "pcntl_sigtimedwait(" "array $set,array &$siginfo,int $seconds,int $nanoseconds" "S" "int") ("f" "pcntl_sigprocmask(" "int $how,array $set,array &$oldset" "S" "bool") ("f" "pcntl_signal_dispatch(" #1# "S" "bool") ("f" "pcntl_signal(" "int $signo,callback $handler,bool $restart_syscalls" "S" "bool") ("f" "pcntl_setpriority(" "int $priority,int $pid,int $process_identifier" "S" "bool") ("f" "pcntl_getpriority(" "int $pid,int $process_identifier" "S" "int") ("f" "pcntl_get_last_error(" #1# "S" "int") ("f" "pcntl_fork(" #1# "S" "int") ("f" "pcntl_exec(" "string $path,array $args,array $envs" "S" "void") ("f" "pcntl_alarm(" "int $seconds" "S" "int") ("f" "pclose(" "resource $handle" "S" "int") ("f" "pathinfo(" "string $path,int $options" "S" "mixed") ("f" "password_verify(" "string $password,string $hash" "S" "boolean") ("f" "password_needs_rehash(" "string $hash,integer $algo,array $options" "S" "boolean") ("f" "password_hash(" "string $password,integer $algo,array $options" "S" "string") ("f" "password_get_info(" "string $hash" "S" "array") ("f" "passthru(" "string $command,int &$return_var" "S" "void") ("f" "parse_url(" "string $url,int $component" "S" "mixed") ("f" "parse_str(" "string $str,array &$arr" "S" "void") ("f" "parsekit_func_arginfo(" "mixed $function" "S" "array") ("f" "parsekit_compile_string(" "string $phpcode,array &$errors,int $options" "S" "array") ("f" "parsekit_compile_file(" "string $filename,array &$errors,int $options" "S" "array") ("f" "parse_ini_string(" "string $ini,bool $process_sections,int $scanner_mode" "S" "array") ("f" "parse_ini_file(" "string $filename,bool $process_sections,int $scanner_mode" "S" "array") ("f" "pack(" "string $format,mixed $args,mixed $__args__" "S" "string") ("f" "override_function(" "string $function_name,string $function_args,string $function_code" "S" "bool") ("f" "output_reset_rewrite_vars(" #1# "S" "bool") ("f" "output_add_rewrite_var(" "string $name,string $value" "S" "bool") ("f" "ord(" "string $string" "S" "int") ("f" "openssl_x509_read(" "mixed $x509certdata" "S" "resource") ("f" "openssl_x509_parse(" "mixed $x509cert,bool $shortnames" "S" "array") ("f" "openssl_x509_free(" "resource $x509cert" "S" "void") ("f" "openssl_x509_fingerprint(" "mixed $x509,string $hash_algorithm,bool $raw_output" "S" "bool") ("f" "openssl_x509_export_to_file(" "mixed $x509,string $outfilename,bool $notext" "S" "bool") ("f" "openssl_x509_export(" "mixed $x509,string &$output,bool $notext" "S" "bool") ("f" "openssl_x509_checkpurpose(" "mixed $x509cert,int $purpose,array $cainfo,string $untrustedfile" "S" "int") ("f" "openssl_x509_check_private_key(" "mixed $cert,mixed $key" "S" "bool") ("f" "openssl_verify(" "string $data,string $signature,mixed $pub_key_id,mixed $signature_alg" "S" "int") ("f" "openssl_spki_verify(" "string &$spkac" "S" "string") ("f" "openssl_spki_new(" "resource &$privkey,string &$challenge,int $algorithm" "S" "string") ("f" "openssl_spki_export(" "string &$spkac" "S" "string") ("f" "openssl_spki_export_challenge(" "string &$spkac" "S" "string") ("f" "openssl_sign(" "string $data,string &$signature,mixed $priv_key_id,mixed $signature_alg" "S" "bool") ("f" "openssl_seal(" "string $data,string &$sealed_data,array &$env_keys,array $pub_key_ids,string $method" "S" "int") ("f" "openssl_random_pseudo_bytes(" "int $length,bool &$crypto_strong" "S" "string") ("f" "openssl_public_encrypt(" "string $data,string &$crypted,mixed $key,int $padding" "S" "bool") ("f" "openssl_public_decrypt(" "string $data,string &$decrypted,mixed $key,int $padding" "S" "bool") ("f" "openssl_private_encrypt(" "string $data,string &$crypted,mixed $key,int $padding" "S" "bool") ("f" "openssl_private_decrypt(" "string $data,string &$decrypted,mixed $key,int $padding" "S" "bool") ("f" "openssl_pkey_new(" "array $configargs" "S" "resource") ("f" "openssl_pkey_get_public(" "mixed $certificate" "S" "resource") ("f" "openssl_pkey_get_private(" "mixed $key,string $passphrase" "S" "resource") ("f" "openssl_pkey_get_details(" "resource $key" "S" "array") ("f" "openssl_pkey_free(" "resource $key" "S" "void") ("f" "openssl_pkey_export_to_file(" "mixed $key,string $outfilename,string $passphrase,array $configargs" "S" "bool") ("f" "openssl_pkey_export(" "mixed $key,string &$out,string $passphrase,array $configargs" "S" "bool") ("f" "openssl_pkcs7_verify(" "string $filename,int $flags,string $outfilename,array $cainfo,string $extracerts,string $content" "S" "mixed") ("f" "openssl_pkcs7_sign(" "string $infilename,string $outfilename,mixed $signcert,mixed $privkey,array $headers,int $flags,string $extracerts" "S" "bool") ("f" "openssl_pkcs7_encrypt(" "string $infile,string $outfile,mixed $recipcerts,array $headers,int $flags,int $cipherid" "S" "bool") ("f" "openssl_pkcs7_decrypt(" "string $infilename,string $outfilename,mixed $recipcert,mixed $recipkey" "S" "bool") ("f" "openssl_pkcs12_read(" "string $pkcs12,array &$certs,string $pass" "S" "bool") ("f" "openssl_pkcs12_export_to_file(" "mixed $x509,string $filename,mixed $priv_key,string $pass,array $args" "S" "bool") ("f" "openssl_pkcs12_export(" "mixed $x509,string &$out,mixed $priv_key,string $pass,array $args" "S" "bool") ("f" "openssl_pbkdf2(" "string $password,string $salt,int $key_length,int $iterations,string $digest_algorithm" "S" "string") ("f" "openssl_open(" "string $sealed_data,string &$open_data,string $env_key,mixed $priv_key_id,string $method" "S" "bool") ("f" "openssl_get_md_methods(" "bool $aliases" "S" "array") ("f" "openssl_get_cipher_methods(" "bool $aliases" "S" "array") ("f" "openssl_get_cert_locations(" #1# "S" "array") ("f" "openssl_free_key(" "resource $key_identifier" "S" "void") ("f" "openssl_error_string(" #1# "S" "string") ("f" "openssl_encrypt(" "string $data,string $method,string $password,int $options,string $iv" "S" "string") ("f" "openssl_digest(" "string $data,string $method,bool $raw_output" "S" "string") ("f" "openssl_dh_compute_key(" "string $pub_key,resource $dh_key" "S" "string") ("f" "openssl_decrypt(" "string $data,string $method,string $password,int $options,string $iv" "S" "string") ("f" "openssl_csr_sign(" "mixed $csr,mixed $cacert,mixed $priv_key,int $days,array $configargs,int $serial" "S" "resource") ("f" "openssl_csr_new(" "array $dn,resource &$privkey,array $configargs,array $extraattribs" "S" "mixed") ("f" "openssl_csr_get_subject(" "mixed $csr,bool $use_shortnames" "S" "array") ("f" "openssl_csr_get_public_key(" "mixed $csr,bool $use_shortnames" "S" "resource") ("f" "openssl_csr_export_to_file(" "resource $csr,string $outfilename,bool $notext" "S" "bool") ("f" "openssl_csr_export(" "resource $csr,string &$out,bool $notext" "S" "bool") ("f" "openssl_cipher_iv_length(" "string $method" "S" "int") ("f" "openlog(" "string $ident,int $option,int $facility" "S" "bool") ("f" "opendir(" "string $path,resource $context" "S" "resource") ("f" "openal_stream(" "resource $source,int $format,int $rate" "S" "resource") ("f" "openal_source_stop(" "resource $source" "S" "bool") ("f" "openal_source_set(" "resource $source,int $property,mixed $setting" "S" "bool") ("f" "openal_source_rewind(" "resource $source" "S" "bool") ("f" "openal_source_play(" "resource $source" "S" "bool") ("f" "openal_source_pause(" "resource $source" "S" "bool") ("f" "openal_source_get(" "resource $source,int $property" "S" "mixed") ("f" "openal_source_destroy(" "resource $source" "S" "bool") ("f" "openal_source_create(" #1# "S" "resource") ("f" "openal_listener_set(" "int $property,mixed $setting" "S" "bool") ("f" "openal_listener_get(" "int $property" "S" "mixed") ("f" "openal_device_open(" "string $device_desc" "S" "resource") ("f" "openal_device_close(" "resource $device" "S" "bool") ("f" "openal_context_suspend(" "resource $context" "S" "bool") ("f" "openal_context_process(" "resource $context" "S" "bool") ("f" "openal_context_destroy(" "resource $context" "S" "bool") ("f" "openal_context_current(" "resource $context" "S" "bool") ("f" "openal_context_create(" "resource $device" "S" "resource") ("f" "openal_buffer_loadwav(" "resource $buffer,string $wavfile" "S" "bool") ("f" "openal_buffer_get(" "resource $buffer,int $property" "S" "int") ("f" "openal_buffer_destroy(" "resource $buffer" "S" "bool") ("f" "openal_buffer_data(" "resource $buffer,int $format,string $data,int $freq" "S" "bool") ("f" "openal_buffer_create(" #1# "S" "resource") ("f" "opcache_reset(" #1# "S" "boolean") ("f" "opcache_invalidate(" "string $script,boolean $force" "S" "boolean") ("f" "opcache_get_status(" "boolean $get_scripts" "S" "array") ("f" "opcache_get_configuration(" #1# "S" "array") ("f" "opcache_compile_file(" "string $file" "S" "boolean") ("f" "odbc_tables(" "resource $connection_id,string $qualifier,string $owner,string $name,string $types" "S" "resource") ("f" "odbc_tableprivileges(" "resource $connection_id,string $qualifier,string $owner,string $name" "S" "resource") ("f" "odbc_statistics(" "resource $connection_id,string $qualifier,string $owner,string $table_name,int $unique,int $accuracy" "S" "resource") ("f" "odbc_specialcolumns(" "resource $connection_id,int $type,string $qualifier,string $owner,string $table,int $scope,int $nullable" "S" "resource") ("f" "odbc_setoption(" "resource $id,int $function,int $option,int $param" "S" "bool") ("f" "odbc_rollback(" "resource $connection_id" "S" "bool") ("f" "odbc_result(" "resource $result_id,mixed $field" "S" "mixed") ("f" "odbc_result_all(" "resource $result_id,string $format" "S" "int") ("f" "odbc_procedures(" "resource $connection_id" "S" "resource") ("f" "odbc_procedurecolumns(" "resource $connection_id" "S" "resource") ("f" "odbc_primarykeys(" "resource $connection_id,string $qualifier,string $owner,string $table" "S" "resource") ("f" "odbc_prepare(" "resource $connection_id,string $query_string" "S" "resource") ("f" "odbc_pconnect(" "string $dsn,string $user,string $password,int $cursor_type" "S" "resource") ("f" "odbc_num_rows(" "resource $result_id" "S" "int") ("f" "odbc_num_fields(" "resource $result_id" "S" "int") ("f" "odbc_next_result(" "resource $result_id" "S" "bool") ("f" "odbc_longreadlen(" "resource $result_id,int $length" "S" "bool") ("f" "odbc_gettypeinfo(" "resource $connection_id,int $data_type" "S" "resource") ("f" "odbc_free_result(" "resource $result_id" "S" "bool") ("f" "odbc_foreignkeys(" "resource $connection_id,string $pk_qualifier,string $pk_owner,string $pk_table,string $fk_qualifier,string $fk_owner,string $fk_table" "S" "resource") ("f" "odbc_field_type(" "resource $result_id,int $field_number" "S" "string") ("f" "odbc_field_scale(" "resource $result_id,int $field_number" "S" "int") ("f" "odbc_field_num(" "resource $result_id,string $field_name" "S" "int") ("f" "odbc_field_name(" "resource $result_id,int $field_number" "S" "string") ("f" "odbc_field_len(" "resource $result_id,int $field_number" "S" "int") ("f" "odbc_fetch_row(" "resource $result_id,int $row_number" "S" "bool") ("f" "odbc_fetch_object(" "resource $result,int $rownumber" "S" "object") ("f" "odbc_fetch_into(" "resource $result_id,array &$result_array,int $rownumber" "S" "int") ("f" "odbc_fetch_array(" "resource $result,int $rownumber" "S" "array") ("f" "odbc_execute(" "resource $result_id,array $parameters_array" "S" "bool") ("f" "odbc_exec(" "resource $connection_id,string $query_string,int $flags" "S" "resource") ("f" "odbc_error(" "resource $connection_id" "S" "string") ("f" "odbc_errormsg(" "resource $connection_id" "S" "string") ("f" "odbc_data_source(" "resource $connection_id,int $fetch_type" "S" "array") ("f" "odbc_cursor(" "resource $result_id" "S" "string") ("f" "odbc_connect(" "string $dsn,string $user,string $password,int $cursor_type" "S" "resource") ("f" "odbc_commit(" "resource $connection_id" "S" "bool") ("f" "odbc_columns(" "resource $connection_id,string $qualifier,string $schema,string $table_name,string $column_name" "S" "resource") ("f" "odbc_columnprivileges(" "resource $connection_id,string $qualifier,string $owner,string $table_name,string $column_name" "S" "resource") ("f" "odbc_close(" "resource $connection_id" "S" "void") ("f" "odbc_close_all(" #1# "S" "void") ("f" "odbc_binmode(" "resource $result_id,int $mode" "S" "bool") ("f" "odbc_autocommit(" "resource $connection_id,bool $OnOff" "S" "mixed") ("f" "octdec(" "string $octal_string" "S" "number") ("f" "oci_statement_type(" "resource $statement" "S" "string") ("f" "oci_set_prefetch(" "resource $statement,int $rows" "S" "bool") ("f" "oci_set_module_name(" "resource $connection,string $module_name" "S" "bool") ("f" "oci_set_edition(" "string $edition" "S" "bool") ("f" "oci_set_client_info(" "resource $connection,string $client_info" "S" "bool") ("f" "oci_set_client_identifier(" "resource $connection,string $client_identifier" "S" "bool") ("f" "oci_set_action(" "resource $connection,string $action_name" "S" "bool") ("f" "oci_server_version(" "resource $connection" "S" "string") ("f" "oci_rollback(" "resource $connection" "S" "bool") ("f" "oci_result(" "resource $statement,mixed $field" "S" "mixed") ("f" "oci_pconnect(" "string $username,string $password,string $db,string $charset,int $session_mode" "S" "resource") ("f" "oci_password_change(" "resource $connection,string $username,string $old_password,string $new_password" "S" "bool") ("f" "oci_parse(" "resource $connection,string $query" "S" "resource") ("f" "oci_num_rows(" "resource $stmt" "S" "int") ("f" "oci_num_fields(" "resource $statement" "S" "int") ("f" "oci_new_descriptor(" "resource $connection,int $type" "S" "OCI_Lob") ("f" "oci_new_cursor(" "resource $connection" "S" "resource") ("f" "oci_new_connect(" "string $username,string $password,string $db,string $charset,int $session_mode" "S" "resource") ("f" "oci_new_collection(" "resource $connection,string $tdo,string $schema" "S" "OCI_Collection") ("f" "oci_lob_is_equal(" "OCI_Lob $lob1,OCI_Lob $lob2" "S" "bool") ("f" "oci_lob_copy(" "OCI_Lob $lob_to,OCI_Lob $lob_from,int $length" "S" "bool") ("f" "oci_internal_debug(" "int $onoff" "S" "void") ("f" "oci_get_implicit_resultset(" "resource $statement" "S" "resource") ("f" "oci_free_statement(" "resource $statement" "S" "bool") ("f" "oci_free_descriptor(" "resource $descriptor" "S" "bool") ("f" "oci_field_type_raw(" "resource $statement,int $field" "S" "int") ("f" "oci_field_type(" "resource $stmt,int $field" "S" "mixed") ("f" "oci_field_size(" "resource $stmt,mixed $field" "S" "int") ("f" "oci_field_scale(" "resource $statement,int $field" "S" "int") ("f" "oci_field_precision(" "resource $statement,int $field" "S" "int") ("f" "oci_field_name(" "resource $statement,int $field" "S" "string") ("f" "oci_field_is_null(" "resource $statement,mixed $field" "S" "bool") ("f" "oci_fetch_row(" "resource $statement" "S" "array") ("f" "oci_fetch_object(" "resource $statement" "S" "object") ("f" "oci_fetch(" "resource $statement" "S" "bool") ("f" "oci_fetch_assoc(" "resource $statement" "S" "array") ("f" "oci_fetch_array(" "resource $statement,int $mode" "S" "array") ("f" "oci_fetch_all(" "resource $statement,array &$output,int $skip,int $maxrows,int $flags" "S" "int") ("f" "oci_execute(" "resource $stmt,int $mode" "S" "bool") ("f" "oci_error(" "resource $source" "S" "array") ("f" "oci_define_by_name(" "resource $statement,string $column_name,mixed &$variable,int $type" "S" "bool") ("f" "oci_connect(" "string $username,string $password,string $db,string $charset,int $session_mode" "S" "resource") ("f" "oci_commit(" "resource $connection" "S" "bool") ("f" "oci_close(" "resource $connection" "S" "bool") ("f" "oci_client_version(" #1# "S" "string") ("f" "oci_cancel(" "resource $statement" "S" "bool") ("f" "oci_bind_by_name(" "resource $stmt,string $ph_name,mixed &$variable,int $maxlength,int $type" "S" "bool") ("f" "oci_bind_array_by_name(" "resource $statement,string $name,array &$var_array,int $max_table_length,int $max_item_length,int $type" "S" "bool") ("f" "ob_tidyhandler(" "string $input,int $mode" "S" "string") ("f" "ob_start(" "callback $output_callback,int $chunk_size,bool $erase" "S" "bool") ("f" "ob_list_handlers(" #1# "S" "array") ("f" "ob_inflatehandler(" "string $data,int $mode" "S" "string") ("f" "ob_implicit_flush(" "int $flag" "S" "void") ("f" "ob_iconv_handler(" "string $contents,int $status" "S" "string") ("f" "ob_gzhandler(" "string $buffer,int $mode" "S" "string") ("f" "ob_get_status(" "bool $full_status" "S" "array") ("f" "ob_get_level(" #1# "S" "int") ("f" "ob_get_length(" #1# "S" "int") ("f" "ob_get_flush(" #1# "S" "string") ("f" "ob_get_contents(" #1# "S" "string") ("f" "ob_get_clean(" #1# "S" "string") ("f" "ob_flush(" #1# "S" "void") ("f" "ob_etaghandler(" "string $data,int $mode" "S" "string") ("f" "ob_end_flush(" #1# "S" "bool") ("f" "ob_end_clean(" #1# "S" "bool") ("f" "ob_deflatehandler(" "string $data,int $mode" "S" "string") ("f" "ob_clean(" #1# "S" "void") ("f" "oauth_urlencode(" "字符串 $uri" "S" #1#) ("f" "oauth_get_sbs(" "字符串 $http_method,字符串 $uri,数组 $request_parameters" "S" #1#) ("f" "number_format(" "float $number,int $decimals" "S" "string") ("f" "nthmac(" "string $clent,string $data" "S" "string") ("f" "nthmac(" "string $clent,string $data" "S" "string") ("f" "nsapi_virtual(" "string $uri" "S" "bool") ("f" "nsapi_response_headers(" #1# "S" "array") ("f" "nsapi_request_headers(" #1# "S" "array") ("f" "nl_langinfo(" "int $item" "S" "string") ("f" "nl2br(" "string $string,bool $is_xhtml" "S" "string") ("f" "ngettext(" "string $msgid1,string $msgid2,int $n" "S" "string") ("f" "next(" "array &$array" "S" "mixed") ("f" "newt_win_ternary(" "string $title,string $button1_text,string $button2_text,string $button3_text,string $format,mixed $args,mixed $__args__" "S" "int") ("f" "newt_win_messagev(" "string $title,string $button_text,string $format,array $args" "S" "void") ("f" "newt_win_message(" "string $title,string $button_text,string $format,mixed $args,mixed $__args__" "S" "void") ("f" "newt_win_menu(" "string $title,string $text,int $suggestedWidth,int $flexDown,int $flexUp,int $maxListHeight,array $items,int &$listItem,string $button1,string $__args__" "S" "int") ("f" "newt_win_entries(" "string $title,string $text,int $suggested_width,int $flex_down,int $flex_up,int $data_width,array &$items,string $button1,string $__args__" "S" "int") ("f" "newt_win_choice(" "string $title,string $button1_text,string $button2_text,string $format,mixed $args,mixed $__args__" "S" "int") ("f" "newt_wait_for_key(" #1# "S" "void") ("f" "newt_vertical_scrollbar(" "int $left,int $top,int $height,int $normal_colorset,int $thumb_colorset" "S" "resource") ("f" "newt_textbox_set_text(" "resource $textbox,string $text" "S" "void") ("f" "newt_textbox_set_height(" "resource $textbox,int $height" "S" "void") ("f" "newt_textbox(" "int $left,int $top,int $width,int $height,int $flags" "S" "resource") ("f" "newt_textbox_reflowed(" "int $left,int $top,char $text,int $width,int $flex_down,int $flex_up,int $flags" "S" "resource") ("f" "newt_textbox_get_num_lines(" "resource $textbox" "S" "int") ("f" "newt_suspend(" #1# "S" "void") ("f" "newt_set_suspend_callback(" "callable $function,mixed $data" "S" "void") ("f" "newt_set_help_callback(" "mixed $function" "S" "void") ("f" "newt_scrollbar_set(" "resource $scrollbar,int $where,int $total" "S" "void") ("f" "newt_scale_set(" "resource $scale,int $amount" "S" "void") ("f" "newt_scale(" "int $left,int $top,int $width,int $full_value" "S" "resource") ("f" "newt_run_form(" "resource $form" "S" "resource") ("f" "newt_resume(" #1# "S" "void") ("f" "newt_resize_screen(" "bool $redraw" "S" "void") ("f" "newt_refresh(" #1# "S" "void") ("f" "newt_reflow_text(" "string $text,int $width,int $flex_down,int $flex_up,int &$actual_width,int &$actual_height" "S" "string") ("f" "newt_redraw_help_line(" #1# "S" "void") ("f" "newt_radio_get_current(" "resource $set_member" "S" "resource") ("f" "newt_radiobutton(" "int $left,int $top,string $text,bool $is_default,resource $prev_button" "S" "resource") ("f" "newt_push_help_line(" "string $text" "S" "void") ("f" "newt_pop_window(" #1# "S" "void") ("f" "newt_pop_help_line(" #1# "S" "void") ("f" "newt_open_window(" "int $left,int $top,int $width,int $height,string $title" "S" "int") ("f" "newt_listitem_set(" "resource $item,string $text" "S" "void") ("f" "newt_listitem(" "int $left,int $top,string $text,bool $is_default,resouce $prev_item,mixed $data,int $flags" "S" "resource") ("f" "newt_listitem_get_data(" "resource $item" "S" "mixed") ("f" "newt_listbox_set_width(" "resource $listbox,int $width" "S" "void") ("f" "newt_listbox_set_entry(" "resource $listbox,int $num,string $text" "S" "void") ("f" "newt_listbox_set_data(" "resource $listbox,int $num,mixed $data" "S" "void") ("f" "newt_listbox_set_current(" "resource $listbox,int $num" "S" "void") ("f" "newt_listbox_set_current_by_key(" "resource $listbox,mixed $key" "S" "void") ("f" "newt_listbox_select_item(" "resource $listbox,mixed $key,int $sense" "S" "void") ("f" "newt_listbox(" "int $left,int $top,int $height,int $flags" "S" "resource") ("f" "newt_listbox_item_count(" "resource $listbox" "S" "int") ("f" "newt_listbox_insert_entry(" "resource $listbox,string $text,mixed $data,mixed $key" "S" "void") ("f" "newt_listbox_get_selection(" "resource $listbox" "S" "array") ("f" "newt_listbox_get_current(" "resource $listbox" "S" "string") ("f" "newt_listbox_delete_entry(" "resource $listbox,mixed $key" "S" "void") ("f" "newt_listbox_clear(" "resource $listobx" "S" "void") ("f" "newt_listbox_clear_selection(" "resource $listbox" "S" "void") ("f" "newt_listbox_append_entry(" "resource $listbox,string $text,mixed $data" "S" "void") ("f" "newt_label_set_text(" "resource $label,string $text" "S" "void") ("f" "newt_label(" "int $left,int $top,string $text" "S" "resource") ("f" "newt_init(" #1# "S" "int") ("f" "newt_grid_wrapped_window(" "resource $grid,string $title" "S" "void") ("f" "newt_grid_wrapped_window_at(" "resource $grid,string $title,int $left,int $top" "S" "void") ("f" "newt_grid_v_stacked(" "int $element1_type,resource $element1,int $__args__,resource $__args__" "S" "resource") ("f" "newt_grid_v_close_stacked(" "int $element1_type,resource $element1,int $__args__,resource $__args__" "S" "resource") ("f" "newt_grid_simple_window(" "resource $text,resource $middle,resource $buttons" "S" "resource") ("f" "newt_grid_set_field(" "resource $grid,int $col,int $row,int $type,resource $val,int $pad_left,int $pad_top,int $pad_right,int $pad_bottom,int $anchor,int $flags" "S" "void") ("f" "newt_grid_place(" "resource $grid,int $left,int $top" "S" "void") ("f" "newt_grid_h_stacked(" "int $element1_type,resource $element1,int $__args__,resource $__args__" "S" "resource") ("f" "newt_grid_h_close_stacked(" "int $element1_type,resource $element1,int $__args__,resource $__args__" "S" "resource") ("f" "newt_grid_get_size(" "resouce $grid,int &$width,int &$height" "S" "void") ("f" "newt_grid_free(" "resource $grid,bool $recurse" "S" "void") ("f" "newt_grid_basic_window(" "resource $text,resource $middle,resource $buttons" "S" "resource") ("f" "newt_grid_add_components_to_form(" "resource $grid,resource $form,bool $recurse" "S" "void") ("f" "newt_get_screen_size(" "int &$cols,int &$rows" "S" "void") ("f" "newt_form_watch_fd(" "resource $form,resource $stream,int $flags" "S" "void") ("f" "newt_form_set_width(" "resource $form,int $width" "S" "void") ("f" "newt_form_set_timer(" "resource $form,int $milliseconds" "S" "void") ("f" "newt_form_set_size(" "resource $form" "S" "void") ("f" "newt_form_set_height(" "resource $form,int $height" "S" "void") ("f" "newt_form_set_background(" "resource $from,int $background" "S" "void") ("f" "newt_form_run(" "resource $form,array &$exit_struct" "S" "void") ("f" "newt_form(" "resource $vert_bar,string $help,int $flags" "S" "resource") ("f" "newt_form_get_current(" "resource $form" "S" "resource") ("f" "newt_form_destroy(" "resource $form" "S" "void") ("f" "newt_form_add_hot_key(" "resource $form,int $key" "S" "void") ("f" "newt_form_add_component(" "resource $form,resource $component" "S" "void") ("f" "newt_form_add_components(" "resource $form,array $components" "S" "void") ("f" "newt_finished(" #1# "S" "int") ("f" "newt_entry_set(" "resource $entry,string $value,bool $cursor_at_end" "S" "void") ("f" "newt_entry_set_flags(" "resource $entry,int $flags,int $sense" "S" "void") ("f" "newt_entry_set_filter(" "resource $entry,callable $filter,mixed $data" "S" "void") ("f" "newt_entry(" "int $left,int $top,int $width,string $init_value,int $flags" "S" "resource") ("f" "newt_entry_get_value(" "resource $entry" "S" "string") ("f" "newt_draw_root_text(" "int $left,int $top,string $text" "S" "void") ("f" "newt_draw_form(" "resource $form" "S" "void") ("f" "newt_delay(" "int $microseconds" "S" "void") ("f" "newt_cursor_on(" #1# "S" "void") ("f" "newt_cursor_off(" #1# "S" "void") ("f" "newt_create_grid(" "int $cols,int $rows" "S" "resource") ("f" "newt_component_takes_focus(" "resource $component,bool $takes_focus" "S" "void") ("f" "newt_component_add_callback(" "resource $component,mixed $func_name,mixed $data" "S" "void") ("f" "newt_compact_button(" "int $left,int $top,string $text" "S" "resource") ("f" "newt_cls(" #1# "S" "void") ("f" "newt_clear_key_buffer(" #1# "S" "void") ("f" "newt_checkbox_tree_set_width(" "resource $checkbox_tree,int $width" "S" "void") ("f" "newt_checkbox_tree_set_entry(" "resource $checkboxtree,mixed $data,string $text" "S" "void") ("f" "newt_checkbox_tree_set_entry_value(" "resource $checkboxtree,mixed $data,string $value" "S" "void") ("f" "newt_checkbox_tree_set_current(" "resource $checkboxtree,mixed $data" "S" "void") ("f" "newt_checkbox_tree(" "int $left,int $top,int $height,int $flags" "S" "resource") ("f" "newt_checkbox_tree_multi(" "int $left,int $top,int $height,string $seq,int $flags" "S" "resource") ("f" "newt_checkbox_tree_get_selection(" "resource $checkboxtree" "S" "array") ("f" "newt_checkbox_tree_get_multi_selection(" "resource $checkboxtree,string $seqnum" "S" "array") ("f" "newt_checkbox_tree_get_entry_value(" "resource $checkboxtree,mixed $data" "S" "string") ("f" "newt_checkbox_tree_get_current(" "resource $checkboxtree" "S" "mixed") ("f" "newt_checkbox_tree_find_item(" "resource $checkboxtree,mixed $data" "S" "array") ("f" "newt_checkbox_tree_add_item(" "resource $checkboxtree,string $text,mixed $data,int $flags,int $index,int $__args__" "S" "void") ("f" "newt_checkbox_set_value(" "resource $checkbox,string $value" "S" "void") ("f" "newt_checkbox_set_flags(" "resource $checkbox,int $flags,int $sense" "S" "void") ("f" "newt_checkbox(" "int $left,int $top,string $text,string $def_value,string $seq" "S" "resource") ("f" "newt_checkbox_get_value(" "resource $checkbox" "S" "string") ("f" "newt_centered_window(" "int $width,int $height,string $title" "S" "int") ("f" "newt_button(" "int $left,int $top,string $text" "S" "resource") ("f" "newt_button_bar(" "array &$buttons" "S" "resource") ("f" "newt_bell(" #1# "S" "void") ("f" "ncurses_wvline(" "resource $window,int $charattr,int $n" "S" "int") ("f" "ncurses_wstandout(" "resource $window" "S" "int") ("f" "ncurses_wstandend(" "resource $window" "S" "int") ("f" "ncurses_wrefresh(" "resource $window" "S" "int") ("f" "ncurses_wnoutrefresh(" "resource $window" "S" "int") ("f" "ncurses_wmove(" "resource $window,int $y,int $x" "S" "int") ("f" "ncurses_wmouse_trafo(" "resource $window,int &$y,int &$x,bool $toscreen" "S" "bool") ("f" "ncurses_whline(" "resource $window,int $charattr,int $n" "S" "int") ("f" "ncurses_wgetch(" "resource $window" "S" "int") ("f" "ncurses_werase(" "resource $window" "S" "int") ("f" "ncurses_wcolor_set(" "resource $window,int $color_pair" "S" "int") ("f" "ncurses_wclear(" "resource $window" "S" "int") ("f" "ncurses_wborder(" "resource $window,int $left,int $right,int $top,int $bottom,int $tl_corner,int $tr_corner,int $bl_corner,int $br_corner" "S" "int") ("f" "ncurses_wattrset(" "resource $window,int $attrs" "S" "int") ("f" "ncurses_wattron(" "resource $window,int $attrs" "S" "int") ("f" "ncurses_wattroff(" "resource $window,int $attrs" "S" "int") ("f" "ncurses_waddstr(" "resource $window,string $str,int $n" "S" "int") ("f" "ncurses_waddch(" "resource $window,int $ch" "S" "int") ("f" "ncurses_vline(" "int $charattr,int $n" "S" "int") ("f" "ncurses_vidattr(" "int $intarg" "S" "int") ("f" "ncurses_use_extended_names(" "bool $flag" "S" "int") ("f" "ncurses_use_env(" "bool $flag" "S" "void") ("f" "ncurses_use_default_colors(" #1# "S" "bool") ("f" "ncurses_update_panels(" #1# "S" "void") ("f" "ncurses_ungetmouse(" "array $mevent" "S" "bool") ("f" "ncurses_ungetch(" "int $keycode" "S" "int") ("f" "ncurses_typeahead(" "int $fd" "S" "int") ("f" "ncurses_top_panel(" "resource $panel" "S" "int") ("f" "ncurses_timeout(" "int $millisec" "S" "void") ("f" "ncurses_termname(" #1# "S" "string") ("f" "ncurses_termattrs(" #1# "S" "bool") ("f" "ncurses_start_color(" #1# "S" "int") ("f" "ncurses_standout(" #1# "S" "int") ("f" "ncurses_standend(" #1# "S" "int") ("f" "ncurses_slk_touch(" #1# "S" "int") ("f" "ncurses_slk_set(" "int $labelnr,string $label,int $format" "S" "bool") ("f" "ncurses_slk_restore(" #1# "S" "int") ("f" "ncurses_slk_refresh(" #1# "S" "int") ("f" "ncurses_slk_noutrefresh(" #1# "S" "bool") ("f" "ncurses_slk_init(" "int $format" "S" "bool") ("f" "ncurses_slk_color(" "int $intarg" "S" "int") ("f" "ncurses_slk_clear(" #1# "S" "bool") ("f" "ncurses_slk_attrset(" "int $intarg" "S" "int") ("f" "ncurses_slk_attron(" "int $intarg" "S" "int") ("f" "ncurses_slk_attroff(" "int $intarg" "S" "int") ("f" "ncurses_slk_attr(" #1# "S" "int") ("f" "ncurses_show_panel(" "resource $panel" "S" "int") ("f" "ncurses_scr_set(" "string $filename" "S" "int") ("f" "ncurses_scr_restore(" "string $filename" "S" "int") ("f" "ncurses_scrl(" "int $count" "S" "int") ("f" "ncurses_scr_init(" "string $filename" "S" "int") ("f" "ncurses_scr_dump(" "string $filename" "S" "int") ("f" "ncurses_savetty(" #1# "S" "bool") ("f" "ncurses_resetty(" #1# "S" "bool") ("f" "ncurses_reset_shell_mode(" #1# "S" "int") ("f" "ncurses_reset_prog_mode(" #1# "S" "int") ("f" "ncurses_replace_panel(" "resource $panel,resource $window" "S" "int") ("f" "ncurses_refresh(" "int $ch" "S" "int") ("f" "ncurses_raw(" #1# "S" "bool") ("f" "ncurses_qiflush(" #1# "S" "void") ("f" "ncurses_putp(" "string $text" "S" "int") ("f" "ncurses_prefresh(" "resource $pad,int $pminrow,int $pmincol,int $sminrow,int $smincol,int $smaxrow,int $smaxcol" "S" "int") ("f" "ncurses_pnoutrefresh(" "resource $pad,int $pminrow,int $pmincol,int $sminrow,int $smincol,int $smaxrow,int $smaxcol" "S" "int") ("f" "ncurses_panel_window(" "resource $panel" "S" "resource") ("f" "ncurses_panel_below(" "resource $panel" "S" "resource") ("f" "ncurses_panel_above(" "resource $panel" "S" "resource") ("f" "ncurses_pair_content(" "int $pair,int &$f,int &$b" "S" "int") ("f" "ncurses_noraw(" #1# "S" "bool") ("f" "ncurses_noqiflush(" #1# "S" "void") ("f" "ncurses_nonl(" #1# "S" "bool") ("f" "ncurses_noecho(" #1# "S" "bool") ("f" "ncurses_nocbreak(" #1# "S" "bool") ("f" "ncurses_nl(" #1# "S" "bool") ("f" "ncurses_newwin(" "int $rows,int $cols,int $y,int $x" "S" "resource") ("f" "ncurses_new_panel(" "resource $window" "S" "resource") ("f" "ncurses_newpad(" "int $rows,int $cols" "S" "resource") ("f" "ncurses_napms(" "int $milliseconds" "S" "int") ("f" "ncurses_mvwaddstr(" "resource $window,int $y,int $x,string $text" "S" "int") ("f" "ncurses_mvvline(" "int $y,int $x,int $attrchar,int $n" "S" "int") ("f" "ncurses_mvinch(" "int $y,int $x" "S" "int") ("f" "ncurses_mvhline(" "int $y,int $x,int $attrchar,int $n" "S" "int") ("f" "ncurses_mvgetch(" "int $y,int $x" "S" "int") ("f" "ncurses_mvdelch(" "int $y,int $x" "S" "int") ("f" "ncurses_mvcur(" "int $old_y,int $old_x,int $new_y,int $new_x" "S" "int") ("f" "ncurses_mvaddstr(" "int $y,int $x,string $s" "S" "int") ("f" "ncurses_mvaddnstr(" "int $y,int $x,string $s,int $n" "S" "int") ("f" "ncurses_mvaddchstr(" "int $y,int $x,string $s" "S" "int") ("f" "ncurses_mvaddchnstr(" "int $y,int $x,string $s,int $n" "S" "int") ("f" "ncurses_mvaddch(" "int $y,int $x,int $c" "S" "int") ("f" "ncurses_move_panel(" "resource $panel,int $startx,int $starty" "S" "int") ("f" "ncurses_move(" "int $y,int $x" "S" "int") ("f" "ncurses_mouse_trafo(" "int &$y,int &$x,bool $toscreen" "S" "bool") ("f" "ncurses_mousemask(" "int $newmask,int &$oldmask" "S" "int") ("f" "ncurses_mouseinterval(" "int $milliseconds" "S" "int") ("f" "ncurses_meta(" "resource $window,bool $bit8" "S" "int") ("f" "ncurses_longname(" #1# "S" "string") ("f" "ncurses_killchar(" #1# "S" "string") ("f" "ncurses_keypad(" "resource $window,bool $bf" "S" "int") ("f" "ncurses_keyok(" "int $keycode,bool $enable" "S" "int") ("f" "ncurses_isendwin(" #1# "S" "bool") ("f" "ncurses_instr(" "string &$buffer" "S" "int") ("f" "ncurses_insstr(" "string $text" "S" "int") ("f" "ncurses_insertln(" #1# "S" "int") ("f" "ncurses_insdelln(" "int $count" "S" "int") ("f" "ncurses_insch(" "int $character" "S" "int") ("f" "ncurses_init(" #1# "S" "void") ("f" "ncurses_init_pair(" "int $pair,int $fg,int $bg" "S" "int") ("f" "ncurses_init_color(" "int $color,int $r,int $g,int $b" "S" "int") ("f" "ncurses_inch(" #1# "S" "string") ("f" "ncurses_hline(" "int $charattr,int $n" "S" "int") ("f" "ncurses_hide_panel(" "resource $panel" "S" "int") ("f" "ncurses_has_key(" "int $keycode" "S" "int") ("f" "ncurses_has_il(" #1# "S" "bool") ("f" "ncurses_has_ic(" #1# "S" "bool") ("f" "ncurses_has_colors(" #1# "S" "bool") ("f" "ncurses_halfdelay(" "int $tenth" "S" "int") ("f" "ncurses_getyx(" "resource $window,int &$y,int &$x" "S" "void") ("f" "ncurses_getmouse(" "array &$mevent" "S" "bool") ("f" "ncurses_getmaxyx(" "resource $window,int &$y,int &$x" "S" "void") ("f" "ncurses_getch(" #1# "S" "int") ("f" "ncurses_flushinp(" #1# "S" "bool") ("f" "ncurses_flash(" #1# "S" "bool") ("f" "ncurses_filter(" #1# "S" "void") ("f" "ncurses_erasechar(" #1# "S" "string") ("f" "ncurses_erase(" #1# "S" "bool") ("f" "ncurses_end(" #1# "S" "int") ("f" "ncurses_echochar(" "int $character" "S" "int") ("f" "ncurses_echo(" #1# "S" "bool") ("f" "ncurses_doupdate(" #1# "S" "bool") ("f" "ncurses_delwin(" "resource $window" "S" "bool") ("f" "ncurses_del_panel(" "resource $panel" "S" "bool") ("f" "ncurses_deleteln(" #1# "S" "bool") ("f" "ncurses_delch(" #1# "S" "bool") ("f" "ncurses_delay_output(" "int $milliseconds" "S" "int") ("f" "ncurses_def_shell_mode(" #1# "S" "bool") ("f" "ncurses_def_prog_mode(" #1# "S" "bool") ("f" "ncurses_define_key(" "string $definition,int $keycode" "S" "int") ("f" "ncurses_curs_set(" "int $visibility" "S" "int") ("f" "ncurses_color_set(" "int $pair" "S" "int") ("f" "ncurses_color_content(" "int $color,int &$r,int &$g,int &$b" "S" "int") ("f" "ncurses_clrtoeol(" #1# "S" "bool") ("f" "ncurses_clrtobot(" #1# "S" "bool") ("f" "ncurses_clear(" #1# "S" "bool") ("f" "ncurses_cbreak(" #1# "S" "bool") ("f" "ncurses_can_change_color(" #1# "S" "bool") ("f" "ncurses_bottom_panel(" "resource $panel" "S" "int") ("f" "ncurses_border(" "int $left,int $right,int $top,int $bottom,int $tl_corner,int $tr_corner,int $bl_corner,int $br_corner" "S" "int") ("f" "ncurses_bkgdset(" "int $attrchar" "S" "void") ("f" "ncurses_bkgd(" "int $attrchar" "S" "int") ("f" "ncurses_beep(" #1# "S" "int") ("f" "ncurses_baudrate(" #1# "S" "int") ("f" "ncurses_attrset(" "int $attributes" "S" "int") ("f" "ncurses_attron(" "int $attributes" "S" "int") ("f" "ncurses_attroff(" "int $attributes" "S" "int") ("f" "ncurses_assume_default_colors(" "int $fg,int $bg" "S" "int") ("f" "ncurses_addstr(" "string $text" "S" "int") ("f" "ncurses_addnstr(" "string $s,int $n" "S" "int") ("f" "ncurses_addchstr(" "string $s" "S" "int") ("f" "ncurses_addchnstr(" "string $s,int $n" "S" "int") ("f" "ncurses_addch(" "int $ch" "S" "int") ("f" "natsort(" "array &$array" "S" "bool") ("f" "natcasesort(" "array &$array" "S" "bool") ("f" "mysql_unbuffered_query(" "string $query,resource $link_identifier" "S" "resource") ("f" "mysql_thread_id(" "resource $link_identifier" "S" "int") ("f" "mysql_tablename(" "resource $result,int $i" "S" "string") ("f" "mysql_stat(" "resource $link_identifier" "S" "string") ("f" "mysql_set_charset(" "string $charset,resource $link_identifier" "S" "bool") ("f" "mysql_select_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "mysql_result(" "resource $result,int $row,mixed $field" "S" "mixed") ("f" "mysql_real_escape_string(" "string $unescaped_string,resource $link_identifier" "S" "string") ("f" "mysql_query(" "string $query,resource $link_identifier" "S" "resource") ("f" "mysql_ping(" "resource $link_identifier" "S" "bool") ("f" "mysql_pconnect(" "string $server,string $username,string $password,int $client_flags" "S" "resource") ("f" "mysql_num_rows(" "resource $result" "S" "int") ("f" "mysql_num_fields(" "resource $result" "S" "int") ("f" "mysqlnd_uh_set_statement_proxy(" "MysqlndUhStatement &$statement_proxy" "S" "bool") ("f" "mysqlnd_uh_set_connection_proxy(" "MysqlndUhConnection &$connection_proxy,mysqli &$mysqli_connection" "S" "bool") ("f" "mysqlnd_uh_convert_to_mysqlnd(" "mysqli &$mysql_connection" "S" "resource") ("f" "mysqlnd_qc_set_user_handlers(" "string $get_hash,string $find_query_in_cache,string $return_to_cache,string $add_query_to_cache_if_not_exists,string $query_is_select,string $update_query_run_time_stats,string $get_stats,string $clear_cache" "S" "bool") ("f" "mysqlnd_qc_set_storage_handler(" "string $handler" "S" "bool") ("f" "mysqlnd_qc_set_is_select(" "string $callback" "S" "mixed") ("f" "mysqlnd_qc_set_cache_condition(" "int $condition_type,mixed $condition,mixed $condition_option" "S" "bool") ("f" "mysqlnd_qc_get_query_trace_log(" #1# "S" "array") ("f" "mysqlnd_qc_get_normalized_query_trace_log(" #1# "S" "array") ("f" "mysqlnd_qc_get_core_stats(" #1# "S" "array") ("f" "mysqlnd_qc_get_cache_info(" #1# "S" "array") ("f" "mysqlnd_qc_get_available_handlers(" #1# "S" "array") ("f" "mysqlnd_qc_clear_cache(" #1# "S" "bool") ("f" "mysqlnd_ms_xa_rollback(" "mixed $connection,string $gtrid" "S" "int") ("f" "mysqlnd_ms_xa_gc(" "mixed $connection,string $gtrid,boolean $ignore_max_retries" "S" "int") ("f" "mysqlnd_ms_xa_commit(" "mixed $connection,string $gtrid" "S" "int") ("f" "mysqlnd_ms_xa_begin(" "mixed $connection,string $gtrid,int $timeout" "S" "int") ("f" "mysqlnd_ms_set_user_pick_server(" "string $function" "S" "bool") ("f" "mysqlnd_ms_set_qos(" "mixed $connection,int $service_level,int $service_level_option,mixed $option_value" "S" "bool") ("f" "mysqlnd_ms_query_is_select(" "string $query" "S" "int") ("f" "mysqlnd_ms_match_wild(" "string $table_name,string $wildcard" "S" "bool") ("f" "mysqlnd_ms_get_stats(" #1# "S" "array") ("f" "mysqlnd_ms_get_last_used_connection(" "mixed $connection" "S" "array") ("f" "mysqlnd_ms_get_last_gtid(" "mixed $connection" "S" "string") ("f" "mysqlnd_ms_fabric_select_shard(" "mixed $connection,mixed $table_name,mixed $shard_key" "S" "array") ("f" "mysqlnd_ms_fabric_select_global(" "mixed $connection,mixed $table_name" "S" "array") ("f" "mysqlnd_ms_dump_servers(" "mixed $connection" "S" "array") ("f" "mysqlnd_memcache_set(" "mixed $mysql_connection,Memcached $memcache_connection,string $pattern,callback $callback" "S" "bool") ("f" "mysqlnd_memcache_get_config(" "mixed $connection" "S" "array") ("f" "mysql_list_tables(" "string $database,resource $link_identifier" "S" "resource") ("f" "mysql_list_processes(" "resource $link_identifier" "S" "resource") ("f" "mysql_list_fields(" "string $database_name,string $table_name,resource $link_identifier" "S" "resource") ("f" "mysql_list_dbs(" "resource $link_identifier" "S" "resource") ("f" "mysqli_slave_query(" "mysqli $link,string $query" "S" "bool") ("f" "mysqli_rpl_probe(" "mysqli $link" "S" "bool") ("f" "mysqli_rpl_parse_enabled(" "mysqli $link" "S" "int") ("f" "mysqli_report(" "int $flags" "S" "bool") ("f" "mysql_insert_id(" "resource $link_identifier" "S" "int") ("f" "mysql_info(" "resource $link_identifier" "S" "string") ("f" "mysqli_master_query(" "mysqli $link,string $query" "S" "bool") ("f" "mysqli_get_links_stats(" #1# "S" "array") ("f" "mysqli_enable_rpl_parse(" "mysqli $link" "S" "bool") ("f" "mysqli_enable_reads_from_master(" "mysqli $link" "S" "bool") ("f" "mysqli_disable_rpl_parse(" "mysqli $link" "S" "bool") ("f" "mysql_get_server_info(" "resource $link_identifier" "S" "string") ("f" "mysql_get_proto_info(" "resource $link_identifier" "S" "int") ("f" "mysql_get_host_info(" "resource $link_identifier" "S" "string") ("f" "mysql_get_client_info(" #1# "S" "string") ("f" "mysql_free_result(" "resource $result" "S" "bool") ("f" "mysql_field_type(" "resource $result,int $field_offset" "S" "string") ("f" "mysql_field_table(" "resource $result,int $field_offset" "S" "string") ("f" "mysql_field_seek(" "resource $result,int $field_offset" "S" "int") ("f" "mysql_field_name(" "resource $result,int $field_index" "S" "string") ("f" "mysql_field_len(" "resource $result,int $field_offset" "S" "int") ("f" "mysql_field_flags(" "resource $result,int $field_offset" "S" "string") ("f" "mysql_fetch_row(" "resource $result" "S" "array") ("f" "mysql_fetch_object(" "resource $result" "S" "object") ("f" "mysql_fetch_lengths(" "resource $result" "S" "array") ("f" "mysql_fetch_field(" "resource $result,int $field_offset" "S" "object") ("f" "mysql_fetch_assoc(" "resource $result" "S" "array") ("f" "mysql_fetch_array(" "resource $result,int $result_type" "S" "array") ("f" "mysql_escape_string(" "string $unescaped_string" "S" "string") ("f" "mysql_error(" "resource $link_identifier" "S" "string") ("f" "mysql_errno(" "resource $link_identifier" "S" "int") ("f" "mysql_drop_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "mysql_db_query(" "string $database,string $query,resource $link_identifier" "S" "resource") ("f" "mysql_db_name(" "resource $result,int $row,mixed $field" "S" "string") ("f" "mysql_data_seek(" "resource $result,int $row_number" "S" "bool") ("f" "mysql_create_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "mysql_connect(" "string $server,string $username,string $password,bool $new_link,int $client_flags" "S" "resource") ("f" "mysql_close(" "resource $link_identifier" "S" "bool") ("f" "mysql_client_encoding(" "resource $link_identifier" "S" "string") ("f" "mysql_affected_rows(" "resource $link_identifier" "S" "int") ("f" "m_verifysslcert(" "resource $conn,int $tf" "S" "bool") ("f" "m_verifyconnection(" "resource $conn,int $tf" "S" "bool") ("f" "m_validateidentifier(" "resource $conn,int $tf" "S" "int") ("f" "m_uwait(" "int $microsecs" "S" "int") ("f" "mt_srand(" "int $seed" "S" "void") ("f" "m_transsend(" "resource $conn,int $identifier" "S" "int") ("f" "m_transnew(" "resource $conn" "S" "int") ("f" "m_transkeyval(" "resource $conn,int $identifier,string $key,string $value" "S" "int") ("f" "m_transinqueue(" "resource $conn" "S" "int") ("f" "m_transactionssent(" "resource $conn" "S" "int") ("f" "mt_rand(" #1# "S" "int") ("f" "mt_getrandmax(" #1# "S" "int") ("f" "mssql_select_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "mssql_rows_affected(" "resource $link_identifier" "S" "int") ("f" "mssql_result(" "resource $result,int $row,mixed $field" "S" "string") ("f" "mssql_query(" "string $query,resource $link_identifier,int $batch_size" "S" "mixed") ("f" "mssql_pconnect(" "string $servername,string $username,string $password,bool $new_link" "S" "resource") ("f" "mssql_num_rows(" "resource $result" "S" "int") ("f" "mssql_num_fields(" "resource $result" "S" "int") ("f" "mssql_next_result(" "resource $result_id" "S" "bool") ("f" "mssql_min_message_severity(" "int $severity" "S" "void") ("f" "mssql_min_error_severity(" "int $severity" "S" "void") ("f" "mssql_init(" "string $sp_name,resource $link_identifier" "S" "resource") ("f" "mssql_guid_string(" "string $binary,bool $short_format" "S" "string") ("f" "mssql_get_last_message(" #1# "S" "string") ("f" "mssql_free_statement(" "resource $stmt" "S" "bool") ("f" "mssql_free_result(" "resource $result" "S" "bool") ("f" "mssql_field_type(" "resource $result,int $offset" "S" "string") ("f" "mssql_field_seek(" "resource $result,int $field_offset" "S" "bool") ("f" "mssql_field_name(" "resource $result,int $offset" "S" "string") ("f" "mssql_field_length(" "resource $result,int $offset" "S" "int") ("f" "mssql_fetch_row(" "resource $result" "S" "array") ("f" "mssql_fetch_object(" "resource $result" "S" "object") ("f" "mssql_fetch_field(" "resource $result,int $field_offset" "S" "object") ("f" "mssql_fetch_batch(" "resource $result" "S" "int") ("f" "mssql_fetch_assoc(" "resource $result_id" "S" "array") ("f" "mssql_fetch_array(" "resource $result,int $result_type" "S" "array") ("f" "mssql_execute(" "resource $stmt,bool $skip_results" "S" "mixed") ("f" "mssql_data_seek(" "resource $result_identifier,int $row_number" "S" "bool") ("f" "mssql_connect(" "string $servername,string $username,string $password,bool $new_link" "S" "resource") ("f" "mssql_close(" "resource $link_identifier" "S" "bool") ("f" "mssql_bind(" "resource $stmt,string $param_name,mixed &$var,int $type,bool $is_output,bool $is_null,int $maxlen" "S" "bool") ("f" "m_sslcert_gen_hash(" "string $filename" "S" "string") ("f" "msql_select_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "msql_result(" "resource $result,int $row,mixed $field" "S" "string") ("f" "msql_query(" "string $query,resource $link_identifier" "S" "resource") ("f" "msql_pconnect(" "string $hostname" "S" "resource") ("f" "msql_num_rows(" "resource $query_identifier" "S" "int") ("f" "msql_num_fields(" "resource $result" "S" "int") ("f" "msql_list_tables(" "string $database,resource $link_identifier" "S" "resource") ("f" "msql_list_fields(" "string $database,string $tablename,resource $link_identifier" "S" "resource") ("f" "msql_list_dbs(" "resource $link_identifier" "S" "resource") ("f" "msql_free_result(" "resource $result" "S" "bool") ("f" "msql_field_type(" "resource $result,int $field_offset" "S" "string") ("f" "msql_field_table(" "resource $result,int $field_offset" "S" "int") ("f" "msql_field_seek(" "resource $result,int $field_offset" "S" "bool") ("f" "msql_field_name(" "resource $result,int $field_offset" "S" "string") ("f" "msql_field_len(" "resource $result,int $field_offset" "S" "int") ("f" "msql_field_flags(" "resource $result,int $field_offset" "S" "string") ("f" "msql_fetch_row(" "resource $result" "S" "array") ("f" "msql_fetch_object(" "resource $result" "S" "object") ("f" "msql_fetch_field(" "resource $result,int $field_offset" "S" "object") ("f" "msql_fetch_array(" "resource $result,int $result_type" "S" "array") ("f" "msql_error(" #1# "S" "string") ("f" "msql_drop_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "msql_db_query(" "string $database,string $query,resource $link_identifier" "S" "resource") ("f" "msql_data_seek(" "resource $result,int $row_number" "S" "bool") ("f" "msql_create_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "msql_connect(" "string $hostname" "S" "resource") ("f" "msql_close(" "resource $link_identifier" "S" "bool") ("f" "msql_affected_rows(" "resource $result" "S" "int") ("f" "msg_stat_queue(" "resource $queue" "S" "array") ("f" "msg_set_queue(" "resource $queue,array $data" "S" "bool") ("f" "msg_send(" "resource $queue,int $msgtype,mixed $message,bool $serialize,bool $blocking,int &$errorcode" "S" "bool") ("f" "msg_remove_queue(" "resource $queue" "S" "bool") ("f" "msg_receive(" "resource $queue,int $desiredmsgtype,int &$msgtype,int $maxsize,mixed &$message,bool $unserialize,int $flags,int &$errorcode" "S" "bool") ("f" "msg_queue_exists(" "int $key" "S" "bool") ("f" "msg_get_queue(" "int $key,int $perms" "S" "resource") ("f" "m_settimeout(" "resource $conn,int $seconds" "S" "int") ("f" "m_setssl(" "resource $conn,string $host,int $port" "S" "int") ("f" "m_setssl_files(" "resource $conn,string $sslkeyfile,string $sslcertfile" "S" "int") ("f" "m_setssl_cafile(" "resource $conn,string $cafile" "S" "int") ("f" "m_setip(" "resource $conn,string $host,int $port" "S" "int") ("f" "m_setdropfile(" "resource $conn,string $directory" "S" "int") ("f" "m_setblocking(" "resource $conn,int $tf" "S" "int") ("f" "msession_unlock(" "string $session,int $key" "S" "int") ("f" "msession_uniq(" "int $param,string $classname,string $data" "S" "string") ("f" "msession_timeout(" "string $session,int $param" "S" "int") ("f" "msession_set_data(" "string $session,string $value" "S" "bool") ("f" "msession_set(" "string $session,string $name,string $value" "S" "bool") ("f" "msession_set_array(" "string $session,array $tuples" "S" "void") ("f" "msession_randstr(" "int $param" "S" "string") ("f" "msession_plugin(" "string $session,string $val,string $param" "S" "string") ("f" "msession_lock(" "string $name" "S" "int") ("f" "msession_listvar(" "string $name" "S" "array") ("f" "msession_list(" #1# "S" "array") ("f" "msession_inc(" "string $session,string $name" "S" "string") ("f" "msession_get(" "string $session,string $name,string $value" "S" "string") ("f" "msession_get_data(" "string $session" "S" "string") ("f" "msession_get_array(" "string $session" "S" "array") ("f" "msession_find(" "string $name,string $value" "S" "array") ("f" "msession_disconnect(" #1# "S" "void") ("f" "msession_destroy(" "string $name" "S" "bool") ("f" "msession_create(" "string $session,string $classname,string $data" "S" "bool") ("f" "msession_count(" #1# "S" "int") ("f" "msession_connect(" "string $host,string $port" "S" "bool") ("f" "m_returnstatus(" "resource $conn,int $identifier" "S" "int") ("f" "m_responseparam(" "resource $conn,int $identifier,string $key" "S" "string") ("f" "m_responsekeys(" "resource $conn,int $identifier" "S" "array") ("f" "mqseries_strerror(" "int $reason" "S" "string") ("f" "mqseries_set(" "resource $hconn,resource $hobj,int $selectorcount,array $selectors,int $intattrcount,array $intattrs,int $charattrlength,array $charattrs,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_put(" "resource $hConn,resource $hObj,array &$md,array &$pmo,string $message,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_put1(" "resource $hconn,resource &$objDesc,resource &$msgDesc,resource &$pmo,string $buffer,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_open(" "resource $hconn,array &$objDesc,int $option,resource &$hobj,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_inq(" "resource $hconn,resource $hobj,int $selectorCount,array $selectors,int $intAttrCount,resource &$intAttr,int $charAttrLength,resource &$charAttr,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_get(" "resource $hConn,resource $hObj,array &$md,array &$gmo,int &$bufferLength,string &$msg,int &$data_length,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_disc(" "resource $hconn,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_connx(" "string $qManagerName,array &$connOptions,resource &$hconn,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_conn(" "string $qManagerName,resource &$hconn,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_cmit(" "resource $hconn,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_close(" "resource $hconn,resource $hobj,int $options,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_begin(" "resource $hconn,array $beginOptions,resource &$compCode,resource &$reason" "S" "void") ("f" "mqseries_back(" "resource $hconn,resource &$compCode,resource &$reason" "S" "void") ("f" "m_parsecommadelimited(" "resource $conn,int $identifier" "S" "int") ("f" "move_uploaded_file(" "string $filename,string $destination" "S" "bool") ("f" "money_format(" "string $format,float $number" "S" "string") ("f" "m_numrows(" "resource $conn,int $identifier" "S" "int") ("f" "m_numcolumns(" "resource $conn,int $identifier" "S" "int") ("f" "m_monitor(" "resource $conn" "S" "int") ("f" "m_maxconntimeout(" "resource $conn,int $secs" "S" "bool") ("f" "mktime(" "int $hour,int $minute,int $second,int $month,int $day,int $year,int $is_dst" "S" "int") ("f" "mkdir(" "string $pathname,int $mode,bool $recursive,resource $context" "S" "bool") ("f" "m_iscommadelimited(" "resource $conn,int $identifier" "S" "int") ("f" "min(" "array $values" "S" "mixed") ("f" "m_initengine(" "string $location" "S" "int") ("f" "m_initconn(" #1# "S" "resource") ("f" "ming_useswfversion(" "int $version" "S" "void") ("f" "ming_useconstants(" "int $use" "S" "void") ("f" "ming_setswfcompression(" "int $level" "S" "void") ("f" "ming_setscale(" "float $scale" "S" "void") ("f" "ming_setcubicthreshold(" "int $threshold" "S" "void") ("f" "ming_keypress(" "string $char" "S" "int") ("f" "mime_content_type(" "string $filename" "S" "string") ("f" "microtime(" "bool $get_as_float" "S" "mixed") ("f" "mhash(" "int $hash,string $data,string $key" "S" "string") ("f" "mhash_keygen_s2k(" "int $hash,string $password,string $salt,int $bytes" "S" "string") ("f" "mhash_get_hash_name(" "int $hash" "S" "string") ("f" "mhash_get_block_size(" "int $hash" "S" "int") ("f" "mhash_count(" #1# "S" "int") ("f" "m_getheader(" "resource $conn,int $identifier,int $column_num" "S" "string") ("f" "m_getcommadelimited(" "resource $conn,int $identifier" "S" "string") ("f" "m_getcell(" "resource $conn,int $identifier,string $column,int $row" "S" "string") ("f" "m_getcellbynum(" "resource $conn,int $identifier,int $column,int $row" "S" "string") ("f" "method_exists(" "mixed $object,string $method_name" "S" "bool") ("f" "metaphone(" "string $str,int $phonemes" "S" "string") ("f" "memory_get_usage(" "bool $real_usage" "S" "int") ("f" "memory_get_peak_usage(" "bool $real_usage" "S" "int") ("f" "memcache_debug(" "bool $on_off" "S" "bool") ("f" "m_destroyengine(" #1# "S" "void") ("f" "m_destroyconn(" "resource $conn" "S" "bool") ("f" "m_deletetrans(" "resource $conn,int $identifier" "S" "bool") ("f" "mdecrypt_generic(" "resource $td,string $data" "S" "string") ("f" "md5(" "string $str,bool $raw_output" "S" "string") ("f" "md5_file(" "string $filename,bool $raw_output" "S" "string") ("f" "mcrypt_ofb(" "int $cipher,string $key,string $data,int $mode,string $iv" "S" "string") ("f" "mcrypt_module_self_test(" "string $algorithm,string $lib_dir" "S" "bool") ("f" "mcrypt_module_open(" "string $algorithm,string $algorithm_directory,string $mode,string $mode_directory" "S" "resource") ("f" "mcrypt_module_is_block_mode(" "string $mode,string $lib_dir" "S" "bool") ("f" "mcrypt_module_is_block_algorithm_mode(" "string $mode,string $lib_dir" "S" "bool") ("f" "mcrypt_module_is_block_algorithm(" "string $algorithm,string $lib_dir" "S" "bool") ("f" "mcrypt_module_get_supported_key_sizes(" "string $algorithm,string $lib_dir" "S" "array") ("f" "mcrypt_module_get_algo_key_size(" "string $algorithm,string $lib_dir" "S" "int") ("f" "mcrypt_module_get_algo_block_size(" "string $algorithm,string $lib_dir" "S" "int") ("f" "mcrypt_module_close(" "resource $td" "S" "bool") ("f" "mcrypt_list_modes(" "string $lib_dir" "S" "array") ("f" "mcrypt_list_algorithms(" "string $lib_dir" "S" "array") ("f" "mcrypt_get_key_size(" "int $cipher" "S" "int") ("f" "mcrypt_get_iv_size(" "string $cipher,string $mode" "S" "int") ("f" "mcrypt_get_cipher_name(" "int $cipher" "S" "string") ("f" "mcrypt_get_block_size(" "int $cipher" "S" "int") ("f" "mcrypt_generic(" "resource $td,string $data" "S" "string") ("f" "mcrypt_generic_init(" "resource $td,string $key,string $iv" "S" "int") ("f" "mcrypt_generic_end(" "resource $td" "S" "bool") ("f" "mcrypt_generic_deinit(" "resource $td" "S" "bool") ("f" "mcrypt_enc_self_test(" "resource $td" "S" "int") ("f" "mcrypt_encrypt(" "string $cipher,string $key,string $data,string $mode,string $iv" "S" "string") ("f" "mcrypt_enc_is_block_mode(" "resource $td" "S" "bool") ("f" "mcrypt_enc_is_block_algorithm_mode(" "resource $td" "S" "bool") ("f" "mcrypt_enc_is_block_algorithm(" "resource $td" "S" "bool") ("f" "mcrypt_enc_get_supported_key_sizes(" "resource $td" "S" "array") ("f" "mcrypt_enc_get_modes_name(" "resource $td" "S" "string") ("f" "mcrypt_enc_get_key_size(" "resource $td" "S" "int") ("f" "mcrypt_enc_get_iv_size(" "resource $td" "S" "int") ("f" "mcrypt_enc_get_block_size(" "resource $td" "S" "int") ("f" "mcrypt_enc_get_algorithms_name(" "resource $td" "S" "string") ("f" "mcrypt_ecb(" "int $cipher,string $key,string $data,int $mode" "S" "string") ("f" "mcrypt_decrypt(" "string $cipher,string $key,string $data,string $mode,string $iv" "S" "string") ("f" "mcrypt_create_iv(" "int $size,int $source" "S" "string") ("f" "mcrypt_cfb(" "int $cipher,string $key,string $data,int $mode,string $iv" "S" "string") ("f" "mcrypt_cbc(" "int $cipher,string $key,string $data,int $mode,string $iv" "S" "string") ("f" "m_connectionerror(" "resource $conn" "S" "string") ("f" "m_connect(" "resource $conn" "S" "int") ("f" "m_completeauthorizations(" "resource $conn,int &$array" "S" "int") ("f" "m_checkstatus(" "resource $conn,int $identifier" "S" "int") ("f" "mb_substr(" "string $str,int $start,int $length,string $encoding" "S" "string") ("f" "mb_substr_count(" "string $haystack,string $needle,string $encoding" "S" "int") ("f" "mb_substitute_character(" "mixed $substrchar" "S" "mixed") ("f" "mb_strwidth(" "string $str,string $encoding" "S" "int") ("f" "mb_strtoupper(" "string $str,string $encoding" "S" "string") ("f" "mb_strtolower(" "string $str,string $encoding" "S" "string") ("f" "mb_strstr(" "string $haystack,string $needle,bool $before_needle,string $encoding" "S" "string") ("f" "mb_strrpos(" "string $haystack,string $needle,int $offset,string $encoding" "S" "int") ("f" "mb_strripos(" "string $haystack,string $needle,int $offset,string $encoding" "S" "int") ("f" "mb_strrichr(" "string $haystack,string $needle,bool $part,string $encoding" "S" "string") ("f" "mb_strrchr(" "string $haystack,string $needle,bool $part,string $encoding" "S" "string") ("f" "mb_strpos(" "string $haystack,string $needle,int $offset,string $encoding" "S" "int") ("f" "mb_strlen(" "string $str,string $encoding" "S" "mixed") ("f" "mb_stristr(" "string $haystack,string $needle,bool $before_needle,string $encoding" "S" "string") ("f" "mb_stripos(" "string $haystack,string $needle,int $offset,string $encoding" "S" "int") ("f" "mb_strimwidth(" "string $str,int $start,int $width,string $trimmarker,string $encoding" "S" "string") ("f" "mb_strcut(" "string $str,int $start,int $length,string $encoding" "S" "string") ("f" "mb_split(" "string $pattern,string $string,int $limit" "S" "array") ("f" "mb_send_mail(" "string $to,string $subject,string $message,string $additional_headers,string $additional_parameter" "S" "bool") ("f" "mb_regex_set_options(" "string $options" "S" "string") ("f" "mb_regex_encoding(" "string $encoding" "S" "mixed") ("f" "mb_preferred_mime_name(" "string $encoding" "S" "string") ("f" "mb_parse_str(" "string $encoded_string,array &$result" "S" "bool") ("f" "mb_output_handler(" "string $contents,int $status" "S" "string") ("f" "mb_list_encodings(" #1# "S" "array") ("f" "mb_language(" "string $language" "S" "mixed") ("f" "mb_internal_encoding(" "string $encoding" "S" "mixed") ("f" "mb_http_output(" "string $encoding" "S" "mixed") ("f" "mb_http_input(" "string $type" "S" "mixed") ("f" "mb_get_info(" "string $type" "S" "mixed") ("f" "mb_ereg_search_setpos(" "int $position" "S" "bool") ("f" "mb_ereg_search_regs(" "string $pattern,string $option" "S" "array") ("f" "mb_ereg_search_pos(" "string $pattern,string $option" "S" "array") ("f" "mb_ereg_search_init(" "string $string,string $pattern,string $option" "S" "bool") ("f" "mb_ereg_search_getregs(" #1# "S" "array") ("f" "mb_ereg_search_getpos(" #1# "S" "int") ("f" "mb_ereg_search(" "string $pattern,string $option" "S" "bool") ("f" "mb_ereg_replace(" "string $pattern,string $replacement,string $string,string $option" "S" "string") ("f" "mb_ereg_replace_callback(" "string $pattern,callable $callback,string $string,string $option" "S" "string") ("f" "mb_ereg_match(" "string $pattern,string $string,string $option" "S" "bool") ("f" "mb_eregi_replace(" "string $pattern,string $replace,string $string,string $option" "S" "string") ("f" "mb_ereg(" "string $pattern,string $string,array $regs" "S" "int") ("f" "mb_eregi(" "string $pattern,string $string,array $regs" "S" "int") ("f" "mb_encoding_aliases(" "string $encoding" "S" "array") ("f" "mb_encode_numericentity(" "string $str,array $convmap,string $encoding,bool $is_hex" "S" "string") ("f" "mb_encode_mimeheader(" "string $str,string $charset,string $transfer_encoding,string $linefeed,int $indent" "S" "string") ("f" "mb_detect_order(" "mixed $encoding_list" "S" "mixed") ("f" "mb_detect_encoding(" "string $str,mixed $encoding_list,bool $strict" "S" "string") ("f" "mb_decode_numericentity(" "string $str,array $convmap,string $encoding" "S" "string") ("f" "mb_decode_mimeheader(" "string $str" "S" "string") ("f" "mb_convert_variables(" "string $to_encoding,mixed $from_encoding,mixed &$vars,mixed &$__args__" "S" "string") ("f" "mb_convert_kana(" "string $str,string $option,string $encoding" "S" "string") ("f" "mb_convert_encoding(" "string $str,string $to_encoding,mixed $from_encoding" "S" "string") ("f" "mb_convert_case(" "string $str,int $mode,string $encoding" "S" "string") ("f" "mb_check_encoding(" "string $var,string $encoding" "S" "bool") ("f" "max(" "array $values" "S" "mixed") ("f" "maxdb_warning_count(" "resource $link" "S" "int") ("f" "maxdb_use_result(" "resource $link" "S" "resource") ("f" "maxdb_thread_safe(" #1# "S" "bool") ("f" "maxdb_thread_id(" "resource $link" "S" "int") ("f" "maxdb_store_result(" "resource $link" "S" "resource") ("f" "maxdb_stmt_store_result(" "resource $stmt" "S" "bool") ("f" "maxdb_stmt_sqlstate(" "resource $stmt" "S" "string") ("f" "maxdb_stmt_send_long_data(" "resource $stmt,int $param_nr,string $data" "S" "bool") ("f" "maxdb_stmt_result_metadata(" "resource $stmt" "S" "resource") ("f" "maxdb_stmt_reset(" "resource $stmt" "S" "bool") ("f" "maxdb_stmt_prepare(" "resource $stmt,string $query" "S" "bool") ("f" "maxdb_stmt_param_count(" "resource $stmt" "S" "int") ("f" "maxdb_stmt_num_rows(" "resource $stmt" "S" "int") ("f" "maxdb_stmt_init(" "resource $link" "S" "resource") ("f" "maxdb_stmt_free_result(" "resource $stmt" "S" "void") ("f" "maxdb_stmt_fetch(" "resource $stmt" "S" "bool") ("f" "maxdb_stmt_execute(" "resource $stmt" "S" "bool") ("f" "maxdb_stmt_error(" "resource $stmt" "S" "string") ("f" "maxdb_stmt_errno(" "resource $stmt" "S" "int") ("f" "maxdb_stmt_data_seek(" "resource $statement,int $offset" "S" "bool") ("f" "maxdb_stmt_close_long_data(" "resource $stmt,int $param_nr" "S" "bool") ("f" "maxdb_stmt_close(" "resource $stmt" "S" "bool") ("f" "maxdb_stmt_bind_result(" "resource $stmt,mixed &$var1,mixed &$__args__" "S" "bool") ("f" "maxdb_stmt_bind_param(" "resource $stmt,string $types,mixed &$var1,mixed &$__args__" "S" "bool") ("f" "maxdb_stmt_affected_rows(" "resource $stmt" "S" "int") ("f" "maxdb_stat(" "resource $link" "S" "string") ("f" "maxdb_ssl_set(" "resource $link,string $key,string $cert,string $ca,string $capath,string $cipher" "S" "bool") ("f" "maxdb_sqlstate(" "resource $link" "S" "string") ("f" "maxdb_server_init(" "array $server,array $groups" "S" "bool") ("f" "maxdb_server_end(" #1# "S" "void") ("f" "maxdb_send_query(" "resource $link,string $query" "S" "bool") ("f" "maxdb_select_db(" "resource $link,string $dbname" "S" "bool") ("f" "maxdb_rpl_query_type(" "resource $link" "S" "int") ("f" "maxdb_rpl_probe(" "resource $link" "S" "bool") ("f" "maxdb_rpl_parse_enabled(" "resource $link" "S" "int") ("f" "maxdb_rollback(" "resource $link" "S" "bool") ("f" "maxdb_report(" "int $flags" "S" "bool") ("f" "maxdb_real_query(" "resource $link,string $query" "S" "bool") ("f" "maxdb_real_escape_string(" "resource $link,string $escapestr" "S" "string") ("f" "maxdb_real_connect(" "resource $link,string $hostname,string $username,string $passwd,string $dbname,int $port,string $socket" "S" "bool") ("f" "maxdb_query(" "resource $link,string $query,int $resultmode" "S" "mixed") ("f" "maxdb_prepare(" "resource $link,string $query" "S" "resource") ("f" "maxdb_ping(" "resource $link" "S" "bool") ("f" "maxdb_options(" "resource $link,int $option,mixed $value" "S" "bool") ("f" "maxdb_num_rows(" "resource $result" "S" "int") ("f" "maxdb_num_fields(" "resource $result" "S" "int") ("f" "maxdb_next_result(" "resource $link" "S" "bool") ("f" "maxdb_multi_query(" "resource $link,string $query" "S" "bool") ("f" "maxdb_more_results(" "resource $link" "S" "bool") ("f" "maxdb_master_query(" "resource $link,string $query" "S" "bool") ("f" "maxdb_kill(" "resource $link,int $processid" "S" "bool") ("f" "maxdb_insert_id(" "resource $link" "S" "mixed") ("f" "maxdb_init(" #1# "S" "resource") ("f" "maxdb_info(" "resource $link" "S" "string") ("f" "maxdb_get_server_version(" "resource $link" "S" "int") ("f" "maxdb_get_server_info(" "resource $link" "S" "string") ("f" "maxdb_get_proto_info(" "resource $link" "S" "int") ("f" "maxdb_get_host_info(" "resource $link" "S" "string") ("f" "maxdb_get_client_version(" #1# "S" "int") ("f" "maxdb_get_client_info(" #1# "S" "string") ("f" "maxdb_free_result(" "resource $result" "S" "void") ("f" "maxdb_field_tell(" "resource $result" "S" "int") ("f" "maxdb_field_seek(" "resource $result,int $fieldnr" "S" "bool") ("f" "maxdb_field_count(" "resource $link" "S" "int") ("f" "maxdb_fetch_row(" "resource $result" "S" "mixed") ("f" "maxdb_fetch_object(" "object $result" "S" "object") ("f" "maxdb_fetch_lengths(" "resource $result" "S" "array") ("f" "maxdb_fetch_fields(" "resource $result" "S" "mixed") ("f" "maxdb_fetch_field(" "resource $result" "S" "mixed") ("f" "maxdb_fetch_field_direct(" "resource $result,int $fieldnr" "S" "mixed") ("f" "maxdb_fetch_assoc(" "resource $result" "S" "array") ("f" "maxdb_fetch_array(" "resource $result,int $resulttype" "S" "mixed") ("f" "maxdb_error(" "resource $link" "S" "string") ("f" "maxdb_errno(" "resource $link" "S" "int") ("f" "maxdb_enable_rpl_parse(" "resource $link" "S" "bool") ("f" "maxdb_enable_reads_from_master(" "resource $link" "S" "bool") ("f" "maxdb_embedded_connect(" "string $dbname" "S" "resource") ("f" "maxdb_dump_debug_info(" "resource $link" "S" "bool") ("f" "maxdb_disable_rpl_parse(" "resource $link" "S" "bool") ("f" "maxdb_disable_reads_from_master(" "resource $link" "S" "bool") ("f" "maxdb_debug(" "string $debug" "S" "void") ("f" "maxdb_data_seek(" "resource $result,int $offset" "S" "bool") ("f" "maxdb_connect(" "string $host,string $username,string $passwd,string $dbname,int $port,string $socket" "S" "resource") ("f" "maxdb_connect_error(" #1# "S" "string") ("f" "maxdb_connect_errno(" #1# "S" "int") ("f" "maxdb_commit(" "resource $link" "S" "bool") ("f" "maxdb_close(" "resource $link" "S" "bool") ("f" "maxdb_character_set_name(" "resource $link" "S" "string") ("f" "maxdb_change_user(" "resource $link,string $user,string $password,string $database" "S" "bool") ("f" "maxdb_autocommit(" "resource $link,bool $mode" "S" "bool") ("f" "maxdb_affected_rows(" "resource $link" "S" "int") ("f" "mailparse_uudecode_all(" "resource $fp" "S" "array") ("f" "mailparse_stream_encode(" "resource $sourcefp,resource $destfp,string $encoding" "S" "bool") ("f" "mailparse_rfc822_parse_addresses(" "string $addresses" "S" "array") ("f" "mailparse_msg_parse_file(" "string $filename" "S" "resource") ("f" "mailparse_msg_parse(" "resource $mimemail,string $data" "S" "bool") ("f" "mailparse_msg_get_structure(" "resource $mimemail" "S" "array") ("f" "mailparse_msg_get_part(" "resource $mimemail,string $mimesection" "S" "resource") ("f" "mailparse_msg_get_part_data(" "resource $mimemail" "S" "array") ("f" "mailparse_msg_free(" "resource $mimemail" "S" "bool") ("f" "mailparse_msg_extract_whole_part_file(" "resource $mimemail,string $filename,callable $callbackfunc" "S" "string") ("f" "mailparse_msg_extract_part(" "resource $mimemail,string $msgbody,callable $callbackfunc" "S" "void") ("f" "mailparse_msg_extract_part_file(" "resource $mimemail,mixed $filename,callable $callbackfunc" "S" "string") ("f" "mailparse_msg_create(" #1# "S" "resource") ("f" "mailparse_determine_best_xfer_encoding(" "resource $fp" "S" "string") ("f" "mail(" "string $to,string $subject,string $message,string $additional_headers,string $additional_parameters" "S" "bool") ("f" "lzf_optimized_for(" #1# "S" "int") ("f" "lzf_decompress(" "string $data" "S" "string") ("f" "lzf_compress(" "string $data" "S" "string") ("f" "ltrim(" "string $str,string $charlist" "S" "string") ("f" "lstat(" "string $filename" "S" "array") ("f" "long2ip(" "string $proper_address" "S" "string") ("f" "log(" "float $arg,float $base" "S" "float") ("f" "log1p(" "float $number" "S" "float") ("f" "log10(" "float $arg" "S" "float") ("f" "localtime(" "int $timestamp,bool $is_associative" "S" "array") ("f" "localeconv(" #1# "S" "array") ("f" "linkinfo(" "string $path" "S" "int") ("f" "link(" "string $target,string $link" "S" "bool") ("f" "libxml_use_internal_errors(" "bool $use_errors" "S" "bool") ("f" "libxml_set_streams_context(" "resource $streams_context" "S" "void") ("f" "libxml_set_external_entity_loader(" "callable $resolver_function" "S" "void") ("f" "libxml_get_last_error(" #1# "S" "LibXMLError") ("f" "libxml_get_errors(" #1# "S" "array") ("f" "libxml_disable_entity_loader(" "bool $disable" "S" "bool") ("f" "libxml_clear_errors(" #1# "S" "void") ("f" "levenshtein(" "string $str1,string $str2" "S" "int") ("f" "ldap_unbind(" "resource $link_identifier" "S" "bool") ("f" "ldap_t61_to_8859(" "string $value" "S" "string") ("f" "ldap_start_tls(" "resource $link" "S" "bool") ("f" "ldap_sort(" "resource $link,resource $result,string $sortfilter" "S" "bool") ("f" "ldap_set_rebind_proc(" "resource $link,callable $callback" "S" "bool") ("f" "ldap_set_option(" "resource $link_identifier,int $option,mixed $newval" "S" "bool") ("f" "ldap_search(" "resource $link_identifier,string $base_dn,string $filter,array $attributes,int $attrsonly,int $sizelimit,int $timelimit,int $deref" "S" "resource") ("f" "ldap_sasl_bind(" "resource $link,string $binddn,string $password,string $sasl_mech,string $sasl_realm,string $sasl_authc_id,string $sasl_authz_id,string $props" "S" "bool") ("f" "ldap_rename(" "resource $link_identifier,string $dn,string $newrdn,string $newparent,bool $deleteoldrdn" "S" "bool") ("f" "ldap_read(" "resource $link_identifier,string $base_dn,string $filter,array $attributes,int $attrsonly,int $sizelimit,int $timelimit,int $deref" "S" "resource") ("f" "ldap_parse_result(" "resource $link,resource $result,int &$errcode,string &$matcheddn,string &$errmsg,array &$referrals" "S" "bool") ("f" "ldap_parse_reference(" "resource $link,resource $entry,array &$referrals" "S" "bool") ("f" "ldap_next_reference(" "resource $link,resource $entry" "S" "resource") ("f" "ldap_next_entry(" "resource $link_identifier,resource $result_entry_identifier" "S" "resource") ("f" "ldap_next_attribute(" "resource $link_identifier,resource $result_entry_identifier" "S" "string") ("f" "ldap_mod_replace(" "resource $link_identifier,string $dn,array $entry" "S" "bool") ("f" "ldap_modify(" "resource $link_identifier,string $dn,array $entry" "S" "bool") ("f" "ldap_modify_batch(" "resource $link_identifier,string $dn,array $entry" "S" "bool") ("f" "ldap_mod_del(" "resource $link_identifier,string $dn,array $entry" "S" "bool") ("f" "ldap_mod_add(" "resource $link_identifier,string $dn,array $entry" "S" "bool") ("f" "ldap_list(" "resource $link_identifier,string $base_dn,string $filter,array $attributes,int $attrsonly,int $sizelimit,int $timelimit,int $deref" "S" "resource") ("f" "ldap_get_values_len(" "resource $link_identifier,resource $result_entry_identifier,string $attribute" "S" "array") ("f" "ldap_get_values(" "resource $link_identifier,resource $result_entry_identifier,string $attribute" "S" "array") ("f" "ldap_get_option(" "resource $link_identifier,int $option,mixed &$retval" "S" "bool") ("f" "ldap_get_entries(" "resource $link_identifier,resource $result_identifier" "S" "array") ("f" "ldap_get_dn(" "resource $link_identifier,resource $result_entry_identifier" "S" "string") ("f" "ldap_get_attributes(" "resource $link_identifier,resource $result_entry_identifier" "S" "array") ("f" "ldap_free_result(" "resource $result_identifier" "S" "bool") ("f" "ldap_first_reference(" "resource $link,resource $result" "S" "resource") ("f" "ldap_first_entry(" "resource $link_identifier,resource $result_identifier" "S" "resource") ("f" "ldap_first_attribute(" "resource $link_identifier,resource $result_entry_identifier" "S" "string") ("f" "ldap_explode_dn(" "string $dn,int $with_attrib" "S" "array") ("f" "ldap_escape(" "string $value,string $ignore,int $flags" "S" "string") ("f" "ldap_error(" "resource $link_identifier" "S" "string") ("f" "ldap_errno(" "resource $link_identifier" "S" "int") ("f" "ldap_err2str(" "int $errno" "S" "string") ("f" "ldap_dn2ufn(" "string $dn" "S" "string") ("f" "ldap_delete(" "resource $link_identifier,string $dn" "S" "bool") ("f" "ldap_count_entries(" "resource $link_identifier,resource $result_identifier" "S" "int") ("f" "ldap_control_paged_result_response(" "resource $link,resource $result,string &$cookie,int &$estimated" "S" "bool") ("f" "ldap_control_paged_result(" "resource $link,int $pagesize,bool $iscritical,string $cookie" "S" "bool") ("f" "ldap_connect(" "string $hostname,int $port" "S" "resource") ("f" "ldap_compare(" "resource $link_identifier,string $dn,string $attribute,string $value" "S" "mixed") ("f" "ldap_bind(" "resource $link_identifier,string $bind_rdn,string $bind_password" "S" "bool") ("f" "ldap_add(" "resource $link_identifier,string $dn,array $entry" "S" "bool") ("f" "ldap_8859_to_t61(" "string $value" "S" "string") ("f" "lchown(" "string $filename,mixed $user" "S" "bool") ("f" "lchgrp(" "string $filename,mixed $group" "S" "bool") ("f" "lcg_value(" #1# "S" "float") ("f" "lcfirst(" "string $str" "S" "string") ("f" "ksort(" "array &$array,int $sort_flags" "S" "bool") ("f" "krsort(" "array &$array,int $sort_flags" "S" "bool") ("f" "key(" "array &$array" "S" "mixed") ("f" "kadm5_modify_principal(" "resource $handle,string $principal,array $options" "S" "bool") ("f" "kadm5_init_with_password(" "string $admin_server,string $realm,string $principal,string $password" "S" "resource") ("f" "kadm5_get_principals(" "resource $handle" "S" "array") ("f" "kadm5_get_principal(" "resource $handle,string $principal" "S" "array") ("f" "kadm5_get_policies(" "resource $handle" "S" "array") ("f" "kadm5_flush(" "resource $handle" "S" "bool") ("f" "kadm5_destroy(" "resource $handle" "S" "bool") ("f" "kadm5_delete_principal(" "resource $handle,string $principal" "S" "bool") ("f" "kadm5_create_principal(" "resource $handle,string $principal,string $password,array $options" "S" "bool") ("f" "kadm5_chpass_principal(" "resource $handle,string $principal,string $password" "S" "bool") ("f" "juliantojd(" "int $month,int $day,int $year" "S" "int") ("f" "judy_version(" #1# "S" "string") ("f" "judy_type(" "Judy $array" "S" "int") ("f" "json_last_error_msg(" #1# "S" "string") ("f" "json_last_error(" #1# "S" "int") ("f" "json_encode(" "mixed $value,int $options" "S" "string") ("f" "json_decode(" "string $json,bool $assoc,int $depth,int $options" "S" "mixed") ("f" "jpeg2wbmp(" "string $jpegname,string $wbmpname,int $dest_height,int $dest_width,int $threshold" "S" "bool") ("f" "join(" "string $glue,array $pieces" "S" "string") ("f" "jewishtojd(" "int $month,int $day,int $year" "S" "int") ("f" "jdtounix(" "int $jday" "S" "int") ("f" "jdtojulian(" "int $julianday" "S" "string") ("f" "jdtojewish(" "int $juliandaycount,bool $hebrew,int $fl" "S" "string") ("f" "jdtogregorian(" "int $julianday" "S" "string") ("f" "jdtofrench(" "int $juliandaycount" "S" "string") ("f" "jdmonthname(" "int $julianday,int $mode" "S" "string") ("f" "jddayofweek(" "int $julianday,int $mode" "S" "mixed") ("f" "iterator_to_array(" "Traversable $iterator,bool $use_keys" "S" "array") ("f" "iterator_count(" "Traversable $iterator" "S" "int") ("f" "iterator_apply(" "Traversable $iterator,callable $function,array $args" "S" "int") ("f" "is_writable(" "string $filename" "S" "bool") ("f" "is_uploaded_file(" "string $filename" "S" "bool") ("f" "is_tainted(" "string $string" "S" "bool") ("f" "is_subclass_of(" "object $object,string $class_name" "S" "bool") ("f" "is_string(" "mixed $var" "S" "bool") ("f" "is_soap_fault(" "mixed $object" "S" "bool") ("f" "is_scalar(" "mixed $var" "S" "bool") ("f" "is_resource(" "mixed $var" "S" "bool") ("f" "is_readable(" "string $filename" "S" "bool") ("f" "is_object(" "mixed $var" "S" "bool") ("f" "is_numeric(" "mixed $var" "S" "bool") ("f" "is_null(" "mixed $var" "S" "bool") ("f" "is_nan(" "float $val" "S" "bool") ("f" "is_link(" "string $filename" "S" "bool") ("f" "is_int(" "mixed $var" "S" "bool") ("f" "is_infinite(" "float $val" "S" "bool") ("f" "is_float(" "mixed $var" "S" "bool") ("f" "is_finite(" "float $val" "S" "bool") ("f" "is_file(" "string $filename" "S" "bool") ("f" "is_executable(" "string $filename" "S" "bool") ("f" "is_dir(" "string $filename" "S" "bool") ("f" "is_callable(" "callable $name,bool $syntax_only,string &$callable_name" "S" "bool") ("f" "is_bool(" "mixed $var" "S" "bool") ("f" "is_array(" "mixed $var" "S" "bool") ("f" "is_a(" "object $object,string $class_name,bool $allow_string" "S" "bool") ("f" "iptcparse(" "string $iptcblock" "S" "array") ("f" "iptcembed(" "string $iptcdata,string $jpeg_file_name,int $spool" "S" "mixed") ("f" "ip2long(" "string $ip_address" "S" "int") ("f" "intval(" "mixed $var,int $base" "S" "int") ("f" "intl_is_failure(" "int $error_code" "S" "bool") ("f" "intl_get_error_message(" #1# "S" "string") ("f" "intl_get_error_code(" #1# "S" "int") ("f" "intl_error_name(" "int $error_code" "S" "string") ("f" "interface_exists(" "string $interface_name,bool $autoload" "S" "bool") ("f" "inotify_rm_watch(" "resource $inotify_instance,int $watch_descriptor" "S" "bool") ("f" "inotify_read(" "resource $inotify_instance" "S" "array") ("f" "inotify_queue_len(" "resource $inotify_instance" "S" "int") ("f" "inotify_init(" #1# "S" "resource") ("f" "inotify_add_watch(" "resource $inotify_instance,string $pathname,int $mask" "S" "int") ("f" "ini_set(" "string $varname,string $newvalue" "S" "string") ("f" "ini_restore(" "string $varname" "S" "void") ("f" "ini_get(" "string $varname" "S" "string") ("f" "ini_get_all(" "string $extension,bool $details" "S" "array") ("f" "ingres_unbuffered_query(" "resource $link,string $query,array $params,string $types" "S" "mixed") ("f" "ingres_set_environment(" "resource $link,array $options" "S" "bool") ("f" "ingres_rollback(" "resource $link" "S" "bool") ("f" "ingres_result_seek(" "resource $result,int $position" "S" "bool") ("f" "ingres_query(" "resource $link,string $query,array $params,string $types" "S" "mixed") ("f" "ingres_prepare(" "resource $link,string $query" "S" "mixed") ("f" "ingres_pconnect(" "string $database,string $username,string $password,array $options" "S" "resource") ("f" "ingres_num_rows(" "resource $result" "S" "int") ("f" "ingres_num_fields(" "resource $result" "S" "int") ("f" "ingres_next_error(" "resource $link" "S" "bool") ("f" "ingres_free_result(" "resource $result" "S" "bool") ("f" "ingres_field_type(" "resource $result,int $index" "S" "string") ("f" "ingres_field_scale(" "resource $result,int $index" "S" "int") ("f" "ingres_field_precision(" "resource $result,int $index" "S" "int") ("f" "ingres_field_nullable(" "resource $result,int $index" "S" "bool") ("f" "ingres_field_name(" "resource $result,int $index" "S" "string") ("f" "ingres_field_length(" "resource $result,int $index" "S" "int") ("f" "ingres_fetch_row(" "resource $result" "S" "array") ("f" "ingres_fetch_proc_return(" "resource $result" "S" "int") ("f" "ingres_fetch_object(" "resource $result,int $result_type" "S" "object") ("f" "ingres_fetch_assoc(" "resource $result" "S" "array") ("f" "ingres_fetch_array(" "resource $result,int $result_type" "S" "array") ("f" "ingres_execute(" "resource $result,array $params,string $types" "S" "bool") ("f" "ingres_escape_string(" "resource $link,string $source_string" "S" "string") ("f" "ingres_errsqlstate(" "resource $link" "S" "string") ("f" "ingres_error(" "resource $link" "S" "string") ("f" "ingres_errno(" "resource $link" "S" "int") ("f" "ingres_cursor(" "resource $result" "S" "string") ("f" "ingres_connect(" "string $database,string $username,string $password,array $options" "S" "resource") ("f" "ingres_commit(" "resource $link" "S" "bool") ("f" "ingres_close(" "resource $link" "S" "bool") ("f" "ingres_charset(" "resource $link" "S" "string") ("f" "ingres_autocommit_state(" "resource $link" "S" "bool") ("f" "ingres_autocommit(" "resource $link" "S" "bool") ("f" "inet_pton(" "string $address" "S" "string") ("f" "inet_ntop(" "string $in_addr" "S" "string") ("f" "inclued_get_data(" #1# "S" "array") ("f" "in_array(" "mixed $needle,array $haystack,bool $strict" "S" "bool") ("f" "import_request_variables(" "string $types,string $prefix" "S" "bool") ("f" "implode(" "string $glue,array $pieces" "S" "string") ("f" "imap_utf8(" "string $mime_encoded_text" "S" "string") ("f" "imap_utf7_encode(" "string $data" "S" "string") ("f" "imap_utf7_decode(" "string $text" "S" "string") ("f" "imap_unsubscribe(" "resource $imap_stream,string $mailbox" "S" "bool") ("f" "imap_undelete(" "resource $imap_stream,int $msg_number,int $flags" "S" "bool") ("f" "imap_uid(" "resource $imap_stream,int $msg_number" "S" "int") ("f" "imap_timeout(" "int $timeout_type,int $timeout" "S" "mixed") ("f" "imap_thread(" "resource $imap_stream,int $options" "S" "array") ("f" "imap_subscribe(" "resource $imap_stream,string $mailbox" "S" "bool") ("f" "imap_status(" "resource $imap_stream,string $mailbox,int $options" "S" "object") ("f" "imap_sort(" "resource $imap_stream,int $criteria,int $reverse,int $options,string $search_criteria,string $charset" "S" "array") ("f" "imap_set_quota(" "resource $imap_stream,string $quota_root,int $quota_limit" "S" "bool") ("f" "imap_setflag_full(" "resource $imap_stream,string $sequence,string $flag,int $options" "S" "bool") ("f" "imap_setacl(" "resource $imap_stream,string $mailbox,string $id,string $rights" "S" "bool") ("f" "imap_search(" "resource $imap_stream,string $criteria,int $options,string $charset" "S" "array") ("f" "imap_savebody(" "resource $imap_stream,mixed $file,int $msg_number,string $part_number,int $options" "S" "bool") ("f" "imap_rfc822_write_address(" "string $mailbox,string $host,string $personal" "S" "string") ("f" "imap_rfc822_parse_headers(" "string $headers,string $defaulthost" "S" "object") ("f" "imap_rfc822_parse_adrlist(" "string $address,string $default_host" "S" "array") ("f" "imap_reopen(" "resource $imap_stream,string $mailbox,int $options,int $n_retries" "S" "bool") ("f" "imap_renamemailbox(" "resource $imap_stream,string $old_mbox,string $new_mbox" "S" "bool") ("f" "imap_qprint(" "string $string" "S" "string") ("f" "imap_ping(" "resource $imap_stream" "S" "bool") ("f" "imap_open(" "string $mailbox,string $username,string $password,int $options,int $n_retries,array $params" "S" "resource") ("f" "imap_num_recent(" "resource $imap_stream" "S" "int") ("f" "imap_num_msg(" "resource $imap_stream" "S" "int") ("f" "imap_msgno(" "resource $imap_stream,int $uid" "S" "int") ("f" "imap_mime_header_decode(" "string $text" "S" "array") ("f" "imap_mail_move(" "resource $imap_stream,string $msglist,string $mailbox,int $options" "S" "bool") ("f" "imap_mail_copy(" "resource $imap_stream,string $msglist,string $mailbox,int $options" "S" "bool") ("f" "imap_mail_compose(" "array $envelope,array $body" "S" "string") ("f" "imap_mailboxmsginfo(" "resource $imap_stream" "S" "object") ("f" "imap_mail(" "string $to,string $subject,string $message,string $additional_headers,string $cc,string $bcc,string $rpath" "S" "bool") ("f" "imap_lsub(" "resource $imap_stream,string $ref,string $pattern" "S" "array") ("f" "imap_listscan(" "resource $imap_stream,string $ref,string $pattern,string $content" "S" "array") ("f" "imap_list(" "resource $imap_stream,string $ref,string $pattern" "S" "array") ("f" "imap_last_error(" #1# "S" "string") ("f" "imap_headers(" "resource $imap_stream" "S" "array") ("f" "imap_headerinfo(" "resource $imap_stream,int $msg_number,int $fromlength,int $subjectlength,string $defaulthost" "S" "object") ("f" "imap_getsubscribed(" "resource $imap_stream,string $ref,string $pattern" "S" "array") ("f" "imap_get_quotaroot(" "resource $imap_stream,string $quota_root" "S" "array") ("f" "imap_get_quota(" "resource $imap_stream,string $quota_root" "S" "array") ("f" "imap_getmailboxes(" "resource $imap_stream,string $ref,string $pattern" "S" "array") ("f" "imap_getacl(" "resource $imap_stream,string $mailbox" "S" "array") ("f" "imap_gc(" "resource $imap_stream,int $caches" "S" "bool") ("f" "imap_fetchstructure(" "resource $imap_stream,int $msg_number,int $options" "S" "object") ("f" "imap_fetch_overview(" "resource $imap_stream,string $sequence,int $options" "S" "array") ("f" "imap_fetchmime(" "resource $imap_stream,int $msg_number,string $section,int $options" "S" "string") ("f" "imap_fetchheader(" "resource $imap_stream,int $msg_number,int $options" "S" "string") ("f" "imap_fetchbody(" "resource $imap_stream,int $msg_number,string $section,int $options" "S" "string") ("f" "imap_expunge(" "resource $imap_stream" "S" "bool") ("f" "imap_errors(" #1# "S" "array") ("f" "imap_deletemailbox(" "resource $imap_stream,string $mailbox" "S" "bool") ("f" "imap_delete(" "resource $imap_stream,int $msg_number,int $options" "S" "bool") ("f" "imap_createmailbox(" "resource $imap_stream,string $mailbox" "S" "bool") ("f" "imap_close(" "resource $imap_stream,int $flag" "S" "bool") ("f" "imap_clearflag_full(" "resource $imap_stream,string $sequence,string $flag,int $options" "S" "bool") ("f" "imap_check(" "resource $imap_stream" "S" "object") ("f" "imap_bodystruct(" "resource $imap_stream,int $msg_number,string $section" "S" "object") ("f" "imap_body(" "resource $imap_stream,int $msg_number,int $options" "S" "string") ("f" "imap_binary(" "string $string" "S" "string") ("f" "imap_base64(" "string $text" "S" "string") ("f" "imap_append(" "resource $imap_stream,string $mailbox,string $message,string $options,string $internal_date" "S" "bool") ("f" "imap_alerts(" #1# "S" "array") ("f" "imap_8bit(" "string $string" "S" "string") ("f" "imagexbm(" "resource $image,string $filename,int $foreground" "S" "bool") ("f" "imagewebp(" "resource $image,string $filename" "S" "bool") ("f" "imagewbmp(" "resource $image,string $filename,int $foreground" "S" "bool") ("f" "image_type_to_mime_type(" "int $imagetype" "S" "string") ("f" "image_type_to_extension(" "int $imagetype,bool $include_dot" "S" "string") ("f" "imagetypes(" #1# "S" "int") ("f" "imagettftext(" "resource $image,float $size,float $angle,int $x,int $y,int $color,string $fontfile,string $text" "S" "array") ("f" "imagettfbbox(" "float $size,float $angle,string $fontfile,string $text" "S" "array") ("f" "imagetruecolortopalette(" "resource $image,bool $dither,int $ncolors" "S" "bool") ("f" "imagesy(" "resource $image" "S" "int") ("f" "imagesx(" "resource $image" "S" "int") ("f" "imagestringup(" "resource $image,int $font,int $x,int $y,string $s,int $col" "S" "bool") ("f" "imagestring(" "resource $image,int $font,int $x,int $y,string $s,int $col" "S" "bool") ("f" "imagesettile(" "resource $image,resource $tile" "S" "bool") ("f" "imagesetthickness(" "resource $image,int $thickness" "S" "bool") ("f" "imagesetstyle(" "resource $image,array $style" "S" "bool") ("f" "imagesetpixel(" "resource $image,int $x,int $y,int $color" "S" "bool") ("f" "imagesetinterpolation(" "resource $image,int $method" "S" "bool") ("f" "imagesetbrush(" "resource $image,resource $brush" "S" "bool") ("f" "imagescale(" "resource $image,int $new_width,int $new_height,int $mode" "S" "resource") ("f" "imagesavealpha(" "resource $image,bool $saveflag" "S" "bool") ("f" "imagerotate(" "resource $image,float $angle,int $bgd_color,int $ignore_transparent" "S" "resource") ("f" "imagerectangle(" "resource $image,int $x1,int $y1,int $x2,int $y2,int $col" "S" "bool") ("f" "imagepstext(" "resource $image,string $text,resource $font_index,int $size,int $foreground,int $background,int $x,int $y,int $space,int $tightness,float $angle,int $antialias_steps" "S" "array") ("f" "imagepsslantfont(" "resource $font_index,float $slant" "S" "bool") ("f" "imagepsloadfont(" "string $filename" "S" "resource") ("f" "imagepsfreefont(" "resource $font_index" "S" "bool") ("f" "imagepsextendfont(" "resource $font_index,float $extend" "S" "bool") ("f" "imagepsencodefont(" "resource $font_index,string $encodingfile" "S" "bool") ("f" "imagepsbbox(" "string $text,resource $font,int $size" "S" "array") ("f" "imagepolygon(" "resource $image,array $points,int $num_points,int $color" "S" "bool") ("f" "imagepng(" "resource $image,string $filename" "S" "bool") ("f" "imagepalettetotruecolor(" "resource $src" "S" "bool") ("f" "imagepalettecopy(" "resource $destination,resource $source" "S" "void") ("f" "imageloadfont(" "string $file" "S" "int") ("f" "imageline(" "resource $image,int $x1,int $y1,int $x2,int $y2,int $color" "S" "bool") ("f" "imagelayereffect(" "resource $image,int $effect" "S" "bool") ("f" "imagejpeg(" "resource $image,string $filename,int $quality" "S" "bool") ("f" "imageistruecolor(" "resource $image" "S" "bool") ("f" "imageinterlace(" "resource $image,int $interlace" "S" "int") ("f" "imagegrabwindow(" "int $window_handle,int $client_area" "S" "resource") ("f" "imagegrabscreen(" #1# "S" "resource") ("f" "imagegif(" "resource $image,string $filename" "S" "bool") ("f" "imagegd(" "resource $image,string $filename" "S" "bool") ("f" "imagegd2(" "resource $image,string $filename,int $chunk_size,int $type" "S" "bool") ("f" "imagegammacorrect(" "resource $image,float $inputgamma,float $outputgamma" "S" "bool") ("f" "imagefttext(" "resource $image,float $size,float $angle,int $x,int $y,int $color,string $fontfile,string $text,array $extrainfo" "S" "array") ("f" "imageftbbox(" "float $size,float $angle,string $fontfile,string $text,array $extrainfo" "S" "array") ("f" "imagefontwidth(" "int $font" "S" "int") ("f" "imagefontheight(" "int $font" "S" "int") ("f" "imageflip(" "resource $image,int $mode" "S" "bool") ("f" "imagefilter(" "resource $src_im,int $filtertype,int $arg1,int $arg2,int $arg3" "S" "bool") ("f" "imagefilltoborder(" "resource $image,int $x,int $y,int $border,int $color" "S" "bool") ("f" "imagefilledrectangle(" "resource $image,int $x1,int $y1,int $x2,int $y2,int $color" "S" "bool") ("f" "imagefilledpolygon(" "resource $image,array $points,int $num_points,int $color" "S" "bool") ("f" "imagefilledellipse(" "resource $image,int $cx,int $cy,int $width,int $height,int $color" "S" "bool") ("f" "imagefilledarc(" "resource $image,int $cx,int $cy,int $width,int $height,int $start,int $end,int $color,int $style" "S" "bool") ("f" "imagefill(" "resource $image,int $x,int $y,int $color" "S" "bool") ("f" "imageellipse(" "resource $image,int $cx,int $cy,int $width,int $height,int $color" "S" "bool") ("f" "imagedestroy(" "resource $image" "S" "bool") ("f" "imagedashedline(" "resource $image,int $x1,int $y1,int $x2,int $y2,int $color" "S" "bool") ("f" "imagecrop(" "resource $image,array $rect" "S" "resource") ("f" "imagecropauto(" "resource $image,int $mode,float $threshold,int $color" "S" "resource") ("f" "imagecreatetruecolor(" "int $width,int $height" "S" "resource") ("f" "imagecreate(" "int $x_size,int $y_size" "S" "resource") ("f" "imagecreatefromxpm(" "string $filename" "S" "resource") ("f" "imagecreatefromxbm(" "string $filename" "S" "resource") ("f" "imagecreatefromwebp(" "string $filename" "S" "resource") ("f" "imagecreatefromwbmp(" "string $filename" "S" "resource") ("f" "imagecreatefromstring(" "string $image" "S" "resource") ("f" "imagecreatefrompng(" "string $filename" "S" "resource") ("f" "imagecreatefromjpeg(" "string $filename" "S" "resource") ("f" "imagecreatefromgif(" "string $filename" "S" "resource") ("f" "imagecreatefromgd(" "string $filename" "S" "resource") ("f" "imagecreatefromgd2(" "string $filename" "S" "resource") ("f" "imagecreatefromgd2part(" "string $filename,int $srcX,int $srcY,int $width,int $height" "S" "resource") ("f" "imagecopyresized(" "resource $dst_image,resource $src_image,int $dst_x,int $dst_y,int $src_x,int $src_y,int $dst_w,int $dst_h,int $src_w,int $src_h" "S" "bool") ("f" "imagecopyresampled(" "resource $dst_image,resource $src_image,int $dst_x,int $dst_y,int $src_x,int $src_y,int $dst_w,int $dst_h,int $src_w,int $src_h" "S" "bool") ("f" "imagecopymergegray(" "resource $dst_im,resource $src_im,int $dst_x,int $dst_y,int $src_x,int $src_y,int $src_w,int $src_h,int $pct" "S" "bool") ("f" "imagecopymerge(" "resource $dst_im,resource $src_im,int $dst_x,int $dst_y,int $src_x,int $src_y,int $src_w,int $src_h,int $pct" "S" "bool") ("f" "imagecopy(" "resource $dst_im,resource $src_im,int $dst_x,int $dst_y,int $src_x,int $src_y,int $src_w,int $src_h" "S" "bool") ("f" "imageconvolution(" "resource $image,array $matrix,float $div,float $offset" "S" "bool") ("f" "imagecolortransparent(" "resource $image,int $color" "S" "int") ("f" "imagecolorstotal(" "resource $image" "S" "int") ("f" "imagecolorsforindex(" "resource $image,int $index" "S" "array") ("f" "imagecolorset(" "resource $image,int $index,int $red,int $green,int $blue" "S" "void") ("f" "imagecolorresolve(" "resource $image,int $red,int $green,int $blue" "S" "int") ("f" "imagecolorresolvealpha(" "resource $image,int $red,int $green,int $blue,int $alpha" "S" "int") ("f" "imagecolormatch(" "resource $image1,resource $image2" "S" "bool") ("f" "imagecolorexact(" "resource $image,int $red,int $green,int $blue" "S" "int") ("f" "imagecolorexactalpha(" "resource $image,int $red,int $green,int $blue,int $alpha" "S" "int") ("f" "imagecolordeallocate(" "resource $image,int $color" "S" "bool") ("f" "imagecolorclosest(" "resource $image,int $red,int $green,int $blue" "S" "int") ("f" "imagecolorclosesthwb(" "resource $image,int $red,int $green,int $blue" "S" "int") ("f" "imagecolorclosestalpha(" "resource $image,int $red,int $green,int $blue,int $alpha" "S" "int") ("f" "imagecolorat(" "resource $image,int $x,int $y" "S" "int") ("f" "imagecolorallocate(" "resource $image,int $red,int $green,int $blue" "S" "int") ("f" "imagecolorallocatealpha(" "resource $image,int $red,int $green,int $blue,int $alpha" "S" "int") ("f" "imagecharup(" "resource $image,int $font,int $x,int $y,string $c,int $color" "S" "bool") ("f" "imagechar(" "resource $image,int $font,int $x,int $y,string $c,int $color" "S" "bool") ("f" "imagearc(" "resource $image,int $cx,int $cy,int $w,int $h,int $s,int $e,int $color" "S" "bool") ("f" "imageantialias(" "resource $image,bool $enabled" "S" "bool") ("f" "imagealphablending(" "resource $image,bool $blendmode" "S" "bool") ("f" "imageaffine(" "resource $image,array $affine,array $clip" "S" "resource") ("f" "imageaffinematrixget(" "int $type,mixed $options" "S" "array") ("f" "imageaffinematrixconcat(" "array $m1,array $m2" "S" "array") ("f" "image2wbmp(" "resource $image,string $filename,int $threshold" "S" "int") ("f" "iis_stop_service(" "string $service_id" "S" "int") ("f" "iis_stop_server(" "int $server_instance" "S" "int") ("f" "iis_start_service(" "string $service_id" "S" "int") ("f" "iis_start_server(" "int $server_instance" "S" "int") ("f" "iis_set_server_rights(" "int $server_instance,string $virtual_path,int $directory_flags" "S" "int") ("f" "iis_set_script_map(" "int $server_instance,string $virtual_path,string $script_extension,string $engine_path,int $allow_scripting" "S" "int") ("f" "iis_set_dir_security(" "int $server_instance,string $virtual_path,int $directory_flags" "S" "int") ("f" "iis_set_app_settings(" "int $server_instance,string $virtual_path,string $application_scope" "S" "int") ("f" "iis_remove_server(" "int $server_instance" "S" "int") ("f" "iis_get_service_state(" "string $service_id" "S" "int") ("f" "iis_get_server_rights(" "int $server_instance,string $virtual_path" "S" "int") ("f" "iis_get_server_by_path(" "string $path" "S" "int") ("f" "iis_get_server_by_comment(" "string $comment" "S" "int") ("f" "iis_get_script_map(" "int $server_instance,string $virtual_path,string $script_extension" "S" "string") ("f" "iis_get_dir_security(" "int $server_instance,string $virtual_path" "S" "int") ("f" "iis_add_server(" "string $path,string $comment,string $server_ip,int $port,string $host_name,int $rights,int $start_server" "S" "int") ("f" "ignore_user_abort(" "string $value" "S" "int") ("f" "ifxus_write_slob(" "int $bid,string $content" "S" "int") ("f" "ifxus_tell_slob(" "int $bid" "S" "int") ("f" "ifxus_seek_slob(" "int $bid,int $mode,int $offset" "S" "int") ("f" "ifxus_read_slob(" "int $bid,int $nbytes" "S" "string") ("f" "ifxus_open_slob(" "int $bid,int $mode" "S" "int") ("f" "ifxus_free_slob(" "int $bid" "S" "bool") ("f" "ifxus_create_slob(" "int $mode" "S" "int") ("f" "ifxus_close_slob(" "int $bid" "S" "bool") ("f" "ifx_update_char(" "int $bid,string $content" "S" "bool") ("f" "ifx_update_blob(" "int $bid,string $content" "S" "bool") ("f" "ifx_textasvarchar(" "int $mode" "S" "bool") ("f" "ifx_query(" "string $query,resource $link_identifier,int $cursor_type,mixed $blobidarray" "S" "resource") ("f" "ifx_prepare(" "string $query,resource $link_identifier,int $cursor_def,mixed $blobidarray" "S" "resource") ("f" "ifx_pconnect(" "string $database,string $userid,string $password" "S" "resource") ("f" "ifx_num_rows(" "resource $result_id" "S" "int") ("f" "ifx_num_fields(" "resource $result_id" "S" "int") ("f" "ifx_nullformat(" "int $mode" "S" "bool") ("f" "ifx_htmltbl_result(" "resource $result_id,string $html_table_options" "S" "int") ("f" "ifx_getsqlca(" "resource $result_id" "S" "array") ("f" "ifx_get_char(" "int $bid" "S" "string") ("f" "ifx_get_blob(" "int $bid" "S" "string") ("f" "ifx_free_result(" "resource $result_id" "S" "bool") ("f" "ifx_free_char(" "int $bid" "S" "bool") ("f" "ifx_free_blob(" "int $bid" "S" "bool") ("f" "ifx_fieldtypes(" "resource $result_id" "S" "array") ("f" "ifx_fieldproperties(" "resource $result_id" "S" "array") ("f" "ifx_fetch_row(" "resource $result_id,mixed $position" "S" "array") ("f" "ifx_error(" "resource $link_identifier" "S" "string") ("f" "ifx_errormsg(" "int $errorcode" "S" "string") ("f" "ifx_do(" "resource $result_id" "S" "bool") ("f" "ifx_create_char(" "string $param" "S" "int") ("f" "ifx_create_blob(" "int $type,int $mode,string $param" "S" "int") ("f" "ifx_copy_blob(" "int $bid" "S" "int") ("f" "ifx_connect(" "string $database,string $userid,string $password" "S" "resource") ("f" "ifx_close(" "resource $link_identifier" "S" "bool") ("f" "ifx_byteasvarchar(" "int $mode" "S" "bool") ("f" "ifx_blobinfile_mode(" "int $mode" "S" "bool") ("f" "ifx_affected_rows(" "resource $result_id" "S" "int") ("f" "idn_to_utf8(" "string $domain,int $options,int $variant,array &$idna_info" "S" "string") ("f" "idn_to_ascii(" "string $domain,int $options,int $variant,array &$idna_info" "S" "string") ("f" "idate(" "string $format,int $timestamp" "S" "int") ("f" "id3_set_tag(" "string $filename,array $tag,int $version" "S" "bool") ("f" "id3_remove_tag(" "string $filename,int $version" "S" "bool") ("f" "id3_get_version(" "string $filename" "S" "int") ("f" "id3_get_tag(" "string $filename,int $version" "S" "array") ("f" "id3_get_genre_name(" "int $genre_id" "S" "string") ("f" "id3_get_genre_list(" #1# "S" "array") ("f" "id3_get_genre_id(" "string $genre" "S" "int") ("f" "id3_get_frame_short_name(" "string $frameId" "S" "string") ("f" "id3_get_frame_long_name(" "string $frameId" "S" "string") ("f" "iconv_substr(" "string $str,int $offset,int $length,string $charset" "S" "string") ("f" "iconv_strrpos(" "string $haystack,string $needle,string $charset" "S" "int") ("f" "iconv_strpos(" "string $haystack,string $needle,int $offset,string $charset" "S" "int") ("f" "iconv_strlen(" "string $str,string $charset" "S" "int") ("f" "iconv(" "string $in_charset,string $out_charset,string $str" "S" "string") ("f" "iconv_set_encoding(" "string $type,string $charset" "S" "bool") ("f" "iconv_mime_encode(" "string $field_name,string $field_value,array $preferences" "S" "string") ("f" "iconv_mime_decode(" "string $encoded_header,int $mode,string $charset" "S" "string") ("f" "iconv_mime_decode_headers(" "string $encoded_headers,int $mode,string $charset" "S" "array") ("f" "iconv_get_encoding(" "string $type" "S" "mixed") ("f" "ibase_wait_event(" "string $event_name1,string $event_name2,string $__args__" "S" "string") ("f" "ibase_trans(" "int $trans_args,resource $link_identifier" "S" "resource") ("f" "ibase_set_event_handler(" "callable $event_handler,string $event_name1,string $event_name2,string $__args__" "S" "resource") ("f" "ibase_service_detach(" "resource $service_handle" "S" "bool") ("f" "ibase_service_attach(" "string $host,string $dba_username,string $dba_password" "S" "resource") ("f" "ibase_server_info(" "resource $service_handle,int $action" "S" "string") ("f" "ibase_rollback_ret(" "resource $link_or_trans_identifier" "S" "bool") ("f" "ibase_rollback(" "resource $link_or_trans_identifier" "S" "bool") ("f" "ibase_restore(" "resource $service_handle,string $source_file,string $dest_db,int $options,bool $verbose" "S" "mixed") ("f" "ibase_query(" "resource $link_identifier,string $query,int $bind_args" "S" "resource") ("f" "ibase_prepare(" "string $query" "S" "resource") ("f" "ibase_pconnect(" "string $database,string $username,string $password,string $charset,int $buffers,int $dialect,string $role,int $sync" "S" "resource") ("f" "ibase_param_info(" "resource $query,int $param_number" "S" "array") ("f" "ibase_num_params(" "resource $query" "S" "int") ("f" "ibase_num_fields(" "resource $result_id" "S" "int") ("f" "ibase_name_result(" "resource $result,string $name" "S" "bool") ("f" "ibase_modify_user(" "resource $service_handle,string $user_name,string $password,string $first_name,string $middle_name,string $last_name" "S" "bool") ("f" "ibase_maintain_db(" "resource $service_handle,string $db,int $action,int $argument" "S" "bool") ("f" "ibase_gen_id(" "string $generator,int $increment,resource $link_identifier" "S" "mixed") ("f" "ibase_free_result(" "resource $result_identifier" "S" "bool") ("f" "ibase_free_query(" "resource $query" "S" "bool") ("f" "ibase_free_event_handler(" "resource $event" "S" "bool") ("f" "ibase_field_info(" "resource $result,int $field_number" "S" "array") ("f" "ibase_fetch_row(" "resource $result_identifier,int $fetch_flag" "S" "array") ("f" "ibase_fetch_object(" "resource $result_id,int $fetch_flag" "S" "object") ("f" "ibase_fetch_assoc(" "resource $result,int $fetch_flag" "S" "array") ("f" "ibase_execute(" "resource $query,mixed $bind_arg,mixed $__args__" "S" "resource") ("f" "ibase_errmsg(" #1# "S" "string") ("f" "ibase_errcode(" #1# "S" "int") ("f" "ibase_drop_db(" "resource $connection" "S" "bool") ("f" "ibase_delete_user(" "resource $service_handle,string $user_name" "S" "bool") ("f" "ibase_db_info(" "resource $service_handle,string $db,int $action,int $argument" "S" "string") ("f" "ibase_connect(" "string $database,string $username,string $password,string $charset,int $buffers,int $dialect,string $role,int $sync" "S" "resource") ("f" "ibase_commit_ret(" "resource $link_or_trans_identifier" "S" "bool") ("f" "ibase_commit(" "resource $link_or_trans_identifier" "S" "bool") ("f" "ibase_close(" "resource $connection_id" "S" "bool") ("f" "ibase_blob_open(" "resource $link_identifier,string $blob_id" "S" "resource") ("f" "ibase_blob_info(" "resource $link_identifier,string $blob_id" "S" "array") ("f" "ibase_blob_import(" "resource $link_identifier,resource $file_handle" "S" "string") ("f" "ibase_blob_get(" "resource $blob_handle,int $len" "S" "string") ("f" "ibase_blob_echo(" "string $blob_id" "S" "bool") ("f" "ibase_blob_create(" "resource $link_identifier" "S" "resource") ("f" "ibase_blob_close(" "resource $blob_handle" "S" "mixed") ("f" "ibase_blob_cancel(" "resource $blob_handle" "S" "bool") ("f" "ibase_blob_add(" "resource $blob_handle,string $data" "S" "void") ("f" "ibase_backup(" "resource $service_handle,string $source_db,string $dest_file,int $options,bool $verbose" "S" "mixed") ("f" "ibase_affected_rows(" "resource $link_identifier" "S" "int") ("f" "ibase_add_user(" "resource $service_handle,string $user_name,string $password,string $first_name,string $middle_name,string $last_name" "S" "bool") ("f" "hypot(" "float $x,float $y" "S" "float") ("f" "hwapi_object_new(" "array $parameter" "S" "hw_api_object") ("f" "hwapi_hgcsp(" "string $hostname,int $port" "S" "HW_API") ("f" "hwapi_content_new(" "string $content,string $mimetype" "S" "HW_API_Content") ("f" "hwapi_attribute_new(" "string $name,string $value" "S" "HW_API_Attribute") ("f" "http_throttle(" "float $sec,int $bytes" "S" "void") ("f" "http_support(" "int $feature" "S" "int") ("f" "http_send_stream(" "resource $stream" "S" "bool") ("f" "http_send_status(" "int $status" "S" "bool") ("f" "http_send_last_modified(" "int $timestamp" "S" "bool") ("f" "http_send_file(" "string $file" "S" "bool") ("f" "http_send_data(" "string $data" "S" "bool") ("f" "http_send_content_type(" "string $content_type" "S" "bool") ("f" "http_send_content_disposition(" "string $filename,bool $inline" "S" "bool") ("f" "http_response_code(" "int $response_code" "S" "int") ("f" "http_request(" "int $method,string $url,string $body,array $options,array &$info" "S" "string") ("f" "http_request_method_unregister(" "mixed $method" "S" "bool") ("f" "http_request_method_register(" "string $method" "S" "int") ("f" "http_request_method_name(" "int $method" "S" "string") ("f" "http_request_method_exists(" "mixed $method" "S" "int") ("f" "http_request_body_encode(" "array $fields,array $files" "S" "string") ("f" "http_redirect(" "string $url,array $params,bool $session,int $status" "S" "bool") ("f" "http_put_stream(" "string $url,resource $stream,array $options,array &$info" "S" "string") ("f" "http_put_file(" "string $url,string $file,array $options,array &$info" "S" "string") ("f" "http_put_data(" "string $url,string $data,array $options,array &$info" "S" "string") ("f" "http_post_fields(" "string $url,array $data,array $files,array $options,array &$info" "S" "string") ("f" "http_post_data(" "string $url,string $data,array $options,array &$info" "S" "string") ("f" "http_persistent_handles_ident(" "string $ident" "S" "string") ("f" "http_persistent_handles_count(" #1# "S" "object") ("f" "http_persistent_handles_clean(" "string $ident" "S" "string") ("f" "http_parse_params(" "string $param,int $flags" "S" "object") ("f" "http_parse_message(" "string $message" "S" "object") ("f" "http_parse_headers(" "string $header" "S" "array") ("f" "http_parse_cookie(" "string $cookie,int $flags,array $allowed_extras" "S" "object") ("f" "http_negotiate_language(" "array $supported,array &$result" "S" "string") ("f" "http_negotiate_content_type(" "array $supported,array &$result" "S" "string") ("f" "http_negotiate_charset(" "array $supported,array &$result" "S" "string") ("f" "http_match_request_header(" "string $header,string $value,bool $match_case" "S" "bool") ("f" "http_match_modified(" "int $timestamp,bool $for_range" "S" "bool") ("f" "http_match_etag(" "string $etag,bool $for_range" "S" "bool") ("f" "http_inflate(" "string $data" "S" "string") ("f" "http_head(" "string $url,array $options,array &$info" "S" "string") ("f" "http_get(" "string $url,array $options,array &$info" "S" "string") ("f" "http_get_request_headers(" #1# "S" "array") ("f" "http_get_request_body(" #1# "S" "string") ("f" "http_get_request_body_stream(" #1# "S" "resource") ("f" "http_deflate(" "string $data,int $flags" "S" "string") ("f" "http_date(" "int $timestamp" "S" "string") ("f" "http_chunked_decode(" "string $encoded" "S" "string") ("f" "http_cache_last_modified(" "int $timestamp_or_expires" "S" "bool") ("f" "http_cache_etag(" "string $etag" "S" "bool") ("f" "http_build_url(" "mixed $url,mixed $parts,int $flags,array &$new_url" "S" "string") ("f" "http_build_str(" "array $query,string $prefix,string $arg_separator" "S" "string") ("f" "http_build_query(" "mixed $query_data,string $numeric_prefix,string $arg_separator,int $enc_type" "S" "string") ("f" "http_build_cookie(" "array $cookie" "S" "string") ("f" "htmlspecialchars(" "string $string,int $flags,string $encoding,bool $double_encode" "S" "string") ("f" "htmlspecialchars_decode(" "string $string,int $flags" "S" "string") ("f" "html_entity_decode(" "string $string,int $flags,string $encoding" "S" "string") ("f" "htmlentities(" "string $string,int $flags,string $encoding,bool $double_encode" "S" "string") ("f" "highlight_string(" "string $str,bool $return" "S" "mixed") ("f" "highlight_file(" "string $filename,bool $return" "S" "mixed") ("f" "hexdec(" "string $hex_string" "S" "number") ("f" "hex2bin(" "string $data" "S" "string") ("f" "hebrev(" "string $hebrew_text,int $max_chars_per_line" "S" "string") ("f" "hebrevc(" "string $hebrew_text,int $max_chars_per_line" "S" "string") ("f" "header(" "string $string,bool $replace,int $http_response_code" "S" "void") ("f" "headers_sent(" "string &$file,int &$line" "S" "bool") ("f" "headers_list(" #1# "S" "array") ("f" "header_remove(" "string $name" "S" "void") ("f" "header_register_callback(" "callable $callback" "S" "bool") ("f" "hash_update_stream(" "resource $context,resource $handle,int $length" "S" "int") ("f" "hash_update_file(" "resource $hcontext,string $filename,resource $scontext" "S" "bool") ("f" "hash_update(" "resource $context,string $data" "S" "bool") ("f" "hash(" "string $algo,string $data,bool $raw_output" "S" "string") ("f" "hash_pbkdf2(" "string $algo,string $password,string $salt,int $iterations,int $length,bool $raw_output" "S" "string") ("f" "hash_init(" "string $algo,int $options,string $key" "S" "resource") ("f" "hash_hmac(" "string $algo,string $data,string $key,bool $raw_output" "S" "string") ("f" "hash_hmac_file(" "string $algo,string $filename,string $key,bool $raw_output" "S" "string") ("f" "hash_final(" "resource $context,bool $raw_output" "S" "string") ("f" "hash_file(" "string $algo,string $filename,bool $raw_output" "S" "string") ("f" "hash_equals(" "string $known_string,string $user_string" "S" "bool") ("f" "hash_copy(" "resource $context" "S" "resource") ("f" "hash_algos(" #1# "S" "array") ("f" "gzwrite(" "resource $zp,string $string,int $length" "S" "int") ("f" "gzuncompress(" "string $data,int $length" "S" "string") ("f" "gztell(" "resource $zp" "S" "int") ("f" "gzseek(" "resource $zp,int $offset,int $whence" "S" "int") ("f" "gzrewind(" "resource $zp" "S" "bool") ("f" "gzread(" "resource $zp,int $length" "S" "string") ("f" "gzpassthru(" "resource $zp" "S" "int") ("f" "gzopen(" "string $filename,string $mode,int $use_include_path" "S" "resource") ("f" "gzinflate(" "string $data,int $length" "S" "string") ("f" "gzgets(" "resource $zp,int $length" "S" "string") ("f" "gzgetss(" "resource $zp,int $length,string $allowable_tags" "S" "string") ("f" "gzgetc(" "resource $zp" "S" "string") ("f" "gzfile(" "string $filename,int $use_include_path" "S" "array") ("f" "gzeof(" "resource $zp" "S" "int") ("f" "gzencode(" "string $data,int $level,int $encoding_mode" "S" "string") ("f" "gzdeflate(" "string $data,int $level,int $encoding" "S" "string") ("f" "gzdecode(" "string $data,int $length" "S" "string") ("f" "gzcompress(" "string $data,int $level,int $encoding" "S" "string") ("f" "gzclose(" "resource $zp" "S" "bool") ("f" "gupnp_service_thaw_notify(" "resource $service" "S" "bool") ("f" "gupnp_service_proxy_set_subscribed(" "resource $proxy,bool $subscribed" "S" "bool") ("f" "gupnp_service_proxy_remove_notify(" "resource $proxy,string $value" "S" "bool") ("f" "gupnp_service_proxy_get_subscribed(" "resource $proxy" "S" "bool") ("f" "gupnp_service_proxy_callback_set(" "resource $proxy,int $signal,mixed $callback,mixed $arg" "S" "bool") ("f" "gupnp_service_proxy_add_notify(" "resource $proxy,string $value,int $type,mixed $callback,mixed $arg" "S" "bool") ("f" "gupnp_service_proxy_action_set(" "resource $proxy,string $action,string $name,mixed $value,int $type" "S" "bool") ("f" "gupnp_service_proxy_action_get(" "resource $proxy,string $action,string $name,int $type" "S" "mixed") ("f" "gupnp_service_notify(" "resource $service,string $name,int $type,mixed $value" "S" "bool") ("f" "gupnp_service_introspection_get_state_variable(" "resource $introspection,string $variable_name" "S" "array") ("f" "gupnp_service_info_get_introspection(" "resource $proxy,mixed $callback,mixed $arg" "S" "mixed") ("f" "gupnp_service_info_get(" "resource $proxy" "S" "array") ("f" "gupnp_service_freeze_notify(" "resource $service" "S" "bool") ("f" "gupnp_service_action_set(" "resource $action,string $name,int $type,mixed $value" "S" "bool") ("f" "gupnp_service_action_return_error(" "resource $action,int $error_code,string $error_description" "S" "bool") ("f" "gupnp_service_action_return(" "resource $action" "S" "bool") ("f" "gupnp_service_action_get(" "resource $action,string $name,int $type" "S" "mixed") ("f" "gupnp_root_device_stop(" "resource $root_device" "S" "bool") ("f" "gupnp_root_device_start(" "resource $root_device" "S" "bool") ("f" "gupnp_root_device_set_available(" "resource $root_device,bool $available" "S" "bool") ("f" "gupnp_root_device_new(" "resource $context,string $location,string $description_dir" "S" "resource") ("f" "gupnp_root_device_get_relative_location(" "resource $root_device" "S" "string") ("f" "gupnp_root_device_get_available(" "resource $root_device" "S" "bool") ("f" "gupnp_device_info_get_service(" "resource $root_device,string $type" "S" "resource") ("f" "gupnp_device_info_get(" "resource $root_device" "S" "array") ("f" "gupnp_device_action_callback_set(" "resource $root_device,int $signal,string $action_name,mixed $callback,mixed $arg" "S" "bool") ("f" "gupnp_control_point_new(" "resource $context,string $target" "S" "resource") ("f" "gupnp_control_point_callback_set(" "resource $cpoint,int $signal,mixed $callback,mixed $arg" "S" "bool") ("f" "gupnp_control_point_browse_stop(" "resource $cpoint" "S" "bool") ("f" "gupnp_control_point_browse_start(" "resource $cpoint" "S" "bool") ("f" "gupnp_context_unhost_path(" "resource $context,string $server_path" "S" "bool") ("f" "gupnp_context_timeout_add(" "resource $context,int $timeout,mixed $callback,mixed $arg" "S" "bool") ("f" "gupnp_context_set_subscription_timeout(" "resource $context,int $timeout" "S" "void") ("f" "gupnp_context_new(" "string $host_ip,int $port" "S" "resource") ("f" "gupnp_context_host_path(" "resource $context,string $local_path,string $server_path" "S" "bool") ("f" "gupnp_context_get_subscription_timeout(" "resource $context" "S" "int") ("f" "gupnp_context_get_port(" "resource $context" "S" "int") ("f" "gupnp_context_get_host_ip(" "resource $context" "S" "string") ("f" "gregoriantojd(" "int $month,int $day,int $year" "S" "int") ("f" "grapheme_substr(" "string $string,int $start,int $length" "S" "int") ("f" "grapheme_strstr(" "string $haystack,string $needle,bool $before_needle" "S" "string") ("f" "grapheme_strrpos(" "string $haystack,string $needle,int $offset" "S" "int") ("f" "grapheme_strripos(" "string $haystack,string $needle,int $offset" "S" "int") ("f" "grapheme_strpos(" "string $haystack,string $needle,int $offset" "S" "int") ("f" "grapheme_strlen(" "string $input" "S" "int") ("f" "grapheme_stristr(" "string $haystack,string $needle,bool $before_needle" "S" "string") ("f" "grapheme_stripos(" "string $haystack,string $needle,int $offset" "S" "int") ("f" "grapheme_extract(" "string $haystack,int $size,int $extract_type,int $start,int &$next" "S" "string") ("f" "gopher_parsedir(" "string $dirent" "S" "array") ("f" "gnupg_verify(" "resource $identifier,string $signed_text,string $signature,string &$plaintext" "S" "array") ("f" "gnupg_sign(" "resource $identifier,string $plaintext" "S" "string") ("f" "gnupg_setsignmode(" "resource $identifier,int $signmode" "S" "bool") ("f" "gnupg_seterrormode(" "resource $identifier,int $errormode" "S" "void") ("f" "gnupg_setarmor(" "resource $identifier,int $armor" "S" "bool") ("f" "gnupg_keyinfo(" "resource $identifier,string $pattern" "S" "array") ("f" "gnupg_init(" #1# "S" "resource") ("f" "gnupg_import(" "resource $identifier,string $keydata" "S" "array") ("f" "gnupg_getprotocol(" "resource $identifier" "S" "int") ("f" "gnupg_geterror(" "resource $identifier" "S" "string") ("f" "gnupg_export(" "resource $identifier,string $fingerprint" "S" "string") ("f" "gnupg_encrypt(" "resource $identifier,string $plaintext" "S" "string") ("f" "gnupg_encryptsign(" "resource $identifier,string $plaintext" "S" "string") ("f" "gnupg_decryptverify(" "resource $identifier,string $text,string &$plaintext" "S" "array") ("f" "gnupg_decrypt(" "resource $identifier,string $text" "S" "string") ("f" "gnupg_clearsignkeys(" "resource $identifier" "S" "bool") ("f" "gnupg_clearencryptkeys(" "resource $identifier" "S" "bool") ("f" "gnupg_cleardecryptkeys(" "resource $identifier" "S" "bool") ("f" "gnupg_addsignkey(" "resource $identifier,string $fingerprint,string $passphrase" "S" "bool") ("f" "gnupg_addencryptkey(" "resource $identifier,string $fingerprint" "S" "bool") ("f" "gnupg_adddecryptkey(" "resource $identifier,string $fingerprint,string $passphrase" "S" "bool") ("f" "gmstrftime(" "string $format,int $timestamp" "S" "string") ("f" "gmp_xor(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_testbit(" "GMP $a,int $index" "S" "bool") ("f" "gmp_sub(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_strval(" "GMP $gmpnumber,int $base" "S" "string") ("f" "gmp_sqrtrem(" "GMP $a" "S" "array") ("f" "gmp_sqrt(" "GMP $a" "S" "GMP") ("f" "gmp_sign(" "GMP $a" "S" "int") ("f" "gmp_setbit(" "GMP &$a,int $index,bool $bit_on" "S" "void") ("f" "gmp_scan1(" "GMP $a,int $start" "S" "int") ("f" "gmp_scan0(" "GMP $a,int $start" "S" "int") ("f" "gmp_rootrem(" "GMP $a,int $nth" "S" "array") ("f" "gmp_root(" "GMP $a,int $nth" "S" "GMP") ("f" "gmp_random_range(" "GMP $min,GMP $max" "S" "GMP") ("f" "gmp_random(" "int $limiter" "S" "GMP") ("f" "gmp_random_bits(" "integer $bits" "S" "GMP") ("f" "gmp_prob_prime(" "GMP $a,int $reps" "S" "int") ("f" "gmp_powm(" "GMP $base,GMP $exp,GMP $mod" "S" "GMP") ("f" "gmp_pow(" "GMP $base,int $exp" "S" "GMP") ("f" "gmp_popcount(" "GMP $a" "S" "int") ("f" "gmp_perfect_square(" "GMP $a" "S" "bool") ("f" "gmp_or(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_nextprime(" "int $a" "S" "GMP") ("f" "gmp_neg(" "GMP $a" "S" "GMP") ("f" "gmp_mul(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_mod(" "GMP $n,GMP $d" "S" "GMP") ("f" "gmp_legendre(" "GMP $a,GMP $p" "S" "int") ("f" "gmp_jacobi(" "GMP $a,GMP $p" "S" "int") ("f" "gmp_invert(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_intval(" "GMP $gmpnumber" "S" "int") ("f" "gmp_init(" "mixed $number,int $base" "S" "GMP") ("f" "gmp_import(" "string $data,integer $word_size,integer $options" "S" "GMP") ("f" "gmp_hamdist(" "GMP $a,GMP $b" "S" "int") ("f" "gmp_gcd(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_gcdext(" "GMP $a,GMP $b" "S" "array") ("f" "gmp_fact(" "mixed $a" "S" "GMP") ("f" "gmp_export(" "GMP $gmpnumber,integer $word_size,integer $options" "S" "string") ("f" "gmp_div_r(" "GMP $n,GMP $d,int $round" "S" "GMP") ("f" "gmp_div_qr(" "GMP $n,GMP $d,int $round" "S" "array") ("f" "gmp_div_q(" "GMP $a,GMP $b,int $round" "S" "GMP") ("f" "gmp_divexact(" "GMP $n,GMP $d" "S" "GMP") ("f" "gmp_com(" "GMP $a" "S" "GMP") ("f" "gmp_cmp(" "GMP $a,GMP $b" "S" "int") ("f" "gmp_clrbit(" "GMP $a,int $index" "S" "void") ("f" "gmp_and(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_add(" "GMP $a,GMP $b" "S" "GMP") ("f" "gmp_abs(" "GMP $a" "S" "GMP") ("f" "gmmktime(" "int $hour,int $minute,int $second,int $month,int $day,int $year,int $is_dst" "S" "int") ("f" "gmdate(" "string $format,int $timestamp" "S" "string") ("f" "glob(" "string $pattern,int $flags" "S" "array") ("f" "gettype(" "mixed $var" "S" "string") ("f" "gettimeofday(" "bool $return_float" "S" "mixed") ("f" "gettext(" "string $message" "S" "string") ("f" "getservbyport(" "int $port,string $protocol" "S" "string") ("f" "getservbyname(" "string $service,string $protocol" "S" "int") ("f" "getrusage(" "int $who" "S" "array") ("f" "get_resource_type(" "resource $handle" "S" "string") ("f" "getrandmax(" #1# "S" "int") ("f" "getprotobynumber(" "int $number" "S" "string") ("f" "getprotobyname(" "string $name" "S" "int") ("f" "get_parent_class(" "mixed $obj" "S" "string") ("f" "getopt(" "string $options,array $longopts" "S" "array") ("f" "get_object_vars(" "object $obj" "S" "array") ("f" "getmyuid(" #1# "S" "int") ("f" "getmypid(" #1# "S" "int") ("f" "getmyinode(" #1# "S" "int") ("f" "getmygid(" #1# "S" "int") ("f" "getmxrr(" "string $hostname,array &$mxhosts,array &$weight" "S" "bool") ("f" "get_meta_tags(" "string $filename,bool $use_include_path" "S" "array") ("f" "get_magic_quotes_runtime(" #1# "S" "bool") ("f" "get_magic_quotes_gpc(" #1# "S" "bool") ("f" "get_loaded_extensions(" "bool $zend_extensions" "S" "array") ("f" "getlastmod(" #1# "S" "int") ("f" "get_include_path(" #1# "S" "string") ("f" "get_included_files(" #1# "S" "array") ("f" "getimagesizefromstring(" "string $imagedata,array &$imageinfo" "S" "array") ("f" "getimagesize(" "string $filename,array &$imageinfo" "S" "array") ("f" "get_html_translation_table(" "int $table,int $flags,string $encoding" "S" "array") ("f" "gethostname(" #1# "S" "string") ("f" "gethostbyname(" "string $hostname" "S" "string") ("f" "gethostbynamel(" "string $hostname" "S" "array") ("f" "gethostbyaddr(" "string $ip_address" "S" "string") ("f" "get_headers(" "string $url,int $format" "S" "array") ("f" "get_extension_funcs(" "string $module_name" "S" "array") ("f" "getenv(" "string $varname" "S" "string") ("f" "get_defined_vars(" #1# "S" "array") ("f" "get_defined_functions(" #1# "S" "array") ("f" "get_defined_constants(" "bool $categorize" "S" "array") ("f" "get_declared_traits(" #1# "S" "array") ("f" "get_declared_interfaces(" #1# "S" "array") ("f" "get_declared_classes(" #1# "S" "array") ("f" "getdate(" "int $timestamp" "S" "array") ("f" "getcwd(" #1# "S" "string") ("f" "get_current_user(" #1# "S" "string") ("f" "get_class_vars(" "string $class_name" "S" "array") ("f" "get_class(" "object $obj" "S" "string") ("f" "get_class_methods(" "mixed $class_name" "S" "array") ("f" "get_cfg_var(" "string $option" "S" "string") ("f" "get_called_class(" #1# "S" "string") ("f" "get_browser(" "string $user_agent,bool $return_array" "S" "mixed") ("f" "getallheaders(" #1# "S" "array") ("f" "geoip_time_zone_by_country_and_region(" "string $country_code,string $region_code" "S" "string") ("f" "geoip_setup_custom_directory(" "string $path" "S" "void") ("f" "geoip_region_name_by_code(" "string $country_code,string $region_code" "S" "string") ("f" "geoip_region_by_name(" "string $hostname" "S" "array") ("f" "geoip_record_by_name(" "string $hostname" "S" "array") ("f" "geoip_org_by_name(" "string $hostname" "S" "string") ("f" "geoip_netspeedcell_by_name(" "string $hostname" "S" "string") ("f" "geoip_isp_by_name(" "string $hostname" "S" "string") ("f" "geoip_id_by_name(" "string $hostname" "S" "int") ("f" "geoip_domain_by_name(" "string $hostname" "S" "string") ("f" "geoip_db_get_all_info(" #1# "S" "array") ("f" "geoip_db_filename(" "int $database" "S" "string") ("f" "geoip_db_avail(" "int $database" "S" "bool") ("f" "geoip_database_info(" "int $database" "S" "string") ("f" "geoip_country_name_by_name(" "string $hostname" "S" "string") ("f" "geoip_country_code_by_name(" "string $hostname" "S" "string") ("f" "geoip_country_code3_by_name(" "string $hostname" "S" "string") ("f" "geoip_continent_code_by_name(" "string $hostname" "S" "string") ("f" "geoip_asnum_by_name(" "string $hostname" "S" "string") ("f" "gd_info(" #1# "S" "array") ("f" "gc_enable(" #1# "S" "void") ("f" "gc_enabled(" #1# "S" "bool") ("f" "gc_disable(" #1# "S" "void") ("f" "gc_collect_cycles(" #1# "S" "int") ("f" "fwrite(" "resource $handle,string $string,int $length" "S" "int") ("f" "function_exists(" "string $function_name" "S" "bool") ("f" "func_num_args(" #1# "S" "int") ("f" "func_get_args(" #1# "S" "array") ("f" "func_get_arg(" "int $arg_num" "S" "mixed") ("f" "ftruncate(" "resource $handle,int $size" "S" "bool") ("f" "ftp_systype(" "resource $ftp_stream" "S" "string") ("f" "ftp_ssl_connect(" "string $host,int $port,int $timeout" "S" "resource") ("f" "ftp_size(" "resource $ftp_stream,string $remote_file" "S" "int") ("f" "ftp_site(" "resource $ftp_stream,string $cmd" "S" "bool") ("f" "ftp_set_option(" "resource $ftp_stream,int $option,mixed $value" "S" "bool") ("f" "ftp_rmdir(" "resource $ftp_stream,string $directory" "S" "bool") ("f" "ftp_rename(" "resource $ftp_stream,string $oldname,string $newname" "S" "bool") ("f" "ftp_rawlist(" "resource $ftp_stream,string $directory" "S" "array") ("f" "ftp_raw(" "resource $ftp_stream,string $command" "S" "array") ("f" "ftp_pwd(" "resource $ftp_stream" "S" "string") ("f" "ftp_put(" "resource $ftp_stream,string $remote_file,string $local_file,int $mode,int $startpos" "S" "bool") ("f" "ftp_pasv(" "resource $ftp_stream,bool $pasv" "S" "bool") ("f" "ftp_nlist(" "resource $ftp_stream,string $directory" "S" "array") ("f" "ftp_nb_put(" "resource $ftp_stream,string $remote_file,string $local_file,int $mode,int $startpos" "S" "int") ("f" "ftp_nb_get(" "resource $ftp_stream,string $local_file,string $remote_file,int $mode,int $resumepos" "S" "bool") ("f" "ftp_nb_fput(" "resource $ftp_stream,string $remote_file,resource $handle,int $mode,int $startpos" "S" "int") ("f" "ftp_nb_fget(" "resource $ftp_stream,resource $handle,string $remote_file,int $mode,int $resumepos" "S" "int") ("f" "ftp_nb_continue(" "resource $ftp_stream" "S" "int") ("f" "ftp_mkdir(" "resource $ftp_stream,string $directory" "S" "string") ("f" "ftp_mdtm(" "resource $ftp_stream,string $remote_file" "S" "int") ("f" "ftp_login(" "resource $ftp_stream,string $username,string $password" "S" "bool") ("f" "ftp_get_option(" "resource $ftp_stream,int $option" "S" "mixed") ("f" "ftp_get(" "resource $ftp_stream,string $local_file,string $remote_file,int $mode,int $resumepos" "S" "bool") ("f" "ftp_fput(" "resource $ftp_stream,string $remote_file,resource $handle,int $mode,int $startpos" "S" "bool") ("f" "ftp_fget(" "resource $ftp_stream,resource $handle,string $remote_file,int $mode,int $resumepos" "S" "bool") ("f" "ftp_exec(" "resource $ftp_stream,string $command" "S" "bool") ("f" "ftp_delete(" "resource $ftp_stream,string $path" "S" "bool") ("f" "ftp_connect(" "string $host,int $port,int $timeout" "S" "resource") ("f" "ftp_close(" "resource $ftp_stream" "S" "bool") ("f" "ftp_chmod(" "resource $ftp_stream,int $mode,string $filename" "S" "int") ("f" "ftp_chdir(" "resource $ftp_stream,string $directory" "S" "bool") ("f" "ftp_cdup(" "resource $ftp_stream" "S" "bool") ("f" "ftp_alloc(" "resource $ftp_stream,int $filesize,string &$result" "S" "bool") ("f" "ftok(" "string $pathname,string $proj" "S" "int") ("f" "ftell(" "resource $handle" "S" "int") ("f" "fstat(" "resource $handle" "S" "array") ("f" "fsockopen(" "string $hostname,int $port,int &$errno,string &$errstr,float $timeout" "S" "resource") ("f" "fseek(" "resource $handle,int $offset,int $whence" "S" "int") ("f" "fscanf(" "resource $handle,string $format,mixed &$__args__" "S" "mixed") ("f" "fribidi_log2vis(" "string $str,string $direction,int $charset" "S" "string") ("f" "frenchtojd(" "int $month,int $day,int $year" "S" "int") ("f" "fread(" "resource $handle,int $length" "S" "string") ("f" "fputcsv(" "resource $handle,array $fields,string $delimiter,string $enclosure" "S" "int") ("f" "fprintf(" "resource $handle,string $format,mixed $args,mixed $__args__" "S" "int") ("f" "fpassthru(" "resource $handle" "S" "int") ("f" "forward_static_call(" "callable $function,mixed $parameter,mixed $__args__" "S" "mixed") ("f" "forward_static_call_array(" "callable $function,array $parameters" "S" "mixed") ("f" "fopen(" "string $filename,string $mode,bool $use_include_path,resource $context" "S" "resource") ("f" "fnmatch(" "string $pattern,string $string,int $flags" "S" "bool") ("f" "fmod(" "float $x,float $y" "S" "float") ("f" "flush(" #1# "S" "void") ("f" "floor(" "float $value" "S" "float") ("f" "flock(" "resource $handle,int $operation,int &$wouldblock" "S" "bool") ("f" "floatval(" "mixed $var" "S" "float") ("f" "finfo_set_flags(" "resource $finfo,int $options" "S" "bool") ("f" "finfo_open(" "int $options,string $magic_file" "S" "resource") ("f" "finfo_file(" "resource $finfo,string $file_name,int $options,resource $context" "S" "string") ("f" "finfo_close(" "resource $finfo" "S" "bool") ("f" "finfo_buffer(" "resource $finfo,string $string,int $options,resource $context" "S" "string") ("f" "filter_var(" "mixed $variable,int $filter,mixed $options" "S" "mixed") ("f" "filter_var_array(" "array $data,mixed $definition,bool $add_empty" "S" "mixed") ("f" "filter_list(" #1# "S" "array") ("f" "filter_input(" "int $type,string $variable_name,int $filter,mixed $options" "S" "mixed") ("f" "filter_input_array(" "int $type,mixed $definition,bool $add_empty" "S" "mixed") ("f" "filter_id(" "string $filtername" "S" "int") ("f" "filter_has_var(" "int $type,string $variable_name" "S" "bool") ("f" "filetype(" "string $filename" "S" "string") ("f" "filesize(" "string $filename" "S" "int") ("f" "file_put_contents(" "string $filename,mixed $data,int $flags,resource $context" "S" "int") ("f" "filepro_rowcount(" #1# "S" "int") ("f" "filepro_retrieve(" "int $row_number,int $field_number" "S" "string") ("f" "filepro_fieldwidth(" "int $field_number" "S" "int") ("f" "filepro_fieldtype(" "int $field_number" "S" "string") ("f" "filepro_fieldname(" "int $field_number" "S" "string") ("f" "filepro_fieldcount(" #1# "S" "int") ("f" "filepro(" "string $directory" "S" "bool") ("f" "fileperms(" "string $filename" "S" "int") ("f" "fileowner(" "string $filename" "S" "int") ("f" "filemtime(" "string $filename" "S" "int") ("f" "fileinode(" "string $filename" "S" "int") ("f" "filegroup(" "string $filename" "S" "int") ("f" "file_get_contents(" "string $filename,bool $use_include_path,resource $context,int $offset,int $maxlen" "S" "string") ("f" "file_exists(" "string $filename" "S" "bool") ("f" "filectime(" "string $filename" "S" "int") ("f" "fileatime(" "string $filename" "S" "int") ("f" "file(" "string $filename,int $flags,resource $context" "S" "array") ("f" "fgets(" "resource $handle,int $length" "S" "string") ("f" "fgetss(" "resource $handle,int $length,string $allowable_tags" "S" "string") ("f" "fgetcsv(" "resource $handle,int $length,string $delimiter,string $enclosure,string $escape" "S" "array") ("f" "fgetc(" "resource $handle" "S" "string") ("f" "fflush(" "resource $handle" "S" "bool") ("f" "feof(" "resource $handle" "S" "bool") ("f" "fdf_set_version(" "resource $fdf_document,string $version" "S" "bool") ("f" "fdf_set_value(" "resource $fdf_document,string $fieldname,mixed $value,int $isName" "S" "bool") ("f" "fdf_set_target_frame(" "resource $fdf_document,string $frame_name" "S" "bool") ("f" "fdf_set_submit_form_action(" "resource $fdf_document,string $fieldname,int $trigger,string $script,int $flags" "S" "bool") ("f" "fdf_set_status(" "resource $fdf_document,string $status" "S" "bool") ("f" "fdf_set_opt(" "resource $fdf_document,string $fieldname,int $element,string $str1,string $str2" "S" "bool") ("f" "fdf_set_on_import_javascript(" "resource $fdf_document,string $script,bool $before_data_import" "S" "bool") ("f" "fdf_set_javascript_action(" "resource $fdf_document,string $fieldname,int $trigger,string $script" "S" "bool") ("f" "fdf_set_flags(" "resource $fdf_document,string $fieldname,int $whichFlags,int $newFlags" "S" "bool") ("f" "fdf_set_file(" "resource $fdf_document,string $url,string $target_frame" "S" "bool") ("f" "fdf_set_encoding(" "resource $fdf_document,string $encoding" "S" "bool") ("f" "fdf_set_ap(" "resource $fdf_document,string $field_name,int $face,string $filename,int $page_number" "S" "bool") ("f" "fdf_save_string(" "resource $fdf_document" "S" "string") ("f" "fdf_save(" "resource $fdf_document,string $filename" "S" "bool") ("f" "fdf_remove_item(" "resource $fdf_document,string $fieldname,int $item" "S" "bool") ("f" "fdf_open_string(" "string $fdf_data" "S" "resource") ("f" "fdf_open(" "string $filename" "S" "resource") ("f" "fdf_next_field_name(" "resource $fdf_document,string $fieldname" "S" "string") ("f" "fdf_header(" #1# "S" "void") ("f" "fdf_get_version(" "resource $fdf_document" "S" "string") ("f" "fdf_get_value(" "resource $fdf_document,string $fieldname,int $which" "S" "mixed") ("f" "fdf_get_status(" "resource $fdf_document" "S" "string") ("f" "fdf_get_opt(" "resource $fdf_document,string $fieldname,int $element" "S" "mixed") ("f" "fdf_get_flags(" "resource $fdf_document,string $fieldname,int $whichflags" "S" "int") ("f" "fdf_get_file(" "resource $fdf_document" "S" "string") ("f" "fdf_get_encoding(" "resource $fdf_document" "S" "string") ("f" "fdf_get_attachment(" "resource $fdf_document,string $fieldname,string $savepath" "S" "array") ("f" "fdf_get_ap(" "resource $fdf_document,string $field,int $face,string $filename" "S" "bool") ("f" "fdf_error(" "int $error_code" "S" "string") ("f" "fdf_errno(" #1# "S" "int") ("f" "fdf_enum_values(" "resource $fdf_document,callable $function,mixed $userdata" "S" "bool") ("f" "fdf_create(" #1# "S" "resource") ("f" "fdf_close(" "resource $fdf_document" "S" "void") ("f" "fdf_add_template(" "resource $fdf_document,int $newpage,string $filename,string $template,int $rename" "S" "bool") ("f" "fdf_add_doc_javascript(" "resource $fdf_document,string $script_name,string $script_code" "S" "bool") ("f" "fclose(" "resource $handle" "S" "bool") ("f" "fbsql_warnings(" "bool $OnOff" "S" "bool") ("f" "fbsql_username(" "resource $link_identifier,string $username" "S" "string") ("f" "fbsql_table_name(" "resource $result,int $index" "S" "string") ("f" "fbsql_stop_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "fbsql_start_db(" "string $database_name,resource $link_identifier,string $database_options" "S" "bool") ("f" "fbsql_set_transaction(" "resource $link_identifier,int $locking,int $isolation" "S" "void") ("f" "fbsql_set_password(" "resource $link_identifier,string $user,string $password,string $old_password" "S" "bool") ("f" "fbsql_set_lob_mode(" "resource $result,int $lob_mode" "S" "bool") ("f" "fbsql_set_characterset(" "resource $link_identifier,int $characterset,int $in_out_both" "S" "void") ("f" "fbsql_select_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "fbsql_rows_fetched(" "resource $result" "S" "int") ("f" "fbsql_rollback(" "resource $link_identifier" "S" "bool") ("f" "fbsql_result(" "resource $result,int $row,mixed $field" "S" "mixed") ("f" "fbsql_read_clob(" "string $clob_handle,resource $link_identifier" "S" "string") ("f" "fbsql_read_blob(" "string $blob_handle,resource $link_identifier" "S" "string") ("f" "fbsql_query(" "string $query,resource $link_identifier,int $batch_size" "S" "resource") ("f" "fbsql_pconnect(" "string $hostname,string $username,string $password" "S" "resource") ("f" "fbsql_password(" "resource $link_identifier,string $password" "S" "string") ("f" "fbsql_num_rows(" "resource $result" "S" "int") ("f" "fbsql_num_fields(" "resource $result" "S" "int") ("f" "fbsql_next_result(" "resource $result" "S" "bool") ("f" "fbsql_list_tables(" "string $database,resource $link_identifier" "S" "resource") ("f" "fbsql_list_fields(" "string $database_name,string $table_name,resource $link_identifier" "S" "resource") ("f" "fbsql_list_dbs(" "resource $link_identifier" "S" "resource") ("f" "fbsql_insert_id(" "resource $link_identifier" "S" "int") ("f" "fbsql_hostname(" "resource $link_identifier,string $host_name" "S" "string") ("f" "fbsql_get_autostart_info(" "resource $link_identifier" "S" "array") ("f" "fbsql_free_result(" "resource $result" "S" "bool") ("f" "fbsql_field_type(" "resource $result,int $field_offset" "S" "string") ("f" "fbsql_field_table(" "resource $result,int $field_offset" "S" "string") ("f" "fbsql_field_seek(" "resource $result,int $field_offset" "S" "bool") ("f" "fbsql_field_name(" "resource $result,int $field_index" "S" "string") ("f" "fbsql_field_len(" "resource $result,int $field_offset" "S" "int") ("f" "fbsql_field_flags(" "resource $result,int $field_offset" "S" "string") ("f" "fbsql_fetch_row(" "resource $result" "S" "array") ("f" "fbsql_fetch_object(" "resource $result" "S" "object") ("f" "fbsql_fetch_lengths(" "resource $result" "S" "array") ("f" "fbsql_fetch_field(" "resource $result,int $field_offset" "S" "object") ("f" "fbsql_fetch_assoc(" "resource $result" "S" "array") ("f" "fbsql_fetch_array(" "resource $result,int $result_type" "S" "array") ("f" "fbsql_error(" "resource $link_identifier" "S" "string") ("f" "fbsql_errno(" "resource $link_identifier" "S" "int") ("f" "fbsql_drop_db(" "string $database_name,resource $link_identifier" "S" "bool") ("f" "fbsql_db_status(" "string $database_name,resource $link_identifier" "S" "int") ("f" "fbsql_db_query(" "string $database,string $query,resource $link_identifier" "S" "resource") ("f" "fbsql_data_seek(" "resource $result,int $row_number" "S" "bool") ("f" "fbsql_database(" "resource $link_identifier,string $database" "S" "string") ("f" "fbsql_database_password(" "resource $link_identifier,string $database_password" "S" "string") ("f" "fbsql_create_db(" "string $database_name,resource $link_identifier,string $database_options" "S" "bool") ("f" "fbsql_create_clob(" "string $clob_data,resource $link_identifier" "S" "string") ("f" "fbsql_create_blob(" "string $blob_data,resource $link_identifier" "S" "string") ("f" "fbsql_connect(" "string $hostname,string $username,string $password" "S" "resource") ("f" "fbsql_commit(" "resource $link_identifier" "S" "bool") ("f" "fbsql_close(" "resource $link_identifier" "S" "bool") ("f" "fbsql_clob_size(" "string $clob_handle,resource $link_identifier" "S" "int") ("f" "fbsql_change_user(" "string $user,string $password,string $database,resource $link_identifier" "S" "bool") ("f" "fbsql_blob_size(" "string $blob_handle,resource $link_identifier" "S" "int") ("f" "fbsql_autocommit(" "resource $link_identifier,bool $OnOff" "S" "bool") ("f" "fbsql_affected_rows(" "resource $link_identifier" "S" "int") ("f" "fastcgi_finish_request(" #1# "S" "boolean") ("f" "fann_train_on_file(" "resource $ann,string $filename,int $max_epochs,int $epochs_between_reports,float $desired_error" "S" "bool") ("f" "fann_train_on_data(" "resource $ann,resource $data,int $max_epochs,int $epochs_between_reports,float $desired_error" "S" "bool") ("f" "fann_train_epoch(" "resource $ann,resource $data" "S" "float") ("f" "fann_train(" "resource $ann,array $input,array $desired_output" "S" "bool") ("f" "fann_test_data(" "resource $ann,resource $data" "S" "float") ("f" "fann_test(" "resource $ann,array $input,array $desired_output" "S" "bool") ("f" "fann_subset_train_data(" "resource $data,int $pos,int $length" "S" "resource") ("f" "fann_shuffle_train_data(" "resource $train_data" "S" "bool") ("f" "fann_set_weight(" "resource $ann,int $from_neuron,int $to_neuron,float $weight" "S" "bool") ("f" "fann_set_weight_array(" "resource $ann,array $connections" "S" "bool") ("f" "fann_set_train_stop_function(" "resource $ann,int $stop_function" "S" "bool") ("f" "fann_set_training_algorithm(" "resource $ann,int $training_algorithm" "S" "bool") ("f" "fann_set_train_error_function(" "resource $ann,int $error_function" "S" "bool") ("f" "fann_set_scaling_params(" "resource $ann,resource $train_data,float $new_input_min,float $new_input_max,float $new_output_min,float $new_output_max" "S" "bool") ("f" "fann_set_sarprop_weight_decay_shift(" "resource $ann,float $sarprop_weight_decay_shift" "S" "bool") ("f" "fann_set_sarprop_temperature(" "resource $ann,float $sarprop_temperature" "S" "bool") ("f" "fann_set_sarprop_step_error_threshold_factor(" "resource $ann,float $sarprop_step_error_threshold_factor" "S" "bool") ("f" "fann_set_sarprop_step_error_shift(" "resource $ann,float $sarprop_step_error_shift" "S" "bool") ("f" "fann_set_rprop_increase_factor(" "resource $ann,float $rprop_increase_factor" "S" "bool") ("f" "fann_set_rprop_delta_zero(" "resource $ann,float $rprop_delta_zero" "S" "bool") ("f" "fann_set_rprop_delta_min(" "resource $ann,float $rprop_delta_min" "S" "bool") ("f" "fann_set_rprop_delta_max(" "resource $ann,float $rprop_delta_max" "S" "bool") ("f" "fann_set_rprop_decrease_factor(" "resource $ann,float $rprop_decrease_factor" "S" "bool") ("f" "fann_set_quickprop_mu(" "resource $ann,float $quickprop_mu" "S" "bool") ("f" "fann_set_quickprop_decay(" "resource $ann,float $quickprop_decay" "S" "bool") ("f" "fann_set_output_scaling_params(" "resource $ann,resource $train_data,float $new_output_min,float $new_output_max" "S" "bool") ("f" "fann_set_learning_rate(" "resource $ann,float $learning_rate" "S" "bool") ("f" "fann_set_learning_momentum(" "resource $ann,float $learning_momentum" "S" "bool") ("f" "fann_set_input_scaling_params(" "resource $ann,resource $train_data,float $new_input_min,float $new_input_max" "S" "bool") ("f" "fann_set_error_log(" "resource $errdat,string $log_file" "S" "void") ("f" "fann_set_cascade_weight_multiplier(" "resource $ann,float $cascade_weight_multiplier" "S" "bool") ("f" "fann_set_cascade_output_stagnation_epochs(" "resource $ann,int $cascade_output_stagnation_epochs" "S" "bool") ("f" "fann_set_cascade_output_change_fraction(" "resource $ann,float $cascade_output_change_fraction" "S" "bool") ("f" "fann_set_cascade_num_candidate_groups(" "resource $ann,int $cascade_num_candidate_groups" "S" "bool") ("f" "fann_set_cascade_min_out_epochs(" "resource $ann,int $cascade_min_out_epochs" "S" "bool") ("f" "fann_set_cascade_min_cand_epochs(" "resource $ann,int $cascade_min_cand_epochs" "S" "bool") ("f" "fann_set_cascade_max_out_epochs(" "resource $ann,int $cascade_max_out_epochs" "S" "bool") ("f" "fann_set_cascade_max_cand_epochs(" "resource $ann,int $cascade_max_cand_epochs" "S" "bool") ("f" "fann_set_cascade_candidate_stagnation_epochs(" "resource $ann,int $cascade_candidate_stagnation_epochs" "S" "bool") ("f" "fann_set_cascade_candidate_limit(" "resource $ann,float $cascade_candidate_limit" "S" "bool") ("f" "fann_set_cascade_candidate_change_fraction(" "resource $ann,float $cascade_candidate_change_fraction" "S" "bool") ("f" "fann_set_cascade_activation_steepnesses(" "resource $ann,array $cascade_activation_steepnesses_count" "S" "bool") ("f" "fann_set_cascade_activation_functions(" "resource $ann,array $cascade_activation_functions" "S" "bool") ("f" "fann_set_callback(" "resource $ann,collable $callback" "S" "bool") ("f" "fann_set_bit_fail_limit(" "resource $ann,float $bit_fail_limit" "S" "bool") ("f" "fann_set_activation_steepness_output(" "resource $ann,float $activation_steepness" "S" "bool") ("f" "fann_set_activation_steepness_layer(" "resource $ann,float $activation_steepness,int $layer" "S" "bool") ("f" "fann_set_activation_steepness_hidden(" "resource $ann,float $activation_steepness" "S" "bool") ("f" "fann_set_activation_steepness(" "resource $ann,float $activation_steepness,int $layer,int $neuron" "S" "bool") ("f" "fann_set_activation_function_output(" "resource $ann,int $activation_function" "S" "bool") ("f" "fann_set_activation_function_layer(" "resource $ann,int $activation_function,int $layer" "S" "bool") ("f" "fann_set_activation_function_hidden(" "resource $ann,int $activation_function" "S" "bool") ("f" "fann_set_activation_function(" "resource $ann,int $activation_function,int $layer,int $neuron" "S" "bool") ("f" "fann_scale_train_data(" "resource $train_data,float $new_min,float $new_max" "S" "bool") ("f" "fann_scale_train(" "resource $ann,resource $train_data" "S" "bool") ("f" "fann_scale_output_train_data(" "resource $train_data,float $new_min,float $new_max" "S" "bool") ("f" "fann_scale_output(" "resource $ann,array $output_vector" "S" "bool") ("f" "fann_scale_input_train_data(" "resource $train_data,float $new_min,float $new_max" "S" "bool") ("f" "fann_scale_input(" "resource $ann,array $input_vector" "S" "bool") ("f" "fann_save_train(" "resource $data,string $file_name" "S" "bool") ("f" "fann_save(" "resource $ann,string $configuration_file" "S" "bool") ("f" "fann_run(" "resource $ann,array $input" "S" "array") ("f" "fann_reset_MSE(" "string $ann" "S" "bool") ("f" "fann_reset_errstr(" "resource $errdat" "S" "void") ("f" "fann_reset_errno(" "resource $errdat" "S" "void") ("f" "fann_read_train_from_file(" "string $filename" "S" "resource") ("f" "fann_randomize_weights(" "resource $ann,float $min_weight,float $max_weight" "S" "bool") ("f" "fann_print_error(" "string $errdat" "S" "void") ("f" "fann_num_output_train_data(" "resource $data" "S" "int") ("f" "fann_num_input_train_data(" "resource $data" "S" "int") ("f" "fann_merge_train_data(" "resource $data1,resource $data2" "S" "resource") ("f" "fann_length_train_data(" "resource $data" "S" "int") ("f" "fann_init_weights(" "resource $ann,resource $train_data" "S" "bool") ("f" "fann_get_train_stop_function(" "resource $ann" "S" "int") ("f" "fann_get_training_algorithm(" "resource $ann" "S" "int") ("f" "fann_get_train_error_function(" "resource $ann" "S" "int") ("f" "fann_get_total_neurons(" "resource $ann" "S" "int") ("f" "fann_get_total_connections(" "resource $ann" "S" "int") ("f" "fann_get_sarprop_weight_decay_shift(" "resource $ann" "S" "float") ("f" "fann_get_sarprop_temperature(" "resource $ann" "S" "float") ("f" "fann_get_sarprop_step_error_threshold_factor(" "resource $ann" "S" "float") ("f" "fann_get_sarprop_step_error_shift(" "resource $ann" "S" "float") ("f" "fann_get_rprop_increase_factor(" "resource $ann" "S" "float") ("f" "fann_get_rprop_delta_zero(" "resource $ann" "S" "ReturnType") ("f" "fann_get_rprop_delta_min(" "resource $ann" "S" "float") ("f" "fann_get_rprop_delta_max(" "resource $ann" "S" "float") ("f" "fann_get_rprop_decrease_factor(" "resource $ann" "S" "float") ("f" "fann_get_quickprop_mu(" "resource $ann" "S" "float") ("f" "fann_get_quickprop_decay(" "resource $ann" "S" "float") ("f" "fann_get_num_output(" "resource $ann" "S" "int") ("f" "fann_get_num_layers(" "resource $ann" "S" "int") ("f" "fann_get_num_input(" "resource $ann" "S" "int") ("f" "fann_get_network_type(" "resource $ann" "S" "int") ("f" "fann_get_MSE(" "resource $ann" "S" "float") ("f" "fann_get_learning_rate(" "resource $ann" "S" "float") ("f" "fann_get_learning_momentum(" "resource $ann" "S" "float") ("f" "fann_get_layer_array(" "resource $ann" "S" "array") ("f" "fann_get_errstr(" "resource $errdat" "S" "string") ("f" "fann_get_errno(" "resource $errdat" "S" "int") ("f" "fann_get_connection_rate(" "resource $ann" "S" "float") ("f" "fann_get_connection_array(" "resource $ann" "S" "array") ("f" "fann_get_cascade_weight_multiplier(" "resource $ann" "S" "float") ("f" "fann_get_cascade_output_stagnation_epochs(" "resource $ann" "S" "int") ("f" "fann_get_cascade_output_change_fraction(" "resource $ann" "S" "float") ("f" "fann_get_cascade_num_candidates(" "resource $ann" "S" "int") ("f" "fann_get_cascade_num_candidate_groups(" "resource $ann" "S" "int") ("f" "fann_get_cascade_min_out_epochs(" "resource $ann" "S" "int") ("f" "fann_get_cascade_min_cand_epochs(" "resource $ann" "S" "int") ("f" "fann_get_cascade_max_out_epochs(" "resource $ann" "S" "int") ("f" "fann_get_cascade_max_cand_epochs(" "resource $ann" "S" "int") ("f" "fann_get_cascade_candidate_stagnation_epochs(" "resource $ann" "S" "float") ("f" "fann_get_cascade_candidate_limit(" "resource $ann" "S" "float") ("f" "fann_get_cascade_candidate_change_fraction(" "resource $ann" "S" "float") ("f" "fann_get_cascade_activation_steepnesses_count(" "resource $ann" "S" "int") ("f" "fann_get_cascade_activation_steepnesses(" "resource $ann" "S" "array") ("f" "fann_get_cascade_activation_functions_count(" "resource $ann" "S" "int") ("f" "fann_get_cascade_activation_functions(" "resource $ann" "S" "array") ("f" "fann_get_bit_fail_limit(" "resource $ann" "S" "float") ("f" "fann_get_bit_fail(" "resource $ann" "S" "int") ("f" "fann_get_bias_array(" "resource $ann" "S" "array") ("f" "fann_get_activation_steepness(" "resource $ann,int $layer,int $neuron" "S" "float") ("f" "fann_get_activation_function(" "resource $ann,int $layer,int $neuron" "S" "int") ("f" "fann_duplicate_train_data(" "resource $data" "S" "resource") ("f" "fann_destroy_train(" "resource $train_data" "S" "bool") ("f" "fann_destroy(" "resource $ann" "S" "bool") ("f" "fann_descale_train(" "resource $ann,resource $train_data" "S" "bool") ("f" "fann_descale_output(" "resource $ann,array $output_vector" "S" "bool") ("f" "fann_descale_input(" "resource $ann,array $input_vector" "S" "bool") ("f" "fann_create_train(" "int $num_data,int $num_input,int $num_output" "S" "resource") ("f" "fann_create_train_from_callback(" "int $num_data,int $num_input,int $num_output,collable $user_function" "S" "resource") ("f" "fann_create_standard(" "int $num_layers,int $num_neurons1,int $num_neurons2,int $__args__" "S" "resource") ("f" "fann_create_standard_array(" "int $num_layers,array $layers" "S" "resource") ("f" "fann_create_sparse(" "float $connection_rate,int $num_layers,int $num_neurons1,int $num_neurons2,int $__args__" "S" "ReturnType") ("f" "fann_create_sparse_array(" "float $connection_rate,int $num_layers,array $layers" "S" "ReturnType") ("f" "fann_create_shortcut(" "int $num_layers,int $num_neurons1,int $num_neurons2,int $__args__" "S" "reference") ("f" "fann_create_shortcut_array(" "int $num_layers,array $layers" "S" "resource") ("f" "fann_create_from_file(" "string $configuration_file" "S" "resource") ("f" "fann_copy(" "resource $ann" "S" "resource") ("f" "fann_clear_scaling_params(" "resource $ann" "S" "bool") ("f" "fann_cascadetrain_on_file(" "resource $ann,string $filename,int $max_neurons,int $neurons_between_reports,float $desired_error" "S" "bool") ("f" "fann_cascadetrain_on_data(" "resource $ann,resource $data,int $max_neurons,int $neurons_between_reports,float $desired_error" "S" "bool") ("f" "fam_suspend_monitor(" "resource $fam,resource $fam_monitor" "S" "bool") ("f" "fam_resume_monitor(" "resource $fam,resource $fam_monitor" "S" "bool") ("f" "fam_pending(" "resource $fam" "S" "int") ("f" "fam_open(" "string $appname" "S" "resource") ("f" "fam_next_event(" "resource $fam" "S" "array") ("f" "fam_monitor_file(" "resource $fam,string $filename" "S" "resource") ("f" "fam_monitor_directory(" "resource $fam,string $dirname" "S" "resource") ("f" "fam_monitor_collection(" "resource $fam,string $dirname,int $depth,string $mask" "S" "resource") ("f" "fam_close(" "resource $fam" "S" "void") ("f" "fam_cancel_monitor(" "resource $fam,resource $fam_monitor" "S" "bool") ("f" "ezmlm_hash(" "string $addr" "S" "int") ("f" "extract(" "array &$var_array,int $extract_type,string $prefix" "S" "int") ("f" "extension_loaded(" "string $name" "S" "bool") ("f" "expm1(" "float $arg" "S" "float") ("f" "explode(" "string $delimiter,string $string,int $limit" "S" "array") ("f" "exp(" "float $arg" "S" "float") ("f" "expect_popen(" "string $command" "S" "resource") ("f" "expect_expectl(" "resource $expect,array $cases,array &$match" "S" "int") ("f" "exif_thumbnail(" "string $filename,int &$width,int &$height,int &$imagetype" "S" "string") ("f" "exif_tagname(" "int $index" "S" "string") ("f" "exif_read_data(" "string $filename,string $sections,bool $arrays,bool $thumbnail" "S" "array") ("f" "exif_imagetype(" "string $filename" "S" "int") ("f" "exec(" "string $command,array &$output,int &$return_var" "S" "string") ("f" "event_timer_set(" "resource $event,callable $callback,mixed $arg" "S" "bool") ("f" "event_set(" "resource $event,mixed $fd,int $events,mixed $callback,mixed $arg" "S" "bool") ("f" "event_priority_set(" "resource $event,int $priority" "S" "bool") ("f" "event_new(" #1# "S" "resource") ("f" "event_free(" "resource $event" "S" "void") ("f" "event_del(" "resource $event" "S" "bool") ("f" "event_buffer_write(" "resource $bevent,string $data,int $data_size" "S" "bool") ("f" "event_buffer_watermark_set(" "resource $bevent,int $events,int $lowmark,int $highmark" "S" "void") ("f" "event_buffer_timeout_set(" "resource $bevent,int $read_timeout,int $write_timeout" "S" "void") ("f" "event_buffer_set_callback(" "resource $event,mixed $readcb,mixed $writecb,mixed $errorcb,mixed $arg" "S" "bool") ("f" "event_buffer_read(" "resource $bevent,int $data_size" "S" "string") ("f" "event_buffer_priority_set(" "resource $bevent,int $priority" "S" "bool") ("f" "event_buffer_new(" "resource $stream,mixed $readcb,mixed $writecb,mixed $errorcb,mixed $arg" "S" "resource") ("f" "event_buffer_free(" "resource $bevent" "S" "void") ("f" "event_buffer_fd_set(" "resource $bevent,resource $fd" "S" "void") ("f" "event_buffer_enable(" "resource $bevent,int $events" "S" "bool") ("f" "event_buffer_disable(" "resource $bevent,int $events" "S" "bool") ("f" "event_buffer_base_set(" "resource $bevent,resource $event_base" "S" "bool") ("f" "event_base_set(" "resource $event,resource $event_base" "S" "bool") ("f" "event_base_reinit(" "resource $event_base" "S" "bool") ("f" "event_base_priority_init(" "resource $event_base,int $npriorities" "S" "bool") ("f" "event_base_new(" #1# "S" "resource") ("f" "event_base_loop(" "resource $event_base,int $flags" "S" "int") ("f" "event_base_loopexit(" "resource $event_base,int $timeout" "S" "bool") ("f" "event_base_loopbreak(" "resource $event_base" "S" "bool") ("f" "event_base_free(" "resource $event_base" "S" "void") ("f" "event_add(" "resource $event,int $timeout" "S" "bool") ("f" "escapeshellcmd(" "string $command" "S" "string") ("f" "escapeshellarg(" "string $arg" "S" "string") ("f" "error_reporting(" "int $level" "S" "int") ("f" "error_log(" "string $message,int $message_type,string $destination,string $extra_headers" "S" "bool") ("f" "error_get_last(" #1# "S" "array") ("f" "ereg_replace(" "string $pattern,string $replacement,string $string" "S" "string") ("f" "eregi_replace(" "string $pattern,string $replacement,string $string" "S" "string") ("f" "ereg(" "string $pattern,string $string,array &$regs" "S" "int") ("f" "eregi(" "string $pattern,string $string,array &$regs" "S" "int") ("f" "end(" "array &$array" "S" "mixed") ("f" "enchant_dict_suggest(" "resource $dict,string $word" "S" "array") ("f" "enchant_dict_store_replacement(" "resource $dict,string $mis,string $cor" "S" "void") ("f" "enchant_dict_quick_check(" "resource $dict,string $word,array &$suggestions" "S" "bool") ("f" "enchant_dict_is_in_session(" "resource $dict,string $word" "S" "bool") ("f" "enchant_dict_get_error(" "resource $dict" "S" "string") ("f" "enchant_dict_describe(" "resource $dict" "S" "mixed") ("f" "enchant_dict_check(" "resource $dict,string $word" "S" "bool") ("f" "enchant_dict_add_to_session(" "resource $dict,string $word" "S" "void") ("f" "enchant_dict_add_to_personal(" "resource $dict,string $word" "S" "void") ("f" "enchant_broker_set_ordering(" "resource $broker,string $tag,string $ordering" "S" "bool") ("f" "enchant_broker_request_pwl_dict(" "resource $broker,string $filename" "S" "resource") ("f" "enchant_broker_request_dict(" "resource $broker,string $tag" "S" "resource") ("f" "enchant_broker_list_dicts(" "resource $broker" "S" "mixed") ("f" "enchant_broker_init(" #1# "S" "resource") ("f" "enchant_broker_get_error(" "resource $broker" "S" "string") ("f" "enchant_broker_free_dict(" "resource $dict" "S" "bool") ("f" "enchant_broker_free(" "resource $broker" "S" "bool") ("f" "enchant_broker_dict_exists(" "resource $broker,string $tag" "S" "bool") ("f" "enchant_broker_describe(" "resource $broker" "S" "array") ("f" "eio_write(" "mixed $fd,string $str,int $length,int $offset,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_utime(" "string $path,float $atime,float $mtime,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_unlink(" "string $path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_truncate(" "string $path,int $offset,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_sync(" "int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_syncfs(" "mixed $fd,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_sync_file_range(" "mixed $fd,int $offset,int $nbytes,int $flags,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_symlink(" "string $path,string $new_path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_statvfs(" "string $path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_stat(" "string $path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_set_min_parallel(" "string $nthreads" "S" "void") ("f" "eio_set_max_poll_time(" "float $nseconds" "S" "void") ("f" "eio_set_max_poll_reqs(" "int $nreqs" "S" "void") ("f" "eio_set_max_parallel(" "int $nthreads" "S" "void") ("f" "eio_set_max_idle(" "int $nthreads" "S" "void") ("f" "eio_sendfile(" "mixed $out_fd,mixed $in_fd,int $offset,int $length,int $pri,callable $callback,string $data" "S" "resource") ("f" "eio_seek(" "mixed $fd,int $offset,int $whence,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_rmdir(" "string $path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_rename(" "string $path,string $new_path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_realpath(" "string $path,int $pri,callable $callback,string $data" "S" "resource") ("f" "eio_read(" "mixed $fd,int $length,int $offset,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_readlink(" "string $path,int $pri,callable $callback,string $data" "S" "resource") ("f" "eio_readdir(" "string $path,int $flags,int $pri,callable $callback,string $data" "S" "resource") ("f" "eio_readahead(" "mixed $fd,int $offset,int $length,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_poll(" #1# "S" "int") ("f" "eio_open(" "string $path,int $flags,int $mode,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_nthreads(" #1# "S" "int") ("f" "eio_nreqs(" #1# "S" "int") ("f" "eio_nready(" #1# "S" "int") ("f" "eio_npending(" #1# "S" "int") ("f" "eio_nop(" "int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_mknod(" "string $path,int $mode,int $dev,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_mkdir(" "string $path,int $mode,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_lstat(" "string $path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_link(" "string $path,string $new_path,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_init(" #1# "S" "void") ("f" "eio_grp(" "callable $callback,string $data" "S" "resource") ("f" "eio_grp_limit(" "resource $grp,int $limit" "S" "void") ("f" "eio_grp_cancel(" "resource $grp" "S" "void") ("f" "eio_grp_add(" "resource $grp,resource $req" "S" "void") ("f" "eio_get_last_error(" "resource $req" "S" "string") ("f" "eio_get_event_stream(" #1# "S" "mixed") ("f" "eio_futime(" "mixed $fd,float $atime,float $mtime,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_ftruncate(" "mixed $fd,int $offset,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_fsync(" "mixed $fd,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_fstatvfs(" "mixed $fd,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_fstat(" "mixed $fd,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_fdatasync(" "mixed $fd,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_fchown(" "mixed $fd,int $uid,int $gid,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_fchmod(" "mixed $fd,int $mode,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_fallocate(" "mixed $fd,int $mode,int $offset,int $length,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_event_loop(" #1# "S" "bool") ("f" "eio_dup2(" "mixed $fd,mixed $fd2,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_custom(" "callable $execute,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_close(" "mixed $fd,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_chown(" "string $path,int $uid,int $gid,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_chmod(" "string $path,int $mode,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "eio_cancel(" "resource $req" "S" "void") ("f" "eio_busy(" "int $delay,int $pri,callable $callback,mixed $data" "S" "resource") ("f" "easter_days(" "int $year,int $method" "S" "int") ("f" "easter_date(" "int $year" "S" "int") ("f" "each(" "array &$array" "S" "array") ("f" "dom_import_simplexml(" "SimpleXMLElement $node" "S" "DOMElement") ("f" "dns_get_record(" "string $hostname,int $type,array &$authns,array &$addtl,bool &$raw" "S" "array") ("f" "dngettext(" "string $domain,string $msgid1,string $msgid2,int $n" "S" "string") ("f" "dl(" "string $library" "S" "bool") ("f" "disk_total_space(" "string $directory" "S" "float") ("f" "disk_free_space(" "string $directory" "S" "float") ("f" "dirname(" "string $path" "S" "string") ("f" "dir(" "string $directory,resource $context" "S" "Directory") ("f" "dio_write(" "resource $fd,string $data,int $len" "S" "int") ("f" "dio_truncate(" "resource $fd,int $offset" "S" "bool") ("f" "dio_tcsetattr(" "resource $fd,array $options" "S" "bool") ("f" "dio_stat(" "resource $fd" "S" "array") ("f" "dio_seek(" "resource $fd,int $pos,int $whence" "S" "int") ("f" "dio_read(" "resource $fd,int $len" "S" "string") ("f" "dio_open(" "string $filename,int $flags,int $mode" "S" "resource") ("f" "dio_fcntl(" "resource $fd,int $cmd,mixed $args" "S" "mixed") ("f" "dio_close(" "resource $fd" "S" "void") ("f" "dgettext(" "string $domain,string $message" "S" "string") ("f" "delete(" #1# "S" "void") ("f" "deg2rad(" "float $number" "S" "float") ("f" "define_syslog_variables(" #1# "S" "void") ("f" "defined(" "string $name" "S" "bool") ("f" "define(" "string $name,mixed $value,bool $case_insensitive" "S" "bool") ("f" "decoct(" "int $number" "S" "string") ("f" "dechex(" "int $number" "S" "string") ("f" "decbin(" "int $number" "S" "string") ("f" "debug_zval_dump(" "mixed $variable,mixed $__args__" "S" "void") ("f" "debug_print_backtrace(" "int $options,int $limit" "S" "void") ("f" "debug_backtrace(" "int $options,int $limit" "S" "array") ("f" "dcngettext(" "string $domain,string $msgid1,string $msgid2,int $n,int $category" "S" "string") ("f" "dcgettext(" "string $domain,string $message,int $category" "S" "string") ("f" "dbx_sort(" "object $result,string $user_compare_function" "S" "bool") ("f" "dbx_query(" "object $link_identifier,string $sql_statement,int $flags" "S" "mixed") ("f" "dbx_fetch_row(" "object $result_identifier" "S" "mixed") ("f" "dbx_escape_string(" "object $link_identifier,string $text" "S" "string") ("f" "dbx_error(" "object $link_identifier" "S" "string") ("f" "dbx_connect(" "mixed $module,string $host,string $database,string $username,string $password,int $persistent" "S" "object") ("f" "dbx_compare(" "array $row_a,array $row_b,string $column_key,int $flags" "S" "int") ("f" "dbx_close(" "object $link_identifier" "S" "int") ("f" "dbplus_xunlockrel(" "resource $relation" "S" "int") ("f" "dbplus_xlockrel(" "resource $relation" "S" "int") ("f" "dbplus_update(" "resource $relation,array $old,array $new" "S" "int") ("f" "dbplus_unselect(" "resource $relation" "S" "int") ("f" "dbplus_unlockrel(" "resource $relation" "S" "int") ("f" "dbplus_undoprepare(" "resource $relation" "S" "int") ("f" "dbplus_undo(" "resource $relation" "S" "int") ("f" "dbplus_tremove(" "resource $relation,array $tuple,array &$current" "S" "int") ("f" "dbplus_tcl(" "int $sid,string $script" "S" "string") ("f" "dbplus_sql(" "string $query,string $server,string $dbpath" "S" "resource") ("f" "dbplus_setindex(" "resource $relation,string $idx_name" "S" "int") ("f" "dbplus_setindexbynumber(" "resource $relation,int $idx_number" "S" "int") ("f" "dbplus_savepos(" "resource $relation" "S" "int") ("f" "dbplus_rzap(" "resource $relation" "S" "int") ("f" "dbplus_runlink(" "resource $relation" "S" "int") ("f" "dbplus_rsecindex(" "resource $relation,mixed $domlist,int $type" "S" "mixed") ("f" "dbplus_rrename(" "resource $relation,string $name" "S" "int") ("f" "dbplus_rquery(" "string $query,string $dbpath" "S" "resource") ("f" "dbplus_ropen(" "string $name" "S" "resource") ("f" "dbplus_rkeys(" "resource $relation,mixed $domlist" "S" "mixed") ("f" "dbplus_restorepos(" "resource $relation,array $tuple" "S" "int") ("f" "dbplus_resolve(" "string $relation_name" "S" "array") ("f" "dbplus_rcrtlike(" "string $name,resource $relation,int $overwrite" "S" "mixed") ("f" "dbplus_rcrtexact(" "string $name,resource $relation,bool $overwrite" "S" "mixed") ("f" "dbplus_rcreate(" "string $name,mixed $domlist,bool $overwrite" "S" "resource") ("f" "dbplus_rchperm(" "resource $relation,int $mask,string $user,string $group" "S" "int") ("f" "dbplus_prev(" "resource $relation,array &$tuple" "S" "int") ("f" "dbplus_open(" "string $name" "S" "resource") ("f" "dbplus_next(" "resource $relation,array &$tuple" "S" "int") ("f" "dbplus_lockrel(" "resource $relation" "S" "int") ("f" "dbplus_last(" "resource $relation,array &$tuple" "S" "int") ("f" "dbplus_info(" "resource $relation,string $key,array &$result" "S" "int") ("f" "dbplus_getunique(" "resource $relation,int $uniqueid" "S" "int") ("f" "dbplus_getlock(" "resource $relation,string $tuple" "S" "int") ("f" "dbplus_freerlocks(" "resource $relation" "S" "int") ("f" "dbplus_freelock(" "resource $relation,string $tuple" "S" "int") ("f" "dbplus_freealllocks(" #1# "S" "int") ("f" "dbplus_flush(" "resource $relation" "S" "int") ("f" "dbplus_first(" "resource $relation,array &$tuple" "S" "int") ("f" "dbplus_find(" "resource $relation,array $constraints,mixed $tuple" "S" "int") ("f" "dbplus_errno(" #1# "S" "int") ("f" "dbplus_errcode(" "int $errno" "S" "string") ("f" "dbplus_curr(" "resource $relation,array &$tuple" "S" "int") ("f" "dbplus_close(" "resource $relation" "S" "mixed") ("f" "dbplus_chdir(" "string $newdir" "S" "string") ("f" "dbplus_aql(" "string $query,string $server,string $dbpath" "S" "resource") ("f" "dbplus_add(" "resource $relation,array $tuple" "S" "int") ("f" "dba_sync(" "resource $handle" "S" "bool") ("f" "dbase_replace_record(" "int $dbase_identifier,array $record,int $record_number" "S" "bool") ("f" "dbase_pack(" "int $dbase_identifier" "S" "bool") ("f" "dbase_open(" "string $filename,int $mode" "S" "int") ("f" "dbase_numrecords(" "int $dbase_identifier" "S" "int") ("f" "dbase_numfields(" "int $dbase_identifier" "S" "int") ("f" "dbase_get_record_with_names(" "int $dbase_identifier,int $record_number" "S" "array") ("f" "dbase_get_record(" "int $dbase_identifier,int $record_number" "S" "array") ("f" "dbase_get_header_info(" "int $dbase_identifier" "S" "array") ("f" "dbase_delete_record(" "int $dbase_identifier,int $record_number" "S" "bool") ("f" "dbase_create(" "string $filename,array $fields" "S" "int") ("f" "dbase_close(" "int $dbase_identifier" "S" "bool") ("f" "dbase_add_record(" "int $dbase_identifier,array $record" "S" "bool") ("f" "dba_replace(" "string $key,string $value,resource $handle" "S" "bool") ("f" "dba_popen(" "string $path,string $mode,string $handler,mixed $__args__" "S" "resource") ("f" "dba_optimize(" "resource $handle" "S" "bool") ("f" "dba_open(" "string $path,string $mode,string $handler,mixed $__args__" "S" "resource") ("f" "dba_nextkey(" "resource $handle" "S" "string") ("f" "dba_list(" #1# "S" "array") ("f" "dba_key_split(" "mixed $key" "S" "mixed") ("f" "dba_insert(" "string $key,string $value,resource $handle" "S" "bool") ("f" "dba_handlers(" "bool $full_info" "S" "array") ("f" "dba_firstkey(" "resource $handle" "S" "string") ("f" "dba_fetch(" "string $key,resource $handle" "S" "string") ("f" "dba_exists(" "string $key,resource $handle" "S" "bool") ("f" "dba_delete(" "string $key,resource $handle" "S" "bool") ("f" "dba_close(" "resource $handle" "S" "void") ("f" "db2_tables(" "resource $connection,string $qualifier,string $schema,string $table_name,string $table_type" "S" "resource") ("f" "db2_table_privileges(" "resource $connection,string $qualifier,string $schema,string $table_name" "S" "resource") ("f" "db2_stmt_error(" "resource $stmt" "S" "string") ("f" "db2_stmt_errormsg(" "resource $stmt" "S" "string") ("f" "db2_statistics(" "resource $connection,string $qualifier,string $schema,string $table_name,bool $unique" "S" "resource") ("f" "db2_special_columns(" "resource $connection,string $qualifier,string $schema,string $table_name,int $scope" "S" "resource") ("f" "db2_set_option(" "resource $resource,array $options,int $type" "S" "bool") ("f" "db2_server_info(" "resource $connection" "S" "object") ("f" "db2_rollback(" "resource $connection" "S" "bool") ("f" "db2_result(" "resource $stmt,mixed $column" "S" "mixed") ("f" "db2_procedures(" "resource $connection,string $qualifier,string $schema,string $procedure" "S" "resource") ("f" "db2_procedure_columns(" "resource $connection,string $qualifier,string $schema,string $procedure,string $parameter" "S" "resource") ("f" "db2_primary_keys(" "resource $connection,string $qualifier,string $schema,string $table_name" "S" "resource") ("f" "db2_prepare(" "resource $connection,string $statement,array $options" "S" "resource") ("f" "db2_pconnect(" "string $database,string $username,string $password,array $options" "S" "resource") ("f" "db2_pclose(" "resource $resource" "S" "bool") ("f" "db2_num_rows(" "resource $stmt" "S" "int") ("f" "db2_num_fields(" "resource $stmt" "S" "int") ("f" "db2_next_result(" "resource $stmt" "S" "resource") ("f" "db2_lob_read(" "resource $stmt,int $colnum,int $length" "S" "string") ("f" "db2_last_insert_id(" "resource $resource" "S" "string") ("f" "db2_get_option(" "resource $resource,string $option" "S" "string") ("f" "db2_free_stmt(" "resource $stmt" "S" "bool") ("f" "db2_free_result(" "resource $stmt" "S" "bool") ("f" "db2_foreign_keys(" "resource $connection,string $qualifier,string $schema,string $table_name" "S" "resource") ("f" "db2_field_width(" "resource $stmt,mixed $column" "S" "int") ("f" "db2_field_type(" "resource $stmt,mixed $column" "S" "string") ("f" "db2_field_scale(" "resource $stmt,mixed $column" "S" "int") ("f" "db2_field_precision(" "resource $stmt,mixed $column" "S" "int") ("f" "db2_field_num(" "resource $stmt,mixed $column" "S" "int") ("f" "db2_field_name(" "resource $stmt,mixed $column" "S" "string") ("f" "db2_field_display_size(" "resource $stmt,mixed $column" "S" "int") ("f" "db2_fetch_row(" "resource $stmt,int $row_number" "S" "bool") ("f" "db2_fetch_object(" "resource $stmt,int $row_number" "S" "object") ("f" "db2_fetch_both(" "resource $stmt,int $row_number" "S" "array") ("f" "db2_fetch_assoc(" "resource $stmt,int $row_number" "S" "array") ("f" "db2_fetch_array(" "resource $stmt,int $row_number" "S" "array") ("f" "db2_execute(" "resource $stmt,array $parameters" "S" "bool") ("f" "db2_exec(" "resource $connection,string $statement,array $options" "S" "resource") ("f" "db2_escape_string(" "string $string_literal" "S" "string") ("f" "db2_cursor_type(" "resource $stmt" "S" "int") ("f" "db2_conn_error(" "resource $connection" "S" "string") ("f" "db2_conn_errormsg(" "resource $connection" "S" "string") ("f" "db2_connect(" "string $database,string $username,string $password,array $options" "S" "resource") ("f" "db2_commit(" "resource $connection" "S" "bool") ("f" "db2_columns(" "resource $connection,string $qualifier,string $schema,string $table_name,string $column_name" "S" "resource") ("f" "db2_column_privileges(" "resource $connection,string $qualifier,string $schema,string $table_name,string $column_name" "S" "resource") ("f" "db2_close(" "resource $connection" "S" "bool") ("f" "db2_client_info(" "resource $connection" "S" "object") ("f" "db2_bind_param(" "resource $stmt,int $parameter_number,string $variable_name,int $parameter_type,int $data_type,int $precision,int $scale" "S" "bool") ("f" "db2_autocommit(" "resource $connection,bool $value" "S" "mixed") ("f" "date_sunset(" "int $timestamp,int $format,float $latitude,float $longitude,float $zenith,float $gmt_offset" "S" "mixed") ("f" "date_sunrise(" "int $timestamp,int $format,float $latitude,float $longitude,float $zenith,float $gmt_offset" "S" "mixed") ("f" "date_sun_info(" "int $time,float $latitude,float $longitude" "S" "array") ("f" "date(" "string $format,int $timestamp" "S" "string") ("f" "date_parse_from_format(" "string $format,string $date" "S" "array") ("f" "date_parse(" "string $date" "S" "array") ("f" "date_default_timezone_set(" "string $timezone_identifier" "S" "bool") ("f" "date_default_timezone_get(" #1# "S" "string") ("f" "cyrus_unbind(" "resource $connection,string $trigger_name" "S" "bool") ("f" "cyrus_query(" "resource $connection,string $query" "S" "array") ("f" "cyrus_connect(" "string $host,string $port,int $flags" "S" "resource") ("f" "cyrus_close(" "resource $connection" "S" "bool") ("f" "cyrus_bind(" "resource $connection,array $callbacks" "S" "bool") ("f" "cyrus_authenticate(" "resource $connection,string $mechlist,string $service,string $user,int $minssf,int $maxssf,string $authname,string $password" "S" "void") ("f" "current(" "array &$array" "S" "mixed") ("f" "curl_version(" "int $age" "S" "array") ("f" "curl_unescape(" "resource $ch,string $str" "S" "string") ("f" "curl_strerror(" "int $errornum" "S" "string") ("f" "curl_share_setopt(" "resource $sh,int $option,string $value" "S" "bool") ("f" "curl_share_init(" #1# "S" "resource") ("f" "curl_share_close(" "resource $sh" "S" "void") ("f" "curl_setopt(" "resource $ch,int $option,mixed $value" "S" "bool") ("f" "curl_setopt_array(" "resource $ch,array $options" "S" "bool") ("f" "curl_reset(" "resource $ch" "S" "void") ("f" "curl_pause(" "resource $ch,int $bitmask" "S" "int") ("f" "curl_multi_strerror(" "int $errornum" "S" "string") ("f" "curl_multi_setopt(" "resource $mh,int $option,mixed $value" "S" "bool") ("f" "curl_multi_select(" "resource $mh,float $timeout" "S" "int") ("f" "curl_multi_remove_handle(" "resource $mh,resource $ch" "S" "int") ("f" "curl_multi_init(" #1# "S" "resource") ("f" "curl_multi_info_read(" "resource $mh,int &$msgs_in_queue" "S" "array") ("f" "curl_multi_getcontent(" "resource $ch" "S" "string") ("f" "curl_multi_exec(" "resource $mh,int &$still_running" "S" "int") ("f" "curl_multi_close(" "resource $mh" "S" "void") ("f" "curl_multi_add_handle(" "resource $mh,resource $ch" "S" "int") ("f" "curl_init(" "string $url" "S" "resource") ("f" "curl_getinfo(" "resource $ch,int $opt" "S" "mixed") ("f" "curl_exec(" "resource $ch" "S" "mixed") ("f" "curl_escape(" "resource $ch,string $str" "S" "string") ("f" "curl_error(" "resource $ch" "S" "string") ("f" "curl_errno(" "resource $ch" "S" "int") ("f" "curl_copy_handle(" "resource $ch" "S" "resource") ("f" "curl_close(" "resource $ch" "S" "void") ("f" "cubrid_version(" #1# "S" "string") ("f" "cubrid_unbuffered_query(" "string $query,resource $conn_identifier" "S" "resource") ("f" "cubrid_set_query_timeout(" "resource $req_identifier,int $timeout" "S" "bool") ("f" "cubrid_set_drop(" "resource $conn_identifier,string $oid,string $attr_name,string $set_element" "S" "bool") ("f" "cubrid_set_db_parameter(" "resource $conn_identifier,int $param_type,int $param_value" "S" "bool") ("f" "cubrid_set_autocommit(" "resource $conn_identifier,bool $mode" "S" "bool") ("f" "cubrid_set_add(" "resource $conn_identifier,string $oid,string $attr_name,string $set_element" "S" "bool") ("f" "cubrid_seq_put(" "resource $conn_identifier,string $oid,string $attr_name,int $index,string $seq_element" "S" "bool") ("f" "cubrid_seq_insert(" "resource $conn_identifier,string $oid,string $attr_name,int $index,string $seq_element" "S" "bool") ("f" "cubrid_seq_drop(" "resource $conn_identifier,string $oid,string $attr_name,int $index" "S" "bool") ("f" "cubrid_send_glo(" "resource $conn_identifier,string $oid" "S" "int") ("f" "cubrid_schema(" "resource $conn_identifier,int $schema_type,string $class_name,string $attr_name" "S" "array") ("f" "cubrid_save_to_glo(" "resource $conn_identifier,string $oid,string $file_name" "S" "int") ("f" "cubrid_rollback(" "resource $conn_identifier" "S" "bool") ("f" "cubrid_result(" "resource $result,int $row,mixed $field" "S" "string") ("f" "cubrid_real_escape_string(" "string $unescaped_string,resource $conn_identifier" "S" "string") ("f" "cubrid_query(" "string $query,resource $conn_identifier" "S" "resource") ("f" "cubrid_put(" "resource $conn_identifier,string $oid,string $attr,mixed $value" "S" "int") ("f" "cubrid_prepare(" "resource $conn_identifier,string $prepare_stmt,int $option" "S" "resource") ("f" "cubrid_ping(" "resource $conn_identifier" "S" "bool") ("f" "cubrid_pconnect_with_url(" "string $conn_url,string $userid,string $passwd" "S" "resource") ("f" "cubrid_pconnect(" "string $host,int $port,string $dbname,string $userid,string $passwd" "S" "resource") ("f" "cubrid_num_rows(" "resource $result" "S" "int") ("f" "cubrid_num_fields(" "resource $result" "S" "int") ("f" "cubrid_num_cols(" "resource $result" "S" "int") ("f" "cubrid_next_result(" "resource $result" "S" "bool") ("f" "cubrid_new_glo(" "resource $conn_identifier,string $class_name,string $file_name" "S" "string") ("f" "cubrid_move_cursor(" "resource $req_identifier,int $offset,int $origin" "S" "int") ("f" "cubrid_lock_write(" "resource $conn_identifier,string $oid" "S" "bool") ("f" "cubrid_lock_read(" "resource $conn_identifier,string $oid" "S" "bool") ("f" "cubrid_lob_size(" "resource $lob_identifier" "S" "string") ("f" "cubrid_lob_send(" "resource $conn_identifier,resource $lob_identifier" "S" "bool") ("f" "cubrid_lob_get(" "resource $conn_identifier,string $sql" "S" "array") ("f" "cubrid_lob_export(" "resource $conn_identifier,resource $lob_identifier,string $path_name" "S" "bool") ("f" "cubrid_lob_close(" "array $lob_identifier_array" "S" "bool") ("f" "cubrid_lob2_write(" "resource $lob_identifier,string $buf" "S" "bool") ("f" "cubrid_lob2_tell(" "resource $lob_identifier" "S" "int") ("f" "cubrid_lob2_tell64(" "resource $lob_identifier" "S" "string") ("f" "cubrid_lob2_size(" "resource $lob_identifier" "S" "int") ("f" "cubrid_lob2_size64(" "resource $lob_identifier" "S" "string") ("f" "cubrid_lob2_seek(" "resource $lob_identifier,int $offset,int $origin" "S" "bool") ("f" "cubrid_lob2_seek64(" "resource $lob_identifier,string $offset,int $origin" "S" "bool") ("f" "cubrid_lob2_read(" "resource $lob_identifier,int $len" "S" "string") ("f" "cubrid_lob2_new(" "resource $conn_identifier,string $type" "S" "resource") ("f" "cubrid_lob2_import(" "resource $lob_identifier,string $file_name" "S" "bool") ("f" "cubrid_lob2_export(" "resource $lob_identifier,string $file_name" "S" "bool") ("f" "cubrid_lob2_close(" "resource $lob_identifier" "S" "bool") ("f" "cubrid_lob2_bind(" "resource $req_identifier,int $bind_index,mixed $bind_value,string $bind_value_type" "S" "bool") ("f" "cubrid_load_from_glo(" "resource $conn_identifier,string $oid,string $file_name" "S" "int") ("f" "cubrid_list_dbs(" "resource $conn_identifier" "S" "array") ("f" "cubrid_is_instance(" "resource $conn_identifier,string $oid" "S" "int") ("f" "cubrid_insert_id(" "resource $conn_identifier" "S" "string") ("f" "cubrid_get_server_info(" "resource $conn_identifier" "S" "string") ("f" "cubrid_get_query_timeout(" "resource $req_identifier" "S" "int") ("f" "cubrid_get(" "resource $conn_identifier,string $oid,mixed $attr" "S" "mixed") ("f" "cubrid_get_db_parameter(" "resource $conn_identifier" "S" "array") ("f" "cubrid_get_client_info(" #1# "S" "string") ("f" "cubrid_get_class_name(" "resource $conn_identifier,string $oid" "S" "string") ("f" "cubrid_get_charset(" "resource $conn_identifier" "S" "string") ("f" "cubrid_get_autocommit(" "resource $conn_identifier" "S" "bool") ("f" "cubrid_free_result(" "resource $req_identifier" "S" "bool") ("f" "cubrid_field_type(" "resource $result,int $field_offset" "S" "string") ("f" "cubrid_field_table(" "resource $result,int $field_offset" "S" "string") ("f" "cubrid_field_seek(" "resource $result,int $field_offset" "S" "bool") ("f" "cubrid_field_name(" "resource $result,int $field_offset" "S" "string") ("f" "cubrid_field_len(" "resource $result,int $field_offset" "S" "int") ("f" "cubrid_field_flags(" "resource $result,int $field_offset" "S" "string") ("f" "cubrid_fetch_row(" "resource $result,int $type" "S" "array") ("f" "cubrid_fetch_object(" "resource $result,string $class_name,array $params,int $type" "S" "object") ("f" "cubrid_fetch(" "resource $result,int $type" "S" "mixed") ("f" "cubrid_fetch_lengths(" "resource $result" "S" "array") ("f" "cubrid_fetch_field(" "resource $result,int $field_offset" "S" "object") ("f" "cubrid_fetch_assoc(" "resource $result,int $type" "S" "array") ("f" "cubrid_fetch_array(" "resource $result,int $type" "S" "array") ("f" "cubrid_execute(" "resource $conn_identifier,string $sql,int $option" "S" "resource") ("f" "cubrid_error(" "resource $connection" "S" "string") ("f" "cubrid_error_msg(" #1# "S" "string") ("f" "cubrid_error_code(" #1# "S" "int") ("f" "cubrid_error_code_facility(" #1# "S" "int") ("f" "cubrid_errno(" "resource $conn_identifier" "S" "int") ("f" "cubrid_drop(" "resource $conn_identifier,string $oid" "S" "bool") ("f" "cubrid_disconnect(" "resource $conn_identifier" "S" "bool") ("f" "cubrid_db_name(" "array $result,int $index" "S" "string") ("f" "cubrid_data_seek(" "resource $result,int $row_number" "S" "bool") ("f" "cubrid_current_oid(" "resource $req_identifier" "S" "string") ("f" "cubrid_connect_with_url(" "string $conn_url,string $userid,string $passwd,bool $new_link" "S" "resource") ("f" "cubrid_connect(" "string $host,int $port,string $dbname,string $userid,string $passwd,bool $new_link" "S" "resource") ("f" "cubrid_commit(" "resource $conn_identifier" "S" "bool") ("f" "cubrid_column_types(" "resource $req_identifier" "S" "array") ("f" "cubrid_column_names(" "resource $req_identifier" "S" "array") ("f" "cubrid_col_size(" "resource $conn_identifier,string $oid,string $attr_name" "S" "int") ("f" "cubrid_col_get(" "resource $conn_identifier,string $oid,string $attr_name" "S" "array") ("f" "cubrid_close_request(" "resource $req_identifier" "S" "bool") ("f" "cubrid_close_prepare(" "resource $req_identifier" "S" "bool") ("f" "cubrid_close(" "resource $conn_identifier" "S" "bool") ("f" "cubrid_client_encoding(" "resource $conn_identifier" "S" "string") ("f" "cubrid_bind(" "resource $req_identifier,int $bind_index,mixed $bind_value,string $bind_value_type" "S" "bool") ("f" "cubrid_affected_rows(" "resource $conn_identifier" "S" "int") ("f" "ctype_xdigit(" "string $text" "S" "bool") ("f" "ctype_upper(" "string $text" "S" "bool") ("f" "ctype_space(" "string $text" "S" "bool") ("f" "ctype_punct(" "string $text" "S" "bool") ("f" "ctype_print(" "string $text" "S" "bool") ("f" "ctype_lower(" "string $text" "S" "bool") ("f" "ctype_graph(" "string $text" "S" "bool") ("f" "ctype_digit(" "string $text" "S" "bool") ("f" "ctype_cntrl(" "string $text" "S" "bool") ("f" "ctype_alpha(" "string $text" "S" "bool") ("f" "ctype_alnum(" "string $text" "S" "bool") ("f" "crypt(" "string $str,string $salt" "S" "string") ("f" "create_function(" "string $args,string $code" "S" "string") ("f" "crc32(" "string $str" "S" "int") ("f" "crack_opendict(" "string $dictionary" "S" "resource") ("f" "crack_getlastmessage(" #1# "S" "string") ("f" "crack_closedict(" "resource $dictionary" "S" "bool") ("f" "crack_check(" "resource $dictionary,string $password" "S" "bool") ("f" "count(" "mixed $var,int $mode" "S" "int") ("f" "count_chars(" "string $string,int $mode" "S" "mixed") ("f" "cosh(" "float $arg" "S" "float") ("f" "cos(" "float $arg" "S" "float") ("f" "copy(" "string $source,string $dest,resource $context" "S" "bool") ("f" "convert_uuencode(" "string $data" "S" "string") ("f" "convert_uudecode(" "string $data" "S" "string") ("f" "convert_cyr_string(" "string $str,string $from,string $to" "S" "string") ("f" "constant(" "string $name" "S" "mixed") ("f" "connection_status(" #1# "S" "int") ("f" "connection_aborted(" #1# "S" "int") ("f" "com_print_typeinfo(" "object $comobject,string $dispinterface,bool $wantsink" "S" "bool") ("f" "compact(" "mixed $varname,mixed $__args__" "S" "array") ("f" "com_message_pump(" "int $timeoutms" "S" "bool") ("f" "com_load_typelib(" "string $typelib_name,bool $case_insensitive" "S" "bool") ("f" "com_get_active_object(" "string $progid,int $code_page" "S" "variant") ("f" "com_event_sink(" "variant $comobject,object $sinkobject,mixed $sinkinterface" "S" "bool") ("f" "com_create_guid(" #1# "S" "string") ("f" "closelog(" #1# "S" "bool") ("f" "closedir(" "resource $dir_handle" "S" "void") ("f" "cli_set_process_title(" "string $title" "S" "bool") ("f" "cli_get_process_title(" #1# "S" "string") ("f" "clearstatcache(" "bool $clear_realpath_cache,string $filename" "S" "void") ("f" "class_uses(" "mixed $class,bool $autoload" "S" "array") ("f" "class_parents(" "mixed $class,bool $autoload" "S" "array") ("f" "classkit_method_rename(" "string $classname,string $methodname,string $newname" "S" "bool") ("f" "classkit_method_remove(" "string $classname,string $methodname" "S" "bool") ("f" "classkit_method_redefine(" "string $classname,string $methodname,string $args,string $code,int $flags" "S" "bool") ("f" "classkit_method_copy(" "string $dClass,string $dMethod,string $sClass,string $sMethod" "S" "bool") ("f" "classkit_method_add(" "string $classname,string $methodname,string $args,string $code,int $flags" "S" "bool") ("f" "classkit_import(" "string $filename" "S" "array") ("f" "class_implements(" "mixed $class,bool $autoload" "S" "array") ("f" "class_exists(" "string $class_name,bool $autoload" "S" "bool") ("f" "class_alias(" "string $original,string $alias,bool $autoload" "S" "bool") ("f" "chunk_split(" "string $body,int $chunklen,string $end" "S" "string") ("f" "chr(" "int $ascii" "S" "string") ("f" "chroot(" "string $directory" "S" "bool") ("f" "chown(" "string $filename,mixed $user" "S" "bool") ("f" "chmod(" "string $filename,int $mode" "S" "bool") ("f" "chgrp(" "string $filename,mixed $group" "S" "bool") ("f" "checkdnsrr(" "string $host,string $type" "S" "bool") ("f" "checkdate(" "int $month,int $day,int $year" "S" "bool") ("f" "chdir(" "string $directory" "S" "bool") ("f" "chdb_create(" "string $pathname,array $data" "S" "bool") ("f" "ceil(" "float $value" "S" "float") ("f" "cal_to_jd(" "int $calendar,int $month,int $day,int $year" "S" "int") ("f" "call_user_method(" "string $method_name,object &$obj,mixed $parameter,mixed $__args__" "S" "mixed") ("f" "call_user_method_array(" "string $method_name,object &$obj,array $paramarr" "S" "mixed") ("f" "call_user_func(" "callable $callback,mixed $parameter,mixed $__args__" "S" "mixed") ("f" "call_user_func_array(" "callable $callback,array $param_arr" "S" "mixed") ("f" "cal_info(" "int $calendar" "S" "array") ("f" "cal_from_jd(" "int $jd,int $calendar" "S" "array") ("f" "cal_days_in_month(" "int $calendar,int $month,int $year" "S" "int") ("f" "calcul_hmac(" "string $clent,string $siretcode,string $price,string $reference,string $validity,string $taxation,string $devise,string $language" "S" "string") ("f" "calculhmac(" "string $clent,string $data" "S" "string") ("f" "cairo_svg_version_to_string(" "int $version" "S" "string") ("f" "cairo_svg_surface_restrict_to_version(" "CairoSvgSurface $surface,int $version" "S" "void") ("f" "cairo_svg_surface_create(" "string $file,float $width,float $height" "S" "CairoSvgSurface") ("f" "cairo_surface_write_to_png(" "CairoSurface $surface,resource $stream" "S" "void") ("f" "cairo_surface_status(" "CairoSurface $surface" "S" "int") ("f" "cairo_surface_show_page(" "CairoSurface $surface" "S" "void") ("f" "cairo_surface_set_fallback_resolution(" "CairoSurface $surface,float $x,float $y" "S" "void") ("f" "cairo_surface_set_device_offset(" "CairoSurface $surface,float $x,float $y" "S" "void") ("f" "cairo_surface_mark_dirty(" "CairoSurface $surface" "S" "void") ("f" "cairo_surface_mark_dirty_rectangle(" "CairoSurface $surface,float $x,float $y,float $width,float $height" "S" "void") ("f" "cairo_surface_get_type(" "CairoSurface $surface" "S" "int") ("f" "cairo_surface_get_font_options(" "CairoSurface $surface" "S" "CairoFontOptions") ("f" "cairo_surface_get_device_offset(" "CairoSurface $surface" "S" "array") ("f" "cairo_surface_get_content(" "CairoSurface $surface" "S" "int") ("f" "cairo_surface_flush(" "CairoSurface $surface" "S" "void") ("f" "cairo_surface_finish(" "CairoSurface $surface" "S" "void") ("f" "cairo_surface_create_similar(" "CairoSurface $surface,int $content,float $width,float $height" "S" "CairoSurface") ("f" "cairo_surface_copy_page(" "CairoSurface $surface" "S" "void") ("f" "cairo_scaled_font_text_extents(" "CairoScaledFont $scaledfont,string $text" "S" "array") ("f" "cairo_scaled_font_status(" "CairoScaledFont $scaledfont" "S" "int") ("f" "cairo_scaled_font_glyph_extents(" "CairoScaledFont $scaledfont,array $glyphs" "S" "array") ("f" "cairo_scaled_font_get_type(" "CairoScaledFont $scaledfont" "S" "int") ("f" "cairo_scaled_font_get_scale_matrix(" "CairoScaledFont $scaledfont" "S" "CairoMatrix") ("f" "cairo_scaled_font_get_font_options(" "CairoScaledFont $scaledfont" "S" "CairoFontOptions") ("f" "cairo_scaled_font_get_font_matrix(" "CairoScaledFont $scaledfont" "S" "CairoFontOptions") ("f" "cairo_scaled_font_get_font_face(" "CairoScaledFont $scaledfont" "S" "CairoFontFace") ("f" "cairo_scaled_font_get_ctm(" "CairoScaledFont $scaledfont" "S" "CairoMatrix") ("f" "cairo_scaled_font_extents(" "CairoScaledFont $scaledfont" "S" "array") ("f" "cairo_scaled_font_create(" "CairoFontFace $fontface,CairoMatrix $matrix,CairoMatrix $ctm,CairoFontOptions $fontoptions" "S" "CairoScaledFont") ("f" "cairo_ps_surface_set_size(" "CairoPsSurface $surface,float $width,float $height" "S" "void") ("f" "cairo_ps_surface_set_eps(" "CairoPsSurface $surface,bool $level" "S" "void") ("f" "cairo_ps_surface_restrict_to_level(" "CairoPsSurface $surface,int $level" "S" "void") ("f" "cairo_ps_surface_get_eps(" "CairoPsSurface $surface" "S" "bool") ("f" "cairo_ps_surface_dsc_comment(" "CairoPsSurface $surface,string $comment" "S" "void") ("f" "cairo_ps_surface_dsc_begin_setup(" "CairoPsSurface $surface" "S" "void") ("f" "cairo_ps_surface_dsc_begin_page_setup(" "CairoPsSurface $surface" "S" "void") ("f" "cairo_ps_surface_create(" "string $file,float $width,float $height" "S" "CairoPsSurface") ("f" "cairo_ps_level_to_string(" "int $level" "S" "string") ("f" "cairo_ps_get_levels(" #1# "S" "array") ("f" "cairo_pdf_surface_set_size(" "CairoPdfSurface $surface,float $width,float $height" "S" "void") ("f" "cairo_pdf_surface_create(" "string $file,float $width,float $height" "S" "CairoPdfSurface") ("f" "cairo_pattern_status(" "CairoPattern $pattern" "S" "int") ("f" "cairo_pattern_set_matrix(" "CairoPattern $pattern,CairoMatrix $matrix" "S" "void") ("f" "cairo_pattern_set_filter(" "CairoSurfacePattern $pattern,int $filter" "S" "void") ("f" "cairo_pattern_set_extend(" "string $pattern,string $extend" "S" "void") ("f" "cairo_pattern_get_type(" "CairoPattern $pattern" "S" "int") ("f" "cairo_pattern_get_surface(" "CairoSurfacePattern $pattern" "S" "CairoSurface") ("f" "cairo_pattern_get_rgba(" "CairoSolidPattern $pattern" "S" "array") ("f" "cairo_pattern_get_radial_circles(" "CairoRadialGradient $pattern" "S" "array") ("f" "cairo_pattern_get_matrix(" "CairoPattern $pattern" "S" "CairoMatrix") ("f" "cairo_pattern_get_linear_points(" "CairoLinearGradient $pattern" "S" "array") ("f" "cairo_pattern_get_filter(" "CairoSurfacePattern $pattern" "S" "int") ("f" "cairo_pattern_get_extend(" "string $pattern" "S" "int") ("f" "cairo_pattern_get_color_stop_rgba(" "CairoGradientPattern $pattern,int $index" "S" "array") ("f" "cairo_pattern_get_color_stop_count(" "CairoGradientPattern $pattern" "S" "int") ("f" "cairo_pattern_create_rgb(" "float $red,float $green,float $blue" "S" "CairoPattern") ("f" "cairo_pattern_create_rgba(" "float $red,float $green,float $blue,float $alpha" "S" "CairoPattern") ("f" "cairo_pattern_create_radial(" "float $x0,float $y0,float $r0,float $x1,float $y1,float $r1" "S" "CairoPattern") ("f" "cairo_pattern_create_linear(" "float $x0,float $y0,float $x1,float $y1" "S" "CairoPattern") ("f" "cairo_pattern_create_for_surface(" "CairoSurface $surface" "S" "CairoPattern") ("f" "cairo_pattern_add_color_stop_rgb(" "CairoGradientPattern $pattern,float $offset,float $red,float $green,float $blue" "S" "void") ("f" "cairo_pattern_add_color_stop_rgba(" "CairoGradientPattern $pattern,float $offset,float $red,float $green,float $blue,float $alpha" "S" "void") ("f" "cairo_matrix_translate(" "CairoMatrix $matrix,float $tx,float $ty" "S" "void") ("f" "cairo_matrix_transform_point(" "CairoMatrix $matrix,float $dx,float $dy" "S" "array") ("f" "cairo_matrix_transform_distance(" "CairoMatrix $matrix,float $dx,float $dy" "S" "array") ("f" "cairo_matrix_rotate(" "CairoMatrix $matrix,float $radians" "S" "void") ("f" "cairo_matrix_multiply(" "CairoMatrix $matrix1,CairoMatrix $matrix2" "S" "CairoMatrix") ("f" "cairo_matrix_invert(" "CairoMatrix $matrix" "S" "void") ("f" "cairo_image_surface_get_width(" "CairoImageSurface $surface" "S" "int") ("f" "cairo_image_surface_get_stride(" "CairoImageSurface $surface" "S" "int") ("f" "cairo_image_surface_get_height(" "CairoImageSurface $surface" "S" "int") ("f" "cairo_image_surface_get_format(" "CairoImageSurface $surface" "S" "int") ("f" "cairo_image_surface_get_data(" "CairoImageSurface $surface" "S" "string") ("f" "cairo_image_surface_create_from_png(" "string $file" "S" "CairoImageSurface") ("f" "cairo_image_surface_create_for_data(" "string $data,int $format,int $width,int $height,int $stride" "S" "CairoImageSurface") ("f" "cairo_image_surface_create(" "int $format,int $width,int $height" "S" "CairoImageSurface") ("f" "cairo_format_stride_for_width(" "int $format,int $width" "S" "int") ("f" "cairo_font_options_status(" "CairoFontOptions $options" "S" "int") ("f" "cairo_font_options_set_subpixel_order(" "CairoFontOptions $options,int $subpixel_order" "S" "void") ("f" "cairo_font_options_set_hint_style(" "CairoFontOptions $options,int $hint_style" "S" "void") ("f" "cairo_font_options_set_hint_metrics(" "CairoFontOptions $options,int $hint_metrics" "S" "void") ("f" "cairo_font_options_set_antialias(" "CairoFontOptions $options,int $antialias" "S" "void") ("f" "cairo_font_options_merge(" "CairoFontOptions $options,CairoFontOptions $other" "S" "void") ("f" "cairo_font_options_hash(" "CairoFontOptions $options" "S" "int") ("f" "cairo_font_options_get_subpixel_order(" "CairoFontOptions $options" "S" "int") ("f" "cairo_font_options_get_hint_style(" "CairoFontOptions $options" "S" "int") ("f" "cairo_font_options_get_hint_metrics(" "CairoFontOptions $options" "S" "int") ("f" "cairo_font_options_get_antialias(" "CairoFontOptions $options" "S" "int") ("f" "cairo_font_options_equal(" "CairoFontOptions $options,CairoFontOptions $other" "S" "bool") ("f" "cairo_font_options_create(" #1# "S" "CairoFontOptions") ("f" "cairo_font_face_status(" "CairoFontFace $fontface" "S" "int") ("f" "cairo_font_face_get_type(" "CairoFontFace $fontface" "S" "int") ("f" "cairo_create(" "CairoSurface $surface" "S" "CairoContext") ("f" "bzwrite(" "resource $bz,string $data,int $length" "S" "int") ("f" "bzread(" "resource $bz,int $length" "S" "string") ("f" "bzopen(" "string $filename,string $mode" "S" "resource") ("f" "bzflush(" "resource $bz" "S" "int") ("f" "bzerrstr(" "resource $bz" "S" "string") ("f" "bzerror(" "resource $bz" "S" "array") ("f" "bzerrno(" "resource $bz" "S" "int") ("f" "bzdecompress(" "string $source,int $small" "S" "mixed") ("f" "bzcompress(" "string $source,int $blocksize,int $workfactor" "S" "mixed") ("f" "bzclose(" "resource $bz" "S" "int") ("f" "bson_encode(" "mixed $anything" "S" "string") ("f" "bson_decode(" "string $bson" "S" "array") ("f" "boolval(" "mixed $var" "S" "boolean") ("f" "blenc_encrypt(" "string $plaintext,string $encodedfile,string $encryption_key" "S" "string") ("f" "bindtextdomain(" "string $domain,string $directory" "S" "string") ("f" "bind_textdomain_codeset(" "string $domain,string $codeset" "S" "string") ("f" "bindec(" "string $binary_string" "S" "number") ("f" "bin2hex(" "string $str" "S" "string") ("f" "bcsub(" "string $left_operand,string $right_operand,int $scale" "S" "string") ("f" "bcsqrt(" "string $operand,int $scale" "S" "string") ("f" "bcscale(" "int $scale" "S" "bool") ("f" "bcpow(" "string $left_operand,string $right_operand,int $scale" "S" "string") ("f" "bcpowmod(" "string $left_operand,string $right_operand,string $modulus,int $scale" "S" "string") ("f" "bcompiler_write_included_filename(" "resource $filehandle,string $filename" "S" "bool") ("f" "bcompiler_write_header(" "resource $filehandle,string $write_ver" "S" "bool") ("f" "bcompiler_write_functions_from_file(" "resource $filehandle,string $fileName" "S" "bool") ("f" "bcompiler_write_function(" "resource $filehandle,string $functionName" "S" "bool") ("f" "bcompiler_write_footer(" "resource $filehandle" "S" "bool") ("f" "bcompiler_write_file(" "resource $filehandle,string $filename" "S" "bool") ("f" "bcompiler_write_exe_footer(" "resource $filehandle,int $startpos" "S" "bool") ("f" "bcompiler_write_constant(" "resource $filehandle,string $constantName" "S" "bool") ("f" "bcompiler_write_class(" "resource $filehandle,string $className,string $extends" "S" "bool") ("f" "bcompiler_read(" "resource $filehandle" "S" "bool") ("f" "bcompiler_parse_class(" "string $class,string $callback" "S" "bool") ("f" "bcompiler_load_exe(" "string $filename" "S" "bool") ("f" "bcompiler_load(" "string $filename" "S" "bool") ("f" "bcmul(" "string $left_operand,string $right_operand,int $scale" "S" "string") ("f" "bcmod(" "string $left_operand,string $modulus" "S" "string") ("f" "bcdiv(" "string $left_operand,string $right_operand,int $scale" "S" "string") ("f" "bccomp(" "string $left_operand,string $right_operand,int $scale" "S" "int") ("f" "bcadd(" "string $left_operand,string $right_operand,int $scale" "S" "string") ("f" "bbcode_set_flags(" "resource $bbcode_container,int $flags,int $mode" "S" "bool") ("f" "bbcode_set_arg_parser(" "resource $bbcode_container,resource $bbcode_arg_parser" "S" "bool") ("f" "bbcode_parse(" "resource $bbcode_container,string $to_parse" "S" "string") ("f" "bbcode_destroy(" "resource $bbcode_container" "S" "bool") ("f" "bbcode_create(" "array $bbcode_initial_tags" "S" "resource") ("f" "bbcode_add_smiley(" "resource $bbcode_container,string $smiley,string $replace_by" "S" "bool") ("f" "bbcode_add_element(" "resource $bbcode_container,string $tag_name,array $tag_rules" "S" "bool") ("f" "basename(" "string $path,string $suffix" "S" "string") ("f" "base_convert(" "string $number,int $frombase,int $tobase" "S" "string") ("f" "base64_encode(" "string $data" "S" "string") ("f" "base64_decode(" "string $data,bool $strict" "S" "string") ("f" "__autoload(" "string $class" "S" "void") ("f" "atanh(" "float $arg" "S" "float") ("f" "atan(" "float $arg" "S" "float") ("f" "atan2(" "float $y,float $x" "S" "float") ("f" "assert_options(" "int $what,mixed $value" "S" "mixed") ("f" "assert(" "mixed $assertion,string $description" "S" "bool") ("f" "asort(" "array &$array,int $sort_flags" "S" "bool") ("f" "asinh(" "float $arg" "S" "float") ("f" "asin(" "float $arg" "S" "float") ("f" "arsort(" "array &$array,int $sort_flags" "S" "bool") ("f" "array_walk_recursive(" "array &$input,callable $funcname,mixed $userdata" "S" "bool") ("f" "array_walk(" "array &$array,callable $funcname,mixed $userdata" "S" "bool") ("f" "array_values(" "array $input" "S" "array") ("f" "array_unshift(" "array &$array,mixed $var,mixed $__args__" "S" "int") ("f" "array_unique(" "array $array,int $sort_flags" "S" "array") ("f" "array_uintersect_uassoc(" "array $array1,array $array2,array $__args__,callable $data_compare_func,callable $key_compare_func" "S" "array") ("f" "array_uintersect_assoc(" "array $array1,array $array2,array $__args__,callable $data_compare_func" "S" "array") ("f" "array_uintersect(" "array $array1,array $array2,array $__args__,callable $data_compare_func" "S" "array") ("f" "array_udiff_uassoc(" "array $array1,array $array2,array $__args__,callable $data_compare_func,callable $key_compare_func" "S" "array") ("f" "array_udiff_assoc(" "array $array1,array $array2,array $__args__,callable $data_compare_func" "S" "array") ("f" "array_udiff(" "array $array1,array $array2,array $__args__,callable $data_compare_func" "S" "array") ("f" "array_sum(" "array $array" "S" "number") ("f" "array_splice(" "array &$input,int $offset,int $length,mixed $replacement" "S" "array") ("f" "array_slice(" "array $array,int $offset,int $length,bool $preserve_keys" "S" "array") ("f" "array_shift(" "array &$array" "S" "mixed") ("f" "array_search(" "mixed $needle,array $haystack,bool $strict" "S" "mixed") ("f" "array_reverse(" "array $array,bool $preserve_keys" "S" "array") ("f" "array_replace_recursive(" "array $array,array $array1,array $__args__" "S" "array") ("f" "array_replace(" "array $array,array $array1,array $__args__" "S" "array") ("f" "array_reduce(" "array $input,callable $function,mixed $initial" "S" "mixed") ("f" "array_rand(" "array $input,int $num_req" "S" "mixed") ("f" "array_push(" "array &$array,mixed $var,mixed $__args__" "S" "int") ("f" "array_product(" "array $array" "S" "number") ("f" "array_pop(" "array &$array" "S" "mixed") ("f" "array_pad(" "array $input,int $pad_size,mixed $pad_value" "S" "array") ("f" "array_multisort(" "array &$arr,mixed $arg,mixed $arg,mixed $__args__" "S" "bool") ("f" "array_merge_recursive(" "array $array1,array $__args__" "S" "array") ("f" "array_merge(" "array $array1,array $__args__" "S" "array") ("f" "array_map(" "callable $callback,array $arr1,array $__args__" "S" "array") ("f" "array_keys(" "array $input,mixed $search_value,bool $strict" "S" "array") ("f" "array_key_exists(" "mixed $key,array $search" "S" "bool") ("f" "array_intersect_ukey(" "array $array1,array $array2,array $__args__,callable $key_compare_func" "S" "array") ("f" "array_intersect_uassoc(" "array $array1,array $array2,array $__args__,callable $key_compare_func" "S" "array") ("f" "array_intersect_key(" "array $array1,array $array2,array $__args__" "S" "array") ("f" "array_intersect_assoc(" "array $array1,array $array2,array $__args__" "S" "array") ("f" "array_intersect(" "array $array1,array $array2,array $__args__" "S" "array") ("f" "array_flip(" "array $trans" "S" "array") ("f" "array_filter(" "array $input,callable $callback" "S" "array") ("f" "array_fill_keys(" "array $keys,mixed $value" "S" "array") ("f" "array_fill(" "int $start_index,int $num,mixed $value" "S" "array") ("f" "array_diff_ukey(" "array $array1,array $array2,array $__args__,callable $key_compare_func" "S" "array") ("f" "array_diff_uassoc(" "array $array1,array $array2,array $__args__,callable $key_compare_func" "S" "array") ("f" "array_diff_key(" "array $array1,array $array2,array $__args__" "S" "array") ("f" "array_diff_assoc(" "array $array1,array $array2,array $__args__" "S" "array") ("f" "array_diff(" "array $array1,array $array2,array $__args__" "S" "array") ("f" "array_count_values(" "array $input" "S" "array") ("f" "array_combine(" "array $keys,array $values" "S" "array") ("f" "array_column(" "array $input,mixed $column_key,mixed $index_key" "S" "array") ("f" "array_chunk(" "array $input,int $size,bool $preserve_keys" "S" "array") ("f" "array_change_key_case(" "array $input,int $case" "S" "array") ("f" "apd_set_session(" "int $debug_level" "S" "void") ("f" "apd_set_session_trace(" "int $debug_level,string $dump_directory" "S" "void") ("f" "apd_set_session_trace_socket(" "string $tcp_server,int $socket_type,int $port,int $debug_level" "S" "bool") ("f" "apd_set_pprof_trace(" "string $dump_directory,string $fragment" "S" "string") ("f" "apd_get_active_symbols(" #1# "S" "array") ("f" "apd_echo(" "string $output" "S" "bool") ("f" "apd_dump_regular_resources(" #1# "S" "array") ("f" "apd_dump_persistent_resources(" #1# "S" "array") ("f" "apd_dump_function_table(" #1# "S" "void") ("f" "apd_croak(" "string $warning,string $delimiter" "S" "void") ("f" "apd_continue(" "int $debug_level" "S" "bool") ("f" "apd_clunk(" "string $warning,string $delimiter" "S" "void") ("f" "apd_callstack(" #1# "S" "array") ("f" "apd_breakpoint(" "int $debug_level" "S" "bool") ("f" "apc_store(" "string $key,mixed $var,int $ttl" "S" "bool") ("f" "apc_sma_info(" "bool $limited" "S" "array") ("f" "apc_load_constants(" "string $key,bool $case_sensitive" "S" "bool") ("f" "apc_inc(" "string $key,int $step,bool &$success" "S" "int") ("f" "apc_fetch(" "mixed $key,bool &$success" "S" "mixed") ("f" "apc_exists(" "mixed $keys" "S" "mixed") ("f" "apc_delete(" "string $key" "S" "mixed") ("f" "apc_delete_file(" "mixed $keys" "S" "mixed") ("f" "apc_define_constants(" "string $key,array $constants,bool $case_sensitive" "S" "bool") ("f" "apc_dec(" "string $key,int $step,bool &$success" "S" "int") ("f" "apc_compile_file(" "string $filename,bool $atomic" "S" "mixed") ("f" "apc_clear_cache(" "string $cache_type" "S" "bool") ("f" "apc_cas(" "string $key,int $old,int $new" "S" "bool") ("f" "apc_cache_info(" "string $cache_type,bool $limited" "S" "array") ("f" "apc_bin_loadfile(" "string $filename,resource $context,int $flags" "S" "bool") ("f" "apc_bin_load(" "string $data,int $flags" "S" "bool") ("f" "apc_bin_dump(" "array $files,array $user_vars" "S" "string") ("f" "apc_bin_dumpfile(" "array $files,array $user_vars,string $filename,int $flags,resource $context" "S" "int") ("f" "apc_add(" "string $key,mixed $var,int $ttl" "S" "bool") ("f" "apache_setenv(" "string $variable,string $value,bool $walk_to_top" "S" "bool") ("f" "apache_response_headers(" #1# "S" "array") ("f" "apache_reset_timeout(" #1# "S" "bool") ("f" "apache_request_headers(" #1# "S" "array") ("f" "apache_note(" "string $note_name,string $note_value" "S" "string") ("f" "apache_lookup_uri(" "string $filename" "S" "object") ("f" "apache_get_version(" #1# "S" "string") ("f" "apache_get_modules(" #1# "S" "array") ("f" "apache_getenv(" "string $variable,bool $walk_to_top" "S" "string") ("f" "apache_child_terminate(" #1# "S" "bool") ("f" "addslashes(" "string $str" "S" "string") ("f" "addcslashes(" "string $str,string $charlist" "S" "string") ("f" "acosh(" "float $arg" "S" "float") ("f" "acos(" "float $arg" "S" "float") ("f" "abs(" "mixed $number" "S" "number")) ((#358# "Iterator") (#359# "Traversable") (#364# "DateTimeInterface") (#365# "DateTimeInterface") (#366# "RuntimeException") (#367# "Traversable") (#375# "RuntimeException") (#379# "Traversable") (#385# "Iterator,Countable") (#387# "ArrayAccess,Serializable") (#388# "Iterator,Countable,Serializable") (#389# "Iterator,Countable,Serializable") (#396# "SimpleXMLElement,RecursiveIterator,Countable") (#397# "Traversable") (#398# "SplType") (#399# "SplEnum") (#400# "SplType") (#401# "SplType") (#402# "SplType") (#407# "DOMCharacterData") (#408# "DOMNode") (#409# "DOMNode") (#411# "Traversable") (#415# "Traversable") (#418# "Exception") (#419# "DOMNode") (#420# "DOMNode") (#422# "DOMNode") (#423# "DOMNode") (#425# "DOMNode") (#427# "DOMNode") (#428# "DOMCharacterData") (#429# "DOMNode") (#431# "DOMText") (#432# "DOMNode") (#437# "IteratorAggregate,ArrayAccess,Serializable,Countable") (#438# "SplFileObject,SeekableIterator,RecursiveIterator") (#439# "SplFileInfo,RecursiveIterator,SeekableIterator") (#325# "RuntimeException") (#324# "RuntimeException") (#323# "Exception") (#322# "RuntimeException") (#321# "RuntimeException") (#320# "LogicException") (#319# "RuntimeException") (#318# "LogicException") (#317# "LogicException") (#316# "LogicException") (#315# "BadFunctionCallException") (#314# "LogicException") (#313# "Exception") (#448# "FilterIterator") (#449# "RecursiveIteratorIterator,OuterIterator") (#450# "RegexIterator,RecursiveIterator") (#451# "OuterIterator") (#452# "FilterIterator,OuterIterator,RecursiveIterator") (#453# "FilesystemIterator,SeekableIterator,RecursiveIterator") (#454# "CallbackFilterIterator,OuterIterator,RecursiveIterator") (#455# "CachingIterator,Countable,ArrayAccess,OuterIterator,RecursiveIterator") (#456# "ArrayIterator,RecursiveIterator") (#457# "RecursiveFilterIterator,RecursiveIterator,OuterIterator") (#458# "IteratorIterator") (#459# "Iterator") (#460# "IteratorIterator,OuterIterator") (#461# "OuterIterator") (#462# "IteratorIterator,OuterIterator") (#463# "FilesystemIterator,SeekableIterator,Countable") (#464# "IteratorIterator,OuterIterator") (#465# "DirectoryIterator,SeekableIterator") (#466# "Iterator") (#468# "SplFileInfo,SeekableIterator") (#469# "FilterIterator,OuterIterator") (#470# "IteratorIterator,OuterIterator,ArrayAccess,Countable") (#471# "ArrayAccess,SeekableIterator,Countable,Serializable") (#472# "Iterator") (#474# "ArrayAccess,SeekableIterator,Countable,Serializable") (#475# "Iterator") (#477# "OuterIterator") (#478# "Countable,Iterator,Serializable,ArrayAccess") (#480# "Iterator,ArrayAccess,Countable") (#481# "Iterator,Countable") (#482# "SplHeap,Iterator,Countable") (#483# "SplHeap,Iterator,Countable") (#484# "Iterator,Countable") (#485# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#486# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#487# "Iterator,ArrayAccess,Countable")))
)
