(provide 'ac-php-comm-tags-data)

(defvar ac-php-comm-tags-data-list
  '
(((#1="Imagick" (("m" "writeImagesFile" "writeImagesFile(<#resource $filehandle#>)" "S" "bool" "Imagick" "public") ("m" "writeImages" "writeImages(<#string $filename#>,<#bool $adjoin#>)" "S" "bool" "Imagick" "public") ("m" "writeImageFile" "writeImageFile(<#resource $filehandle#>)" "S" "bool" "Imagick" "public") ("m" "writeImage" "writeImage(<#string $filename = NULL#>)" "S" "bool" "Imagick" "public") ("m" "whiteThresholdImage" "whiteThresholdImage(<#mixed $threshold#>)" "S" "bool" "Imagick" "public") ("m" "waveImage" "waveImage(<#float $amplitude#>,<#float $length#>)" "S" "bool" "Imagick" "public") ("m" "vignetteImage" "vignetteImage(<#float $blackPoint#>,<#float $whitePoint#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "valid" "valid(<##>)" "S" "bool" "Imagick" "public") ("m" "unsharpMaskImage" "unsharpMaskImage(<#float $radius#>,<#float $sigma#>,<#float $amount#>,<#float $threshold#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "uniqueImageColors" "uniqueImageColors(<##>)" "S" "bool" "Imagick" "public") ("m" "trimImage" "trimImage(<#float $fuzz#>)" "S" "bool" "Imagick" "public") ("m" "transverseImage" "transverseImage(<##>)" "S" "bool" "Imagick" "public") ("m" "transposeImage" "transposeImage(<##>)" "S" "bool" "Imagick" "public") ("m" "transparentPaintImage" "transparentPaintImage(<#mixed $target#>,<#float $alpha#>,<#float $fuzz#>,<#bool $invert#>)" "S" "bool" "Imagick" "public") ("m" "transformImageColorspace" "transformImageColorspace(<#int $colorspace#>)" "S" "bool" "Imagick" "public") ("m" "transformImage" "transformImage(<#string $crop#>,<#string $geometry#>)" "S" "Imagick" "Imagick" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "Imagick" "public") ("m" "tintImage" "tintImage(<#mixed $tint#>,<#mixed $opacity#>)" "S" "bool" "Imagick" "public") ("m" "thumbnailImage" "thumbnailImage(<#int $columns#>,<#int $rows#>,<#bool $bestfit = false#>,<#bool $fill = false#>)" "S" "bool" "Imagick" "public") ("m" "thresholdImage" "thresholdImage(<#float $threshold#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "textureImage" "textureImage(<#Imagick $texture_wand#>)" "S" "bool" "Imagick" "public") ("m" "swirlImage" "swirlImage(<#float $degrees#>)" "S" "bool" "Imagick" "public") ("m" "subImageMatch" "subImageMatch(<#Imagick $Imagick#>,<#array &$offset#>,<#float &$similarity#>)" "S" "Imagick" "Imagick" "public") ("m" "stripImage" "stripImage(<##>)" "S" "bool" "Imagick" "public") ("m" "stereoImage" "stereoImage(<#Imagick $offset_wand#>)" "S" "bool" "Imagick" "public") ("m" "steganoImage" "steganoImage(<#Imagick $watermark_wand#>,<#int $offset#>)" "S" "Imagick" "Imagick" "public") ("m" "statisticImage" "statisticImage(<#int $type#>,<#int $width#>,<#int $height#>,<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "spreadImage" "spreadImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "spliceImage" "spliceImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "sparseColorImage" "sparseColorImage(<#int $SPARSE_METHOD#>,<#array $arguments#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "solarizeImage" "solarizeImage(<#int $threshold#>)" "S" "bool" "Imagick" "public") ("m" "smushImages" "smushImages(<#string $stack#>,<#string $offset#>)" "S" "Imagick" "Imagick" "public") ("m" "sketchImage" "sketchImage(<#float $radius#>,<#float $sigma#>,<#float $angle#>)" "S" "bool" "Imagick" "public") ("m" "sigmoidalContrastImage" "sigmoidalContrastImage(<#bool $sharpen#>,<#float $alpha#>,<#float $beta#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "shearImage" "shearImage(<#mixed $background#>,<#float $x_shear#>,<#float $y_shear#>)" "S" "bool" "Imagick" "public") ("m" "shaveImage" "shaveImage(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "sharpenImage" "sharpenImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "shadowImage" "shadowImage(<#float $opacity#>,<#float $sigma#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "shadeImage" "shadeImage(<#bool $gray#>,<#float $azimuth#>,<#float $elevation#>)" "S" "bool" "Imagick" "public") ("m" "setType" "setType(<#int $image_type#>)" "S" "bool" "Imagick" "public") ("m" "setSizeOffset" "setSizeOffset(<#int $columns#>,<#int $rows#>,<#int $offset#>)" "S" "bool" "Imagick" "public") ("m" "setSize" "setSize(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "setSamplingFactors" "setSamplingFactors(<#array $factors#>)" "S" "bool" "Imagick" "public") ("m" "setResourceLimit" "setResourceLimit(<#int $type#>,<#int $limit#>)" "S" "bool" "Imagick" "public") ("m" "setResolution" "setResolution(<#float $x_resolution#>,<#float $y_resolution#>)" "S" "bool" "Imagick" "public") ("m" "setRegistry" "setRegistry(<#string $key#>,<#string $value#>)" "S" "void" "Imagick" "public") ("m" "setProgressMonitor" "setProgressMonitor(<#callable $callback#>)" "S" "void" "Imagick" "public") ("m" "setPointSize" "setPointSize(<#float $point_size#>)" "S" "bool" "Imagick" "public") ("m" "setPage" "setPage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "setOption" "setOption(<#string $key#>,<#string $value#>)" "S" "bool" "Imagick" "public") ("m" "setLastIterator" "setLastIterator(<##>)" "S" "bool" "Imagick" "public") ("m" "setIteratorIndex" "setIteratorIndex(<#int $index#>)" "S" "bool" "Imagick" "public") ("m" "setInterlaceScheme" "setInterlaceScheme(<#int $interlace_scheme#>)" "S" "bool" "Imagick" "public") ("m" "setImageWhitePoint" "setImageWhitePoint(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageVirtualPixelMethod" "setImageVirtualPixelMethod(<#int $method#>)" "S" "bool" "Imagick" "public") ("m" "setImageUnits" "setImageUnits(<#int $units#>)" "S" "bool" "Imagick" "public") ("m" "setImageType" "setImageType(<#int $image_type#>)" "S" "bool" "Imagick" "public") ("m" "setImageTicksPerSecond" "setImageTicksPerSecond(<#int $ticks_per_second#>)" "S" "bool" "Imagick" "public") ("m" "setImageScene" "setImageScene(<#int $scene#>)" "S" "bool" "Imagick" "public") ("m" "setImageResolution" "setImageResolution(<#float $x_resolution#>,<#float $y_resolution#>)" "S" "bool" "Imagick" "public") ("m" "setImageRenderingIntent" "setImageRenderingIntent(<#int $rendering_intent#>)" "S" "bool" "Imagick" "public") ("m" "setImageRedPrimary" "setImageRedPrimary(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageProperty" "setImageProperty(<#string $name#>,<#string $value#>)" "S" "bool" "Imagick" "public") ("m" "setImageProfile" "setImageProfile(<#string $name#>,<#string $profile#>)" "S" "bool" "Imagick" "public") ("m" "setImagePage" "setImagePage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageOrientation" "setImageOrientation(<#int $orientation#>)" "S" "bool" "Imagick" "public") ("m" "setImageOpacity" "setImageOpacity(<#float $opacity#>)" "S" "bool" "Imagick" "public") ("m" "setImageMatteColor" "setImageMatteColor(<#mixed $matte#>)" "S" "bool" "Imagick" "public") ("m" "setImageMatte" "setImageMatte(<#bool $matte#>)" "S" "bool" "Imagick" "public") ("m" "setImageIterations" "setImageIterations(<#int $iterations#>)" "S" "bool" "Imagick" "public") ("m" "setImageInterpolateMethod" "setImageInterpolateMethod(<#int $method#>)" "S" "bool" "Imagick" "public") ("m" "setImageInterlaceScheme" "setImageInterlaceScheme(<#int $interlace_scheme#>)" "S" "bool" "Imagick" "public") ("m" "setImageIndex" "setImageIndex(<#int $index#>)" "S" "bool" "Imagick" "public") ("m" "setImageGreenPrimary" "setImageGreenPrimary(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageGravity" "setImageGravity(<#int $gravity#>)" "S" "bool" "Imagick" "public") ("m" "setImageGamma" "setImageGamma(<#float $gamma#>)" "S" "bool" "Imagick" "public") ("m" "setImageFormat" "setImageFormat(<#string $format#>)" "S" "bool" "Imagick" "public") ("m" "setImageFilename" "setImageFilename(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "setImageExtent" "setImageExtent(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "setImageDispose" "setImageDispose(<#int $dispose#>)" "S" "bool" "Imagick" "public") ("m" "setImageDepth" "setImageDepth(<#int $depth#>)" "S" "bool" "Imagick" "public") ("m" "setImageDelay" "setImageDelay(<#int $delay#>)" "S" "bool" "Imagick" "public") ("m" "setImageCompressionQuality" "setImageCompressionQuality(<#int $quality#>)" "S" "bool" "Imagick" "public") ("m" "setImageCompression" "setImageCompression(<#int $compression#>)" "S" "bool" "Imagick" "public") ("m" "setImageCompose" "setImageCompose(<#int $compose#>)" "S" "bool" "Imagick" "public") ("m" "setImageColorspace" "setImageColorspace(<#int $colorspace#>)" "S" "bool" "Imagick" "public") ("m" "setImageColormapColor" "setImageColormapColor(<#int $index#>,<#ImagickPixel $color#>)" "S" "bool" "Imagick" "public") ("m" "setImageClipMask" "setImageClipMask(<#Imagick $clip_mask#>)" "S" "bool" "Imagick" "public") ("m" "setImageChannelDepth" "setImageChannelDepth(<#int $channel#>,<#int $depth#>)" "S" "bool" "Imagick" "public") ("m" "setImageBorderColor" "setImageBorderColor(<#mixed $border#>)" "S" "bool" "Imagick" "public") ("m" "setImageBluePrimary" "setImageBluePrimary(<#float $x#>,<#float $y#>)" "S" "bool" "Imagick" "public") ("m" "setImageBiasQuantum" "setImageBiasQuantum(<#string $bias#>)" "S" "void" "Imagick" "public") ("m" "setImageBias" "setImageBias(<#float $bias#>)" "S" "bool" "Imagick" "public") ("m" "setImageBackgroundColor" "setImageBackgroundColor(<#mixed $background#>)" "S" "bool" "Imagick" "public") ("m" "setImageAttribute" "setImageAttribute(<#string $key#>,<#string $value#>)" "S" "void" "Imagick" "public") ("m" "setImageArtifact" "setImageArtifact(<#string $artifact#>,<#string $value#>)" "S" "bool" "Imagick" "public") ("m" "setImageAlphaChannel" "setImageAlphaChannel(<#int $mode#>)" "S" "bool" "Imagick" "public") ("m" "setImage" "setImage(<#Imagick $replace#>)" "S" "bool" "Imagick" "public") ("m" "setGravity" "setGravity(<#int $gravity#>)" "S" "bool" "Imagick" "public") ("m" "setFormat" "setFormat(<#string $format#>)" "S" "bool" "Imagick" "public") ("m" "setFont" "setFont(<#string $font#>)" "S" "bool" "Imagick" "public") ("m" "setFirstIterator" "setFirstIterator(<##>)" "S" "bool" "Imagick" "public") ("m" "setFilename" "setFilename(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "setCompressionQuality" "setCompressionQuality(<#int $quality#>)" "S" "bool" "Imagick" "public") ("m" "setCompression" "setCompression(<#int $compression#>)" "S" "bool" "Imagick" "public") ("m" "setColorspace" "setColorspace(<#int $COLORSPACE#>)" "S" "bool" "Imagick" "public") ("m" "setBackgroundColor" "setBackgroundColor(<#mixed $background#>)" "S" "bool" "Imagick" "public") ("m" "sepiaToneImage" "sepiaToneImage(<#float $threshold#>)" "S" "bool" "Imagick" "public") ("m" "separateImageChannel" "separateImageChannel(<#int $channel#>)" "S" "bool" "Imagick" "public") ("m" "selectiveBlurImage" "selectiveBlurImage(<#float $radius#>,<#float $sigma#>,<#float $threshold#>,<#int $CHANNEL#>)" "S" "void" "Imagick" "public") ("m" "segmentImage" "segmentImage(<#int $COLORSPACE#>,<#float $cluster_threshold#>,<#float $smooth_threshold#>,<#bool $verbose = false#>)" "S" "bool" "Imagick" "public") ("m" "scaleImage" "scaleImage(<#int $cols#>,<#int $rows#>,<#bool $bestfit = false#>)" "S" "bool" "Imagick" "public") ("m" "sampleImage" "sampleImage(<#int $columns#>,<#int $rows#>)" "S" "bool" "Imagick" "public") ("m" "roundCorners" "roundCorners(<#float $x_rounding#>,<#float $y_rounding#>,<#float $stroke_width = 10#>,<#float $displace = 5#>,<#float $size_correction = -6#>)" "S" "bool" "Imagick" "public") ("m" "rotationalBlurImage" "rotationalBlurImage(<#string $angle#>,<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "rotateImage" "rotateImage(<#mixed $background#>,<#float $degrees#>)" "S" "bool" "Imagick" "public") ("m" "rollImage" "rollImage(<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "resizeImage" "resizeImage(<#int $columns#>,<#int $rows#>,<#int $filter#>,<#float $blur#>,<#bool $bestfit = false#>)" "S" "bool" "Imagick" "public") ("m" "resetImagePage" "resetImagePage(<#string $page#>)" "S" "bool" "Imagick" "public") ("m" "resampleImage" "resampleImage(<#float $x_resolution#>,<#float $y_resolution#>,<#int $filter#>,<#float $blur#>)" "S" "bool" "Imagick" "public") ("m" "render" "render(<##>)" "S" "bool" "Imagick" "public") ("m" "removeImageProfile" "removeImageProfile(<#string $name#>)" "S" "string" "Imagick" "public") ("m" "removeImage" "removeImage(<##>)" "S" "bool" "Imagick" "public") ("m" "remapImage" "remapImage(<#Imagick $replacement#>,<#int $DITHER#>)" "S" "bool" "Imagick" "public") ("m" "reduceNoiseImage" "reduceNoiseImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "recolorImage" "recolorImage(<#array $matrix#>)" "S" "bool" "Imagick" "public") ("m" "readImages" "readImages(<#string $filenames#>)" "S" "Imagick" "Imagick" "public") ("m" "readImageFile" "readImageFile(<#resource $filehandle#>,<#string $fileName = null#>)" "S" "bool" "Imagick" "public") ("m" "readImageBlob" "readImageBlob(<#string $image#>,<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "readImage" "readImage(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "randomThresholdImage" "randomThresholdImage(<#float $low#>,<#float $high#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "raiseImage" "raiseImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>,<#bool $raise#>)" "S" "bool" "Imagick" "public") ("m" "radialBlurImage" "radialBlurImage(<#float $angle#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "queryFormats" "queryFormats(<#string $pattern = \"*\"#>)" "S" "array" "Imagick" "public") ("m" "queryFonts" "queryFonts(<#string $pattern = \"*\"#>)" "S" "array" "Imagick" "public") ("m" "queryFontMetrics" "queryFontMetrics(<#ImagickDraw $properties#>,<#string $text#>,<#bool $multiline#>)" "S" "array" "Imagick" "public") ("m" "quantizeImages" "quantizeImages(<#int $numberColors#>,<#int $colorspace#>,<#int $treedepth#>,<#bool $dither#>,<#bool $measureError#>)" "S" "bool" "Imagick" "public") ("m" "quantizeImage" "quantizeImage(<#int $numberColors#>,<#int $colorspace#>,<#int $treedepth#>,<#bool $dither#>,<#bool $measureError#>)" "S" "bool" "Imagick" "public") ("m" "profileImage" "profileImage(<#string $name#>,<#string $profile#>)" "S" "bool" "Imagick" "public") ("m" "previousImage" "previousImage(<##>)" "S" "bool" "Imagick" "public") ("m" "previewImages" "previewImages(<#int $preview#>)" "S" "bool" "Imagick" "public") ("m" "posterizeImage" "posterizeImage(<#int $levels#>,<#bool $dither#>)" "S" "bool" "Imagick" "public") ("m" "polaroidImage" "polaroidImage(<#ImagickDraw $properties#>,<#float $angle#>)" "S" "bool" "Imagick" "public") ("m" "pingImageFile" "pingImageFile(<#resource $filehandle#>,<#string $fileName#>)" "S" "bool" "Imagick" "public") ("m" "pingImageBlob" "pingImageBlob(<#string $image#>)" "S" "bool" "Imagick" "public") ("m" "pingImage" "pingImage(<#string $filename#>)" "S" "bool" "Imagick" "public") ("m" "paintTransparentImage" "paintTransparentImage(<#mixed $target#>,<#float $alpha#>,<#float $fuzz#>)" "S" "bool" "Imagick" "public") ("m" "paintOpaqueImage" "paintOpaqueImage(<#mixed $target#>,<#mixed $fill#>,<#float $fuzz#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "paintFloodfillImage" "paintFloodfillImage(<#mixed $fill#>,<#float $fuzz#>,<#mixed $bordercolor#>,<#int $x#>,<#int $y#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "orderedPosterizeImage" "orderedPosterizeImage(<#string $threshold_map#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "optimizeImageLayers" "optimizeImageLayers(<##>)" "S" "bool" "Imagick" "public") ("m" "opaquePaintImage" "opaquePaintImage(<#mixed $target#>,<#mixed $fill#>,<#float $fuzz#>,<#bool $invert#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "oilPaintImage" "oilPaintImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "normalizeImage" "normalizeImage(<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "nextImage" "nextImage(<##>)" "S" "bool" "Imagick" "public") ("m" "newPseudoImage" "newPseudoImage(<#int $columns#>,<#int $rows#>,<#string $pseudoString#>)" "S" "bool" "Imagick" "public") ("m" "newImage" "newImage(<#int $cols#>,<#int $rows#>,<#mixed $background#>,<#string $format#>)" "S" "bool" "Imagick" "public") ("m" "negateImage" "negateImage(<#bool $gray#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "motionBlurImage" "motionBlurImage(<#float $radius#>,<#float $sigma#>,<#float $angle#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "mosaicImages" "mosaicImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "morphology" "morphology(<#int $morphologyMethod#>,<#int $iterations#>,<#ImagickKernel $ImagickKernel#>,<#string $CHANNEL#>)" "S" "void" "Imagick" "public") ("m" "morphImages" "morphImages(<#int $number_frames#>)" "S" "Imagick" "Imagick" "public") ("m" "montageImage" "montageImage(<#ImagickDraw $draw#>,<#string $tile_geometry#>,<#string $thumbnail_geometry#>,<#int $mode#>,<#string $frame#>)" "S" "Imagick" "Imagick" "public") ("m" "modulateImage" "modulateImage(<#float $brightness#>,<#float $saturation#>,<#float $hue#>)" "S" "bool" "Imagick" "public") ("m" "minifyImage" "minifyImage(<##>)" "S" "bool" "Imagick" "public") ("m" "mergeImageLayers" "mergeImageLayers(<#int $layer_method#>)" "S" "Imagick" "Imagick" "public") ("m" "medianFilterImage" "medianFilterImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "matteFloodfillImage" "matteFloodfillImage(<#float $alpha#>,<#float $fuzz#>,<#mixed $bordercolor#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "mapImage" "mapImage(<#Imagick $map#>,<#bool $dither#>)" "S" "bool" "Imagick" "public") ("m" "magnifyImage" "magnifyImage(<##>)" "S" "bool" "Imagick" "public") ("m" "listRegistry" "listRegistry(<##>)" "S" "array" "Imagick" "public") ("m" "liquidRescaleImage" "liquidRescaleImage(<#int $width#>,<#int $height#>,<#float $delta_x#>,<#float $rigidity#>)" "S" "bool" "Imagick" "public") ("m" "linearStretchImage" "linearStretchImage(<#float $blackPoint#>,<#float $whitePoint#>)" "S" "bool" "Imagick" "public") ("m" "levelImage" "levelImage(<#float $blackPoint#>,<#float $gamma#>,<#float $whitePoint#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "labelImage" "labelImage(<#string $label#>)" "S" "bool" "Imagick" "public") ("m" "inverseFourierTransformImage" "inverseFourierTransformImage(<#string $complement#>,<#string $magnitude#>)" "S" "void" "Imagick" "public") ("m" "importImagePixels" "importImagePixels(<#int $x#>,<#int $y#>,<#int $width#>,<#int $height#>,<#string $map#>,<#int $storage#>,<#array $pixels#>)" "S" "bool" "Imagick" "public") ("m" "implodeImage" "implodeImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "identifyImage" "identifyImage(<#bool $appendRawOutput = false#>)" "S" "array" "Imagick" "public") ("m" "identifyFormat" "identifyFormat(<#string $embedText#>)" "S" "string" "Imagick" "public") ("m" "hasPreviousImage" "hasPreviousImage(<##>)" "S" "bool" "Imagick" "public") ("m" "hasNextImage" "hasNextImage(<##>)" "S" "bool" "Imagick" "public") ("m" "haldClutImage" "haldClutImage(<#Imagick $clut#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "getVersion" "getVersion(<##>)" "S" "array" "Imagick" "public") ("m" "getSizeOffset" "getSizeOffset(<##>)" "S" "int" "Imagick" "public") ("m" "getSize" "getSize(<##>)" "S" "array" "Imagick" "public") ("m" "getSamplingFactors" "getSamplingFactors(<##>)" "S" "array" "Imagick" "public") ("m" "getResourceLimit" "getResourceLimit(<#int $type#>)" "S" "int" "Imagick" "public") ("m" "getResource" "getResource(<#int $type#>)" "S" "int" "Imagick" "public") ("m" "getReleaseDate" "getReleaseDate(<##>)" "S" "string" "Imagick" "public") ("m" "getRegistry" "getRegistry(<#string $key#>)" "S" "string" "Imagick" "public") ("m" "getQuantumRange" "getQuantumRange(<##>)" "S" "array" "Imagick" "public") ("m" "getQuantumDepth" "getQuantumDepth(<##>)" "S" "array" "Imagick" "public") ("m" "getQuantum" "getQuantum(<##>)" "S" "int" "Imagick" "public") ("m" "getPointSize" "getPointSize(<##>)" "S" "float" "Imagick" "public") ("m" "getPixelRegionIterator" "getPixelRegionIterator(<#int $x#>,<#int $y#>,<#int $columns#>,<#int $rows#>)" "S" "ImagickPixelIterator" "Imagick" "public") ("m" "getPixelIterator" "getPixelIterator(<##>)" "S" "ImagickPixelIterator" "Imagick" "public") ("m" "getPage" "getPage(<##>)" "S" "array" "Imagick" "public") ("m" "getPackageName" "getPackageName(<##>)" "S" "string" "Imagick" "public") ("m" "getOption" "getOption(<#string $key#>)" "S" "string" "Imagick" "public") ("m" "getNumberImages" "getNumberImages(<##>)" "S" "int" "Imagick" "public") ("m" "getIteratorIndex" "getIteratorIndex(<##>)" "S" "int" "Imagick" "public") ("m" "getInterlaceScheme" "getInterlaceScheme(<##>)" "S" "int" "Imagick" "public") ("m" "getImageWidth" "getImageWidth(<##>)" "S" "int" "Imagick" "public") ("m" "getImageWhitePoint" "getImageWhitePoint(<##>)" "S" "array" "Imagick" "public") ("m" "getImageVirtualPixelMethod" "getImageVirtualPixelMethod(<##>)" "S" "int" "Imagick" "public") ("m" "getImageUnits" "getImageUnits(<##>)" "S" "int" "Imagick" "public") ("m" "getImageType" "getImageType(<##>)" "S" "int" "Imagick" "public") ("m" "getImageTotalInkDensity" "getImageTotalInkDensity(<##>)" "S" "float" "Imagick" "public") ("m" "getImageTicksPerSecond" "getImageTicksPerSecond(<##>)" "S" "int" "Imagick" "public") ("m" "getImageSize" "getImageSize(<##>)" "S" "int" "Imagick" "public") ("m" "getImageSignature" "getImageSignature(<##>)" "S" "string" "Imagick" "public") ("m" "getImageScene" "getImageScene(<##>)" "S" "int" "Imagick" "public") ("m" "getImagesBlob" "getImagesBlob(<##>)" "S" "string" "Imagick" "public") ("m" "getImageResolution" "getImageResolution(<##>)" "S" "array" "Imagick" "public") ("m" "getImageRenderingIntent" "getImageRenderingIntent(<##>)" "S" "int" "Imagick" "public") ("m" "getImageRegion" "getImageRegion(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "Imagick" "Imagick" "public") ("m" "getImageRedPrimary" "getImageRedPrimary(<##>)" "S" "array" "Imagick" "public") ("m" "getImageProperty" "getImageProperty(<#string $name#>)" "S" "string" "Imagick" "public") ("m" "getImageProperties" "getImageProperties(<#string $pattern = \"*\"#>,<#bool $only_names = true#>)" "S" "array" "Imagick" "public") ("m" "getImageProfiles" "getImageProfiles(<#string $pattern = \"*\"#>,<#bool $only_names = true#>)" "S" "array" "Imagick" "public") ("m" "getImageProfile" "getImageProfile(<#string $name#>)" "S" "string" "Imagick" "public") ("m" "getImagePixelColor" "getImagePixelColor(<#int $x#>,<#int $y#>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImagePage" "getImagePage(<##>)" "S" "array" "Imagick" "public") ("m" "getImageOrientation" "getImageOrientation(<##>)" "S" "int" "Imagick" "public") ("m" "getImageMimeType" "getImageMimeType(<##>)" "S" "string" "Imagick" "public") ("m" "getImageMatteColor" "getImageMatteColor(<##>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageMatte" "getImageMatte(<##>)" "S" "bool" "Imagick" "public") ("m" "getImageMagickLicense" "getImageMagickLicense(<##>)" "S" "string" "Imagick" "public") ("m" "getImageLength" "getImageLength(<##>)" "S" "int" "Imagick" "public") ("m" "getImageIterations" "getImageIterations(<##>)" "S" "int" "Imagick" "public") ("m" "getImageInterpolateMethod" "getImageInterpolateMethod(<##>)" "S" "int" "Imagick" "public") ("m" "getImageInterlaceScheme" "getImageInterlaceScheme(<##>)" "S" "int" "Imagick" "public") ("m" "getImageIndex" "getImageIndex(<##>)" "S" "int" "Imagick" "public") ("m" "getImageHistogram" "getImageHistogram(<##>)" "S" "array" "Imagick" "public") ("m" "getImageHeight" "getImageHeight(<##>)" "S" "int" "Imagick" "public") ("m" "getImageGreenPrimary" "getImageGreenPrimary(<##>)" "S" "array" "Imagick" "public") ("m" "getImageGravity" "getImageGravity(<##>)" "S" "int" "Imagick" "public") ("m" "getImageGeometry" "getImageGeometry(<##>)" "S" "array" "Imagick" "public") ("m" "getImageGamma" "getImageGamma(<##>)" "S" "float" "Imagick" "public") ("m" "getImageFormat" "getImageFormat(<##>)" "S" "string" "Imagick" "public") ("m" "getImageFilename" "getImageFilename(<##>)" "S" "string" "Imagick" "public") ("m" "getImageExtrema" "getImageExtrema(<##>)" "S" "array" "Imagick" "public") ("m" "getImageDistortion" "getImageDistortion(<#MagickWand $reference#>,<#int $metric#>)" "S" "float" "Imagick" "public") ("m" "getImageDispose" "getImageDispose(<##>)" "S" "int" "Imagick" "public") ("m" "getImageDepth" "getImageDepth(<##>)" "S" "int" "Imagick" "public") ("m" "getImageDelay" "getImageDelay(<##>)" "S" "int" "Imagick" "public") ("m" "getImageCompressionQuality" "getImageCompressionQuality(<##>)" "S" "int" "Imagick" "public") ("m" "getImageCompression" "getImageCompression(<##>)" "S" "int" "Imagick" "public") ("m" "getImageCompose" "getImageCompose(<##>)" "S" "int" "Imagick" "public") ("m" "getImageColorspace" "getImageColorspace(<##>)" "S" "int" "Imagick" "public") ("m" "getImageColors" "getImageColors(<##>)" "S" "int" "Imagick" "public") ("m" "getImageColormapColor" "getImageColormapColor(<#int $index#>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageClipMask" "getImageClipMask(<##>)" "S" "Imagick" "Imagick" "public") ("m" "getImageChannelStatistics" "getImageChannelStatistics(<##>)" "S" "array" "Imagick" "public") ("m" "getImageChannelRange" "getImageChannelRange(<#int $channel#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelMean" "getImageChannelMean(<#int $channel#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelKurtosis" "getImageChannelKurtosis(<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelExtrema" "getImageChannelExtrema(<#int $channel#>)" "S" "array" "Imagick" "public") ("m" "getImageChannelDistortions" "getImageChannelDistortions(<#Imagick $reference#>,<#int $metric#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "float" "Imagick" "public") ("m" "getImageChannelDistortion" "getImageChannelDistortion(<#Imagick $reference#>,<#int $channel#>,<#int $metric#>)" "S" "float" "Imagick" "public") ("m" "getImageChannelDepth" "getImageChannelDepth(<#int $channel#>)" "S" "int" "Imagick" "public") ("m" "getImageBorderColor" "getImageBorderColor(<##>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageBluePrimary" "getImageBluePrimary(<##>)" "S" "array" "Imagick" "public") ("m" "getImageBlob" "getImageBlob(<##>)" "S" "string" "Imagick" "public") ("m" "getImageBackgroundColor" "getImageBackgroundColor(<##>)" "S" "ImagickPixel" "Imagick" "public") ("m" "getImageAttribute" "getImageAttribute(<#string $key#>)" "S" "string" "Imagick" "public") ("m" "getImageArtifact" "getImageArtifact(<#string $artifact#>)" "S" "string" "Imagick" "public") ("m" "getImageAlphaChannel" "getImageAlphaChannel(<##>)" "S" "int" "Imagick" "public") ("m" "getImage" "getImage(<##>)" "S" "Imagick" "Imagick" "public") ("m" "getHomeURL" "getHomeURL(<##>)" "S" "string" "Imagick" "public") ("m" "getGravity" "getGravity(<##>)" "S" "int" "Imagick" "public") ("m" "getFormat" "getFormat(<##>)" "S" "string" "Imagick" "public") ("m" "getFont" "getFont(<##>)" "S" "string" "Imagick" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "Imagick" "public") ("m" "getCopyright" "getCopyright(<##>)" "S" "string" "Imagick" "public") ("m" "getCompressionQuality" "getCompressionQuality(<##>)" "S" "int" "Imagick" "public") ("m" "getCompression" "getCompression(<##>)" "S" "int" "Imagick" "public") ("m" "getColorspace" "getColorspace(<##>)" "S" "int" "Imagick" "public") ("m" "gaussianBlurImage" "gaussianBlurImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "gammaImage" "gammaImage(<#float $gamma#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "fxImage" "fxImage(<#string $expression#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "Imagick" "Imagick" "public") ("m" "functionImage" "functionImage(<#int $function#>,<#array $arguments#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "frameImage" "frameImage(<#mixed $matte_color#>,<#int $width#>,<#int $height#>,<#int $inner_bevel#>,<#int $outer_bevel#>)" "S" "bool" "Imagick" "public") ("m" "forwardFourierTransformimage" "forwardFourierTransformimage(<#bool $magnitude#>)" "S" "void" "Imagick" "public") ("m" "flopImage" "flopImage(<##>)" "S" "bool" "Imagick" "public") ("m" "floodFillPaintImage" "floodFillPaintImage(<#mixed $fill#>,<#float $fuzz#>,<#mixed $target#>,<#int $x#>,<#int $y#>,<#bool $invert#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "flipImage" "flipImage(<##>)" "S" "bool" "Imagick" "public") ("m" "flattenImages" "flattenImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "filter" "filter(<#ImagickKernel $ImagickKernel#>,<#int $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "extentImage" "extentImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "exportImagePixels" "exportImagePixels(<#int $x#>,<#int $y#>,<#int $width#>,<#int $height#>,<#string $map#>,<#int $STORAGE#>)" "S" "array" "Imagick" "public") ("m" "evaluateImage" "evaluateImage(<#int $op#>,<#float $constant#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "equalizeImage" "equalizeImage(<##>)" "S" "bool" "Imagick" "public") ("m" "enhanceImage" "enhanceImage(<##>)" "S" "bool" "Imagick" "public") ("m" "encipherImage" "encipherImage(<#string $passphrase#>)" "S" "bool" "Imagick" "public") ("m" "embossImage" "embossImage(<#float $radius#>,<#float $sigma#>)" "S" "bool" "Imagick" "public") ("m" "edgeImage" "edgeImage(<#float $radius#>)" "S" "bool" "Imagick" "public") ("m" "drawImage" "drawImage(<#ImagickDraw $draw#>)" "S" "bool" "Imagick" "public") ("m" "distortImage" "distortImage(<#int $method#>,<#array $arguments#>,<#bool $bestfit#>)" "S" "bool" "Imagick" "public") ("m" "displayImages" "displayImages(<#string $servername#>)" "S" "bool" "Imagick" "public") ("m" "displayImage" "displayImage(<#string $servername#>)" "S" "bool" "Imagick" "public") ("m" "destroy" "destroy(<##>)" "S" "bool" "Imagick" "public") ("m" "despeckleImage" "despeckleImage(<##>)" "S" "bool" "Imagick" "public") ("m" "deskewImage" "deskewImage(<#float $threshold#>)" "S" "bool" "Imagick" "public") ("m" "deleteImageProperty" "deleteImageProperty(<#string $name#>)" "S" "void" "Imagick" "public") ("m" "deleteImageArtifact" "deleteImageArtifact(<#string $artifact#>)" "S" "bool" "Imagick" "public") ("m" "deconstructImages" "deconstructImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "decipherImage" "decipherImage(<#string $passphrase#>)" "S" "bool" "Imagick" "public") ("m" "cycleColormapImage" "cycleColormapImage(<#int $displace#>)" "S" "bool" "Imagick" "public") ("m" "current" "current(<##>)" "S" "Imagick" "Imagick" "public") ("m" "cropThumbnailImage" "cropThumbnailImage(<#int $width#>,<#int $height#>)" "S" "bool" "Imagick" "public") ("m" "cropImage" "cropImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "count" "count(<#string $mode#>)" "S" "void" "Imagick" "public") ("m" "convolveImage" "convolveImage(<#array $kernel#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "contrastStretchImage" "contrastStretchImage(<#float $black_point#>,<#float $white_point#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "contrastImage" "contrastImage(<#bool $sharpen#>)" "S" "bool" "Imagick" "public") ("m" "__construct" "__construct(<#mixed $files#>)" #519="S" "void" "Imagick" "public") ("m" "compositeImage" "compositeImage(<#Imagick $composite_object#>,<#int $composite#>,<#int $x#>,<#int $y#>,<#int $channel = Imagick::CHANNEL_ALL#>)" "S" "bool" "Imagick" "public") ("m" "compareImages" "compareImages(<#Imagick $compare#>,<#int $metric#>)" "S" "array" "Imagick" "public") ("m" "compareImageLayers" "compareImageLayers(<#int $method#>)" "S" "Imagick" "Imagick" "public") ("m" "compareImageChannels" "compareImageChannels(<#Imagick $image#>,<#int $channelType#>,<#int $metricType#>)" "S" "array" "Imagick" "public") ("m" "commentImage" "commentImage(<#string $comment#>)" "S" "bool" "Imagick" "public") ("m" "combineImages" "combineImages(<#int $channelType#>)" "S" "Imagick" "Imagick" "public") ("m" "colorMatrixImage" "colorMatrixImage(<#string $color_matrix = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "colorizeImage" "colorizeImage(<#mixed $colorize#>,<#mixed $opacity#>)" "S" "bool" "Imagick" "public") ("m" "colorFloodfillImage" "colorFloodfillImage(<#mixed $fill#>,<#float $fuzz#>,<#mixed $bordercolor#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "coalesceImages" "coalesceImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "clutImage" "clutImage(<#Imagick $lookup_table#>,<#float $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "clone_" "clone_(<##>)" "S" "Imagick" "Imagick" "public") ("m" "clipPathImage" "clipPathImage(<#string $pathname#>,<#bool $inside#>)" "S" "bool" "Imagick" "public") ("m" "clipImagePath" "clipImagePath(<#string $pathname#>,<#string $inside#>)" "S" "void" "Imagick" "public") ("m" "clipImage" "clipImage(<##>)" "S" "bool" "Imagick" "public") ("m" "clear" "clear(<##>)" "S" "bool" "Imagick" "public") ("m" "clampImage" "clampImage(<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "chopImage" "chopImage(<#int $width#>,<#int $height#>,<#int $x#>,<#int $y#>)" "S" "bool" "Imagick" "public") ("m" "charcoalImage" "charcoalImage(<#float $radius#>,<#float $sigma#>)" "S" "bool" "Imagick" "public") ("m" "brightnessContrastImage" "brightnessContrastImage(<#string $brightness#>,<#string $contrast#>,<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "borderImage" "borderImage(<#mixed $bordercolor#>,<#int $width#>,<#int $height#>)" "S" "bool" "Imagick" "public") ("m" "blurImage" "blurImage(<#float $radius#>,<#float $sigma#>,<#int $channel#>)" "S" "bool" "Imagick" "public") ("m" "blueShiftImage" "blueShiftImage(<#float $factor = 1.5#>)" "S" "void" "Imagick" "public") ("m" "blackThresholdImage" "blackThresholdImage(<#mixed $threshold#>)" "S" "bool" "Imagick" "public") ("m" "averageImages" "averageImages(<##>)" "S" "Imagick" "Imagick" "public") ("m" "autoLevelImage" "autoLevelImage(<#string $CHANNEL = Imagick::CHANNEL_DEFAULT#>)" "S" "void" "Imagick" "public") ("m" "appendImages" "appendImages(<#bool $stack = false#>)" "S" "Imagick" "Imagick" "public") ("m" "annotateImage" "annotateImage(<#ImagickDraw $draw_settings#>,<#float $x#>,<#float $y#>,<#float $angle#>,<#string $text#>)" "S" "bool" "Imagick" "public") ("m" "animateImages" "animateImages(<#string $x_server#>)" "S" "bool" "Imagick" "public") ("m" "affineTransformImage" "affineTransformImage(<#ImagickDraw $matrix#>)" "S" "bool" "Imagick" "public") ("m" "addNoiseImage" "addNoiseImage(<#int $noise_type#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "addImage" "addImage(<#Imagick $source#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveThresholdImage" "adaptiveThresholdImage(<#int $width#>,<#int $height#>,<#int $offset#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveSharpenImage" "adaptiveSharpenImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveResizeImage" "adaptiveResizeImage(<#int $columns#>,<#int $rows#>,<#bool $bestfit = false#>)" "S" "bool" "Imagick" "public") ("m" "adaptiveBlurImage" "adaptiveBlurImage(<#float $radius#>,<#float $sigma#>,<#int $channel = Imagick::CHANNEL_DEFAULT#>)" "S" "bool" #1# "public"))) (#3="DatePeriod" (("m" "__construct" "__construct(<#string $isostr#>,<#int $options#>)" #518="S" "void" "DatePeriod" "public") ("m" "__construct" "__construct(<#DateTimeInterface $start#>,<#DateInterval $interval#>,<#DateTimeInterface $end#>,<#int $options#>)" "S" "void" "DatePeriod" "public") ("m" "__construct" "__construct(<#DateTimeInterface $start#>,<#DateInterval $interval#>,<#int $recurrences#>,<#int $options#>)" "S" "void" "DatePeriod" "public") ("d" #2="EXCLUDE_START_DATE" #2# "S" "integer" #3# "public"))) (#12="DateInterval" (("m" "format" "format(<#string $format#>)" "S" "string" "DateInterval" "public") ("m" "createFromDateString" "createFromDateString(<#string $time#>)" "S" "DateInterval" "DateInterval" "public") ("m" "__construct" "__construct(<#string $interval_spec#>)" #517="S" "void" "DateInterval" "public") ("p" #4="days" #4# "S" "mixed" "DateInterval" "public") ("p" #5="invert" #5# "S" "integer" "DateInterval" "public") ("p" #6="s" #6# "S" "integer" "DateInterval" "public") ("p" #7="i" #7# "S" "integer" "DateInterval" "public") ("p" #8="h" #8# "S" "integer" "DateInterval" "public") ("p" #9="d" #9# "S" "integer" "DateInterval" "public") ("p" #10="m" #10# "S" "integer" "DateInterval" "public") ("p" #11="y" #11# "S" "integer" #12# "public"))) (#27="DateTimeZone" (("m" "listIdentifiers" "listIdentifiers(<#int $what = DateTimeZone::ALL#>,<#string $country = NULL#>)" "S" "array" "DateTimeZone" "public") ("m" "listAbbreviations" "listAbbreviations(<##>)" "S" "array" "DateTimeZone" "public") ("m" "getTransitions" "getTransitions(<#int $timestamp_begin#>,<#int $timestamp_end#>)" "S" "array" "DateTimeZone" "public") ("m" "getOffset" "getOffset(<#DateTime $datetime#>)" "S" "int" "DateTimeZone" "public") ("m" "getName" "getName(<##>)" "S" "string" "DateTimeZone" "public") ("m" "getLocation" "getLocation(<##>)" "S" "array" "DateTimeZone" "public") ("m" "__construct" "__construct(<#string $timezone#>)" #516="S" "void" "DateTimeZone" "public") ("d" #13="PER_COUNTRY" #13# "S" "integer" "DateTimeZone" "public") ("d" #14="ALL_WITH_BC" #14# "S" "integer" "DateTimeZone" "public") ("d" #15="ALL" #15# "S" "integer" "DateTimeZone" "public") ("d" #16="UTC" #16# "S" "integer" "DateTimeZone" "public") ("d" #17="PACIFIC" #17# "S" "integer" "DateTimeZone" "public") ("d" #18="INDIAN" #18# "S" "integer" "DateTimeZone" "public") ("d" #19="EUROPE" #19# "S" "integer" "DateTimeZone" "public") ("d" #20="AUSTRALIA" #20# "S" "integer" "DateTimeZone" "public") ("d" #21="ATLANTIC" #21# "S" "integer" "DateTimeZone" "public") ("d" #22="ASIA" #22# "S" "integer" "DateTimeZone" "public") ("d" #23="ARCTIC" #23# "S" "integer" "DateTimeZone" "public") ("d" #24="ANTARCTICA" #24# "S" "integer" "DateTimeZone" "public") ("d" #25="AMERICA" #25# "S" "integer" "DateTimeZone" "public") ("d" #26="AFRICA" #26# "S" "integer" #27# "public"))) (#28="DateTimeInterface" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "DateTimeInterface" "public") ("m" "getTimezone" "getTimezone(<##>)" "S" "DateTimeZone" "DateTimeInterface" "public") ("m" "getTimestamp" "getTimestamp(<##>)" "S" "int" "DateTimeInterface" "public") ("m" "getOffset" "getOffset(<##>)" "S" "int" "DateTimeInterface" "public") ("m" "format" "format(<#string $format#>)" "S" "string" "DateTimeInterface" "public") ("m" "diff" "diff(<#DateTimeInterface $datetime2#>,<#bool $absolute = false#>)" "S" "DateInterval" #28# "public"))) (#29="DateTimeImmutable" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "DateTimeImmutable" "public") ("m" "getTimezone" "getTimezone(<##>)" "S" "DateTimeZone" "DateTimeImmutable" "public") ("m" "getTimestamp" "getTimestamp(<##>)" "S" "int" "DateTimeImmutable" "public") ("m" "getOffset" "getOffset(<##>)" "S" "int" "DateTimeImmutable" "public") ("m" "format" "format(<#string $format#>)" "S" "string" "DateTimeImmutable" "public") ("m" "diff" "diff(<#DateTimeInterface $datetime2#>,<#bool $absolute = false#>)" "S" "DateInterval" "DateTimeImmutable" "public") ("m" "sub" "sub(<#DateInterval $interval#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTimezone" "setTimezone(<#DateTimeZone $timezone#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTimestamp" "setTimestamp(<#int $unixtimestamp#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setTime" "setTime(<#int $hour#>,<#int $minute#>,<#int $second = 0#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setISODate" "setISODate(<#int $year#>,<#int $week#>,<#int $day = 1#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "setDate" "setDate(<#int $year#>,<#int $month#>,<#int $day#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "__set_state" "__set_state(<#array $array#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "modify" "modify(<#string $modify#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "getLastErrors" "getLastErrors(<##>)" "S" "array" "DateTimeImmutable" "public") ("m" "createFromMutable" "createFromMutable(<#DateTime $datetime#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "createFromFormat" "createFromFormat(<#string $format#>,<#string $time#>,<#DateTimeZone $timezone#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "add" "add(<#DateInterval $interval#>)" "S" "DateTimeImmutable" "DateTimeImmutable" "public") ("m" "__construct" "__construct(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #515="S" "void" #29# "public"))) (#41="DateTime" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "DateTime" "public") ("m" "getTimezone" "getTimezone(<##>)" "S" "DateTimeZone" "DateTime" "public") ("m" "getTimestamp" "getTimestamp(<##>)" "S" "int" "DateTime" "public") ("m" "getOffset" "getOffset(<##>)" "S" "int" "DateTime" "public") ("m" "format" "format(<#string $format#>)" "S" "string" "DateTime" "public") ("m" "diff" "diff(<#DateTimeInterface $datetime2#>,<#bool $absolute = false#>)" "S" "DateInterval" "DateTime" "public") ("m" "sub" "sub(<#DateInterval $interval#>)" "S" "DateTime" "DateTime" "public") ("m" "setTimezone" "setTimezone(<#DateTimeZone $timezone#>)" "S" "DateTime" "DateTime" "public") ("m" "setTimestamp" "setTimestamp(<#int $unixtimestamp#>)" "S" "DateTime" "DateTime" "public") ("m" "setTime" "setTime(<#int $hour#>,<#int $minute#>,<#int $second = 0#>)" "S" "DateTime" "DateTime" "public") ("m" "setISODate" "setISODate(<#int $year#>,<#int $week#>,<#int $day = 1#>)" "S" "DateTime" "DateTime" "public") ("m" "setDate" "setDate(<#int $year#>,<#int $month#>,<#int $day#>)" "S" "DateTime" "DateTime" "public") ("m" "__set_state" "__set_state(<#array $array#>)" "S" "DateTime" "DateTime" "public") ("m" "modify" "modify(<#string $modify#>)" "S" "DateTime" "DateTime" "public") ("m" "getLastErrors" "getLastErrors(<##>)" "S" "array" "DateTime" "public") ("m" "createFromFormat" "createFromFormat(<#string $format#>,<#string $time#>,<#DateTimeZone $timezone#>)" "S" "DateTime" "DateTime" "public") ("m" "add" "add(<#DateInterval $interval#>)" "S" "DateTime" "DateTime" "public") ("m" "__construct" "__construct(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #514="S" "void" "DateTime" "public") ("d" #30="W3C" #30# "S" "string" "DateTime" "public") ("d" #31="RSS" #31# "S" "string" "DateTime" "public") ("d" #32="RFC3339" #32# "S" "string" "DateTime" "public") ("d" #33="RFC2822" #33# "S" "string" "DateTime" "public") ("d" #34="RFC1123" #34# "S" "string" "DateTime" "public") ("d" #35="RFC1036" #35# "S" "string" "DateTime" "public") ("d" #36="RFC850" #36# "S" "string" "DateTime" "public") ("d" #37="RFC822" #37# "S" "string" "DateTime" "public") ("d" #38="ISO8601" #38# "S" "string" "DateTime" "public") ("d" #39="COOKIE" #39# "S" "string" "DateTime" "public") ("d" #40="ATOM" #40# "S" "string" #41# "public"))) (#44="PDOException" (("p" #42="code" #42# "S" "string" "PDOException" "protected") ("p" #43="errorInfo" #43# "S" "array" #44# "public"))) (#46="PDOStatement" (("m" "setFetchMode" "setFetchMode(<#int $mode#>)" "S" "bool" "PDOStatement" "public") ("m" "setAttribute" "setAttribute(<#int $attribute#>,<#mixed $value#>)" "S" "bool" "PDOStatement" "public") ("m" "rowCount" "rowCount(<##>)" "S" "int" "PDOStatement" "public") ("m" "nextRowset" "nextRowset(<##>)" "S" "bool" "PDOStatement" "public") ("m" "getColumnMeta" "getColumnMeta(<#int $column#>)" "S" "array" "PDOStatement" "public") ("m" "getAttribute" "getAttribute(<#int $attribute#>)" "S" "mixed" "PDOStatement" "public") ("m" "fetchObject" "fetchObject(<#string $class_name = \"stdClass\"#>,<#array $ctor_args#>)" "S" "mixed" "PDOStatement" "public") ("m" "fetchColumn" "fetchColumn(<#int $column_number = 0#>)" "S" "mixed" "PDOStatement" "public") ("m" "fetchAll" "fetchAll(<#)#>)" "S" "array" "PDOStatement" "public") ("m" "fetch" "fetch(<#int $fetch_style#>,<#int $cursor_orientation = PDO::FETCH_ORI_NEXT#>,<#int $cursor_offset = 0#>)" "S" "mixed" "PDOStatement" "public") ("m" "execute" "execute(<#array $input_parameters#>)" "S" "bool" "PDOStatement" "public") ("m" "errorInfo" "errorInfo(<##>)" "S" "array" "PDOStatement" "public") ("m" "errorCode" "errorCode(<##>)" "S" "string" "PDOStatement" "public") ("m" "debugDumpParams" "debugDumpParams(<##>)" "S" "void" "PDOStatement" "public") ("m" "columnCount" "columnCount(<##>)" "S" "int" "PDOStatement" "public") ("m" "closeCursor" "closeCursor(<##>)" "S" "bool" "PDOStatement" "public") ("m" "bindValue" "bindValue(<#mixed $parameter#>,<#mixed $value#>,<#int $data_type = PDO::PARAM_STR#>)" "S" "bool" "PDOStatement" "public") ("m" "bindParam" "bindParam(<#mixed $parameter#>,<#mixed &$variable#>,<#int $data_type = PDO::PARAM_STR#>,<#int $length#>,<#mixed $driver_options#>)" "S" "bool" "PDOStatement" "public") ("m" "bindColumn" "bindColumn(<#mixed $column#>,<#mixed &$param#>,<#int $type#>,<#int $maxlen#>,<#mixed $driverdata#>)" "S" "bool" "PDOStatement" "public") ("p" #45="queryString" #45# "S" "string" #46# "public"))) (#47="PDO" (("m" "setAttribute" "setAttribute(<#int $attribute#>,<#mixed $value#>)" "S" "bool" "PDO" "public") ("m" "rollBack" "rollBack(<##>)" "S" "bool" "PDO" "public") ("m" "quote" "quote(<#string $string#>,<#int $parameter_type = PDO::PARAM_STR#>)" "S" "string" "PDO" "public") ("m" "query" "query(<#string $statement#>)" "S" "PDOStatement" "PDO" "public") ("m" "prepare" "prepare(<#)#>)" "S" "PDOStatement" "PDO" "public") ("m" "lastInsertId" "lastInsertId(<#string $name = NULL#>)" "S" "string" "PDO" "public") ("m" "inTransaction" "inTransaction(<##>)" "S" "bool" "PDO" "public") ("m" "getAvailableDrivers" "getAvailableDrivers(<##>)" "S" "array" "PDO" "public") ("m" "getAttribute" "getAttribute(<#int $attribute#>)" "S" "mixed" "PDO" "public") ("m" "exec" "exec(<#string $statement#>)" "S" "int" "PDO" "public") ("m" "errorInfo" "errorInfo(<##>)" "S" "array" "PDO" "public") ("m" "errorCode" "errorCode(<##>)" "S" "mixed" "PDO" "public") ("m" "commit" "commit(<##>)" "S" "bool" "PDO" "public") ("m" "beginTransaction" "beginTransaction(<##>)" "S" "bool" "PDO" "public") ("m" "__construct" "__construct(<#string $dsn#>,<#string $username#>,<#string $password#>,<#array $options#>)" #513="S" "void" #47# "public"))) (#48="SQLite3Result" (("m" "reset" "reset(<##>)" "S" "bool" "SQLite3Result" "public") ("m" "numColumns" "numColumns(<##>)" "S" "int" "SQLite3Result" "public") ("m" "finalize" "finalize(<##>)" "S" "bool" "SQLite3Result" "public") ("m" "fetchArray" "fetchArray(<#int $mode = SQLITE3_BOTH#>)" "S" "array" "SQLite3Result" "public") ("m" "columnType" "columnType(<#int $column_number#>)" "S" "int" "SQLite3Result" "public") ("m" "columnName" "columnName(<#int $column_number#>)" "S" "string" #48# "public"))) (#49="SQLite3Stmt" (("m" "reset" "reset(<##>)" "S" "bool" "SQLite3Stmt" "public") ("m" "paramCount" "paramCount(<##>)" "S" "int" "SQLite3Stmt" "public") ("m" "execute" "execute(<##>)" "S" "SQLite3Result" "SQLite3Stmt" "public") ("m" "close" "close(<##>)" "S" "bool" "SQLite3Stmt" "public") ("m" "clear" "clear(<##>)" "S" "bool" "SQLite3Stmt" "public") ("m" "bindValue" "bindValue(<#string $sql_param#>,<#mixed $value#>,<#int $type#>)" "S" "bool" "SQLite3Stmt" "public") ("m" "bindParam" "bindParam(<#string $sql_param#>,<#mixed &$param#>,<#int $type#>)" "S" "bool" #49# "public"))) (#50="SQLite3" (("m" "version" "version(<##>)" "S" "array" "SQLite3" "public") ("m" "querySingle" "querySingle(<#string $query#>,<#bool $entire_row = false#>)" "S" "mixed" "SQLite3" "public") ("m" "query" "query(<#string $query#>)" "S" "SQLite3Result" "SQLite3" "public") ("m" "prepare" "prepare(<#string $query#>)" "S" "SQLite3Stmt" "SQLite3" "public") ("m" "open" "open(<#string $filename#>,<#int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE#>,<#string $encryption_key#>)" "S" "void" "SQLite3" "public") ("m" "loadExtension" "loadExtension(<#string $shared_library#>)" "S" "bool" "SQLite3" "public") ("m" "lastInsertRowID" "lastInsertRowID(<##>)" "S" "int" "SQLite3" "public") ("m" "lastErrorMsg" "lastErrorMsg(<##>)" "S" "string" "SQLite3" "public") ("m" "lastErrorCode" "lastErrorCode(<##>)" "S" "int" "SQLite3" "public") ("m" "exec" "exec(<#string $query#>)" "S" "bool" "SQLite3" "public") ("m" "escapeString" "escapeString(<#string $value#>)" "S" "string" "SQLite3" "public") ("m" "createFunction" "createFunction(<#string $name#>,<#mixed $callback#>,<#int $argument_count = -1#>)" "S" "bool" "SQLite3" "public") ("m" "createCollation" "createCollation(<#string $name#>,<#callable $callback#>)" "S" "bool" "SQLite3" "public") ("m" "createAggregate" "createAggregate(<#string $name#>,<#mixed $step_callback#>,<#mixed $final_callback#>,<#int $argument_count = -1#>)" "S" "bool" "SQLite3" "public") ("m" "__construct" "__construct(<#string $filename#>,<#int $flags#>,<#string $encryption_key#>)" #512="S" "void" "SQLite3" "public") ("m" "close" "close(<##>)" "S" "bool" "SQLite3" "public") ("m" "changes" "changes(<##>)" "S" "int" "SQLite3" "public") ("m" "busyTimeout" "busyTimeout(<#int $msecs#>)" "S" "bool" #50# "public"))) (#52="mysqli_sql_exception" (("p" #51="sqlstate" #51# "S" "string" #52# "protected"))) (#56="mysqli_warning" (("m" "next" "next(<##>)" "S" "void" "mysqli_warning" "public") ("m" "__construct" "__construct(<##>)" #511="S" "void" "mysqli_warning" "public") ("p" #53="errno" #53# "S" "int" "mysqli_warning" "public") ("p" #54="sqlstate" #54# "S" "int" "mysqli_warning" "public") ("p" #55="message" #55# "S" "string" #56# "public"))) (#63="mysqli_driver" (("m" "embedded_server_start" "embedded_server_start(<#bool $start#>,<#array $arguments#>,<#array $groups#>)" "S" "bool" "mysqli_driver" "public") ("m" "embedded_server_end" "embedded_server_end(<##>)" "S" "void" "mysqli_driver" "public") ("p" #57="report_mode" #57# "S" "int" "mysqli_driver" "public") ("p" #58="reconnect" #58# "S" "bool" "mysqli_driver" "public") ("p" #59="embedded" #59# "S" "string" "mysqli_driver" "public") ("p" #60="driver_version" #60# "S" "string" "mysqli_driver" "public") ("p" #61="client_version" #61# "S" "string" "mysqli_driver" "public") ("p" #62="client_info" #62# "S" "string" #63# "public"))) (#68="mysqli_result" (("m" "free" "free(<##>)" "S" "void" "mysqli_result" "public") ("m" "field_seek" "field_seek(<#int $fieldnr#>)" "S" "bool" "mysqli_result" "public") ("m" "fetch_row" "fetch_row(<##>)" "S" "mixed" "mysqli_result" "public") ("m" "fetch_object" "fetch_object(<#string $class_name = \"stdClass\"#>,<#array $params#>)" "S" "object" "mysqli_result" "public") ("m" "fetch_fields" "fetch_fields(<##>)" "S" "array" "mysqli_result" "public") ("m" "fetch_field" "fetch_field(<##>)" "S" "object" "mysqli_result" "public") ("m" "fetch_field_direct" "fetch_field_direct(<#int $fieldnr#>)" "S" "object" "mysqli_result" "public") ("m" "fetch_assoc" "fetch_assoc(<##>)" "S" "array" "mysqli_result" "public") ("m" "fetch_array" "fetch_array(<#int $resulttype = MYSQLI_BOTH#>)" "S" "mixed" "mysqli_result" "public") ("m" "fetch_all" "fetch_all(<#int $resulttype = MYSQLI_NUM#>)" "S" "mixed" "mysqli_result" "public") ("m" "data_seek" "data_seek(<#int $offset#>)" "S" "bool" "mysqli_result" "public") ("p" #64="num_rows" #64# "S" "int" "mysqli_result" "public") ("p" #65="lengths" #65# "S" "array" "mysqli_result" "public") ("p" #66="field_count" #66# "S" "int" "mysqli_result" "public") ("p" #67="current_field" #67# "S" "int" #68# "public"))) (#78="mysqli_stmt" (("m" "store_result" "store_result(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "send_long_data" "send_long_data(<#int $param_nr#>,<#string $data#>)" "S" "bool" "mysqli_stmt" "public") ("m" "result_metadata" "result_metadata(<##>)" "S" "mysqli_result" "mysqli_stmt" "public") ("m" "reset" "reset(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "prepare" "prepare(<#string $query#>)" "S" "mixed" "mysqli_stmt" "public") ("m" "get_warnings" "get_warnings(<#mysqli_stmt $stmt#>)" "S" "object" "mysqli_stmt" "public") ("m" "get_result" "get_result(<##>)" "S" "mysqli_result" "mysqli_stmt" "public") ("m" "free_result" "free_result(<##>)" "S" "void" "mysqli_stmt" "public") ("m" "fetch" "fetch(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "execute" "execute(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "data_seek" "data_seek(<#int $offset#>)" "S" "void" "mysqli_stmt" "public") ("m" "close" "close(<##>)" "S" "bool" "mysqli_stmt" "public") ("m" "bind_result" "bind_result(<#mixed &$var1#>,<#mixed $__args__#>)" "S" "bool" "mysqli_stmt" "public") ("m" "bind_param" "bind_param(<#string $types#>,<#mixed &$var1#>,<#mixed $__args__#>)" "S" "bool" "mysqli_stmt" "public") ("m" "attr_set" "attr_set(<#int $attr#>,<#int $mode#>)" "S" "bool" "mysqli_stmt" "public") ("m" "attr_get" "attr_get(<#int $attr#>)" "S" "int" "mysqli_stmt" "public") ("m" "__construct" "__construct(<#mysqli $link#>,<#string $query#>)" #510="S" "void" "mysqli_stmt" "public") ("p" #69="sqlstate" #69# "S" "string" "mysqli_stmt" "public") ("p" #70="param_count" #70# "S" "int" "mysqli_stmt" "public") ("p" #71="num_rows" #71# "S" "int" "mysqli_stmt" "public") ("p" #72="insert_id" #72# "S" "int" "mysqli_stmt" "public") ("p" #73="field_count" #73# "S" "int" "mysqli_stmt" "public") ("p" #74="error" #74# "S" "string" "mysqli_stmt" "public") ("p" #75="error_list" #75# "S" "array" "mysqli_stmt" "public") ("p" #76="errno" #76# "S" "int" "mysqli_stmt" "public") ("p" #77="affected_rows" #77# "S" "int" #78# "public"))) (#98="mysqli" (("m" "use_result" "use_result(<##>)" "S" "mysqli_result" "mysqli" "public") ("m" "store_result" "store_result(<#int $option#>)" "S" "mysqli_result" "mysqli" "public") ("m" "stmt_init" "stmt_init(<##>)" "S" "mysqli_stmt" "mysqli" "public") ("m" "stat" "stat(<##>)" "S" "string" "mysqli" "public") ("m" "ssl_set" "ssl_set(<#string $key#>,<#string $cert#>,<#string $ca#>,<#string $capath#>,<#string $cipher#>)" "S" "bool" "mysqli" "public") ("m" "set_local_infile_handler" "set_local_infile_handler(<#mysqli $link#>,<#callable $read_func#>)" "S" "bool" "mysqli" "public") ("m" "set_charset" "set_charset(<#string $charset#>)" "S" "bool" "mysqli" "public") ("m" "send_query" "send_query(<#string $query#>)" "S" "bool" "mysqli" "public") ("m" "select_db" "select_db(<#string $dbname#>)" "S" "bool" "mysqli" "public") ("m" "rpl_query_type" "rpl_query_type(<#string $query#>)" "S" "int" "mysqli" "public") ("m" "rollback" "rollback(<#int $flags#>,<#string $name#>)" "S" "bool" "mysqli" "public") ("m" "refresh" "refresh(<#int $options#>)" "S" "bool" "mysqli" "public") ("m" "reap_async_query" "reap_async_query(<##>)" "S" "mysqli_result" "mysqli" "public") ("m" "real_query" "real_query(<#string $query#>)" "S" "bool" "mysqli" "public") ("m" "escape_string" "escape_string(<#string $escapestr#>)" "S" "string" "mysqli" "public") ("m" "real_connect" "real_connect(<#string $host#>,<#string $username#>,<#string $passwd#>,<#string $dbname#>,<#int $port#>,<#string $socket#>,<#int $flags#>)" "S" "bool" "mysqli" "public") ("m" "query" "query(<#string $query#>,<#int $resultmode = MYSQLI_STORE_RESULT#>)" "S" "mixed" "mysqli" "public") ("m" "prepare" "prepare(<#string $query#>)" "S" "mysqli_stmt" "mysqli" "public") ("m" "poll" "poll(<#array &$read#>,<#array &$error#>,<#array &$reject#>,<#int $sec#>,<#int $usec#>)" "S" "int" "mysqli" "public") ("m" "ping" "ping(<##>)" "S" "bool" "mysqli" "public") ("m" "options" "options(<#int $option#>,<#mixed $value#>)" "S" "bool" "mysqli" "public") ("m" "next_result" "next_result(<##>)" "S" "bool" "mysqli" "public") ("m" "multi_query" "multi_query(<#string $query#>)" "S" "bool" "mysqli" "public") ("m" "more_results" "more_results(<##>)" "S" "bool" "mysqli" "public") ("m" "kill" "kill(<#int $processid#>)" "S" "bool" "mysqli" "public") ("m" "init" "init(<##>)" "S" "mysqli" "mysqli" "public") ("m" "get_warnings" "get_warnings(<##>)" "S" "mysqli_warning" "mysqli" "public") ("m" "get_connection_stats" "get_connection_stats(<##>)" "S" "bool" "mysqli" "public") ("m" "get_client_info" "get_client_info(<##>)" "S" "string" "mysqli" "public") ("m" "get_charset" "get_charset(<##>)" "S" "object" "mysqli" "public") ("m" "dump_debug_info" "dump_debug_info(<##>)" "S" "bool" "mysqli" "public") ("m" "debug" "debug(<#string $message#>)" "S" "bool" "mysqli" "public") ("m" "commit" "commit(<#int $flags#>,<#string $name#>)" "S" "bool" "mysqli" "public") ("m" "close" "close(<##>)" "S" "bool" "mysqli" "public") ("m" "character_set_name" "character_set_name(<##>)" "S" "string" "mysqli" "public") ("m" "change_user" "change_user(<#string $user#>,<#string $password#>,<#string $database#>)" "S" "bool" "mysqli" "public") ("m" "autocommit" "autocommit(<#bool $mode#>)" "S" "bool" "mysqli" "public") ("m" "__construct" "__construct(<#\"mysqli.default_socket\")'#>)" #509="S" "void" "mysqli" "public") ("p" #79="warning_count" #79# "S" "int" "mysqli" "public") ("p" #80="thread_id" #80# "S" "int" "mysqli" "public") ("p" #81="sqlstate" #81# "S" "string" "mysqli" "public") ("p" #82="insert_id" #82# "S" "mixed" "mysqli" "public") ("p" #83="info" #83# "S" "string" "mysqli" "public") ("p" #84="server_version" #84# "S" "int" "mysqli" "public") ("p" #85="server_info" #85# "S" "string" "mysqli" "public") ("p" #86="protocol_version" #86# "S" "string" "mysqli" "public") ("p" #87="host_info" #87# "S" "string" "mysqli" "public") ("p" #88="client_version" #88# "S" "int" "mysqli" "public") ("p" #89="field_count" #89# "S" "int" "mysqli" "public") ("p" #90="error" #90# "S" "string" "mysqli" "public") ("p" #91="error_list" #91# "S" "array" "mysqli" "public") ("p" #92="errno" #92# "S" "int" "mysqli" "public") ("p" #93="connect_error" #93# "S" "string" "mysqli" "public") ("p" #94="connect_errno" #94# "S" "int" "mysqli" "public") ("p" #95="client_version" #95# "S" "int" "mysqli" "public") ("p" #96="client_info" #96# "S" "string" "mysqli" "public") ("p" #97="affected_rows" #97# "S" "int" #98# "public"))) (#114="HttpResponse" (("m" "status" "status(<#int $status#>)" "S" "bool" "HttpResponse" "public") ("m" "setThrottleDelay" "setThrottleDelay(<#float $seconds#>)" "S" "bool" "HttpResponse" "public") ("m" "setStream" "setStream(<#resource $stream#>)" "S" "bool" "HttpResponse" "public") ("m" "setLastModified" "setLastModified(<#int $timestamp#>)" "S" "bool" "HttpResponse" "public") ("m" "setHeader" "setHeader(<#string $name#>,<#mixed $value#>,<#bool $replace = true#>)" "S" "bool" "HttpResponse" "public") ("m" "setGzip" "setGzip(<#bool $gzip#>)" "S" "bool" "HttpResponse" "public") ("m" "setFile" "setFile(<#string $file#>)" "S" "bool" "HttpResponse" "public") ("m" "setETag" "setETag(<#string $etag#>)" "S" "bool" "HttpResponse" "public") ("m" "setData" "setData(<#mixed $data#>)" "S" "bool" "HttpResponse" "public") ("m" "setContentType" "setContentType(<#string $content_type#>)" "S" "bool" "HttpResponse" "public") ("m" "setContentDisposition" "setContentDisposition(<#string $filename#>,<#bool $inline = false#>)" "S" "bool" "HttpResponse" "public") ("m" "setCacheControl" "setCacheControl(<#string $control#>,<#int $max_age = 0#>,<#bool $must_revalidate = true#>)" "S" "bool" "HttpResponse" "public") ("m" "setCache" "setCache(<#bool $cache#>)" "S" "bool" "HttpResponse" "public") ("m" "setBufferSize" "setBufferSize(<#int $bytes#>)" "S" "bool" "HttpResponse" "public") ("m" "send" "send(<#bool $clean_ob = true#>)" "S" "bool" "HttpResponse" "public") ("m" "redirect" "redirect(<#string $url#>,<#array $params#>,<#bool $session = false#>,<#int $status#>)" "S" "void" "HttpResponse" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpResponse" "public") ("m" "getThrottleDelay" "getThrottleDelay(<##>)" "S" "float" "HttpResponse" "public") ("m" "getStream" "getStream(<##>)" "S" "resource" "HttpResponse" "public") ("m" "getRequestHeaders" "getRequestHeaders(<##>)" "S" "array" "HttpResponse" "public") ("m" "getRequestBodyStream" "getRequestBodyStream(<##>)" "S" "resource" "HttpResponse" "public") ("m" "getRequestBody" "getRequestBody(<##>)" "S" "string" "HttpResponse" "public") ("m" "getLastModified" "getLastModified(<##>)" "S" "int" "HttpResponse" "public") ("m" "getHeader" "getHeader(<#string $name#>)" "S" "mixed" "HttpResponse" "public") ("m" "getGzip" "getGzip(<##>)" "S" "bool" "HttpResponse" "public") ("m" "getFile" "getFile(<##>)" "S" "string" "HttpResponse" "public") ("m" "getETag" "getETag(<##>)" "S" "string" "HttpResponse" "public") ("m" "getData" "getData(<##>)" "S" "string" "HttpResponse" "public") ("m" "getContentType" "getContentType(<##>)" "S" "string" "HttpResponse" "public") ("m" "getContentDisposition" "getContentDisposition(<##>)" "S" "string" "HttpResponse" "public") ("m" "getCacheControl" "getCacheControl(<##>)" "S" "string" "HttpResponse" "public") ("m" "getCache" "getCache(<##>)" "S" "bool" "HttpResponse" "public") ("m" "getBufferSize" "getBufferSize(<##>)" "S" "int" "HttpResponse" "public") ("m" "capture" "capture(<##>)" "S" "void" "HttpResponse" "public") ("d" #99="REDIRECT_TEMP" #99# "S" "integer" "HttpResponse" "public") ("d" #100="REDIRECT_PROXY" #100# "S" "integer" "HttpResponse" "public") ("d" #101="REDIRECT_POST" #101# "S" "integer" "HttpResponse" "public") ("d" #102="REDIRECT_FOUND" #102# "S" "integer" "HttpResponse" "public") ("d" #103="REDIRECT_PERM" #103# "S" "integer" "HttpResponse" "public") ("d" #104="REDIRECT" #104# "S" "integer" "HttpResponse" "public") ("p" #105="throttleDelay" #105# "S" "double" "HttpResponse" "protected") ("p" #106="bufferSize" #106# "S" "integer" "HttpResponse" "protected") ("p" #107="contentDisposition" #107# "S" "string" "HttpResponse" "protected") ("p" #108="contentType" #108# "S" "string" "HttpResponse" "protected") ("p" #109="cacheControl" #109# "S" "string" "HttpResponse" "protected") ("p" #110="lastModified" #110# "S" "integer" "HttpResponse" "protected") ("p" #111="eTag" #111# "S" "string" "HttpResponse" "protected") ("p" #112="gzip" #112# "S" "boolean" "HttpResponse" "protected") ("p" #113="cache" #113# "S" "boolean" #114# "protected"))) (#115="HttpRequestPool" (("m" "socketSelect" "socketSelect(<#float $timeout = 0#>)" "S" "bool" "HttpRequestPool" "protected") ("m" "socketPerform" "socketPerform(<##>)" "S" "bool" "HttpRequestPool" "protected") ("m" "send" "send(<##>)" "S" "bool" "HttpRequestPool" "public") ("m" "reset" "reset(<##>)" "S" "void" "HttpRequestPool" "public") ("m" "getFinishedRequests" "getFinishedRequests(<##>)" "S" "array" "HttpRequestPool" "public") ("m" "getAttachedRequests" "getAttachedRequests(<##>)" "S" "array" "HttpRequestPool" "public") ("m" "detach" "detach(<#HttpRequest $request#>)" "S" "bool" "HttpRequestPool" "public") ("m" "__destruct" "__destruct(<##>)" "S" "void" "HttpRequestPool" "public") ("m" "__construct" "__construct(<#HttpRequest $request#>,<#HttpRequest $__args__#>)" #508="S" "void" "HttpRequestPool" "public") ("m" "attach" "attach(<#HttpRequest $request#>)" "S" "bool" #115# "public"))) (#162="HttpRequest" (("m" "setUrl" "setUrl(<#string $url#>)" "S" "bool" "HttpRequest" "public") ("m" "setSslOptions" "setSslOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "setRawPostData" "setRawPostData(<#string $raw_post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setQueryData" "setQueryData(<#mixed $query_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setPutFile" "setPutFile(<#string $file = \"\"#>)" "S" "bool" "HttpRequest" "public") ("m" "setPutData" "setPutData(<#string $put_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setPostFiles" "setPostFiles(<#array $post_files#>)" "S" "bool" "HttpRequest" "public") ("m" "setPostFields" "setPostFields(<#array $post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setOptions" "setOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "setMethod" "setMethod(<#int $request_method#>)" "S" "bool" "HttpRequest" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "bool" "HttpRequest" "public") ("m" "setCookies" "setCookies(<#array $cookies#>)" "S" "bool" "HttpRequest" "public") ("m" "setContentType" "setContentType(<#string $content_type#>)" "S" "bool" "HttpRequest" "public") ("m" "setBody" "setBody(<#string $request_body_data#>)" "S" "bool" "HttpRequest" "public") ("m" "send" "send(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "resetCookies" "resetCookies(<#bool $session_only = false#>)" "S" "bool" "HttpRequest" "public") ("m" "getUrl" "getUrl(<##>)" "S" "string" "HttpRequest" "public") ("m" "getSslOptions" "getSslOptions(<##>)" "S" "array" "HttpRequest" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpRequest" "public") ("m" "getResponseMessage" "getResponseMessage(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getResponseInfo" "getResponseInfo(<#string $name#>)" "S" "mixed" "HttpRequest" "public") ("m" "getResponseHeader" "getResponseHeader(<#string $name#>)" "S" "mixed" "HttpRequest" "public") ("m" "getResponseData" "getResponseData(<##>)" "S" "array" "HttpRequest" "public") ("m" "getResponseCookies" "getResponseCookies(<#int $flags = 0#>,<#array $allowed_extras#>)" "S" "array" "HttpRequest" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpRequest" "public") ("m" "getResponseBody" "getResponseBody(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRequestMessage" "getRequestMessage(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getRawResponseMessage" "getRawResponseMessage(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRawRequestMessage" "getRawRequestMessage(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRawPostData" "getRawPostData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getQueryData" "getQueryData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPutFile" "getPutFile(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPutData" "getPutData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPostFiles" "getPostFiles(<##>)" "S" "array" "HttpRequest" "public") ("m" "getPostFields" "getPostFields(<##>)" "S" "array" "HttpRequest" "public") ("m" "getOptions" "getOptions(<##>)" "S" "array" "HttpRequest" "public") ("m" "getMethod" "getMethod(<##>)" "S" "int" "HttpRequest" "public") ("m" "getHistory" "getHistory(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpRequest" "public") ("m" "getCookies" "getCookies(<##>)" "S" "array" "HttpRequest" "public") ("m" "getContentType" "getContentType(<##>)" "S" "string" "HttpRequest" "public") ("m" "enableCookies" "enableCookies(<##>)" "S" "bool" "HttpRequest" "public") ("m" "__construct" "__construct(<#string $url#>,<#int $request_method = HTTP_METH_GET#>,<#array $options#>)" #507="S" "void" "HttpRequest" "public") ("m" "clearHistory" "clearHistory(<##>)" "S" "void" "HttpRequest" "public") ("m" "addSslOptions" "addSslOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "addRawPostData" "addRawPostData(<#string $raw_post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addQueryData" "addQueryData(<#array $query_params#>)" "S" "bool" "HttpRequest" "public") ("m" "addPutData" "addPutData(<#string $put_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addPostFile" "addPostFile(<#string $name#>,<#string $file#>,<#string $content_type = \"application/x-octetstream\"#>)" "S" "bool" "HttpRequest" "public") ("m" "addPostFields" "addPostFields(<#array $post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>)" "S" "bool" "HttpRequest" "public") ("m" "addCookies" "addCookies(<#array $cookies#>)" "S" "bool" "HttpRequest" "public") ("p" #116="recordHistory" #116# "S" "boolean" "HttpRequest" "public") ("d" #117="IPRESOLVE_ANY" #117# "S" "integer" "HttpRequest" "public") ("d" #118="IPRESOLVE_V6" #118# "S" "integer" "HttpRequest" "public") ("d" #119="IPRESOLVE_V4" #119# "S" "integer" "HttpRequest" "public") ("d" #120="SSL_VERSION_ANY" #120# "S" "integer" "HttpRequest" "public") ("d" #121="SSL_VERSION_SSLv3" #121# "S" "integer" "HttpRequest" "public") ("d" #122="SSL_VERSION_SSLv2" #122# "S" "integer" "HttpRequest" "public") ("d" #123="SSL_VERSION_TLSv1" #123# "S" "integer" "HttpRequest" "public") ("d" #124="PROXY_HTTP" #124# "S" "integer" "HttpRequest" "public") ("d" #125="PROXY_SOCKS5" #125# "S" "integer" "HttpRequest" "public") ("d" #126="PROXY_SOCKS4" #126# "S" "integer" "HttpRequest" "public") ("d" #127="AUTH_ANY" #127# "S" "integer" "HttpRequest" "public") ("d" #128="AUTH_GSSNEG" #128# "S" "integer" "HttpRequest" "public") ("d" #129="AUTH_NTLM" #129# "S" "integer" "HttpRequest" "public") ("d" #130="AUTH_DIGEST" #130# "S" "integer" "HttpRequest" "public") ("d" #131="AUTH_BASIC" #131# "S" "integer" "HttpRequest" "public") ("d" #132="VERSION_ANY" #132# "S" "integer" "HttpRequest" "public") ("d" #133="VERSION_1_1" #133# "S" "integer" "HttpRequest" "public") ("d" #134="VERSION_1_0" #134# "S" "integer" "HttpRequest" "public") ("d" #135="METH_ACL" #135# "S" "integer" "HttpRequest" "public") ("d" #136="METH_MKACTIVITY" #136# "S" "integer" "HttpRequest" "public") ("d" #137="METH_BASELINE_CONTROL" #137# "S" "integer" "HttpRequest" "public") ("d" #138="METH_MERGE" #138# "S" "integer" "HttpRequest" "public") ("d" #139="METH_LABEL" #139# "S" "integer" "HttpRequest" "public") ("d" #140="METH_UPDATE" #140# "S" "integer" "HttpRequest" "public") ("d" #141="METH_MKWORKSPACE" #141# "S" "integer" "HttpRequest" "public") ("d" #142="METH_UNCHECKOUT" #142# "S" "integer" "HttpRequest" "public") ("d" #143="METH_CHECKIN" #143# "S" "integer" "HttpRequest" "public") ("d" #144="METH_CHECKOUT" #144# "S" "integer" "HttpRequest" "public") ("d" #145="METH_REPORT" #145# "S" "integer" "HttpRequest" "public") ("d" #146="METH_VERSION_CONTROL" #146# "S" "integer" "HttpRequest" "public") ("d" #147="METH_UNLOCK" #147# "S" "integer" "HttpRequest" "public") ("d" #148="METH_LOCK" #148# "S" "integer" "HttpRequest" "public") ("d" #149="METH_MOVE" #149# "S" "integer" "HttpRequest" "public") ("d" #150="METH_COPY" #150# "S" "integer" "HttpRequest" "public") ("d" #151="METH_MKCOL" #151# "S" "integer" "HttpRequest" "public") ("d" #152="METH_PROPPATCH" #152# "S" "integer" "HttpRequest" "public") ("d" #153="METH_PROPFIND" #153# "S" "integer" "HttpRequest" "public") ("d" #154="METH_CONNECT" #154# "S" "integer" "HttpRequest" "public") ("d" #155="METH_TRACE" #155# "S" "integer" "HttpRequest" "public") ("d" #156="METH_OPTIONS" #156# "S" "integer" "HttpRequest" "public") ("d" #157="METH_DELETE" #157# "S" "integer" "HttpRequest" "public") ("d" #158="METH_PUT" #158# "S" "integer" "HttpRequest" "public") ("d" #159="METH_POST" #159# "S" "integer" "HttpRequest" "public") ("d" #160="METH_HEAD" #160# "S" "integer" "HttpRequest" "public") ("d" #161="METH_GET" #161# "S" "integer" #162# "public"))) (#169="HttpQueryString" (("m" "xlate" "xlate(<#string $ie#>,<#string $oe#>)" "S" "bool" "HttpQueryString" "public") ("m" "toString" "toString(<##>)" "S" "string" "HttpQueryString" "public") ("m" "toArray" "toArray(<##>)" "S" "array" "HttpQueryString" "public") ("m" "singleton" "singleton(<#bool $global = true#>)" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "set" "set(<#mixed $params#>)" "S" "string" "HttpQueryString" "public") ("m" "mod" "mod(<#mixed $params#>)" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "get" "get(<#string $key#>,<#mixed $type = 0#>,<#mixed $defval = NULL#>,<#bool $delete = false#>)" "S" "mixed" "HttpQueryString" "public") ("m" "__construct" "__construct(<#bool $global = true#>,<#mixed $add#>)" #506="S" "void" "HttpQueryString" "public") ("d" #163="TYPE_OBJECT" #163# "S" "int" "HttpQueryString" "public") ("d" #164="TYPE_ARRAY" #164# "S" "int" "HttpQueryString" "public") ("d" #165="TYPE_STRING" #165# "S" "int" "HttpQueryString" "public") ("d" #166="TYPE_FLOAT" #166# "S" "int" "HttpQueryString" "public") ("d" #167="TYPE_INT" #167# "S" "int" "HttpQueryString" "public") ("d" #168="TYPE_BOOL" #168# "S" "int" #169# "public"))) (#194="HttpMessage" (("m" "toString" "toString(<#bool $include_parent = false#>)" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" "toMessageTypeObject(<##>)" "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "setType(<#int $type#>)" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "setResponseStatus(<#string $status#>)" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "setResponseCode(<#int $code#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "setRequestUrl(<#string $url#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "setRequestMethod(<#string $method#>)" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "setHttpVersion(<#string $version#>)" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "void" "HttpMessage" "public") ("m" "setBody" "setBody(<#string $body#>)" "S" "void" "HttpMessage" "public") ("m" "send" "send(<##>)" "S" "bool" "HttpMessage" "public") ("m" "reverse" "reverse(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "prepend(<#HttpMessage $message#>,<#bool $top = true#>)" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpMessage" "public") ("m" "getType" "getType(<##>)" "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpMessage" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" "getRequestUrl(<##>)" "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" "getRequestMethod(<##>)" "S" "string" "HttpMessage" "public") ("m" "getParentMessage" "getParentMessage(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" "getHttpVersion(<##>)" "S" "string" "HttpMessage" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpMessage" "public") ("m" "getHeader" "getHeader(<#string $header#>)" "S" "string" "HttpMessage" "public") ("m" "getBody" "getBody(<##>)" "S" "string" "HttpMessage" "public") ("m" "fromString" "fromString(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "fromEnv(<#int $message_type#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "factory(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" "detach(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "__construct(<#string $message#>)" #505="S" "void" "HttpMessage" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>,<#bool $append = false#>)" "S" "void" "HttpMessage" "public") ("d" #170="TYPE_RESPONSE" #170# "S" "int" "HttpMessage" "public") ("d" #171="TYPE_REQUEST" #171# "S" "int" "HttpMessage" "public") ("d" #172="TYPE_NONE" #172# "S" "int" "HttpMessage" "public") ("p" #173="parentMessage" #173# "S" "HttpMessage" "HttpMessage" "protected") ("p" #174="responseStatus" #174# "S" "string" "HttpMessage" "protected") ("p" #175="responseCode" #175# "S" "int" "HttpMessage" "protected") ("p" #176="string" #176# "S" "requestUrl" "HttpMessage" "protected") ("p" #177="requestMethod" #177# "S" "string" "HttpMessage" "protected") ("p" #178="headers" #178# "S" "array" "HttpMessage" "protected") ("p" #179="httpVersion" #179# "S" "float" "HttpMessage" "protected") ("p" #180="body" #180# "S" "string" "HttpMessage" "protected") ("p" #181="type" #181# "S" "int" "HttpMessage" "protected") ("m" "toString" "toString(<#bool $include_parent = false#>)" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" "toMessageTypeObject(<##>)" "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "setType(<#int $type#>)" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "setResponseStatus(<#string $status#>)" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "setResponseCode(<#int $code#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "setRequestUrl(<#string $url#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "setRequestMethod(<#string $method#>)" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "setHttpVersion(<#string $version#>)" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "void" "HttpMessage" "public") ("m" "setBody" "setBody(<#string $body#>)" "S" "void" "HttpMessage" "public") ("m" "send" "send(<##>)" "S" "bool" "HttpMessage" "public") ("m" "reverse" "reverse(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "prepend(<#HttpMessage $message#>,<#bool $top = true#>)" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpMessage" "public") ("m" "getType" "getType(<##>)" "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpMessage" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" "getRequestUrl(<##>)" "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" "getRequestMethod(<##>)" "S" "string" "HttpMessage" "public") ("m" "getParentMessage" "getParentMessage(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" "getHttpVersion(<##>)" "S" "string" "HttpMessage" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpMessage" "public") ("m" "getHeader" "getHeader(<#string $header#>)" "S" "string" "HttpMessage" "public") ("m" "getBody" "getBody(<##>)" "S" "string" "HttpMessage" "public") ("m" "fromString" "fromString(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "fromEnv(<#int $message_type#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "factory(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" "detach(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "__construct(<#string $message#>)" "S" "void" "HttpMessage" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>,<#bool $append = false#>)" "S" "void" "HttpMessage" "public") ("p" #182="parentMessage" #182# "S" "HttpMessage" "HttpMessage" "protected") ("p" #183="responseStatus" #183# "S" "string" "HttpMessage" "protected") ("p" #184="responseCode" #184# "S" "int" "HttpMessage" "protected") ("p" #185="requestUrl" #185# "S" "string" "HttpMessage" "protected") ("p" #186="requestMethod" #186# "S" "string" "HttpMessage" "protected") ("p" #187="headers" #187# "S" "array" "HttpMessage" "protected") ("p" #188="httpVersion" #188# "S" "float" "HttpMessage" "protected") ("p" #189="body" #189# "S" "string" "HttpMessage" "protected") ("p" #190="type" #190# "S" "int" "HttpMessage" "protected") ("d" #191="TYPE_RESPONSE" #191# "S" "int" "HttpMessage" "public") ("d" #192="TYPE_REQUEST" #192# "S" "int" "HttpMessage" "public") ("d" #193="TYPE_NONE" #193# "S" "int" #194# "public"))) (#198="HttpInflateStream" (("m" "update" "update(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "flush" "flush(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "finish" "finish(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "factory" "factory(<#int $flags = 0#>,<#string $class_name = \"HttpInflateStream\"#>)" "S" "HttpInflateStream" "HttpInflateStream" "public") ("m" "__construct" "__construct(<#int $flags = 0#>)" #504="S" "void" "HttpInflateStream" "public") ("d" #195="FLUSH_FULL" #195# "S" "int" "HttpInflateStream" "public") ("d" #196="FLUSH_SYNC" #196# "S" "int" "HttpInflateStream" "public") ("d" #197="FLUSH_NONE" #197# "S" "int" #198# "public"))) (#213="HttpDeflateStream" (("m" "update" "update(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "flush" "flush(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "finish" "finish(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "factory" "factory(<#int $flags = 0#>,<#string $class_name = \"HttpDeflateStream\"#>)" "S" "HttpDeflateStream" "HttpDeflateStream" "public") ("m" "__construct" "__construct(<#int $flags = 0#>)" #503="S" "void" "HttpDeflateStream" "public") ("d" #199="FLUSH_FULL" #199# "S" "int" "HttpDeflateStream" "public") ("d" #200="FLUSH_SYNC" #200# "S" "int" "HttpDeflateStream" "public") ("d" #201="FLUSH_NONE" #201# "S" "int" "HttpDeflateStream" "public") ("d" #202="STRATEGY_FIXED" #202# "S" "int" "HttpDeflateStream" "public") ("d" #203="STRATEGY_RLE" #203# "S" "int" "HttpDeflateStream" "public") ("d" #204="STRATEGY_HUFF" #204# "S" "int" "HttpDeflateStream" "public") ("d" #205="STRATEGY_FILT" #205# "S" "int" "HttpDeflateStream" "public") ("d" #206="STRATEGY_DEF" #206# "S" "int" "HttpDeflateStream" "public") ("d" #207="LEVEL_MAX" #207# "S" "int" "HttpDeflateStream" "public") ("d" #208="LEVEL_MIN" #208# "S" "int" "HttpDeflateStream" "public") ("d" #209="LEVEL_DEF" #209# "S" "int" "HttpDeflateStream" "public") ("d" #210="TYPE_RAW" #210# "S" "int" "HttpDeflateStream" "public") ("d" #211="TYPE_ZLIB" #211# "S" "int" "HttpDeflateStream" "public") ("d" #212="TYPE_GZIP" #212# "S" "int" #213# "public"))) (#214="Memcache" (("m" "setServerParams" "setServerParams(<#string $host#>,<#int $port = 11211#>,<#int $timeout#>,<#int $retry_interval = false#>,<#bool $status#>,<#callback $failure_callback#>)" "S" "bool" "Memcache" "public") ("m" "setCompressThreshold" "setCompressThreshold(<#int $threshold#>,<#float $min_savings#>)" "S" "bool" "Memcache" "public") ("m" "set" "set(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" "Memcache" "public") ("m" "replace" "replace(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" "Memcache" "public") ("m" "pconnect" "pconnect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "mixed" "Memcache" "public") ("m" "increment" "increment(<#string $key#>,<#int $value = 1#>)" "S" "int" "Memcache" "public") ("m" "getVersion" "getVersion(<##>)" "S" "string" "Memcache" "public") ("m" "getStats" "getStats(<#string $type#>,<#int $slabid#>,<#int $limit = 100#>)" "S" "array" "Memcache" "public") ("m" "getServerStatus" "getServerStatus(<#string $host#>,<#int $port = 11211#>)" "S" "int" "Memcache" "public") ("m" "getExtendedStats" "getExtendedStats(<#string $type#>,<#int $slabid#>,<#int $limit = 100#>)" "S" "array" "Memcache" "public") ("m" "get" "get(<#string $key#>,<#int &$flags#>)" "S" "string" "Memcache" "public") ("m" "flush" "flush(<##>)" "S" "bool" "Memcache" "public") ("m" "delete" "delete(<#string $key#>,<#int $timeout = 0#>)" "S" "bool" "Memcache" "public") ("m" "decrement" "decrement(<#string $key#>,<#int $value = 1#>)" "S" "int" "Memcache" "public") ("m" "connect" "connect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "bool" "Memcache" "public") ("m" "close" "close(<##>)" "S" "bool" "Memcache" "public") ("m" "addServer" "addServer(<#string $host#>,<#int $port = 11211#>,<#bool $persistent#>,<#int $weight#>,<#int $timeout#>,<#int $retry_interval#>,<#bool $status#>,<#callback $failure_callback#>,<#int $timeoutms#>)" "S" "bool" "Memcache" "public") ("m" "add" "add(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" #214# "public"))) (#250="XMLReader" (("m" "xml" "xml(<#string $source#>,<#string $encoding#>,<#int $options = 0#>)" "S" "bool" "XMLReader" "public") ("m" "setSchema" "setSchema(<#string $filename#>)" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchemaSource" "setRelaxNGSchemaSource(<#string $source#>)" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchema" "setRelaxNGSchema(<#string $filename#>)" "S" "bool" "XMLReader" "public") ("m" "setParserProperty" "setParserProperty(<#int $property#>,<#bool $value#>)" "S" "bool" "XMLReader" "public") ("m" "readString" "readString(<##>)" "S" "string" "XMLReader" "public") ("m" "readOuterXML" "readOuterXML(<##>)" "S" "string" "XMLReader" "public") ("m" "readInnerXML" "readInnerXML(<##>)" "S" "string" "XMLReader" "public") ("m" "read" "read(<##>)" "S" "bool" "XMLReader" "public") ("m" "open" "open(<#string $URI#>,<#string $encoding#>,<#int $options = 0#>)" "S" "bool" "XMLReader" "public") ("m" "next" "next(<#string $localname#>)" "S" "bool" "XMLReader" "public") ("m" "moveToNextAttribute" "moveToNextAttribute(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToFirstAttribute" "moveToFirstAttribute(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToElement" "moveToElement(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNs" "moveToAttributeNs(<#string $localName#>,<#string $namespaceURI#>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNo" "moveToAttributeNo(<#int $index#>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttribute" "moveToAttribute(<#string $name#>)" "S" "bool" "XMLReader" "public") ("m" "lookupNamespace" "lookupNamespace(<#string $prefix#>)" "S" "string" "XMLReader" "public") ("m" "isValid" "isValid(<##>)" "S" "bool" "XMLReader" "public") ("m" "getParserProperty" "getParserProperty(<#int $property#>)" "S" "bool" "XMLReader" "public") ("m" "getAttributeNs" "getAttributeNs(<#string $localName#>,<#string $namespaceURI#>)" "S" "string" "XMLReader" "public") ("m" "getAttributeNo" "getAttributeNo(<#int $index#>)" "S" "string" "XMLReader" "public") ("m" "getAttribute" "getAttribute(<#string $name#>)" "S" "string" "XMLReader" "public") ("m" "expand" "expand(<#DOMNode $basenode#>)" "S" "DOMNode" "XMLReader" "public") ("m" "close" "close(<##>)" "S" "bool" "XMLReader" "public") ("p" #215="xmlLang" #215# "S" "string" "XMLReader" "public") ("p" #216="value" #216# "S" "string" "XMLReader" "public") ("p" #217="prefix" #217# "S" "string" "XMLReader" "public") ("p" #218="nodeType" #218# "S" "int" "XMLReader" "public") ("p" #219="namespaceURI" #219# "S" "string" "XMLReader" "public") ("p" #220="name" #220# "S" "string" "XMLReader" "public") ("p" #221="localName" #221# "S" "string" "XMLReader" "public") ("p" #222="isEmptyElement" #222# "S" "bool" "XMLReader" "public") ("p" #223="isDefault" #223# "S" "bool" "XMLReader" "public") ("p" #224="hasValue" #224# "S" "bool" "XMLReader" "public") ("p" #225="hasAttributes" #225# "S" "bool" "XMLReader" "public") ("p" #226="depth" #226# "S" "int" "XMLReader" "public") ("p" #227="attributeCount" #227# "S" "int" "XMLReader" "public") ("d" #228="SUBST_ENTITIES" #228# "S" "int" "XMLReader" "public") ("d" #229="VALIDATE" #229# "S" "int" "XMLReader" "public") ("d" #230="DEFAULTATTRS" #230# "S" "int" "XMLReader" "public") ("d" #231="LOADDTD" #231# "S" "int" "XMLReader" "public") ("d" #232="XML_DECLARATION" #232# "S" "int" "XMLReader" "public") ("d" #233="END_ENTITY" #233# "S" "int" "XMLReader" "public") ("d" #234="END_ELEMENT" #234# "S" "int" "XMLReader" "public") ("d" #235="SIGNIFICANT_WHITESPACE" #235# "S" "int" "XMLReader" "public") ("d" #236="WHITESPACE" #236# "S" "int" "XMLReader" "public") ("d" #237="NOTATION" #237# "S" "int" "XMLReader" "public") ("d" #238="DOC_FRAGMENT" #238# "S" "int" "XMLReader" "public") ("d" #239="DOC_TYPE" #239# "S" "int" "XMLReader" "public") ("d" #240="DOC" #240# "S" "int" "XMLReader" "public") ("d" #241="COMMENT" #241# "S" "int" "XMLReader" "public") ("d" #242="PI" #242# "S" "int" "XMLReader" "public") ("d" #243="ENTITY" #243# "S" "int" "XMLReader" "public") ("d" #244="ENTITY_REF" #244# "S" "int" "XMLReader" "public") ("d" #245="CDATA" #245# "S" "int" "XMLReader" "public") ("d" #246="TEXT" #246# "S" "int" "XMLReader" "public") ("d" #247="ATTRIBUTE" #247# "S" "int" "XMLReader" "public") ("d" #248="ELEMENT" #248# "S" "int" "XMLReader" "public") ("d" #249="NONE" #249# "S" "int" #250# "public"))) (#251="SimpleXMLIterator" (("m" "valid" "valid(<##>)" "S" "bool" "SimpleXMLIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SimpleXMLIterator" "public") ("m" "next" "next(<##>)" "S" "void" "SimpleXMLIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "SimpleXMLIterator" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "SimpleXMLIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "SimpleXMLIterator" "SimpleXMLIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" #251# "public"))) (#252="SimpleXMLElement" (("m" "xpath" "xpath(<#string $path#>)" "S" "array" "SimpleXMLElement" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "SimpleXMLElement" "public") ("m" "registerXPathNamespace" "registerXPathNamespace(<#string $prefix#>,<#string $ns#>)" "S" "bool" "SimpleXMLElement" "public") ("m" "getNamespaces" "getNamespaces(<#bool $recursive = false#>)" "S" "array" "SimpleXMLElement" "public") ("m" "getName" "getName(<##>)" "S" "string" "SimpleXMLElement" "public") ("m" "getDocNamespaces" "getDocNamespaces(<#bool $recursive = false#>,<#bool $from_root = true#>)" "S" "array" "SimpleXMLElement" "public") ("m" "count" "count(<##>)" "S" "int" "SimpleXMLElement" "public") ("m" "children" "children(<#string $ns#>,<#bool $is_prefix = false#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "attributes" "attributes(<#string $ns = NULL#>,<#bool $is_prefix = false#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "asXML" "asXML(<#string $filename#>)" "S" "mixed" "SimpleXMLElement" "public") ("m" "addChild" "addChild(<#string $name#>,<#string $value#>,<#string $namespace#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "addAttribute" "addAttribute(<#string $name#>,<#string $value#>,<#string $namespace#>)" "S" "void" "SimpleXMLElement" "public") ("m" "__construct" "__construct(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #502="S" "void" #252# "public"))) (#254="SplString" (("d" #253="__default" #253# "S" "string" #254# "public"))) (#258="SplBool" (("d" #255="true" #255# "S" "boolean" "SplBool" "public") ("d" #256="false" #256# "S" "boolean" "SplBool" "public") ("d" #257="__default" #257# "S" "boolean" #258# "public"))) (#260="SplEnum" (("m" "getConstList" "getConstList(<#bool $include_default = false#>)" "S" "array" "SplEnum" "public") ("d" #259="__default" #259# "S" "NULL" #260# "public"))) (#262="SplFloat" (("d" #261="__default" #261# "S" "float" #262# "public"))) (#264="SplInt" (("d" #263="__default" #263# "S" "integer" #264# "public"))) (#266="SplType" (("m" "__construct" "__construct(<#mixed $initial_value#>,<#bool $strict#>)" #501="S" "void" "SplType" "public") ("d" #265="__default" #265# "S" "NULL" #266# "public"))) (#267="ZipArchive" (("m" "unchangeName" "unchangeName(<#string $name#>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeIndex" "unchangeIndex(<#int $index#>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeArchive" "unchangeArchive(<##>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeAll" "unchangeAll(<##>)" "S" "bool" "ZipArchive" "public") ("m" "statName" "statName(<#string $name#>,<#int $flags#>)" "S" "array" "ZipArchive" "public") ("m" "statIndex" "statIndex(<#int $index#>,<#int $flags#>)" "S" "array" "ZipArchive" "public") ("m" "setPassword" "setPassword(<#string $password#>)" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesName" "setExternalAttributesName(<#string $name#>,<#int $opsys#>,<#int $attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesIndex" "setExternalAttributesIndex(<#int $index#>,<#int $opsys#>,<#int $attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "setCompressionName" "setCompressionName(<#string $name#>,<#int $comp_method#>,<#int $comp_flags = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "setCompressionIndex" "setCompressionIndex(<#int $index#>,<#int $comp_method#>,<#int $comp_flags = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "setCommentName" "setCommentName(<#string $name#>,<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "setCommentIndex" "setCommentIndex(<#int $index#>,<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "setArchiveComment" "setArchiveComment(<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "renameName" "renameName(<#string $name#>,<#string $newname#>)" "S" "bool" "ZipArchive" "public") ("m" "renameIndex" "renameIndex(<#int $index#>,<#string $newname#>)" "S" "bool" "ZipArchive" "public") ("m" "open" "open(<#string $filename#>,<#int $flags#>)" "S" "mixed" "ZipArchive" "public") ("m" "locateName" "locateName(<#string $name#>,<#int $flags#>)" "S" "int" "ZipArchive" "public") ("m" "getStream" "getStream(<#string $name#>)" "S" "resource" "ZipArchive" "public") ("m" "getStatusString" "getStatusString(<##>)" "S" "string" "ZipArchive" "public") ("m" "getNameIndex" "getNameIndex(<#int $index#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getFromName" "getFromName(<#string $name#>,<#int $length = 0#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getFromIndex" "getFromIndex(<#int $index#>,<#int $length = 0#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getExternalAttributesName" "getExternalAttributesName(<#string $name#>,<#int &$opsys#>,<#int &$attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "GetExternalAttributesIndex" "GetExternalAttributesIndex(<#int $index#>,<#int &$opsys#>,<#int &$attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "getCommentName" "getCommentName(<#string $name#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getCommentIndex" "getCommentIndex(<#int $index#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getArchiveComment" "getArchiveComment(<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "extractTo" "extractTo(<#string $destination#>,<#mixed $entries#>)" "S" "bool" "ZipArchive" "public") ("m" "deleteName" "deleteName(<#string $name#>)" "S" "bool" "ZipArchive" "public") ("m" "deleteIndex" "deleteIndex(<#int $index#>)" "S" "bool" "ZipArchive" "public") ("m" "close" "close(<##>)" "S" "bool" "ZipArchive" "public") ("m" "addPattern" "addPattern(<#)#>)" "S" "bool" "ZipArchive" "public") ("m" "addGlob" "addGlob(<#)#>)" "S" "bool" "ZipArchive" "public") ("m" "addFromString" "addFromString(<#string $localname#>,<#string $contents#>)" "S" "bool" "ZipArchive" "public") ("m" "addFile" "addFile(<#string $filename#>,<#string $localname = NULL#>,<#int $start = 0#>,<#int $length = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "addEmptyDir" "addEmptyDir(<#string $dirname#>)" "S" "bool" #267# "public"))) (#269="DOMXPath" (("m" "registerPhpFunctions" "registerPhpFunctions(<#mixed $restrict#>)" "S" "void" "DOMXPath" "public") ("m" "registerNamespace" "registerNamespace(<#string $prefix#>,<#string $namespaceURI#>)" "S" "bool" "DOMXPath" "public") ("m" "query" "query(<#string $expression#>,<#DOMNode $contextnode#>,<#bool $registerNodeNS = true#>)" "S" "DOMNodeList" "DOMXPath" "public") ("m" "evaluate" "evaluate(<#string $expression#>,<#DOMNode $contextnode#>,<#bool $registerNodeNS = true#>)" "S" "mixed" "DOMXPath" "public") ("m" "__construct" "__construct(<#DOMDocument $doc#>)" #500="S" "void" "DOMXPath" "public") ("p" #268="document" #268# "S" "DOMDocument" #269# "public"))) (#271="DOMText" (("m" "splitText" "splitText(<#int $offset#>)" "S" "DOMText" "DOMText" "public") ("m" "isWhitespaceInElementContent" "isWhitespaceInElementContent(<##>)" "S" "bool" "DOMText" "public") ("m" "__construct" "__construct(<#string $value#>)" #499="S" "void" "DOMText" "public") ("p" #270="wholeText" #270# "S" "string" #271# "public"))) (#274="DOMProcessingInstruction" (("m" "__construct" "__construct(<#string $name#>,<#string $value#>)" #498="S" "void" "DOMProcessingInstruction" "public") ("p" #272="data" #272# "S" "string" "DOMProcessingInstruction" "public") ("p" #273="target" #273# "S" "string" #274# "public"))) (#277="DOMNotation" (("p" #275="systemId" #275# "S" "string" "DOMNotation" "public") ("p" #276="publicId" #276# "S" "string" #277# "public"))) (#279="DOMNodeList" (("m" "item" "item(<#int $index#>)" "S" "DOMNode" "DOMNodeList" "public") ("p" #278="length" #278# "S" "int" #279# "public"))) (#296="DOMNode" (("m" "replaceChild" "replaceChild(<#DOMNode $newnode#>,<#DOMNode $oldnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "removeChild" "removeChild(<#DOMNode $oldnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "normalize" "normalize(<##>)" "S" "void" "DOMNode" "public") ("m" "lookupPrefix" "lookupPrefix(<#string $namespaceURI#>)" "S" "string" "DOMNode" "public") ("m" "lookupNamespaceURI" "lookupNamespaceURI(<#string $prefix#>)" "S" "string" "DOMNode" "public") ("m" "isSupported" "isSupported(<#string $feature#>,<#string $version#>)" "S" "bool" "DOMNode" "public") ("m" "isSameNode" "isSameNode(<#DOMNode $node#>)" "S" "bool" "DOMNode" "public") ("m" "isDefaultNamespace" "isDefaultNamespace(<#string $namespaceURI#>)" "S" "bool" "DOMNode" "public") ("m" "insertBefore" "insertBefore(<#DOMNode $newnode#>,<#DOMNode $refnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "hasChildNodes" "hasChildNodes(<##>)" "S" "bool" "DOMNode" "public") ("m" "hasAttributes" "hasAttributes(<##>)" "S" "bool" "DOMNode" "public") ("m" "getNodePath" "getNodePath(<##>)" "S" "string" "DOMNode" "public") ("m" "getLineNo" "getLineNo(<##>)" "S" "int" "DOMNode" "public") ("m" "cloneNode" "cloneNode(<#bool $deep#>)" "S" "DOMNode" "DOMNode" "public") ("m" "C14NFile" "C14NFile(<#string $uri#>,<#bool $exclusive#>,<#bool $with_comments#>,<#array $xpath#>,<#array $ns_prefixes#>)" "S" "int" "DOMNode" "public") ("m" "C14N" "C14N(<#bool $exclusive#>,<#bool $with_comments#>,<#array $xpath#>,<#array $ns_prefixes#>)" "S" "string" "DOMNode" "public") ("m" "appendChild" "appendChild(<#DOMNode $newnode#>)" "S" "DOMNode" "DOMNode" "public") ("p" #280="textContent" #280# "S" "string" "DOMNode" "public") ("p" #281="baseURI" #281# "S" "string" "DOMNode" "public") ("p" #282="localName" #282# "S" "string" "DOMNode" "public") ("p" #283="prefix" #283# "S" "string" "DOMNode" "public") ("p" #284="namespaceURI" #284# "S" "string" "DOMNode" "public") ("p" #285="ownerDocument" #285# "S" "DOMDocument" "DOMNode" "public") ("p" #286="attributes" #286# "S" "DOMNamedNodeMap" "DOMNode" "public") ("p" #287="nextSibling" #287# "S" "DOMNode" "DOMNode" "public") ("p" #288="previousSibling" #288# "S" "DOMNode" "DOMNode" "public") ("p" #289="lastChild" #289# "S" "DOMNode" "DOMNode" "public") ("p" #290="firstChild" #290# "S" "DOMNode" "DOMNode" "public") ("p" #291="childNodes" #291# "S" "DOMNodeList" "DOMNode" "public") ("p" #292="parentNode" #292# "S" "DOMNode" "DOMNode" "public") ("p" #293="nodeType" #293# "S" "int" "DOMNode" "public") ("p" #294="nodeValue" #294# "S" "string" "DOMNode" "public") ("p" #295="nodeName" #295# "S" "string" #296# "public"))) (#298="DOMNamedNodeMap" (("m" "item" "item(<#int $index#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItemNS" "getNamedItemNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItem" "getNamedItem(<#string $name#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("p" #297="length" #297# "S" "int" #298# "public"))) (#299="DOMImplementation" (("m" "hasFeature" "hasFeature(<#string $feature#>,<#string $version#>)" "S" "bool" "DOMImplementation" "public") ("m" "createDocumentType" "createDocumentType(<#string $qualifiedName = NULL#>,<#string $publicId = NULL#>,<#string $systemId = NULL#>)" "S" "DOMDocumentType" "DOMImplementation" "public") ("m" "createDocument" "createDocument(<#string $namespaceURI = NULL#>,<#string $qualifiedName = NULL#>,<#DOMDocumentType $doctype = NULL#>)" "S" "DOMDocument" "DOMImplementation" "public") ("m" "__construct" "__construct(<##>)" #497="S" "void" #299# "public"))) (#301="DOMException" (("p" #300="code" #300# "S" "int" #301# "public"))) (#302="DOMEntityReference" (("m" "__construct" "__construct(<#string $name#>)" #496="S" "void" #302# "public"))) (#309="DOMEntity" (("p" #303="version" #303# "S" "string" "DOMEntity" "public") ("p" #304="encoding" #304# "S" "string" "DOMEntity" "public") ("p" #305="actualEncoding" #305# "S" "string" "DOMEntity" "public") ("p" #306="notationName" #306# "S" "string" "DOMEntity" "public") ("p" #307="systemId" #307# "S" "string" "DOMEntity" "public") ("p" #308="publicId" #308# "S" "string" #309# "public"))) (#312="DOMElement" (("m" "setIdAttributeNS" "setIdAttributeNS(<#string $namespaceURI#>,<#string $localName#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setIdAttributeNode" "setIdAttributeNode(<#DOMAttr $attr#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setIdAttribute" "setIdAttribute(<#string $name#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setAttributeNS" "setAttributeNS(<#string $namespaceURI#>,<#string $qualifiedName#>,<#string $value#>)" "S" "void" "DOMElement" "public") ("m" "setAttributeNodeNS" "setAttributeNodeNS(<#DOMAttr $attr#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttributeNode" "setAttributeNode(<#DOMAttr $attr#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttribute" "setAttribute(<#string $name#>,<#string $value#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "removeAttributeNS" "removeAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "bool" "DOMElement" "public") ("m" "removeAttributeNode" "removeAttributeNode(<#DOMAttr $oldnode#>)" "S" "bool" "DOMElement" "public") ("m" "removeAttribute" "removeAttribute(<#string $name#>)" "S" "bool" "DOMElement" "public") ("m" "hasAttributeNS" "hasAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "bool" "DOMElement" "public") ("m" "hasAttribute" "hasAttribute(<#string $name#>)" "S" "bool" "DOMElement" "public") ("m" "getElementsByTagNameNS" "getElementsByTagNameNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNodeList" "DOMElement" "public") ("m" "getElementsByTagName" "getElementsByTagName(<#string $name#>)" "S" "DOMNodeList" "DOMElement" "public") ("m" "getAttributeNS" "getAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "string" "DOMElement" "public") ("m" "getAttributeNodeNS" "getAttributeNodeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttributeNode" "getAttributeNode(<#string $name#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttribute" "getAttribute(<#string $name#>)" "S" "string" "DOMElement" "public") ("m" "__construct" "__construct(<#string $name#>,<#string $value#>,<#string $namespaceURI#>)" #495="S" "void" "DOMElement" "public") ("p" #310="tagName" #310# "S" "string" "DOMElement" "public") ("p" #311="schemaTypeInfo" #311# "S" "bool" #312# "public"))) (#319="DOMDocumentType" (("p" #313="internalSubset" #313# "S" "string" "DOMDocumentType" "public") ("p" #314="notations" #314# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" #315="entities" #315# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" #316="name" #316# "S" "string" "DOMDocumentType" "public") ("p" #317="systemId" #317# "S" "string" "DOMDocumentType" "public") ("p" #318="publicId" #318# "S" "string" #319# "public"))) (#320="DOMDocumentFragment" (("m" "appendXML" "appendXML(<#string $data#>)" "S" "bool" #320# "public"))) (#340="DOMDocument" (("m" "xinclude" "xinclude(<#int $options#>)" "S" "int" "DOMDocument" "public") ("m" "validate" "validate(<##>)" "S" "bool" "DOMDocument" "public") ("m" "schemaValidateSource" "schemaValidateSource(<#string $source#>,<#int $flags#>)" "S" "bool" "DOMDocument" "public") ("m" "schemaValidate" "schemaValidate(<#string $filename#>,<#int $flags#>)" "S" "bool" "DOMDocument" "public") ("m" "saveXML" "saveXML(<#DOMNode $node#>,<#int $options#>)" "S" "string" "DOMDocument" "public") ("m" "saveHTMLFile" "saveHTMLFile(<#string $filename#>)" "S" "int" "DOMDocument" "public") ("m" "saveHTML" "saveHTML(<#DOMNode $node = NULL#>)" "S" "string" "DOMDocument" "public") ("m" "save" "save(<#string $filename#>,<#int $options#>)" "S" "int" "DOMDocument" "public") ("m" "relaxNGValidateSource" "relaxNGValidateSource(<#string $source#>)" "S" "bool" "DOMDocument" "public") ("m" "relaxNGValidate" "relaxNGValidate(<#string $filename#>)" "S" "bool" "DOMDocument" "public") ("m" "registerNodeClass" "registerNodeClass(<#string $baseclass#>,<#string $extendedclass#>)" "S" "bool" "DOMDocument" "public") ("m" "normalizeDocument" "normalizeDocument(<##>)" "S" "void" "DOMDocument" "public") ("m" "loadXML" "loadXML(<#string $source#>,<#int $options = 0#>)" "S" "mixed" "DOMDocument" "public") ("m" "loadHTMLFile" "loadHTMLFile(<#string $filename#>,<#int $options = 0#>)" "S" "bool" "DOMDocument" "public") ("m" "loadHTML" "loadHTML(<#string $source#>,<#int $options = 0#>)" "S" "bool" "DOMDocument" "public") ("m" "load" "load(<#string $filename#>,<#int $options = 0#>)" "S" "mixed" "DOMDocument" "public") ("m" "importNode" "importNode(<#DOMNode $importedNode#>,<#bool $deep#>)" "S" "DOMNode" "DOMDocument" "public") ("m" "getElementsByTagNameNS" "getElementsByTagNameNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementsByTagName" "getElementsByTagName(<#string $name#>)" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementById" "getElementById(<#string $elementId#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createTextNode" "createTextNode(<#string $content#>)" "S" "DOMText" "DOMDocument" "public") ("m" "createProcessingInstruction" "createProcessingInstruction(<#string $target#>,<#string $data#>)" "S" "DOMProcessingInstruction" "DOMDocument" "public") ("m" "createEntityReference" "createEntityReference(<#string $name#>)" "S" "DOMEntityReference" "DOMDocument" "public") ("m" "createElementNS" "createElementNS(<#string $namespaceURI#>,<#string $qualifiedName#>,<#string $value#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createElement" "createElement(<#string $name#>,<#string $value#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createDocumentFragment" "createDocumentFragment(<##>)" "S" "DOMDocumentFragment" "DOMDocument" "public") ("m" "createComment" "createComment(<#string $data#>)" "S" "DOMComment" "DOMDocument" "public") ("m" "createCDATASection" "createCDATASection(<#string $data#>)" "S" "DOMCDATASection" "DOMDocument" "public") ("m" "createAttributeNS" "createAttributeNS(<#string $namespaceURI#>,<#string $qualifiedName#>)" "S" "DOMAttr" "DOMDocument" "public") ("m" "createAttribute" "createAttribute(<#string $name#>)" "S" "DOMAttr" "DOMDocument" "public") ("m" "__construct" "__construct(<#string $version#>,<#string $encoding#>)" #494="S" "void" "DOMDocument" "public") ("p" #321="xmlVersion" #321# "S" "string" "DOMDocument" "public") ("p" #322="xmlStandalone" #322# "S" "bool" "DOMDocument" "public") ("p" #323="xmlEncoding" #323# "S" "string" "DOMDocument" "public") ("p" #324="version" #324# "S" "string" "DOMDocument" "public") ("p" #325="validateOnParse" #325# "S" "bool" "DOMDocument" "public") ("p" #326="substituteEntities" #326# "S" "bool" "DOMDocument" "public") ("p" #327="strictErrorChecking" #327# "S" "bool" "DOMDocument" "public") ("p" #328="standalone" #328# "S" "bool" "DOMDocument" "public") ("p" #329="resolveExternals" #329# "S" "bool" "DOMDocument" "public") ("p" #330="recover" #330# "S" "bool" "DOMDocument" "public") ("p" #331="preserveWhiteSpace" #331# "S" "bool" "DOMDocument" "public") ("p" #332="implementation" #332# "S" "DOMImplementation" "DOMDocument" "public") ("p" #333="formatOutput" #333# "S" "bool" "DOMDocument" "public") ("p" #334="encoding" #334# "S" "string" "DOMDocument" "public") ("p" #335="documentURI" #335# "S" "string" "DOMDocument" "public") ("p" #336="documentElement" #336# "S" "DOMElement" "DOMDocument" "public") ("p" #337="doctype" #337# "S" "DOMDocumentType" "DOMDocument" "public") ("p" #338="config" #338# "S" "DOMConfiguration" "DOMDocument" "public") ("p" #339="actualEncoding" #339# "S" "string" #340# "public"))) (#341="DOMComment" (("m" "__construct" "__construct(<#string $value#>)" #493="S" "void" #341# "public"))) (#344="DOMCharacterData" (("m" "substringData" "substringData(<#int $offset#>,<#int $count#>)" "S" "string" "DOMCharacterData" "public") ("m" "replaceData" "replaceData(<#int $offset#>,<#int $count#>,<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("m" "insertData" "insertData(<#int $offset#>,<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("m" "deleteData" "deleteData(<#int $offset#>,<#int $count#>)" "S" "void" "DOMCharacterData" "public") ("m" "appendData" "appendData(<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("p" #342="length" #342# "S" "int" "DOMCharacterData" "public") ("p" #343="data" #343# "S" "string" #344# "public"))) (#345="DOMCdataSection" (("m" "__construct" "__construct(<#string $value#>)" #492="S" "void" #345# "public"))) (#351="DOMAttr" (("m" "isId" "isId(<##>)" "S" "bool" "DOMAttr" "public") ("m" "__construct" "__construct(<#string $name#>,<#string $value#>)" #491="S" "void" "DOMAttr" "public") ("p" #346="value" #346# "S" "string" "DOMAttr" "public") ("p" #347="specified" #347# "S" "bool" "DOMAttr" "public") ("p" #348="schemaTypeInfo" #348# "S" "bool" "DOMAttr" "public") ("p" #349="ownerElement" #349# "S" "DOMElement" "DOMAttr" "public") ("p" #350="name" #350# "S" "string" #351# "public"))) (#352="SplSubject" (("m" "notify" "notify(<##>)" "S" "void" "SplSubject" "public") ("m" "detach" "detach(<#SplObserver $observer#>)" "S" "void" "SplSubject" "public") ("m" "attach" "attach(<#SplObserver $observer#>)" "S" "void" #352# "public"))) (#353="SplObserver" (("m" "update" "update(<#SplSubject $subject#>)" "S" "void" #353# "public"))) (#356="ArrayObject" (("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "ArrayObject" "public") ("m" "uksort" "uksort(<#callable $cmp_function#>)" "S" "void" "ArrayObject" "public") ("m" "uasort" "uasort(<#callable $cmp_function#>)" "S" "void" "ArrayObject" "public") ("m" "setIteratorClass" "setIteratorClass(<#string $iterator_class#>)" "S" "void" "ArrayObject" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "ArrayObject" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayObject" "public") ("m" "offsetUnset" "offsetUnset(<#mixed $index#>)" "S" "void" "ArrayObject" "public") ("m" "offsetSet" "offsetSet(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "ArrayObject" "public") ("m" "offsetGet" "offsetGet(<#mixed $index#>)" "S" "mixed" "ArrayObject" "public") ("m" "offsetExists" "offsetExists(<#mixed $index#>)" "S" "bool" "ArrayObject" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayObject" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayObject" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayObject" "public") ("m" "getIteratorClass" "getIteratorClass(<##>)" "S" "string" "ArrayObject" "public") ("m" "getIterator" "getIterator(<##>)" "S" "ArrayIterator" "ArrayObject" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "ArrayObject" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayObject" "public") ("m" "exchangeArray" "exchangeArray(<#mixed $input#>)" "S" "array" "ArrayObject" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayObject" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayObject" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" "ArrayObject" "public") ("m" "__construct" "__construct(<#mixed $input = null#>,<#int $flags = 0#>,<#string $iterator_class = \"ArrayIterator\"#>)" #490="S" "void" "ArrayObject" "public") ("d" #354="ARRAY_AS_PROPS" #354# "S" "integer" "ArrayObject" "public") ("d" #355="STD_PROP_LIST" #355# "S" "integer" #356# "public"))) (#357="SplTempFileObject" (("m" "__construct" "__construct(<#int $max_memory#>)" #489="S" "void" #357# "public"))) (#362="SplFileObject" (("m" "valid" "valid(<##>)" "S" "bool" "SplFileObject" "public") ("m" "__toString" "__toString(<##>)" "S" "void" "SplFileObject" "public") ("m" "setMaxLineLen" "setMaxLineLen(<#int $max_len#>)" "S" "void" "SplFileObject" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "SplFileObject" "public") ("m" "setCsvControl" "setCsvControl(<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = \"\\\"\"#>,<#string $escape = \"\\\\\"#>)" "S" "void" "SplFileObject" "public") ("m" "seek" "seek(<#int $line_pos#>)" "S" "void" "SplFileObject" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplFileObject" "public") ("m" "next" "next(<##>)" "S" "void" "SplFileObject" "public") ("m" "key" "key(<##>)" "S" "int" "SplFileObject" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "SplFileObject" "public") ("m" "getMaxLineLen" "getMaxLineLen(<##>)" "S" "int" "SplFileObject" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "SplFileObject" "public") ("m" "getCsvControl" "getCsvControl(<##>)" "S" "array" "SplFileObject" "public") ("m" "getChildren" "getChildren(<##>)" "S" "void" "SplFileObject" "public") ("m" "fwrite" "fwrite(<#string $str#>,<#int $length#>)" "S" "int" "SplFileObject" "public") ("m" "ftruncate" "ftruncate(<#int $size#>)" "S" "bool" "SplFileObject" "public") ("m" "ftell" "ftell(<##>)" "S" "int" "SplFileObject" "public") ("m" "fstat" "fstat(<##>)" "S" "array" "SplFileObject" "public") ("m" "fseek" "fseek(<#int $offset#>,<#int $whence = SEEK_SET#>)" "S" "int" "SplFileObject" "public") ("m" "fscanf" "fscanf(<#string $format#>,<#$args#>)" "S" "mixed" "SplFileObject" "public") ("m" "fread" "fread(<#int $length#>)" "S" "string" "SplFileObject" "public") ("m" "fputcsv" "fputcsv(<#array $fields#>,<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = '\"'#>,<#string $escape = \"\\\\\"#>)" "S" "int" "SplFileObject" "public") ("m" "fpassthru" "fpassthru(<##>)" "S" "int" "SplFileObject" "public") ("m" "flock" "flock(<#int $operation#>,<#int &$wouldblock#>)" "S" "bool" "SplFileObject" "public") ("m" "fgetss" "fgetss(<#string $allowable_tags#>)" "S" "string" "SplFileObject" "public") ("m" "fgets" "fgets(<##>)" "S" "string" "SplFileObject" "public") ("m" "fgetcsv" "fgetcsv(<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = \"\\\"\"#>,<#string $escape = \"\\\\\"#>)" "S" "array" "SplFileObject" "public") ("m" "fgetc" "fgetc(<##>)" "S" "string" "SplFileObject" "public") ("m" "fflush" "fflush(<##>)" "S" "bool" "SplFileObject" "public") ("m" "eof" "eof(<##>)" "S" "bool" "SplFileObject" "public") ("m" "current" "current(<##>)" "S" "string" "SplFileObject" "public") ("d" #358="READ_CSV" #358# "S" "integer" "SplFileObject" "public") ("d" #359="SKIP_EMPTY" #359# "S" "integer" "SplFileObject" "public") ("d" #360="READ_AHEAD" #360# "S" "integer" "SplFileObject" "public") ("d" #361="DROP_NEW_LINE" #361# "S" "integer" #362# "public"))) (#363="SplFileInfo" (("m" "__toString" "__toString(<##>)" "S" "void" "SplFileInfo" "public") ("m" "setInfoClass" "setInfoClass(<#string $class_name = \"SplFileInfo\"#>)" "S" "void" "SplFileInfo" "public") ("m" "setFileClass" "setFileClass(<#string $class_name = \"SplFileObject\"#>)" "S" "void" "SplFileInfo" "public") ("m" "openFile" "openFile(<#string $open_mode = \"r\"#>,<#bool $use_include_path = false#>,<#resource $context = NULL#>)" "S" "SplFileObject" "SplFileInfo" "public") ("m" "isWritable" "isWritable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isReadable" "isReadable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isLink" "isLink(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isFile" "isFile(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isExecutable" "isExecutable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isDir" "isDir(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "getType" "getType(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getRealPath" "getRealPath(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getPerms" "getPerms(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getPathname" "getPathname(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getPathInfo" "getPathInfo(<#string $class_name#>)" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getPath" "getPath(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getOwner" "getOwner(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getMTime" "getMTime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getLinkTarget" "getLinkTarget(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getInode" "getInode(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getGroup" "getGroup(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getFileInfo" "getFileInfo(<#string $class_name#>)" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getExtension" "getExtension(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getCTime" "getCTime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getBasename" "getBasename(<#string $suffix#>)" "S" "string" "SplFileInfo" "public") ("m" "getATime" "getATime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "__construct" "__construct(<#string $file_name#>)" #488="S" "void" #363# "public"))) (#487="UnexpectedValueException" nil) (#486="UnderflowException" nil) (#485="RuntimeException" nil) (#484="RangeException" nil) (#483="OverflowException" nil) (#482="OutOfRangeException" nil) (#481="OutOfBoundsException" nil) (#480="LengthException" nil) (#479="InvalidArgumentException" nil) (#478="DomainException" nil) (#477="BadMethodCallException" nil) (#476="BadFunctionCallException" nil) (#475="LogicException" nil) (#368="Exception" (("m" "__clone" "__clone(<##>)" "S" "private" "Exception" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "Exception" "public") ("m" "getTraceAsString" "getTraceAsString(<##>)" "S" "string" "Exception" "public") ("m" "getTrace" "getTrace(<##>)" "S" "array" "Exception" "public") ("m" "getLine" "getLine(<##>)" "S" "int" "Exception" "public") ("m" "getFile" "getFile(<##>)" "S" "string" "Exception" "public") ("m" "getCode" "getCode(<##>)" "S" "int" "Exception" "public") ("m" "getPrevious" "getPrevious(<##>)" "S" "Exception" "Exception" "public") ("m" "getMessage" "getMessage(<##>)" "S" "string" "Exception" "public") ("m" "__construct" "__construct(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474="S" "void" "Exception" "public") ("p" #364="line" #364# "S" "int" "Exception" "protected") ("p" #365="file" #365# "S" "string" "Exception" "protected") ("p" #366="code" #366# "S" "int" "Exception" "protected") ("p" #367="message" #367# "S" "string" #368# "protected"))) (#604="Traversable" nil) (#369="Iterator" (("m" "valid" "valid(<##>)" "S" "boolean" "Iterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "Iterator" "public") ("m" "next" "next(<##>)" "S" "void" "Iterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "Iterator" "public") ("m" "current" "current(<##>)" "S" "mixed" #369# "public"))) (#370="Countable" (("m" "count" "count(<##>)" "S" "int" #370# "public"))) (#371="RecursiveIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveIterator" #371# "public"))) (#378="RegexIterator" (("m" "setPregFlags" "setPregFlags(<#int $preg_flags#>)" "S" "void" "RegexIterator" "public") ("m" "setMode" "setMode(<#int $mode#>)" "S" "void" "RegexIterator" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "RegexIterator" "public") ("m" "getRegex" "getRegex(<##>)" "S" "string" "RegexIterator" "public") ("m" "getPregFlags" "getPregFlags(<##>)" "S" "int" "RegexIterator" "public") ("m" "getMode" "getMode(<##>)" "S" "int" "RegexIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "RegexIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" "RegexIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #473="S" "void" "RegexIterator" "public") ("d" #372="USE_KEY" #372# "S" "integer" "RegexIterator" "public") ("d" #373="REPLACE" #373# "S" "integer" "RegexIterator" "public") ("d" #374="SPLIT" #374# "S" "integer" "RegexIterator" "public") ("d" #375="ALL_MATCHES" #375# "S" "integer" "RegexIterator" "public") ("d" #376="GET_MATCH" #376# "S" "integer" "RegexIterator" "public") ("d" #377="MATCH" #377# "S" "integer" #378# "public"))) (#387="RecursiveTreeIterator" (("m" "valid" "valid(<##>)" "S" "bool" "RecursiveTreeIterator" "public") ("m" "setPrefixPart" "setPrefixPart(<#int $part#>,<#string $value#>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "nextElement" "nextElement(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "key" "key(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "getPrefix" "getPrefix(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "getPostfix" "getPostfix(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "getEntry" "getEntry(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "endIteration" "endIteration(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "endChildren" "endChildren(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "current" "current(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator_IteratorAggregate $it#>,<#int $flags = RecursiveTreeIterator::BYPASS_KEY#>,<#int $cit_flags = CachingIterator::CATCH_GET_CHILD#>,<#int $mode = RecursiveIteratorIterator::SELF_FIRST#>)" #472="S" "void" "RecursiveTreeIterator" "public") ("m" "callHasChildren" "callHasChildren(<##>)" "S" "bool" "RecursiveTreeIterator" "public") ("m" "callGetChildren" "callGetChildren(<##>)" "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginIteration" "beginIteration(<##>)" "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginChildren" "beginChildren(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("d" #379="PREFIX_RIGHT" #379# "S" "integer" "RecursiveTreeIterator" "public") ("d" #380="PREFIX_END_LAST" #380# "S" "integer" "RecursiveTreeIterator" "public") ("d" #381="PREFIX_END_HAS_NEXT" #381# "S" "integer" "RecursiveTreeIterator" "public") ("d" #382="PREFIX_MID_LAST" #382# "S" "integer" "RecursiveTreeIterator" "public") ("d" #383="PREFIX_MID_HAS_NEXT" #383# "S" "integer" "RecursiveTreeIterator" "public") ("d" #384="PREFIX_LEFT" #384# "S" "integer" "RecursiveTreeIterator" "public") ("d" #385="BYPASS_KEY" #385# "S" "integer" "RecursiveTreeIterator" "public") ("d" #386="BYPASS_CURRENT" #386# "S" "integer" #387# "public"))) (#388="RecursiveRegexIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveRegexIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveRegexIterator" "RecursiveRegexIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #471="S" "void" #388# "public"))) (#393="RecursiveIteratorIterator" (("m" "valid" "valid(<##>)" "S" "bool" "RecursiveIteratorIterator" "public") ("m" "setMaxDepth" "setMaxDepth(<#string $max_depth = -1#>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "nextElement" "nextElement(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getSubIterator" "getSubIterator(<#int $level#>)" "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "getMaxDepth" "getMaxDepth(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "iterator" "RecursiveIteratorIterator" "public") ("m" "getDepth" "getDepth(<##>)" "S" "int" "RecursiveIteratorIterator" "public") ("m" "endIteration" "endIteration(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "endChildren" "endChildren(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>,<#int $mode = RecursiveIteratorIterator::LEAVES_ONLY#>,<#int $flags = 0#>)" #470="S" "void" "RecursiveIteratorIterator" "public") ("m" "callHasChildren" "callHasChildren(<##>)" "S" "bool" "RecursiveIteratorIterator" "public") ("m" "callGetChildren" "callGetChildren(<##>)" "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "beginIteration" "beginIteration(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "beginChildren" "beginChildren(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("d" #389="CATCH_GET_CHILD" #389# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #390="CHILD_FIRST" #390# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #391="SELF_FIRST" #391# "S" "integer" "RecursiveIteratorIterator" "public") ("d" #392="LEAVES_ONLY" #392# "S" "integer" #393# "public"))) (#394="RecursiveFilterIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveFilterIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveFilterIterator" "RecursiveFilterIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>)" #469="S" "void" #394# "public"))) (#395="RecursiveDirectoryIterator" (("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveDirectoryIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveDirectoryIterator" "public") ("m" "key" "key(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "hasChildren" "hasChildren(<#bool $allow_links = false#>)" "S" "bool" "RecursiveDirectoryIterator" "public") ("m" "getSubPathname" "getSubPathname(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getSubPath" "getSubPath(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "mixed" "RecursiveDirectoryIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #468="S" "void" #395# "public"))) (#396="RecursiveCallbackFilterIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "void" "RecursiveCallbackFilterIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveCallbackFilterIterator" "RecursiveCallbackFilterIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>,<#string $callback#>)" #467="S" "void" #396# "public"))) (#397="RecursiveCachingIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveCachingIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveCachingIterator" "RecursiveCachingIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #466="S" "void" #397# "public"))) (#398="RecursiveArrayIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveArrayIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveArrayIterator" #398# "public"))) (#399="ParentIterator" (("m" "rewind" "rewind(<##>)" "S" "void" "ParentIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ParentIterator" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "ParentIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "ParentIterator" "ParentIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>)" #465="S" "void" "ParentIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" #399# "public"))) (#400="NoRewindIterator" (("m" "valid" "valid(<##>)" "S" "bool" "NoRewindIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "NoRewindIterator" "public") ("m" "next" "next(<##>)" "S" "void" "NoRewindIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "NoRewindIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "iterator" "NoRewindIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "NoRewindIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #464="S" "void" #400# "public"))) (#405="MultipleIterator" (("m" "valid" "valid(<##>)" "S" "void" "MultipleIterator" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "MultipleIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "MultipleIterator" "public") ("m" "next" "next(<##>)" "S" "void" "MultipleIterator" "public") ("m" "key" "key(<##>)" "S" "array" "MultipleIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "MultipleIterator" "public") ("m" "detachIterator" "detachIterator(<#Iterator $iterator#>)" "S" "void" "MultipleIterator" "public") ("m" "current" "current(<##>)" "S" "array" "MultipleIterator" "public") ("m" "countIterators" "countIterators(<##>)" "S" "void" "MultipleIterator" "public") ("m" "containsIterator" "containsIterator(<#Iterator $iterator#>)" "S" "void" "MultipleIterator" "public") ("m" "attachIterator" "attachIterator(<#Iterator $iterator#>,<#string $infos#>)" "S" "void" "MultipleIterator" "public") ("m" "__construct" "__construct(<#int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC#>)" #463="S" "void" "MultipleIterator" "public") ("d" #401="MIT_KEYS_ASSOC" #401# "S" "integer" "MultipleIterator" "public") ("d" #402="MIT_KEYS_NUMERIC" #402# "S" "integer" "MultipleIterator" "public") ("d" #403="MIT_NEED_ALL" #403# "S" "integer" "MultipleIterator" "public") ("d" #404="MIT_NEED_ANY" #404# "S" "integer" #405# "public"))) (#406="LimitIterator" (("m" "valid" "valid(<##>)" "S" "bool" "LimitIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "int" "LimitIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "LimitIterator" "public") ("m" "next" "next(<##>)" "S" "void" "LimitIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "LimitIterator" "public") ("m" "getPosition" "getPosition(<##>)" "S" "int" "LimitIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "LimitIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "LimitIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#int $offset = 0#>,<#int $count = -1#>)" #462="S" "void" #406# "public"))) (#407="InfiniteIterator" (("m" "next" "next(<##>)" "S" "void" "InfiniteIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #461="S" "void" #407# "public"))) (#408="GlobIterator" (("m" "count" "count(<##>)" "S" "int" "GlobIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #460="S" "void" #408# "public"))) (#409="FilterIterator" (("m" "valid" "valid(<##>)" "S" "bool" "FilterIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "FilterIterator" "public") ("m" "next" "next(<##>)" "S" "void" "FilterIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "FilterIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "FilterIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "FilterIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #459="S" "void" "FilterIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" #409# "public"))) (#421="FilesystemIterator" (("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "FilesystemIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "FilesystemIterator" "public") ("m" "next" "next(<##>)" "S" "void" "FilesystemIterator" "public") ("m" "key" "key(<##>)" "S" "string" "FilesystemIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "FilesystemIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "FilesystemIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS#>)" #458="S" "void" "FilesystemIterator" "public") ("d" #410="UNIX_PATHS" #410# "S" "integer" "FilesystemIterator" "public") ("d" #411="SKIP_DOTS" #411# "S" "integer" "FilesystemIterator" "public") ("d" #412="NEW_CURRENT_AND_KEY" #412# "S" "integer" "FilesystemIterator" "public") ("d" #413="KEY_MODE_MASK" #413# "S" "integer" "FilesystemIterator" "public") ("d" #414="FOLLOW_SYMLINKS" #414# "S" "integer" "FilesystemIterator" "public") ("d" #415="KEY_AS_FILENAME" #415# "S" "integer" "FilesystemIterator" "public") ("d" #416="KEY_AS_PATHNAME" #416# "S" "integer" "FilesystemIterator" "public") ("d" #417="CURRENT_MODE_MASK" #417# "S" "integer" "FilesystemIterator" "public") ("d" #418="CURRENT_AS_SELF" #418# "S" "integer" "FilesystemIterator" "public") ("d" #419="CURRENT_AS_FILEINFO" #419# "S" "integer" "FilesystemIterator" "public") ("d" #420="CURRENT_AS_PATHNAME" #420# "S" "integer" #421# "public"))) (#422="EmptyIterator" (("m" "valid" "valid(<##>)" "S" "void" "EmptyIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "EmptyIterator" "public") ("m" "next" "next(<##>)" "S" "void" "EmptyIterator" "public") ("m" "key" "key(<##>)" "S" "void" "EmptyIterator" "public") ("m" "current" "current(<##>)" "S" "void" #422# "public"))) (#423="DirectoryIterator" (("m" "valid" "valid(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "DirectoryIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "DirectoryIterator" "public") ("m" "next" "next(<##>)" "S" "void" "DirectoryIterator" "public") ("m" "key" "key(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "isWritable" "isWritable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isReadable" "isReadable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isLink" "isLink(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isFile" "isFile(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isExecutable" "isExecutable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isDot" "isDot(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isDir" "isDir(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "getType" "getType(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getPerms" "getPerms(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getPathname" "getPathname(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getPath" "getPath(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getOwner" "getOwner(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getMTime" "getMTime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getInode" "getInode(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getGroup" "getGroup(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getExtension" "getExtension(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getCTime" "getCTime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getBasename" "getBasename(<#string $suffix#>)" "S" "string" "DirectoryIterator" "public") ("m" "getATime" "getATime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "current" "current(<##>)" "S" "DirectoryIterator" "DirectoryIterator" "public") ("m" "__construct" "__construct(<#string $path#>)" #457="S" "void" #423# "public"))) (#424="CallbackFilterIterator" (("m" "accept" "accept(<##>)" "S" "string" "CallbackFilterIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#callable $callback#>)" #456="S" "void" #424# "public"))) (#431="CachingIterator" (("m" "valid" "valid(<##>)" "S" "void" "CachingIterator" "public") ("m" "__toString" "__toString(<##>)" "S" "void" "CachingIterator" "public") ("m" "setFlags" "setFlags(<#bitmask $flags#>)" "S" "void" "CachingIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "CachingIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "CachingIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "next" "next(<##>)" "S" "void" "CachingIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "CachingIterator" "public") ("m" "hasNext" "hasNext(<##>)" "S" "void" "CachingIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "CachingIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "CachingIterator" "public") ("m" "getCache" "getCache(<##>)" "S" "array" "CachingIterator" "public") ("m" "current" "current(<##>)" "S" "void" "CachingIterator" "public") ("m" "count" "count(<##>)" "S" "int" "CachingIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #455="S" "void" "CachingIterator" "public") ("d" #425="FULL_CACHE" #425# "S" "void" "CachingIterator" "public") ("d" #426="TOSTRING_USE_INNER" #426# "S" "void" "CachingIterator" "public") ("d" #427="TOSTRING_USE_CURRENT" #427# "S" "void" "CachingIterator" "public") ("d" #428="TOSTRING_USE_KEY" #428# "S" "void" "CachingIterator" "public") ("d" #429="CATCH_GET_CHILD" #429# "S" "void" "CachingIterator" "public") ("d" #430="CALL_TOSTRING" #430# "S" "void" #431# "public"))) (#432="SeekableIterator" (("m" "seek" "seek(<#int $position#>)" "S" "void" "SeekableIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" #432# "public"))) (#433="ArrayIterator" (("m" "valid" "valid(<##>)" "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "string" "ArrayIterator" "public") ("m" "uksort" "uksort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "uasort" "uasort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "setFlags(<#string $flags#>)" "S" "void" "ArrayIterator" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "ArrayIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayIterator" "public") ("m" "__construct" "__construct(<#)#>,<#int $flags = 0#>)" #454="S" "void" "ArrayIterator" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" "ArrayIterator" "public") ("m" "valid" "valid(<##>)" "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "string" "ArrayIterator" "public") ("m" "uksort" "uksort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "uasort" "uasort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "setFlags(<#string $flags#>)" "S" "void" "ArrayIterator" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "ArrayIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayIterator" "public") ("m" "__construct" "__construct(<#)#>,<#int $flags = 0#>)" "S" "void" "ArrayIterator" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" #433# "public"))) (#434="OuterIterator" (("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "OuterIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" #434# "public"))) (#435="IteratorIterator" (("m" "valid" "valid(<##>)" "S" "bool" "IteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "IteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "IteratorIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Traversable" "IteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>)" #452="S" "void" "IteratorIterator" "public") ("m" "valid" "valid(<##>)" "S" "bool" "IteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "IteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "IteratorIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Traversable" "IteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>)" "S" nil #435# "public"))) (#436="SplObjectStorage" (("m" "valid" "valid(<##>)" "S" "bool" "SplObjectStorage" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "SplObjectStorage" "public") ("m" "setInfo" "setInfo(<#mixed $data#>)" "S" "void" "SplObjectStorage" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "SplObjectStorage" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplObjectStorage" "public") ("m" "removeAllExcept" "removeAllExcept(<#SplObjectStorage $storage#>)" "S" "void" "SplObjectStorage" "public") ("m" "removeAll" "removeAll(<#SplObjectStorage $storage#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetUnset" "offsetUnset(<#object $object#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetSet" "offsetSet(<#object $object#>,<#mixed $data = NULL#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetGet" "offsetGet(<#object $object#>)" "S" "mixed" "SplObjectStorage" "public") ("m" "offsetExists" "offsetExists(<#object $object#>)" "S" "bool" "SplObjectStorage" "public") ("m" "next" "next(<##>)" "S" "void" "SplObjectStorage" "public") ("m" "key" "key(<##>)" "S" "int" "SplObjectStorage" "public") ("m" "getInfo" "getInfo(<##>)" "S" "mixed" "SplObjectStorage" "public") ("m" "getHash" "getHash(<#object $object#>)" "S" "string" "SplObjectStorage" "public") ("m" "detach" "detach(<#object $object#>)" "S" "void" "SplObjectStorage" "public") ("m" "current" "current(<##>)" "S" "object" "SplObjectStorage" "public") ("m" "count" "count(<##>)" "S" "int" "SplObjectStorage" "public") ("m" "contains" "contains(<#object $object#>)" "S" "bool" "SplObjectStorage" "public") ("m" "attach" "attach(<#object $object#>,<#mixed $data = NULL#>)" "S" "void" "SplObjectStorage" "public") ("m" "addAll" "addAll(<#SplObjectStorage $storage#>)" "S" "void" #436# "public"))) (#437="SplFixedArray" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "SplFixedArray" "public") ("m" "valid" "valid(<##>)" "S" "bool" "SplFixedArray" "public") ("m" "toArray" "toArray(<##>)" "S" "array" "SplFixedArray" "public") ("m" "setSize" "setSize(<#int $size#>)" "S" "int" "SplFixedArray" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplFixedArray" "public") ("m" "offsetUnset" "offsetUnset(<#int $index#>)" "S" "void" "SplFixedArray" "public") ("m" "offsetSet" "offsetSet(<#int $index#>,<#mixed $newval#>)" "S" "void" "SplFixedArray" "public") ("m" "offsetGet" "offsetGet(<#int $index#>)" "S" "mixed" "SplFixedArray" "public") ("m" "offsetExists" "offsetExists(<#int $index#>)" "S" "bool" "SplFixedArray" "public") ("m" "next" "next(<##>)" "S" "void" "SplFixedArray" "public") ("m" "key" "key(<##>)" "S" "int" "SplFixedArray" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "SplFixedArray" "public") ("m" "fromArray" "fromArray(<#array $array#>,<#bool $save_indexes = true#>)" "S" "SplFixedArray" "SplFixedArray" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplFixedArray" "public") ("m" "count" "count(<##>)" "S" "int" "SplFixedArray" "public") ("m" "__construct" "__construct(<#int $size = 0#>)" #451="S" nil #437# "public"))) (#438="SplPriorityQueue" (("m" "valid" "valid(<##>)" "S" "bool" "SplPriorityQueue" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "setExtractFlags" "setExtractFlags(<#int $flags#>)" "S" "void" "SplPriorityQueue" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "recoverFromCorruption" "recoverFromCorruption(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "next" "next(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplPriorityQueue" "public") ("m" "insert" "insert(<#mixed $value#>,<#mixed $priority#>)" "S" "void" "SplPriorityQueue" "public") ("m" "extract" "extract(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "count" "count(<##>)" "S" "int" "SplPriorityQueue" "public") ("m" "compare" "compare(<#mixed $priority1#>,<#mixed $priority2#>)" "S" "int" "SplPriorityQueue" "public") ("m" "__construct" "__construct(<##>)" #450="S" nil #438# "public"))) (#439="SplMinHeap" (("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "int" #439# "protected"))) (#440="SplMaxHeap" (("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "int" #440# "protected"))) (#441="SplHeap" (("m" "valid" "valid(<##>)" "S" "bool" "SplHeap" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplHeap" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplHeap" "public") ("m" "recoverFromCorruption" "recoverFromCorruption(<##>)" "S" "void" "SplHeap" "public") ("m" "next" "next(<##>)" "S" "void" "SplHeap" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplHeap" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplHeap" "public") ("m" "insert" "insert(<#mixed $value#>)" "S" "void" "SplHeap" "public") ("m" "extract" "extract(<##>)" "S" "mixed" "SplHeap" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplHeap" "public") ("m" "count" "count(<##>)" "S" "int" "SplHeap" "public") ("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "protected" "SplHeap" "public") ("m" "__construct" "__construct(<##>)" #449="S" nil #441# "public"))) (#442="SplQueue" (("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplQueue" "public") ("m" "enqueue" "enqueue(<#mixed $value#>)" "S" "void" "SplQueue" "public") ("m" "dequeue" "dequeue(<##>)" "S" "mixed" "SplQueue" "public") ("m" "__construct" "__construct(<##>)" #448="S" nil #442# "public"))) (#443="SplStack" (("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplStack" "public") ("m" "__construct" "__construct(<##>)" #447="S" nil #443# "public"))) (#444="SplDoublyLinkedList" (("m" "valid" "valid(<##>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "unshift" "unshift(<#mixed $value#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "shift" "shift(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "SplDoublyLinkedList" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "push" "push(<#mixed $value#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "prev" "prev(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "pop" "pop(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetUnset" "offsetUnset(<#mixed $index#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetSet" "offsetSet(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetGet" "offsetGet(<#mixed $index#>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetExists" "offsetExists(<#mixed $index#>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "next" "next(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "getIteratorMode" "getIteratorMode(<##>)" "S" "int" "SplDoublyLinkedList" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "count" "count(<##>)" "S" "int" "SplDoublyLinkedList" "public") ("m" "bottom" "bottom(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "add" "add(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "__construct" "__construct(<##>)" #445="S" nil #444# "public")))) ((#446="f" "SplDoublyLinkedList(" "SplDoublyLinkedList(<##>)" #445# #649="SplDoublyLinkedList") (#446# "SplStack(" "SplStack(<##>)" #447# #648="SplStack") (#446# "SplQueue(" "SplQueue(<##>)" #448# #647="SplQueue") (#446# "SplHeap(" "SplHeap(<##>)" #449# #646="SplHeap") (#446# "SplMaxHeap(" "SplMaxHeap(<##>)" #449# #645="SplMaxHeap") (#446# "SplMinHeap(" "SplMinHeap(<##>)" #449# #644="SplMinHeap") (#446# "SplPriorityQueue(" "SplPriorityQueue(<##>)" #450# #643="SplPriorityQueue") (#446# "SplFixedArray(" "SplFixedArray(<#int $size = 0#>)" #451# #642="SplFixedArray") (#453="f" "SplObjectStorage(" "SplObjectStorage()" #641="S" #640="SplObjectStorage") (#446# "IteratorIterator(" "IteratorIterator(<#Traversable $iterator#>)" #452# #639="IteratorIterator") (#453# "OuterIterator(" "OuterIterator()" #638="S" #637="OuterIterator") (#446# "ArrayIterator(" "ArrayIterator(<#)#>,<#int $flags = 0#>)" #454# #636="ArrayIterator") (#453# "SeekableIterator(" "SeekableIterator()" #635="S" #634="SeekableIterator") (#446# "ArrayIterator(" "ArrayIterator(<#)#>,<#int $flags = 0#>)" #454# #633="ArrayIterator") (#446# "CachingIterator(" "CachingIterator(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #455# #632="CachingIterator") (#446# "CallbackFilterIterator(" "CallbackFilterIterator(<#Iterator $iterator#>,<#callable $callback#>)" #456# #631="CallbackFilterIterator") (#446# "DirectoryIterator(" "DirectoryIterator(<#string $path#>)" #457# #630="DirectoryIterator") (#453# "EmptyIterator(" "EmptyIterator()" #629="S" #628="EmptyIterator") (#446# "FilesystemIterator(" "FilesystemIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS#>)" #458# #627="FilesystemIterator") (#446# "FilterIterator(" "FilterIterator(<#Iterator $iterator#>)" #459# #626="FilterIterator") (#446# "GlobIterator(" "GlobIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #460# #625="GlobIterator") (#446# "InfiniteIterator(" "InfiniteIterator(<#Iterator $iterator#>)" #461# #624="InfiniteIterator") (#446# "IteratorIterator(" "IteratorIterator(<#Traversable $iterator#>)" #452# #623="IteratorIterator") (#446# "LimitIterator(" "LimitIterator(<#Iterator $iterator#>,<#int $offset = 0#>,<#int $count = -1#>)" #462# #622="LimitIterator") (#446# "MultipleIterator(" "MultipleIterator(<#int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC#>)" #463# #621="MultipleIterator") (#446# "NoRewindIterator(" "NoRewindIterator(<#Iterator $iterator#>)" #464# #620="NoRewindIterator") (#446# "ParentIterator(" "ParentIterator(<#RecursiveIterator $iterator#>)" #465# #619="ParentIterator") (#446# "RecursiveArrayIterator(" "RecursiveArrayIterator(<#)#>,<#int $flags = 0#>)" #454# #618="RecursiveArrayIterator") (#446# "RecursiveCachingIterator(" "RecursiveCachingIterator(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #466# #617="RecursiveCachingIterator") (#446# "RecursiveCallbackFilterIterator(" "RecursiveCallbackFilterIterator(<#RecursiveIterator $iterator#>,<#string $callback#>)" #467# #616="RecursiveCallbackFilterIterator") (#446# "RecursiveDirectoryIterator(" "RecursiveDirectoryIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #468# #615="RecursiveDirectoryIterator") (#446# "RecursiveFilterIterator(" "RecursiveFilterIterator(<#RecursiveIterator $iterator#>)" #469# #614="RecursiveFilterIterator") (#446# "RecursiveIteratorIterator(" "RecursiveIteratorIterator(<#Traversable $iterator#>,<#int $mode = RecursiveIteratorIterator::LEAVES_ONLY#>,<#int $flags = 0#>)" #470# #613="RecursiveIteratorIterator") (#446# "RecursiveRegexIterator(" "RecursiveRegexIterator(<#RecursiveIterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #471# #612="RecursiveRegexIterator") (#446# "RecursiveTreeIterator(" "RecursiveTreeIterator(<#RecursiveIterator_IteratorAggregate $it#>,<#int $flags = RecursiveTreeIterator::BYPASS_KEY#>,<#int $cit_flags = CachingIterator::CATCH_GET_CHILD#>,<#int $mode = RecursiveIteratorIterator::SELF_FIRST#>)" #472# #611="RecursiveTreeIterator") (#446# "RegexIterator(" "RegexIterator(<#Iterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #473# #610="RegexIterator") (#446# "Exception(" "Exception(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #603="Exception") (#446# "LogicException(" "LogicException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #475#) (#446# "BadFunctionCallException(" "BadFunctionCallException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #476#) (#446# "BadMethodCallException(" "BadMethodCallException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #477#) (#446# "DomainException(" "DomainException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #478#) (#446# "InvalidArgumentException(" "InvalidArgumentException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #479#) (#446# "LengthException(" "LengthException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #480#) (#446# "OutOfBoundsException(" "OutOfBoundsException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #481#) (#446# "OutOfRangeException(" "OutOfRangeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #482#) (#446# "OverflowException(" "OverflowException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #483#) (#446# "RangeException(" "RangeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #484#) (#446# "RuntimeException(" "RuntimeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #485#) (#446# "UnderflowException(" "UnderflowException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #486#) (#446# "UnexpectedValueException(" "UnexpectedValueException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #487#) (#446# "SplFileInfo(" "SplFileInfo(<#string $file_name#>)" #488# #602="SplFileInfo") (#446# "SplFileObject(" "SplFileObject(<#string $file_name#>)" #488# #601="SplFileObject") (#446# "SplTempFileObject(" "SplTempFileObject(<#int $max_memory#>)" #489# #600="SplTempFileObject") (#446# "ArrayObject(" "ArrayObject(<#mixed $input = null#>,<#int $flags = 0#>,<#string $iterator_class = \"ArrayIterator\"#>)" #490# #599="ArrayObject") (#453# "SplObserver(" "SplObserver()" #598="S" #597="SplObserver") (#453# "SplSubject(" "SplSubject()" #596="S" #595="SplSubject") (#446# "DOMAttr(" "DOMAttr(<#string $name#>,<#string $value#>)" #491# #594="DOMAttr") (#446# "DOMCdataSection(" "DOMCdataSection(<#string $value#>)" #492# #593="DOMCdataSection") (#453# "DOMCharacterData(" "DOMCharacterData()" #592="S" #591="DOMCharacterData") (#446# "DOMComment(" "DOMComment(<#string $value#>)" #493# #590="DOMComment") (#446# "DOMDocument(" "DOMDocument(<#string $version#>,<#string $encoding#>)" #494# #589="DOMDocument") (#453# "DOMDocumentFragment(" "DOMDocumentFragment()" #588="S" #587="DOMDocumentFragment") (#453# "DOMDocumentType(" "DOMDocumentType()" #586="S" #585="DOMDocumentType") (#446# "DOMElement(" "DOMElement(<#string $name#>,<#string $value#>,<#string $namespaceURI#>)" #495# #584="DOMElement") (#453# "DOMEntity(" "DOMEntity()" #583="S" #582="DOMEntity") (#446# "DOMEntityReference(" "DOMEntityReference(<#string $name#>)" #496# #581="DOMEntityReference") (#446# "DOMException(" "DOMException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #580="DOMException") (#446# "DOMImplementation(" "DOMImplementation(<##>)" #497# #579="DOMImplementation") (#453# "DOMNamedNodeMap(" "DOMNamedNodeMap()" #578="S" #577="DOMNamedNodeMap") (#453# "DOMNode(" "DOMNode()" #576="S" #575="DOMNode") (#453# "DOMNodeList(" "DOMNodeList()" #574="S" #573="DOMNodeList") (#453# "DOMNotation(" "DOMNotation()" #572="S" #571="DOMNotation") (#446# "DOMProcessingInstruction(" "DOMProcessingInstruction(<#string $name#>,<#string $value#>)" #498# #570="DOMProcessingInstruction") (#446# "DOMText(" "DOMText(<#string $value#>)" #499# #569="DOMText") (#446# "DOMXPath(" "DOMXPath(<#DOMDocument $doc#>)" #500# #568="DOMXPath") (#453# "ZipArchive(" "ZipArchive()" #567="S" #566="ZipArchive") (#446# "SplType(" "SplType(<#mixed $initial_value#>,<#bool $strict#>)" #501# #565="SplType") (#446# "SplInt(" "SplInt(<#mixed $initial_value#>,<#bool $strict#>)" #501# #564="SplInt") (#446# "SplFloat(" "SplFloat(<#mixed $initial_value#>,<#bool $strict#>)" #501# #563="SplFloat") (#446# "SplEnum(" "SplEnum(<#mixed $initial_value#>,<#bool $strict#>)" #501# #562="SplEnum") (#446# "SplBool(" "SplBool(<#mixed $initial_value#>,<#bool $strict#>)" #501# #561="SplBool") (#446# "SplString(" "SplString(<#mixed $initial_value#>,<#bool $strict#>)" #501# #560="SplString") (#446# "SimpleXMLElement(" "SimpleXMLElement(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #502# #559="SimpleXMLElement") (#446# "SimpleXMLIterator(" "SimpleXMLIterator(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #502# #558="SimpleXMLIterator") (#453# "XMLReader(" "XMLReader()" #557="S" #556="XMLReader") (#453# "Memcache(" "Memcache()" #555="S" #554="Memcache") (#446# "HttpDeflateStream(" "HttpDeflateStream(<#int $flags = 0#>)" #503# #553="HttpDeflateStream") (#446# "HttpInflateStream(" "HttpInflateStream(<#int $flags = 0#>)" #504# #552="HttpInflateStream") (#446# "HttpMessage(" "HttpMessage(<#string $message#>)" #505# #551="HttpMessage") (#446# "HttpMessage(" "HttpMessage(<#string $message#>)" #505# #550="HttpMessage") (#446# "HttpQueryString(" "HttpQueryString(<#bool $global = true#>,<#mixed $add#>)" #506# #549="HttpQueryString") (#446# "HttpRequest(" "HttpRequest(<#string $url#>,<#int $request_method = HTTP_METH_GET#>,<#array $options#>)" #507# #548="HttpRequest") (#446# "HttpRequestPool(" "HttpRequestPool(<#HttpRequest $request#>,<#HttpRequest $__args__#>)" #508# #547="HttpRequestPool") (#453# "HttpResponse(" "HttpResponse()" #546="S" #545="HttpResponse") (#446# "mysqli(" "mysqli(<#\"mysqli.default_socket\")'#>)" #509# #544="mysqli") (#446# "mysqli_stmt(" "mysqli_stmt(<#mysqli $link#>,<#string $query#>)" #510# #543="mysqli_stmt") (#453# "mysqli_result(" "mysqli_result()" #542="S" #541="mysqli_result") (#453# "mysqli_driver(" "mysqli_driver()" #540="S" #539="mysqli_driver") (#446# "mysqli_warning(" "mysqli_warning(<##>)" #511# #538="mysqli_warning") (#446# "mysqli_sql_exception(" "mysqli_sql_exception(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #537="mysqli_sql_exception") (#446# "SQLite3(" "SQLite3(<#string $filename#>,<#int $flags#>,<#string $encryption_key#>)" #512# #536="SQLite3") (#453# "SQLite3Stmt(" "SQLite3Stmt()" #535="S" #534="SQLite3Stmt") (#453# "SQLite3Result(" "SQLite3Result()" #533="S" #532="SQLite3Result") (#446# "PDO(" "PDO(<#string $dsn#>,<#string $username#>,<#string $password#>,<#array $options#>)" #513# #531="PDO") (#453# "PDOStatement(" "PDOStatement()" #530="S" #529="PDOStatement") (#446# "PDOException(" "PDOException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #474# #528="PDOException") (#446# "DateTime(" "DateTime(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #514# #527="DateTime") (#446# "DateTimeImmutable(" "DateTimeImmutable(<#string $time = \"now\"#>,<#DateTimeZone $timezone = NULL#>)" #515# #526="DateTimeImmutable") (#453# "DateTimeInterface(" "DateTimeInterface()" #525="S" #524="DateTimeInterface") (#446# "DateTimeZone(" "DateTimeZone(<#string $timezone#>)" #516# #523="DateTimeZone") (#446# "DateInterval(" "DateInterval(<#string $interval_spec#>)" #517# #522="DateInterval") (#446# "DatePeriod(" "DatePeriod(<#string $isostr#>,<#int $options#>)" #518# #521="DatePeriod") (#446# "Imagick(" "Imagick(<#mixed $files#>)" #519# #520="Imagick") ("c" #520# "Imagick" "S" #520#) ("c" #521# "DatePeriod" "S" #521#) ("c" #522# "DateInterval" "S" #522#) ("c" #523# "DateTimeZone" "S" #523#) ("c" #524# "DateTimeInterface" #525# #524#) ("c" #526# "DateTimeImmutable" "S" #526#) ("c" #527# "DateTime" "S" #527#) ("c" #528# "PDOException" "S" #528#) ("c" #529# "PDOStatement" #530# #529#) ("c" #531# "PDO" "S" #531#) ("c" #532# "SQLite3Result" #533# #532#) ("c" #534# "SQLite3Stmt" #535# #534#) ("c" #536# "SQLite3" "S" #536#) ("c" #537# "mysqli_sql_exception" "S" #537#) ("c" #538# "mysqli_warning" "S" #538#) ("c" #539# "mysqli_driver" #540# #539#) ("c" #541# "mysqli_result" #542# #541#) ("c" #543# "mysqli_stmt" "S" #543#) ("c" #544# "mysqli" "S" #544#) ("c" #545# "HttpResponse" #546# #545#) ("c" #547# "HttpRequestPool" "S" #547#) ("c" #548# "HttpRequest" "S" #548#) ("c" #549# "HttpQueryString" "S" #549#) ("c" #550# "HttpMessage" "S" #550#) ("c" #551# "HttpMessage" "S" #551#) ("c" #552# "HttpInflateStream" "S" #552#) ("c" #553# "HttpDeflateStream" "S" #553#) ("c" #554# "Memcache" #555# #554#) ("c" #556# "XMLReader" #557# #556#) ("c" #558# "SimpleXMLIterator" "S" #558#) ("c" #559# "SimpleXMLElement" "S" #559#) ("c" #560# "SplString" "S" #560#) ("c" #561# "SplBool" "S" #561#) ("c" #562# "SplEnum" "S" #562#) ("c" #563# "SplFloat" "S" #563#) ("c" #564# "SplInt" "S" #564#) ("c" #565# "SplType" "S" #565#) ("c" #566# "ZipArchive" #567# #566#) ("c" #568# "DOMXPath" "S" #568#) ("c" #569# "DOMText" "S" #569#) ("c" #570# "DOMProcessingInstruction" "S" #570#) ("c" #571# "DOMNotation" #572# #571#) ("c" #573# "DOMNodeList" #574# #573#) ("c" #575# "DOMNode" #576# #575#) ("c" #577# "DOMNamedNodeMap" #578# #577#) ("c" #579# "DOMImplementation" "S" #579#) ("c" #580# "DOMException" "S" #580#) ("c" #581# "DOMEntityReference" "S" #581#) ("c" #582# "DOMEntity" #583# #582#) ("c" #584# "DOMElement" "S" #584#) ("c" #585# "DOMDocumentType" #586# #585#) ("c" #587# "DOMDocumentFragment" #588# #587#) ("c" #589# "DOMDocument" "S" #589#) ("c" #590# "DOMComment" "S" #590#) ("c" #591# "DOMCharacterData" #592# #591#) ("c" #593# "DOMCdataSection" "S" #593#) ("c" #594# "DOMAttr" "S" #594#) ("c" #595# "SplSubject" #596# #595#) ("c" #597# "SplObserver" #598# #597#) ("c" #599# "ArrayObject" "S" #599#) ("c" #600# "SplTempFileObject" "S" #600#) ("c" #601# "SplFileObject" "S" #601#) ("c" #602# "SplFileInfo" "S" #602#) ("c" #487# "UnexpectedValueException" "S" #487#) ("c" #486# "UnderflowException" "S" #486#) ("c" #485# "RuntimeException" "S" #485#) ("c" #484# "RangeException" "S" #484#) ("c" #483# "OverflowException" "S" #483#) ("c" #482# "OutOfRangeException" "S" #482#) ("c" #481# "OutOfBoundsException" "S" #481#) ("c" #480# "LengthException" "S" #480#) ("c" #479# "InvalidArgumentException" "S" #479#) ("c" #478# "DomainException" "S" #478#) ("c" #477# "BadMethodCallException" "S" #477#) ("c" #476# "BadFunctionCallException" "S" #476#) ("c" #475# "LogicException" "S" #475#) ("c" #603# "Exception" "S" #603#) ("i" #604# "Traversable" "S" #604#) ("i" #605="Iterator" "Iterator" "S" #605#) ("i" #606="SeekableIterator" "SeekableIterator" "S" #606#) ("i" #607="OuterIterator" "OuterIterator" "S" #607#) ("i" #608="Countable" "Countable" "S" #608#) ("i" #609="RecursiveIterator" "RecursiveIterator" "S" #609#) ("c" #610# "RegexIterator" "S" #610#) ("c" #611# "RecursiveTreeIterator" "S" #611#) ("c" #612# "RecursiveRegexIterator" "S" #612#) ("c" #613# "RecursiveIteratorIterator" "S" #613#) ("c" #614# "RecursiveFilterIterator" "S" #614#) ("c" #615# "RecursiveDirectoryIterator" "S" #615#) ("c" #616# "RecursiveCallbackFilterIterator" "S" #616#) ("c" #617# "RecursiveCachingIterator" "S" #617#) ("c" #618# "RecursiveArrayIterator" "S" #618#) ("c" #619# "ParentIterator" "S" #619#) ("c" #620# "NoRewindIterator" "S" #620#) ("c" #621# "MultipleIterator" "S" #621#) ("c" #622# "LimitIterator" "S" #622#) ("c" #623# "IteratorIterator" "S" #623#) ("c" #624# "InfiniteIterator" "S" #624#) ("c" #625# "GlobIterator" "S" #625#) ("c" #626# "FilterIterator" "S" #626#) ("c" #627# "FilesystemIterator" "S" #627#) ("c" #628# "EmptyIterator" #629# #628#) ("c" #630# "DirectoryIterator" "S" #630#) ("c" #631# "CallbackFilterIterator" "S" #631#) ("c" #632# "CachingIterator" "S" #632#) ("c" #633# "ArrayIterator" "S" #633#) ("c" #634# "SeekableIterator" #635# #634#) ("c" #636# "ArrayIterator" "S" #636#) ("c" #637# "OuterIterator" #638# #637#) ("c" #639# "IteratorIterator" "S" #639#) ("c" #640# "SplObjectStorage" #641# #640#) ("c" #642# "SplFixedArray" "S" #642#) ("c" #643# "SplPriorityQueue" "S" #643#) ("c" #644# "SplMinHeap" "S" #644#) ("c" #645# "SplMaxHeap" "S" #645#) ("c" #646# "SplHeap" "S" #646#) ("c" #647# "SplQueue" "S" #647#) ("c" #648# "SplStack" "S" #648#) ("c" #649# "SplDoublyLinkedList" "S" #649#)) ((#520# "Iterator") (#521# "Traversable") (#526# "DateTimeInterface") (#527# "DateTimeInterface") (#528# "RuntimeException") (#529# "Traversable") (#537# "RuntimeException") (#541# "Traversable") (#547# "Iterator,Countable") (#549# "ArrayAccess,Serializable") (#550# "Iterator,Countable,Serializable") (#551# "Iterator,Countable,Serializable") (#558# "SimpleXMLElement,RecursiveIterator,Countable") (#559# "Traversable") (#560# "SplType") (#561# "SplEnum") (#562# "SplType") (#563# "SplType") (#564# "SplType") (#569# "DOMCharacterData") (#570# "DOMNode") (#571# "DOMNode") (#573# "Traversable") (#577# "Traversable") (#580# "Exception") (#581# "DOMNode") (#582# "DOMNode") (#584# "DOMNode") (#585# "DOMNode") (#587# "DOMNode") (#589# "DOMNode") (#590# "DOMCharacterData") (#591# "DOMNode") (#593# "DOMText") (#594# "DOMNode") (#599# "IteratorAggregate,ArrayAccess,Serializable,Countable") (#600# "SplFileObject,SeekableIterator,RecursiveIterator") (#601# "SplFileInfo,RecursiveIterator,SeekableIterator") (#487# "RuntimeException") (#486# "RuntimeException") (#485# "Exception") (#484# "RuntimeException") (#483# "RuntimeException") (#482# "LogicException") (#481# "RuntimeException") (#480# "LogicException") (#479# "LogicException") (#478# "LogicException") (#477# "BadFunctionCallException") (#476# "LogicException") (#475# "Exception") (#610# "FilterIterator") (#611# "RecursiveIteratorIterator,OuterIterator") (#612# "RegexIterator,RecursiveIterator") (#613# "OuterIterator") (#614# "FilterIterator,OuterIterator,RecursiveIterator") (#615# "FilesystemIterator,SeekableIterator,RecursiveIterator") (#616# "CallbackFilterIterator,OuterIterator,RecursiveIterator") (#617# "CachingIterator,Countable,ArrayAccess,OuterIterator,RecursiveIterator") (#618# "ArrayIterator,RecursiveIterator") (#619# "RecursiveFilterIterator,RecursiveIterator,OuterIterator") (#620# "IteratorIterator") (#621# "Iterator") (#622# "IteratorIterator,OuterIterator") (#623# "OuterIterator") (#624# "IteratorIterator,OuterIterator") (#625# "FilesystemIterator,SeekableIterator,Countable") (#626# "IteratorIterator,OuterIterator") (#627# "DirectoryIterator,SeekableIterator") (#628# "Iterator") (#630# "SplFileInfo,SeekableIterator") (#631# "FilterIterator,OuterIterator") (#632# "IteratorIterator,OuterIterator,ArrayAccess,Countable") (#633# "ArrayAccess,SeekableIterator,Countable,Serializable") (#634# "Iterator") (#636# "ArrayAccess,SeekableIterator,Countable,Serializable") (#637# "Iterator") (#639# "OuterIterator") (#640# "Countable,Iterator,Serializable,ArrayAccess") (#642# "Iterator,ArrayAccess,Countable") (#643# "Iterator,Countable") (#644# "SplHeap,Iterator,Countable") (#645# "SplHeap,Iterator,Countable") (#646# "Iterator,Countable") (#647# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#648# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#649# "Iterator,ArrayAccess,Countable")))
)
