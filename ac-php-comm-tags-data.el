(provide 'ac-php-comm-tags-data)

(defvar ac-php-comm-tags-data-list
'(((#18="HttpResponse" (("m" "status" "status(<#int $status#>)" "S" "bool" "HttpResponse" "public") ("m" "setThrottleDelay" "setThrottleDelay(<#float $seconds#>)" "S" "bool" "HttpResponse" "public") ("m" "setStream" "setStream(<#resource $stream#>)" "S" "bool" "HttpResponse" "public") ("m" "setLastModified" "setLastModified(<#int $timestamp#>)" "S" "bool" "HttpResponse" "public") ("m" "setHeader" "setHeader(<#string $name#>,<#mixed $value#>,<#bool $replace = true#>)" "S" "bool" "HttpResponse" "public") ("m" "setGzip" "setGzip(<#bool $gzip#>)" "S" "bool" "HttpResponse" "public") ("m" "setFile" "setFile(<#string $file#>)" "S" "bool" "HttpResponse" "public") ("m" "setETag" "setETag(<#string $etag#>)" "S" "bool" "HttpResponse" "public") ("m" "setData" "setData(<#mixed $data#>)" "S" "bool" "HttpResponse" "public") ("m" "setContentType" "setContentType(<#string $content_type#>)" "S" "bool" "HttpResponse" "public") ("m" "setContentDisposition" "setContentDisposition(<#string $filename#>,<#bool $inline = false#>)" "S" "bool" "HttpResponse" "public") ("m" "setCacheControl" "setCacheControl(<#string $control#>,<#int $max_age = 0#>,<#bool $must_revalidate = true#>)" "S" "bool" "HttpResponse" "public") ("m" "setCache" "setCache(<#bool $cache#>)" "S" "bool" "HttpResponse" "public") ("m" "setBufferSize" "setBufferSize(<#int $bytes#>)" "S" "bool" "HttpResponse" "public") ("m" "send" "send(<#bool $clean_ob = true#>)" "S" "bool" "HttpResponse" "public") ("m" "redirect" "redirect(<#string $url#>,<#array $params#>,<#bool $session = false#>,<#int $status#>)" "S" "void" "HttpResponse" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpResponse" "public") ("m" "getThrottleDelay" "getThrottleDelay(<##>)" "S" "float" "HttpResponse" "public") ("m" "getStream" "getStream(<##>)" "S" "resource" "HttpResponse" "public") ("m" "getRequestHeaders" "getRequestHeaders(<##>)" "S" "array" "HttpResponse" "public") ("m" "getRequestBodyStream" "getRequestBodyStream(<##>)" "S" "resource" "HttpResponse" "public") ("m" "getRequestBody" "getRequestBody(<##>)" "S" "string" "HttpResponse" "public") ("m" "getLastModified" "getLastModified(<##>)" "S" "int" "HttpResponse" "public") ("m" "getHeader" "getHeader(<#string $name#>)" "S" "mixed" "HttpResponse" "public") ("m" "getGzip" "getGzip(<##>)" "S" "bool" "HttpResponse" "public") ("m" "getFile" "getFile(<##>)" "S" "string" "HttpResponse" "public") ("m" "getETag" "getETag(<##>)" "S" "string" "HttpResponse" "public") ("m" "getData" "getData(<##>)" "S" "string" "HttpResponse" "public") ("m" "getContentType" "getContentType(<##>)" "S" "string" "HttpResponse" "public") ("m" "getContentDisposition" "getContentDisposition(<##>)" "S" "string" "HttpResponse" "public") ("m" "getCacheControl" "getCacheControl(<##>)" "S" "string" "HttpResponse" "public") ("m" "getCache" "getCache(<##>)" "S" "bool" "HttpResponse" "public") ("m" "getBufferSize" "getBufferSize(<##>)" "S" "int" "HttpResponse" "public") ("m" "capture" "capture(<##>)" "S" "void" "HttpResponse" "public") ("d" #1="REDIRECT_TEMP" #1# "S" #3="" "HttpResponse" #4="public") ("d" #2="REDIRECT_PROXY" #2# "S" #3# "HttpResponse" #4#) ("d" #5="REDIRECT_POST" #5# "S" #3# "HttpResponse" #4#) ("d" #6="REDIRECT_FOUND" #6# "S" #3# "HttpResponse" #4#) ("d" #7="REDIRECT_PERM" #7# "S" #3# "HttpResponse" #4#) ("d" #8="REDIRECT" #8# "S" #3# "HttpResponse" #4#) ("p" #9="throttleDelay" #9# "S" "double" "HttpResponse" "protected") ("p" #10="bufferSize" #10# "S" "integer" "HttpResponse" "protected") ("p" #11="contentDisposition" #11# "S" "string" "HttpResponse" "protected") ("p" #12="contentType" #12# "S" "string" "HttpResponse" "protected") ("p" #13="cacheControl" #13# "S" "string" "HttpResponse" "protected") ("p" #14="lastModified" #14# "S" "integer" "HttpResponse" "protected") ("p" #15="eTag" #15# "S" "string" "HttpResponse" "protected") ("p" #16="gzip" #16# "S" "boolean" "HttpResponse" "protected") ("p" #17="cache" #17# "S" "boolean" #18# "protected"))) (#19="HttpRequestPool" (("m" "socketSelect" "socketSelect(<#float $timeout = 0#>)" "S" "bool" "HttpRequestPool" "protected") ("m" "socketPerform" "socketPerform(<##>)" "S" "bool" "HttpRequestPool" "protected") ("m" "send" "send(<##>)" "S" "bool" "HttpRequestPool" "public") ("m" "reset" "reset(<##>)" "S" "void" "HttpRequestPool" "public") ("m" "getFinishedRequests" "getFinishedRequests(<##>)" "S" "array" "HttpRequestPool" "public") ("m" "getAttachedRequests" "getAttachedRequests(<##>)" "S" "array" "HttpRequestPool" "public") ("m" "detach" "detach(<#HttpRequest $request#>)" "S" "bool" "HttpRequestPool" "public") ("m" "__destruct" "__destruct(<##>)" "S" "void" "HttpRequestPool" "public") ("m" "__construct" "__construct(<#HttpRequest $request#>,<#HttpRequest $__args__#>)" #414="S" #415="void" "HttpRequestPool" "public") ("m" "attach" "attach(<#HttpRequest $request#>)" "S" "bool" #19# "public"))) (#66="HttpRequest" (("m" "setUrl" "setUrl(<#string $url#>)" "S" "bool" "HttpRequest" "public") ("m" "setSslOptions" "setSslOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "setRawPostData" "setRawPostData(<#string $raw_post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setQueryData" "setQueryData(<#mixed $query_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setPutFile" "setPutFile(<#string $file = \"\"#>)" "S" "bool" "HttpRequest" "public") ("m" "setPutData" "setPutData(<#string $put_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setPostFiles" "setPostFiles(<#array $post_files#>)" "S" "bool" "HttpRequest" "public") ("m" "setPostFields" "setPostFields(<#array $post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "setOptions" "setOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "setMethod" "setMethod(<#int $request_method#>)" "S" "bool" "HttpRequest" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "bool" "HttpRequest" "public") ("m" "setCookies" "setCookies(<#array $cookies#>)" "S" "bool" "HttpRequest" "public") ("m" "setContentType" "setContentType(<#string $content_type#>)" "S" "bool" "HttpRequest" "public") ("m" "setBody" "setBody(<#string $request_body_data#>)" "S" "bool" "HttpRequest" "public") ("m" "send" "send(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "resetCookies" "resetCookies(<#bool $session_only = false#>)" "S" "bool" "HttpRequest" "public") ("m" "getUrl" "getUrl(<##>)" "S" "string" "HttpRequest" "public") ("m" "getSslOptions" "getSslOptions(<##>)" "S" "array" "HttpRequest" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpRequest" "public") ("m" "getResponseMessage" "getResponseMessage(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getResponseInfo" "getResponseInfo(<#string $name#>)" "S" "mixed" "HttpRequest" "public") ("m" "getResponseHeader" "getResponseHeader(<#string $name#>)" "S" "mixed" "HttpRequest" "public") ("m" "getResponseData" "getResponseData(<##>)" "S" "array" "HttpRequest" "public") ("m" "getResponseCookies" "getResponseCookies(<#int $flags = 0#>,<#array $allowed_extras#>)" "S" "array" "HttpRequest" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpRequest" "public") ("m" "getResponseBody" "getResponseBody(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRequestMessage" "getRequestMessage(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getRawResponseMessage" "getRawResponseMessage(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRawRequestMessage" "getRawRequestMessage(<##>)" "S" "string" "HttpRequest" "public") ("m" "getRawPostData" "getRawPostData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getQueryData" "getQueryData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPutFile" "getPutFile(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPutData" "getPutData(<##>)" "S" "string" "HttpRequest" "public") ("m" "getPostFiles" "getPostFiles(<##>)" "S" "array" "HttpRequest" "public") ("m" "getPostFields" "getPostFields(<##>)" "S" "array" "HttpRequest" "public") ("m" "getOptions" "getOptions(<##>)" "S" "array" "HttpRequest" "public") ("m" "getMethod" "getMethod(<##>)" "S" "int" "HttpRequest" "public") ("m" "getHistory" "getHistory(<##>)" "S" "HttpMessage" "HttpRequest" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpRequest" "public") ("m" "getCookies" "getCookies(<##>)" "S" "array" "HttpRequest" "public") ("m" "getContentType" "getContentType(<##>)" "S" "string" "HttpRequest" "public") ("m" "enableCookies" "enableCookies(<##>)" "S" "bool" "HttpRequest" "public") ("m" "__construct" "__construct(<#string $url#>,<#int $request_method = HTTP_METH_GET#>,<#array $options#>)" "S" "void" "HttpRequest" "public") ("m" "clearHistory" "clearHistory(<##>)" "S" "void" "HttpRequest" "public") ("m" "addSslOptions" "addSslOptions(<#array $options#>)" "S" "bool" "HttpRequest" "public") ("m" "addRawPostData" "addRawPostData(<#string $raw_post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addQueryData" "addQueryData(<#array $query_params#>)" "S" "bool" "HttpRequest" "public") ("m" "addPutData" "addPutData(<#string $put_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addPostFile" "addPostFile(<#string $name#>,<#string $file#>,<#string $content_type = \"application/x-octetstream\"#>)" "S" "bool" "HttpRequest" "public") ("m" "addPostFields" "addPostFields(<#array $post_data#>)" "S" "bool" "HttpRequest" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>)" "S" "bool" "HttpRequest" "public") ("m" "addCookies" "addCookies(<#array $cookies#>)" "S" "bool" "HttpRequest" "public") ("p" #20="recordHistory" #20# "S" "boolean" "HttpRequest" "public") ("d" #21="IPRESOLVE_ANY" #21# "S" #3# "HttpRequest" #4#) ("d" #22="IPRESOLVE_V6" #22# "S" #3# "HttpRequest" #4#) ("d" #23="IPRESOLVE_V4" #23# "S" #3# "HttpRequest" #4#) ("d" #24="SSL_VERSION_ANY" #24# "S" #3# "HttpRequest" #4#) ("d" #25="SSL_VERSION_SSLv3" #25# "S" #3# "HttpRequest" #4#) ("d" #26="SSL_VERSION_SSLv2" #26# "S" #3# "HttpRequest" #4#) ("d" #27="SSL_VERSION_TLSv1" #27# "S" #3# "HttpRequest" #4#) ("d" #28="PROXY_HTTP" #28# "S" #3# "HttpRequest" #4#) ("d" #29="PROXY_SOCKS5" #29# "S" #3# "HttpRequest" #4#) ("d" #30="PROXY_SOCKS4" #30# "S" #3# "HttpRequest" #4#) ("d" #31="AUTH_ANY" #31# "S" #3# "HttpRequest" #4#) ("d" #32="AUTH_GSSNEG" #32# "S" #3# "HttpRequest" #4#) ("d" #33="AUTH_NTLM" #33# "S" #3# "HttpRequest" #4#) ("d" #34="AUTH_DIGEST" #34# "S" #3# "HttpRequest" #4#) ("d" #35="AUTH_BASIC" #35# "S" #3# "HttpRequest" #4#) ("d" #36="VERSION_ANY" #36# "S" #3# "HttpRequest" #4#) ("d" #37="VERSION_1_1" #37# "S" #3# "HttpRequest" #4#) ("d" #38="VERSION_1_0" #38# "S" #3# "HttpRequest" #4#) ("d" #39="METH_ACL" #39# "S" #3# "HttpRequest" #4#) ("d" #40="METH_MKACTIVITY" #40# "S" #3# "HttpRequest" #4#) ("d" #41="METH_BASELINE_CONTROL" #41# "S" #3# "HttpRequest" #4#) ("d" #42="METH_MERGE" #42# "S" #3# "HttpRequest" #4#) ("d" #43="METH_LABEL" #43# "S" #3# "HttpRequest" #4#) ("d" #44="METH_UPDATE" #44# "S" #3# "HttpRequest" #4#) ("d" #45="METH_MKWORKSPACE" #45# "S" #3# "HttpRequest" #4#) ("d" #46="METH_UNCHECKOUT" #46# "S" #3# "HttpRequest" #4#) ("d" #47="METH_CHECKIN" #47# "S" #3# "HttpRequest" #4#) ("d" #48="METH_CHECKOUT" #48# "S" #3# "HttpRequest" #4#) ("d" #49="METH_REPORT" #49# "S" #3# "HttpRequest" #4#) ("d" #50="METH_VERSION_CONTROL" #50# "S" #3# "HttpRequest" #4#) ("d" #51="METH_UNLOCK" #51# "S" #3# "HttpRequest" #4#) ("d" #52="METH_LOCK" #52# "S" #3# "HttpRequest" #4#) ("d" #53="METH_MOVE" #53# "S" #3# "HttpRequest" #4#) ("d" #54="METH_COPY" #54# "S" #3# "HttpRequest" #4#) ("d" #55="METH_MKCOL" #55# "S" #3# "HttpRequest" #4#) ("d" #56="METH_PROPPATCH" #56# "S" #3# "HttpRequest" #4#) ("d" #57="METH_PROPFIND" #57# "S" #3# "HttpRequest" #4#) ("d" #58="METH_CONNECT" #58# "S" #3# "HttpRequest" #4#) ("d" #59="METH_TRACE" #59# "S" #3# "HttpRequest" #4#) ("d" #60="METH_OPTIONS" #60# "S" #3# "HttpRequest" #4#) ("d" #61="METH_DELETE" #61# "S" #3# "HttpRequest" #4#) ("d" #62="METH_PUT" #62# "S" #3# "HttpRequest" #4#) ("d" #63="METH_POST" #63# "S" #3# "HttpRequest" #4#) ("d" #64="METH_HEAD" #64# "S" #3# "HttpRequest" #4#) ("d" #65="METH_GET" #65# "S" #3# #66# #4#))) (#73="HttpQueryString" (("m" "xlate" "xlate(<#string $ie#>,<#string $oe#>)" "S" "bool" "HttpQueryString" "public") ("m" "toString" "toString(<##>)" "S" "string" "HttpQueryString" "public") ("m" "toArray" "toArray(<##>)" "S" "array" "HttpQueryString" "public") ("m" "singleton" "singleton(<#bool $global = true#>)" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "set" "set(<#mixed $params#>)" "S" "string" "HttpQueryString" "public") ("m" "mod" "mod(<#mixed $params#>)" "S" "HttpQueryString" "HttpQueryString" "public") ("m" "get" "get(<#string $key#>,<#mixed $type = 0#>,<#mixed $defval = NULL#>,<#bool $delete = false#>)" "S" "mixed" "HttpQueryString" "public") ("m" "__construct" "__construct(<#bool $global = true#>,<#mixed $add#>)" "S" "void" "HttpQueryString" "public") ("d" #67="TYPE_OBJECT" #67# "S" #3# "HttpQueryString" #4#) ("d" #68="TYPE_ARRAY" #68# "S" #3# "HttpQueryString" #4#) ("d" #69="TYPE_STRING" #69# "S" #3# "HttpQueryString" #4#) ("d" #70="TYPE_FLOAT" #70# "S" #3# "HttpQueryString" #4#) ("d" #71="TYPE_INT" #71# "S" #3# "HttpQueryString" #4#) ("d" #72="TYPE_BOOL" #72# "S" #3# #73# #4#))) (#98="HttpMessage" (("m" "toString" "toString(<#bool $include_parent = false#>)" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" "toMessageTypeObject(<##>)" "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "setType(<#int $type#>)" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "setResponseStatus(<#string $status#>)" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "setResponseCode(<#int $code#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "setRequestUrl(<#string $url#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "setRequestMethod(<#string $method#>)" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "setHttpVersion(<#string $version#>)" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "void" "HttpMessage" "public") ("m" "setBody" "setBody(<#string $body#>)" "S" "void" "HttpMessage" "public") ("m" "send" "send(<##>)" "S" "bool" "HttpMessage" "public") ("m" "reverse" "reverse(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "prepend(<#HttpMessage $message#>,<#bool $top = true#>)" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpMessage" "public") ("m" "getType" "getType(<##>)" "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpMessage" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" "getRequestUrl(<##>)" "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" "getRequestMethod(<##>)" "S" "string" "HttpMessage" "public") ("m" "getParentMessage" "getParentMessage(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" "getHttpVersion(<##>)" "S" "string" "HttpMessage" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpMessage" "public") ("m" "getHeader" "getHeader(<#string $header#>)" "S" "string" "HttpMessage" "public") ("m" "getBody" "getBody(<##>)" "S" "string" "HttpMessage" "public") ("m" "fromString" "fromString(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "fromEnv(<#int $message_type#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "factory(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" "detach(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "__construct(<#string $message#>)" "S" "void" "HttpMessage" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>,<#bool $append = false#>)" "S" "void" "HttpMessage" "public") ("d" #74="TYPE_RESPONSE" #74# "S" #3# "HttpMessage" #4#) ("d" #75="TYPE_REQUEST" #75# "S" #3# "HttpMessage" #4#) ("d" #76="TYPE_NONE" #76# "S" #3# "HttpMessage" #4#) ("p" #77="parentMessage" #77# "S" "HttpMessage" "HttpMessage" "protected") ("p" #78="responseStatus" #78# "S" "string" "HttpMessage" "protected") ("p" #79="responseCode" #79# "S" "int" "HttpMessage" "protected") ("p" #80="string" #80# "S" "requestUrl" "HttpMessage" "protected") ("p" #81="requestMethod" #81# "S" "string" "HttpMessage" "protected") ("p" #82="headers" #82# "S" "array" "HttpMessage" "protected") ("p" #83="httpVersion" #83# "S" "float" "HttpMessage" "protected") ("p" #84="body" #84# "S" "string" "HttpMessage" "protected") ("p" #85="type" #85# "S" "int" "HttpMessage" "protected") ("m" "toString" "toString(<#bool $include_parent = false#>)" "S" "string" "HttpMessage" "public") ("m" "toMessageTypeObject" "toMessageTypeObject(<##>)" "S" "HttpRequest" "HttpMessage" "public") ("m" "setType" "setType(<#int $type#>)" "S" "void" "HttpMessage" "public") ("m" "setResponseStatus" "setResponseStatus(<#string $status#>)" "S" "bool" "HttpMessage" "public") ("m" "setResponseCode" "setResponseCode(<#int $code#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestUrl" "setRequestUrl(<#string $url#>)" "S" "bool" "HttpMessage" "public") ("m" "setRequestMethod" "setRequestMethod(<#string $method#>)" "S" "bool" "HttpMessage" "public") ("m" "setHttpVersion" "setHttpVersion(<#string $version#>)" "S" "bool" "HttpMessage" "public") ("m" "setHeaders" "setHeaders(<#array $headers#>)" "S" "void" "HttpMessage" "public") ("m" "setBody" "setBody(<#string $body#>)" "S" "void" "HttpMessage" "public") ("m" "send" "send(<##>)" "S" "bool" "HttpMessage" "public") ("m" "reverse" "reverse(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "prepend" "prepend(<#HttpMessage $message#>,<#bool $top = true#>)" "S" "void" "HttpMessage" "public") ("m" "guessContentType" "guessContentType(<#string $magic_file#>,<#int $magic_mode = MAGIC_MIME#>)" "S" "string" "HttpMessage" "public") ("m" "getType" "getType(<##>)" "S" "int" "HttpMessage" "public") ("m" "getResponseStatus" "getResponseStatus(<##>)" "S" "string" "HttpMessage" "public") ("m" "getResponseCode" "getResponseCode(<##>)" "S" "int" "HttpMessage" "public") ("m" "getRequestUrl" "getRequestUrl(<##>)" "S" "string" "HttpMessage" "public") ("m" "getRequestMethod" "getRequestMethod(<##>)" "S" "string" "HttpMessage" "public") ("m" "getParentMessage" "getParentMessage(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "getHttpVersion" "getHttpVersion(<##>)" "S" "string" "HttpMessage" "public") ("m" "getHeaders" "getHeaders(<##>)" "S" "array" "HttpMessage" "public") ("m" "getHeader" "getHeader(<#string $header#>)" "S" "string" "HttpMessage" "public") ("m" "getBody" "getBody(<##>)" "S" "string" "HttpMessage" "public") ("m" "fromString" "fromString(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "fromEnv" "fromEnv(<#int $message_type#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "factory" "factory(<#string $raw_message#>,<#string $class_name = \"HttpMessage\"#>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "detach" "detach(<##>)" "S" "HttpMessage" "HttpMessage" "public") ("m" "__construct" "__construct(<#string $message#>)" "S" "void" "HttpMessage" "public") ("m" "addHeaders" "addHeaders(<#array $headers#>,<#bool $append = false#>)" "S" "void" "HttpMessage" "public") ("p" #86="parentMessage" #86# "S" "HttpMessage" "HttpMessage" "protected") ("p" #87="responseStatus" #87# "S" "string" "HttpMessage" "protected") ("p" #88="responseCode" #88# "S" "int" "HttpMessage" "protected") ("p" #89="requestUrl" #89# "S" "string" "HttpMessage" "protected") ("p" #90="requestMethod" #90# "S" "string" "HttpMessage" "protected") ("p" #91="headers" #91# "S" "array" "HttpMessage" "protected") ("p" #92="httpVersion" #92# "S" "float" "HttpMessage" "protected") ("p" #93="body" #93# "S" "string" "HttpMessage" "protected") ("p" #94="type" #94# "S" "int" "HttpMessage" "protected") ("d" #95="TYPE_RESPONSE" #95# "S" #3# "HttpMessage" #4#) ("d" #96="TYPE_REQUEST" #96# "S" #3# "HttpMessage" #4#) ("d" #97="TYPE_NONE" #97# "S" #3# #98# #4#))) (#102="HttpInflateStream" (("m" "update" "update(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "flush" "flush(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "finish" "finish(<#string $data#>)" "S" "string" "HttpInflateStream" "public") ("m" "factory" "factory(<#int $flags = 0#>,<#string $class_name = \"HttpInflateStream\"#>)" "S" "HttpInflateStream" "HttpInflateStream" "public") ("m" "__construct" "__construct(<#int $flags = 0#>)" "S" "void" "HttpInflateStream" "public") ("d" #99="FLUSH_FULL" #99# "S" #3# "HttpInflateStream" #4#) ("d" #100="FLUSH_SYNC" #100# "S" #3# "HttpInflateStream" #4#) ("d" #101="FLUSH_NONE" #101# "S" #3# #102# #4#))) (#117="HttpDeflateStream" (("m" "update" "update(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "flush" "flush(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "finish" "finish(<#string $data#>)" "S" "string" "HttpDeflateStream" "public") ("m" "factory" "factory(<#int $flags = 0#>,<#string $class_name = \"HttpDeflateStream\"#>)" "S" "HttpDeflateStream" "HttpDeflateStream" "public") ("m" "__construct" "__construct(<#int $flags = 0#>)" "S" "void" "HttpDeflateStream" "public") ("d" #103="FLUSH_FULL" #103# "S" #3# "HttpDeflateStream" #4#) ("d" #104="FLUSH_SYNC" #104# "S" #3# "HttpDeflateStream" #4#) ("d" #105="FLUSH_NONE" #105# "S" #3# "HttpDeflateStream" #4#) ("d" #106="STRATEGY_FIXED" #106# "S" #3# "HttpDeflateStream" #4#) ("d" #107="STRATEGY_RLE" #107# "S" #3# "HttpDeflateStream" #4#) ("d" #108="STRATEGY_HUFF" #108# "S" #3# "HttpDeflateStream" #4#) ("d" #109="STRATEGY_FILT" #109# "S" #3# "HttpDeflateStream" #4#) ("d" #110="STRATEGY_DEF" #110# "S" #3# "HttpDeflateStream" #4#) ("d" #111="LEVEL_MAX" #111# "S" #3# "HttpDeflateStream" #4#) ("d" #112="LEVEL_MIN" #112# "S" #3# "HttpDeflateStream" #4#) ("d" #113="LEVEL_DEF" #113# "S" #3# "HttpDeflateStream" #4#) ("d" #114="TYPE_RAW" #114# "S" #3# "HttpDeflateStream" #4#) ("d" #115="TYPE_ZLIB" #115# "S" #3# "HttpDeflateStream" #4#) ("d" #116="TYPE_GZIP" #116# "S" #3# #117# #4#))) (#118="Memcache" (("m" "setServerParams" "setServerParams(<#string $host#>,<#int $port = 11211#>,<#int $timeout#>,<#int $retry_interval = false#>,<#bool $status#>,<#callback $failure_callback#>)" "S" "bool" "Memcache" "public") ("m" "setCompressThreshold" "setCompressThreshold(<#int $threshold#>,<#float $min_savings#>)" "S" "bool" "Memcache" "public") ("m" "set" "set(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" "Memcache" "public") ("m" "replace" "replace(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" "Memcache" "public") ("m" "pconnect" "pconnect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "mixed" "Memcache" "public") ("m" "increment" "increment(<#string $key#>,<#int $value = 1#>)" "S" "int" "Memcache" "public") ("m" "getVersion" "getVersion(<##>)" "S" "string" "Memcache" "public") ("m" "getStats" "getStats(<#string $type#>,<#int $slabid#>,<#int $limit = 100#>)" "S" "array" "Memcache" "public") ("m" "getServerStatus" "getServerStatus(<#string $host#>,<#int $port = 11211#>)" "S" "int" "Memcache" "public") ("m" "getExtendedStats" "getExtendedStats(<#string $type#>,<#int $slabid#>,<#int $limit = 100#>)" "S" "array" "Memcache" "public") ("m" "get" "get(<#string $key#>,<#int &$flags#>)" "S" "string" "Memcache" "public") ("m" "flush" "flush(<##>)" "S" "bool" "Memcache" "public") ("m" "delete" "delete(<#string $key#>,<#int $timeout = 0#>)" "S" "bool" "Memcache" "public") ("m" "decrement" "decrement(<#string $key#>,<#int $value = 1#>)" "S" "int" "Memcache" "public") ("m" "connect" "connect(<#string $host#>,<#int $port#>,<#int $timeout#>)" "S" "bool" "Memcache" "public") ("m" "close" "close(<##>)" "S" "bool" "Memcache" "public") ("m" "addServer" "addServer(<#string $host#>,<#int $port = 11211#>,<#bool $persistent#>,<#int $weight#>,<#int $timeout#>,<#int $retry_interval#>,<#bool $status#>,<#callback $failure_callback#>,<#int $timeoutms#>)" "S" "bool" "Memcache" "public") ("m" "add" "add(<#string $key#>,<#mixed $var#>,<#int $flag#>,<#int $expire#>)" "S" "bool" #118# "public"))) (#154="XMLReader" (("m" "xml" "xml(<#string $source#>,<#string $encoding#>,<#int $options = 0#>)" "S" "bool" "XMLReader" "public") ("m" "setSchema" "setSchema(<#string $filename#>)" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchemaSource" "setRelaxNGSchemaSource(<#string $source#>)" "S" "bool" "XMLReader" "public") ("m" "setRelaxNGSchema" "setRelaxNGSchema(<#string $filename#>)" "S" "bool" "XMLReader" "public") ("m" "setParserProperty" "setParserProperty(<#int $property#>,<#bool $value#>)" "S" "bool" "XMLReader" "public") ("m" "readString" "readString(<##>)" "S" "string" "XMLReader" "public") ("m" "readOuterXML" "readOuterXML(<##>)" "S" "string" "XMLReader" "public") ("m" "readInnerXML" "readInnerXML(<##>)" "S" "string" "XMLReader" "public") ("m" "read" "read(<##>)" "S" "bool" "XMLReader" "public") ("m" "open" "open(<#string $URI#>,<#string $encoding#>,<#int $options = 0#>)" "S" "bool" "XMLReader" "public") ("m" "next" "next(<#string $localname#>)" "S" "bool" "XMLReader" "public") ("m" "moveToNextAttribute" "moveToNextAttribute(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToFirstAttribute" "moveToFirstAttribute(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToElement" "moveToElement(<##>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNs" "moveToAttributeNs(<#string $localName#>,<#string $namespaceURI#>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttributeNo" "moveToAttributeNo(<#int $index#>)" "S" "bool" "XMLReader" "public") ("m" "moveToAttribute" "moveToAttribute(<#string $name#>)" "S" "bool" "XMLReader" "public") ("m" "lookupNamespace" "lookupNamespace(<#string $prefix#>)" "S" "string" "XMLReader" "public") ("m" "isValid" "isValid(<##>)" "S" "bool" "XMLReader" "public") ("m" "getParserProperty" "getParserProperty(<#int $property#>)" "S" "bool" "XMLReader" "public") ("m" "getAttributeNs" "getAttributeNs(<#string $localName#>,<#string $namespaceURI#>)" "S" "string" "XMLReader" "public") ("m" "getAttributeNo" "getAttributeNo(<#int $index#>)" "S" "string" "XMLReader" "public") ("m" "getAttribute" "getAttribute(<#string $name#>)" "S" "string" "XMLReader" "public") ("m" "expand" "expand(<#DOMNode $basenode#>)" "S" "DOMNode" "XMLReader" "public") ("m" "close" "close(<##>)" "S" "bool" "XMLReader" "public") ("p" #119="xmlLang" #119# "S" "string" "XMLReader" "public") ("p" #120="value" #120# "S" "string" "XMLReader" "public") ("p" #121="prefix" #121# "S" "string" "XMLReader" "public") ("p" #122="nodeType" #122# "S" "int" "XMLReader" "public") ("p" #123="namespaceURI" #123# "S" "string" "XMLReader" "public") ("p" #124="name" #124# "S" "string" "XMLReader" "public") ("p" #125="localName" #125# "S" "string" "XMLReader" "public") ("p" #126="isEmptyElement" #126# "S" "bool" "XMLReader" "public") ("p" #127="isDefault" #127# "S" "bool" "XMLReader" "public") ("p" #128="hasValue" #128# "S" "bool" "XMLReader" "public") ("p" #129="hasAttributes" #129# "S" "bool" "XMLReader" "public") ("p" #130="depth" #130# "S" "int" "XMLReader" "public") ("p" #131="attributeCount" #131# "S" "int" "XMLReader" "public") ("d" #132="SUBST_ENTITIES" #132# "S" #3# "XMLReader" #4#) ("d" #133="VALIDATE" #133# "S" #3# "XMLReader" #4#) ("d" #134="DEFAULTATTRS" #134# "S" #3# "XMLReader" #4#) ("d" #135="LOADDTD" #135# "S" #3# "XMLReader" #4#) ("d" #136="XML_DECLARATION" #136# "S" #3# "XMLReader" #4#) ("d" #137="END_ENTITY" #137# "S" #3# "XMLReader" #4#) ("d" #138="END_ELEMENT" #138# "S" #3# "XMLReader" #4#) ("d" #139="SIGNIFICANT_WHITESPACE" #139# "S" #3# "XMLReader" #4#) ("d" #140="WHITESPACE" #140# "S" #3# "XMLReader" #4#) ("d" #141="NOTATION" #141# "S" #3# "XMLReader" #4#) ("d" #142="DOC_FRAGMENT" #142# "S" #3# "XMLReader" #4#) ("d" #143="DOC_TYPE" #143# "S" #3# "XMLReader" #4#) ("d" #144="DOC" #144# "S" #3# "XMLReader" #4#) ("d" #145="COMMENT" #145# "S" #3# "XMLReader" #4#) ("d" #146="PI" #146# "S" #3# "XMLReader" #4#) ("d" #147="ENTITY" #147# "S" #3# "XMLReader" #4#) ("d" #148="ENTITY_REF" #148# "S" #3# "XMLReader" #4#) ("d" #149="CDATA" #149# "S" #3# "XMLReader" #4#) ("d" #150="TEXT" #150# "S" #3# "XMLReader" #4#) ("d" #151="ATTRIBUTE" #151# "S" #3# "XMLReader" #4#) ("d" #152="ELEMENT" #152# "S" #3# "XMLReader" #4#) ("d" #153="NONE" #153# "S" #3# #154# #4#))) (#155="SimpleXMLIterator" (("m" "valid" "valid(<##>)" "S" "bool" "SimpleXMLIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SimpleXMLIterator" "public") ("m" "next" "next(<##>)" "S" "void" "SimpleXMLIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "SimpleXMLIterator" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "SimpleXMLIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "SimpleXMLIterator" "SimpleXMLIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" #155# "public"))) (#156="SimpleXMLElement" (("m" "xpath" "xpath(<#string $path#>)" "S" "array" "SimpleXMLElement" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "SimpleXMLElement" "public") ("m" "registerXPathNamespace" "registerXPathNamespace(<#string $prefix#>,<#string $ns#>)" "S" "bool" "SimpleXMLElement" "public") ("m" "getNamespaces" "getNamespaces(<#bool $recursive = false#>)" "S" "array" "SimpleXMLElement" "public") ("m" "getName" "getName(<##>)" "S" "string" "SimpleXMLElement" "public") ("m" "getDocNamespaces" "getDocNamespaces(<#bool $recursive = false#>,<#bool $from_root = true#>)" "S" "array" "SimpleXMLElement" "public") ("m" "count" "count(<##>)" "S" "int" "SimpleXMLElement" "public") ("m" "children" "children(<#string $ns#>,<#bool $is_prefix = false#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "attributes" "attributes(<#string $ns = NULL#>,<#bool $is_prefix = false#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "asXML" "asXML(<#string $filename#>)" "S" "mixed" "SimpleXMLElement" "public") ("m" "addChild" "addChild(<#string $name#>,<#string $value#>,<#string $namespace#>)" "S" "SimpleXMLElement" "SimpleXMLElement" "public") ("m" "addAttribute" "addAttribute(<#string $name#>,<#string $value#>,<#string $namespace#>)" "S" "void" "SimpleXMLElement" "public") ("m" "__construct" "__construct(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #412="S" #413="void" #156# "public"))) (#158="SplString" (("d" #157="__default" #157# "S" #3# #158# #4#))) (#162="SplBool" (("d" #159="true" #159# "S" #3# "SplBool" #4#) ("d" #160="false" #160# "S" #3# "SplBool" #4#) ("d" #161="__default" #161# "S" #3# #162# #4#))) (#164="SplEnum" (("m" "getConstList" "getConstList(<#bool $include_default = false#>)" "S" "array" "SplEnum" "public") ("d" #163="__default" #163# "S" #3# #164# #4#))) (#166="SplFloat" (("d" #165="__default" #165# "S" #3# #166# #4#))) (#168="SplInt" (("d" #167="__default" #167# "S" #3# #168# #4#))) (#170="SplType" (("m" "__construct" "__construct(<#mixed $initial_value#>,<#bool $strict#>)" "S" "void" "SplType" "public") ("d" #169="__default" #169# "S" #3# #170# #4#))) (#171="ZipArchive" (("m" "unchangeName" "unchangeName(<#string $name#>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeIndex" "unchangeIndex(<#int $index#>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeArchive" "unchangeArchive(<##>)" "S" "bool" "ZipArchive" "public") ("m" "unchangeAll" "unchangeAll(<##>)" "S" "bool" "ZipArchive" "public") ("m" "statName" "statName(<#string $name#>,<#int $flags#>)" "S" "array" "ZipArchive" "public") ("m" "statIndex" "statIndex(<#int $index#>,<#int $flags#>)" "S" "array" "ZipArchive" "public") ("m" "setPassword" "setPassword(<#string $password#>)" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesName" "setExternalAttributesName(<#string $name#>,<#int $opsys#>,<#int $attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "setExternalAttributesIndex" "setExternalAttributesIndex(<#int $index#>,<#int $opsys#>,<#int $attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "setCompressionName" "setCompressionName(<#string $name#>,<#int $comp_method#>,<#int $comp_flags = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "setCompressionIndex" "setCompressionIndex(<#int $index#>,<#int $comp_method#>,<#int $comp_flags = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "setCommentName" "setCommentName(<#string $name#>,<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "setCommentIndex" "setCommentIndex(<#int $index#>,<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "setArchiveComment" "setArchiveComment(<#string $comment#>)" "S" "bool" "ZipArchive" "public") ("m" "renameName" "renameName(<#string $name#>,<#string $newname#>)" "S" "bool" "ZipArchive" "public") ("m" "renameIndex" "renameIndex(<#int $index#>,<#string $newname#>)" "S" "bool" "ZipArchive" "public") ("m" "open" "open(<#string $filename#>,<#int $flags#>)" "S" "mixed" "ZipArchive" "public") ("m" "locateName" "locateName(<#string $name#>,<#int $flags#>)" "S" "int" "ZipArchive" "public") ("m" "getStream" "getStream(<#string $name#>)" "S" "resource" "ZipArchive" "public") ("m" "getStatusString" "getStatusString(<##>)" "S" "string" "ZipArchive" "public") ("m" "getNameIndex" "getNameIndex(<#int $index#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getFromName" "getFromName(<#string $name#>,<#int $length = 0#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getFromIndex" "getFromIndex(<#int $index#>,<#int $length = 0#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getExternalAttributesName" "getExternalAttributesName(<#string $name#>,<#int &$opsys#>,<#int &$attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "GetExternalAttributesIndex" "GetExternalAttributesIndex(<#int $index#>,<#int &$opsys#>,<#int &$attr#>,<#int $flags#>)" "S" "bool" "ZipArchive" "public") ("m" "getCommentName" "getCommentName(<#string $name#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getCommentIndex" "getCommentIndex(<#int $index#>,<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "getArchiveComment" "getArchiveComment(<#int $flags#>)" "S" "string" "ZipArchive" "public") ("m" "extractTo" "extractTo(<#string $destination#>,<#mixed $entries#>)" "S" "bool" "ZipArchive" "public") ("m" "deleteName" "deleteName(<#string $name#>)" "S" "bool" "ZipArchive" "public") ("m" "deleteIndex" "deleteIndex(<#int $index#>)" "S" "bool" "ZipArchive" "public") ("m" "close" "close(<##>)" "S" "bool" "ZipArchive" "public") ("m" "addPattern" "addPattern(<#)#>)" "S" "bool" "ZipArchive" "public") ("m" "addGlob" "addGlob(<#)#>)" "S" "bool" "ZipArchive" "public") ("m" "addFromString" "addFromString(<#string $localname#>,<#string $contents#>)" "S" "bool" "ZipArchive" "public") ("m" "addFile" "addFile(<#string $filename#>,<#string $localname = NULL#>,<#int $start = 0#>,<#int $length = 0#>)" "S" "bool" "ZipArchive" "public") ("m" "addEmptyDir" "addEmptyDir(<#string $dirname#>)" "S" "bool" #171# "public"))) (#173="DOMXPath" (("m" "registerPhpFunctions" "registerPhpFunctions(<#mixed $restrict#>)" "S" "void" "DOMXPath" "public") ("m" "registerNamespace" "registerNamespace(<#string $prefix#>,<#string $namespaceURI#>)" "S" "bool" "DOMXPath" "public") ("m" "query" "query(<#string $expression#>,<#DOMNode $contextnode#>,<#bool $registerNodeNS = true#>)" "S" "DOMNodeList" "DOMXPath" "public") ("m" "evaluate" "evaluate(<#string $expression#>,<#DOMNode $contextnode#>,<#bool $registerNodeNS = true#>)" "S" "mixed" "DOMXPath" "public") ("m" "__construct" "__construct(<#DOMDocument $doc#>)" #410="S" #411="void" "DOMXPath" "public") ("p" #172="document" #172# "S" "DOMDocument" #173# "public"))) (#175="DOMText" (("m" "splitText" "splitText(<#int $offset#>)" "S" "DOMText" "DOMText" "public") ("m" "isWhitespaceInElementContent" "isWhitespaceInElementContent(<##>)" "S" "bool" "DOMText" "public") ("m" "__construct" "__construct(<#string $value#>)" #408="S" #409="void" "DOMText" "public") ("p" #174="wholeText" #174# "S" "string" #175# "public"))) (#178="DOMProcessingInstruction" (("m" "__construct" "__construct(<#string $name#>,<#string $value#>)" #406="S" #407="void" "DOMProcessingInstruction" "public") ("p" #176="data" #176# "S" "string" "DOMProcessingInstruction" "public") ("p" #177="target" #177# "S" "string" #178# "public"))) (#181="DOMNotation" (("p" #179="systemId" #179# "S" "string" "DOMNotation" "public") ("p" #180="publicId" #180# "S" "string" #181# "public"))) (#183="DOMNodeList" (("m" "item" "item(<#int $index#>)" "S" "DOMNode" "DOMNodeList" "public") ("p" #182="length" #182# "S" "int" #183# "public"))) (#200="DOMNode" (("m" "replaceChild" "replaceChild(<#DOMNode $newnode#>,<#DOMNode $oldnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "removeChild" "removeChild(<#DOMNode $oldnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "normalize" "normalize(<##>)" "S" "void" "DOMNode" "public") ("m" "lookupPrefix" "lookupPrefix(<#string $namespaceURI#>)" "S" "string" "DOMNode" "public") ("m" "lookupNamespaceURI" "lookupNamespaceURI(<#string $prefix#>)" "S" "string" "DOMNode" "public") ("m" "isSupported" "isSupported(<#string $feature#>,<#string $version#>)" "S" "bool" "DOMNode" "public") ("m" "isSameNode" "isSameNode(<#DOMNode $node#>)" "S" "bool" "DOMNode" "public") ("m" "isDefaultNamespace" "isDefaultNamespace(<#string $namespaceURI#>)" "S" "bool" "DOMNode" "public") ("m" "insertBefore" "insertBefore(<#DOMNode $newnode#>,<#DOMNode $refnode#>)" "S" "DOMNode" "DOMNode" "public") ("m" "hasChildNodes" "hasChildNodes(<##>)" "S" "bool" "DOMNode" "public") ("m" "hasAttributes" "hasAttributes(<##>)" "S" "bool" "DOMNode" "public") ("m" "getNodePath" "getNodePath(<##>)" "S" "string" "DOMNode" "public") ("m" "getLineNo" "getLineNo(<##>)" "S" "int" "DOMNode" "public") ("m" "cloneNode" "cloneNode(<#bool $deep#>)" "S" "DOMNode" "DOMNode" "public") ("m" "C14NFile" "C14NFile(<#string $uri#>,<#bool $exclusive#>,<#bool $with_comments#>,<#array $xpath#>,<#array $ns_prefixes#>)" "S" "int" "DOMNode" "public") ("m" "C14N" "C14N(<#bool $exclusive#>,<#bool $with_comments#>,<#array $xpath#>,<#array $ns_prefixes#>)" "S" "string" "DOMNode" "public") ("m" "appendChild" "appendChild(<#DOMNode $newnode#>)" "S" "DOMNode" "DOMNode" "public") ("p" #184="textContent" #184# "S" "string" "DOMNode" "public") ("p" #185="baseURI" #185# "S" "string" "DOMNode" "public") ("p" #186="localName" #186# "S" "string" "DOMNode" "public") ("p" #187="prefix" #187# "S" "string" "DOMNode" "public") ("p" #188="namespaceURI" #188# "S" "string" "DOMNode" "public") ("p" #189="ownerDocument" #189# "S" "DOMDocument" "DOMNode" "public") ("p" #190="attributes" #190# "S" "DOMNamedNodeMap" "DOMNode" "public") ("p" #191="nextSibling" #191# "S" "DOMNode" "DOMNode" "public") ("p" #192="previousSibling" #192# "S" "DOMNode" "DOMNode" "public") ("p" #193="lastChild" #193# "S" "DOMNode" "DOMNode" "public") ("p" #194="firstChild" #194# "S" "DOMNode" "DOMNode" "public") ("p" #195="childNodes" #195# "S" "DOMNodeList" "DOMNode" "public") ("p" #196="parentNode" #196# "S" "DOMNode" "DOMNode" "public") ("p" #197="nodeType" #197# "S" "int" "DOMNode" "public") ("p" #198="nodeValue" #198# "S" "string" "DOMNode" "public") ("p" #199="nodeName" #199# "S" "string" #200# "public"))) (#202="DOMNamedNodeMap" (("m" "item" "item(<#int $index#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItemNS" "getNamedItemNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("m" "getNamedItem" "getNamedItem(<#string $name#>)" "S" "DOMNode" "DOMNamedNodeMap" "public") ("p" #201="length" #201# "S" "int" #202# "public"))) (#203="DOMImplementation" (("m" "hasFeature" "hasFeature(<#string $feature#>,<#string $version#>)" "S" "bool" "DOMImplementation" "public") ("m" "createDocumentType" "createDocumentType(<#string $qualifiedName = NULL#>,<#string $publicId = NULL#>,<#string $systemId = NULL#>)" "S" "DOMDocumentType" "DOMImplementation" "public") ("m" "createDocument" "createDocument(<#string $namespaceURI = NULL#>,<#string $qualifiedName = NULL#>,<#DOMDocumentType $doctype = NULL#>)" "S" "DOMDocument" "DOMImplementation" "public") ("m" "__construct" "__construct(<##>)" #404="S" #405="void" #203# "public"))) (#205="DOMException" (("p" #204="code" #204# "S" "int" #205# "public"))) (#206="DOMEntityReference" (("m" "__construct" "__construct(<#string $name#>)" #402="S" #403="void" #206# "public"))) (#213="DOMEntity" (("p" #207="version" #207# "S" "string" "DOMEntity" "public") ("p" #208="encoding" #208# "S" "string" "DOMEntity" "public") ("p" #209="actualEncoding" #209# "S" "string" "DOMEntity" "public") ("p" #210="notationName" #210# "S" "string" "DOMEntity" "public") ("p" #211="systemId" #211# "S" "string" "DOMEntity" "public") ("p" #212="publicId" #212# "S" "string" #213# "public"))) (#216="DOMElement" (("m" "setIdAttributeNS" "setIdAttributeNS(<#string $namespaceURI#>,<#string $localName#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setIdAttributeNode" "setIdAttributeNode(<#DOMAttr $attr#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setIdAttribute" "setIdAttribute(<#string $name#>,<#bool $isId#>)" "S" "void" "DOMElement" "public") ("m" "setAttributeNS" "setAttributeNS(<#string $namespaceURI#>,<#string $qualifiedName#>,<#string $value#>)" "S" "void" "DOMElement" "public") ("m" "setAttributeNodeNS" "setAttributeNodeNS(<#DOMAttr $attr#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttributeNode" "setAttributeNode(<#DOMAttr $attr#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "setAttribute" "setAttribute(<#string $name#>,<#string $value#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "removeAttributeNS" "removeAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "bool" "DOMElement" "public") ("m" "removeAttributeNode" "removeAttributeNode(<#DOMAttr $oldnode#>)" "S" "bool" "DOMElement" "public") ("m" "removeAttribute" "removeAttribute(<#string $name#>)" "S" "bool" "DOMElement" "public") ("m" "hasAttributeNS" "hasAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "bool" "DOMElement" "public") ("m" "hasAttribute" "hasAttribute(<#string $name#>)" "S" "bool" "DOMElement" "public") ("m" "getElementsByTagNameNS" "getElementsByTagNameNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNodeList" "DOMElement" "public") ("m" "getElementsByTagName" "getElementsByTagName(<#string $name#>)" "S" "DOMNodeList" "DOMElement" "public") ("m" "getAttributeNS" "getAttributeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "string" "DOMElement" "public") ("m" "getAttributeNodeNS" "getAttributeNodeNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttributeNode" "getAttributeNode(<#string $name#>)" "S" "DOMAttr" "DOMElement" "public") ("m" "getAttribute" "getAttribute(<#string $name#>)" "S" "string" "DOMElement" "public") ("m" "__construct" "__construct(<#string $name#>,<#string $value#>,<#string $namespaceURI#>)" #400="S" #401="void" "DOMElement" "public") ("p" #214="tagName" #214# "S" "string" "DOMElement" "public") ("p" #215="schemaTypeInfo" #215# "S" "bool" #216# "public"))) (#223="DOMDocumentType" (("p" #217="internalSubset" #217# "S" "string" "DOMDocumentType" "public") ("p" #218="notations" #218# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" #219="entities" #219# "S" "DOMNamedNodeMap" "DOMDocumentType" "public") ("p" #220="name" #220# "S" "string" "DOMDocumentType" "public") ("p" #221="systemId" #221# "S" "string" "DOMDocumentType" "public") ("p" #222="publicId" #222# "S" "string" #223# "public"))) (#224="DOMDocumentFragment" (("m" "appendXML" "appendXML(<#string $data#>)" "S" "bool" #224# "public"))) (#244="DOMDocument" (("m" "xinclude" "xinclude(<#int $options#>)" "S" "int" "DOMDocument" "public") ("m" "validate" "validate(<##>)" "S" "bool" "DOMDocument" "public") ("m" "schemaValidateSource" "schemaValidateSource(<#string $source#>,<#int $flags#>)" "S" "bool" "DOMDocument" "public") ("m" "schemaValidate" "schemaValidate(<#string $filename#>,<#int $flags#>)" "S" "bool" "DOMDocument" "public") ("m" "saveXML" "saveXML(<#DOMNode $node#>,<#int $options#>)" "S" "string" "DOMDocument" "public") ("m" "saveHTMLFile" "saveHTMLFile(<#string $filename#>)" "S" "int" "DOMDocument" "public") ("m" "saveHTML" "saveHTML(<#DOMNode $node = NULL#>)" "S" "string" "DOMDocument" "public") ("m" "save" "save(<#string $filename#>,<#int $options#>)" "S" "int" "DOMDocument" "public") ("m" "relaxNGValidateSource" "relaxNGValidateSource(<#string $source#>)" "S" "bool" "DOMDocument" "public") ("m" "relaxNGValidate" "relaxNGValidate(<#string $filename#>)" "S" "bool" "DOMDocument" "public") ("m" "registerNodeClass" "registerNodeClass(<#string $baseclass#>,<#string $extendedclass#>)" "S" "bool" "DOMDocument" "public") ("m" "normalizeDocument" "normalizeDocument(<##>)" "S" "void" "DOMDocument" "public") ("m" "loadXML" "loadXML(<#string $source#>,<#int $options = 0#>)" "S" "mixed" "DOMDocument" "public") ("m" "loadHTMLFile" "loadHTMLFile(<#string $filename#>,<#int $options = 0#>)" "S" "bool" "DOMDocument" "public") ("m" "loadHTML" "loadHTML(<#string $source#>,<#int $options = 0#>)" "S" "bool" "DOMDocument" "public") ("m" "load" "load(<#string $filename#>,<#int $options = 0#>)" "S" "mixed" "DOMDocument" "public") ("m" "importNode" "importNode(<#DOMNode $importedNode#>,<#bool $deep#>)" "S" "DOMNode" "DOMDocument" "public") ("m" "getElementsByTagNameNS" "getElementsByTagNameNS(<#string $namespaceURI#>,<#string $localName#>)" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementsByTagName" "getElementsByTagName(<#string $name#>)" "S" "DOMNodeList" "DOMDocument" "public") ("m" "getElementById" "getElementById(<#string $elementId#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createTextNode" "createTextNode(<#string $content#>)" "S" "DOMText" "DOMDocument" "public") ("m" "createProcessingInstruction" "createProcessingInstruction(<#string $target#>,<#string $data#>)" "S" "DOMProcessingInstruction" "DOMDocument" "public") ("m" "createEntityReference" "createEntityReference(<#string $name#>)" "S" "DOMEntityReference" "DOMDocument" "public") ("m" "createElementNS" "createElementNS(<#string $namespaceURI#>,<#string $qualifiedName#>,<#string $value#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createElement" "createElement(<#string $name#>,<#string $value#>)" "S" "DOMElement" "DOMDocument" "public") ("m" "createDocumentFragment" "createDocumentFragment(<##>)" "S" "DOMDocumentFragment" "DOMDocument" "public") ("m" "createComment" "createComment(<#string $data#>)" "S" "DOMComment" "DOMDocument" "public") ("m" "createCDATASection" "createCDATASection(<#string $data#>)" "S" "DOMCDATASection" "DOMDocument" "public") ("m" "createAttributeNS" "createAttributeNS(<#string $namespaceURI#>,<#string $qualifiedName#>)" "S" "DOMAttr" "DOMDocument" "public") ("m" "createAttribute" "createAttribute(<#string $name#>)" "S" "DOMAttr" "DOMDocument" "public") ("m" "__construct" "__construct(<#string $version#>,<#string $encoding#>)" #398="S" #399="void" "DOMDocument" "public") ("p" #225="xmlVersion" #225# "S" "string" "DOMDocument" "public") ("p" #226="xmlStandalone" #226# "S" "bool" "DOMDocument" "public") ("p" #227="xmlEncoding" #227# "S" "string" "DOMDocument" "public") ("p" #228="version" #228# "S" "string" "DOMDocument" "public") ("p" #229="validateOnParse" #229# "S" "bool" "DOMDocument" "public") ("p" #230="substituteEntities" #230# "S" "bool" "DOMDocument" "public") ("p" #231="strictErrorChecking" #231# "S" "bool" "DOMDocument" "public") ("p" #232="standalone" #232# "S" "bool" "DOMDocument" "public") ("p" #233="resolveExternals" #233# "S" "bool" "DOMDocument" "public") ("p" #234="recover" #234# "S" "bool" "DOMDocument" "public") ("p" #235="preserveWhiteSpace" #235# "S" "bool" "DOMDocument" "public") ("p" #236="implementation" #236# "S" "DOMImplementation" "DOMDocument" "public") ("p" #237="formatOutput" #237# "S" "bool" "DOMDocument" "public") ("p" #238="encoding" #238# "S" "string" "DOMDocument" "public") ("p" #239="documentURI" #239# "S" "string" "DOMDocument" "public") ("p" #240="documentElement" #240# "S" "DOMElement" "DOMDocument" "public") ("p" #241="doctype" #241# "S" "DOMDocumentType" "DOMDocument" "public") ("p" #242="config" #242# "S" "DOMConfiguration" "DOMDocument" "public") ("p" #243="actualEncoding" #243# "S" "string" #244# "public"))) (#245="DOMComment" (("m" "__construct" "__construct(<#string $value#>)" #396="S" #397="void" #245# "public"))) (#248="DOMCharacterData" (("m" "substringData" "substringData(<#int $offset#>,<#int $count#>)" "S" "string" "DOMCharacterData" "public") ("m" "replaceData" "replaceData(<#int $offset#>,<#int $count#>,<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("m" "insertData" "insertData(<#int $offset#>,<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("m" "deleteData" "deleteData(<#int $offset#>,<#int $count#>)" "S" "void" "DOMCharacterData" "public") ("m" "appendData" "appendData(<#string $data#>)" "S" "void" "DOMCharacterData" "public") ("p" #246="length" #246# "S" "int" "DOMCharacterData" "public") ("p" #247="data" #247# "S" "string" #248# "public"))) (#249="DOMCdataSection" (("m" "__construct" "__construct(<#string $value#>)" #394="S" #395="void" #249# "public"))) (#255="DOMAttr" (("m" "isId" "isId(<##>)" "S" "bool" "DOMAttr" "public") ("m" "__construct" "__construct(<#string $name#>,<#string $value#>)" #392="S" #393="void" "DOMAttr" "public") ("p" #250="value" #250# "S" "string" "DOMAttr" "public") ("p" #251="specified" #251# "S" "bool" "DOMAttr" "public") ("p" #252="schemaTypeInfo" #252# "S" "bool" "DOMAttr" "public") ("p" #253="ownerElement" #253# "S" "DOMElement" "DOMAttr" "public") ("p" #254="name" #254# "S" "string" #255# "public"))) (#256="SplSubject" (("m" "notify" "notify(<##>)" "S" "void" "SplSubject" "public") ("m" "detach" "detach(<#SplObserver $observer#>)" "S" "void" "SplSubject" "public") ("m" "attach" "attach(<#SplObserver $observer#>)" "S" "void" #256# "public"))) (#257="SplObserver" (("m" "update" "update(<#SplSubject $subject#>)" "S" "void" #257# "public"))) (#260="ArrayObject" (("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "ArrayObject" "public") ("m" "uksort" "uksort(<#callable $cmp_function#>)" "S" "void" "ArrayObject" "public") ("m" "uasort" "uasort(<#callable $cmp_function#>)" "S" "void" "ArrayObject" "public") ("m" "setIteratorClass" "setIteratorClass(<#string $iterator_class#>)" "S" "void" "ArrayObject" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "ArrayObject" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayObject" "public") ("m" "offsetUnset" "offsetUnset(<#mixed $index#>)" "S" "void" "ArrayObject" "public") ("m" "offsetSet" "offsetSet(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "ArrayObject" "public") ("m" "offsetGet" "offsetGet(<#mixed $index#>)" "S" "mixed" "ArrayObject" "public") ("m" "offsetExists" "offsetExists(<#mixed $index#>)" "S" "bool" "ArrayObject" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayObject" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayObject" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayObject" "public") ("m" "getIteratorClass" "getIteratorClass(<##>)" "S" "string" "ArrayObject" "public") ("m" "getIterator" "getIterator(<##>)" "S" "ArrayIterator" "ArrayObject" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "ArrayObject" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayObject" "public") ("m" "exchangeArray" "exchangeArray(<#mixed $input#>)" "S" "array" "ArrayObject" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayObject" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayObject" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" "ArrayObject" "public") ("m" "__construct" "__construct(<#mixed $input = null#>,<#int $flags = 0#>,<#string $iterator_class = \"ArrayIterator\"#>)" "S" "void" "ArrayObject" "public") ("d" #258="ARRAY_AS_PROPS" #258# "S" #3# "ArrayObject" #4#) ("d" #259="STD_PROP_LIST" #259# "S" #3# #260# #4#))) (#261="SplTempFileObject" (("m" "__construct" "__construct(<#int $max_memory#>)" #390="S" #391="void" #261# "public"))) (#266="SplFileObject" (("m" "valid" "valid(<##>)" "S" "bool" "SplFileObject" "public") ("m" "__toString" "__toString(<##>)" "S" "void" "SplFileObject" "public") ("m" "setMaxLineLen" "setMaxLineLen(<#int $max_len#>)" "S" "void" "SplFileObject" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "SplFileObject" "public") ("m" "setCsvControl" "setCsvControl(<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = \"\\\"\"#>,<#string $escape = \"\\\\\"#>)" "S" "void" "SplFileObject" "public") ("m" "seek" "seek(<#int $line_pos#>)" "S" "void" "SplFileObject" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplFileObject" "public") ("m" "next" "next(<##>)" "S" "void" "SplFileObject" "public") ("m" "key" "key(<##>)" "S" "int" "SplFileObject" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "SplFileObject" "public") ("m" "getMaxLineLen" "getMaxLineLen(<##>)" "S" "int" "SplFileObject" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "SplFileObject" "public") ("m" "getCsvControl" "getCsvControl(<##>)" "S" "array" "SplFileObject" "public") ("m" "getChildren" "getChildren(<##>)" "S" "void" "SplFileObject" "public") ("m" "fwrite" "fwrite(<#string $str#>,<#int $length#>)" "S" "int" "SplFileObject" "public") ("m" "ftruncate" "ftruncate(<#int $size#>)" "S" "bool" "SplFileObject" "public") ("m" "ftell" "ftell(<##>)" "S" "int" "SplFileObject" "public") ("m" "fstat" "fstat(<##>)" "S" "array" "SplFileObject" "public") ("m" "fseek" "fseek(<#int $offset#>,<#int $whence = SEEK_SET#>)" "S" "int" "SplFileObject" "public") ("m" "fscanf" "fscanf(<#string $format#>,<#$args#>)" "S" "mixed" "SplFileObject" "public") ("m" "fread" "fread(<#int $length#>)" "S" "string" "SplFileObject" "public") ("m" "fputcsv" "fputcsv(<#array $fields#>,<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = '\"'#>,<#string $escape = \"\\\\\"#>)" "S" "int" "SplFileObject" "public") ("m" "fpassthru" "fpassthru(<##>)" "S" "int" "SplFileObject" "public") ("m" "flock" "flock(<#int $operation#>,<#int &$wouldblock#>)" "S" "bool" "SplFileObject" "public") ("m" "fgetss" "fgetss(<#string $allowable_tags#>)" "S" "string" "SplFileObject" "public") ("m" "fgets" "fgets(<##>)" "S" "string" "SplFileObject" "public") ("m" "fgetcsv" "fgetcsv(<#string $delimiter = \"#>,<#\"#>,<#string $enclosure = \"\\\"\"#>,<#string $escape = \"\\\\\"#>)" "S" "array" "SplFileObject" "public") ("m" "fgetc" "fgetc(<##>)" "S" "string" "SplFileObject" "public") ("m" "fflush" "fflush(<##>)" "S" "bool" "SplFileObject" "public") ("m" "eof" "eof(<##>)" "S" "bool" "SplFileObject" "public") ("m" "current" "current(<##>)" "S" "string" "SplFileObject" "public") ("d" #262="READ_CSV" #262# "S" #3# "SplFileObject" #4#) ("d" #263="SKIP_EMPTY" #263# "S" #3# "SplFileObject" #4#) ("d" #264="READ_AHEAD" #264# "S" #3# "SplFileObject" #4#) ("d" #265="DROP_NEW_LINE" #265# "S" #3# #266# #4#))) (#267="SplFileInfo" (("m" "__toString" "__toString(<##>)" "S" "void" "SplFileInfo" "public") ("m" "setInfoClass" "setInfoClass(<#string $class_name = \"SplFileInfo\"#>)" "S" "void" "SplFileInfo" "public") ("m" "setFileClass" "setFileClass(<#string $class_name = \"SplFileObject\"#>)" "S" "void" "SplFileInfo" "public") ("m" "openFile" "openFile(<#string $open_mode = \"r\"#>,<#bool $use_include_path = false#>,<#resource $context = NULL#>)" "S" "SplFileObject" "SplFileInfo" "public") ("m" "isWritable" "isWritable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isReadable" "isReadable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isLink" "isLink(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isFile" "isFile(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isExecutable" "isExecutable(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "isDir" "isDir(<##>)" "S" "bool" "SplFileInfo" "public") ("m" "getType" "getType(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getRealPath" "getRealPath(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getPerms" "getPerms(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getPathname" "getPathname(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getPathInfo" "getPathInfo(<#string $class_name#>)" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getPath" "getPath(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getOwner" "getOwner(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getMTime" "getMTime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getLinkTarget" "getLinkTarget(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getInode" "getInode(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getGroup" "getGroup(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getFileInfo" "getFileInfo(<#string $class_name#>)" "S" "SplFileInfo" "SplFileInfo" "public") ("m" "getExtension" "getExtension(<##>)" "S" "string" "SplFileInfo" "public") ("m" "getCTime" "getCTime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "getBasename" "getBasename(<#string $suffix#>)" "S" "string" "SplFileInfo" "public") ("m" "getATime" "getATime(<##>)" "S" "int" "SplFileInfo" "public") ("m" "__construct" "__construct(<#string $file_name#>)" #388="S" #389="void" #267# "public"))) (#460="UnexpectedValueException" nil) (#461="UnderflowException" nil) (#462="RuntimeException" nil) (#463="RangeException" nil) (#464="OverflowException" nil) (#465="OutOfRangeException" nil) (#466="OutOfBoundsException" nil) (#467="LengthException" nil) (#468="InvalidArgumentException" nil) (#469="DomainException" nil) (#470="BadMethodCallException" nil) (#471="BadFunctionCallException" nil) (#472="LogicException" nil) (#272="Exception" (("m" "__clone" "__clone(<##>)" "S" "private" "Exception" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "Exception" "public") ("m" "getTraceAsString" "getTraceAsString(<##>)" "S" "string" "Exception" "public") ("m" "getTrace" "getTrace(<##>)" "S" "array" "Exception" "public") ("m" "getLine" "getLine(<##>)" "S" "int" "Exception" "public") ("m" "getFile" "getFile(<##>)" "S" "string" "Exception" "public") ("m" "getCode" "getCode(<##>)" "S" "int" "Exception" "public") ("m" "getPrevious" "getPrevious(<##>)" "S" "Exception" "Exception" "public") ("m" "getMessage" "getMessage(<##>)" "S" "string" "Exception" "public") ("m" "__construct" "__construct(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386="S" #387="void" "Exception" "public") ("p" #268="line" #268# "S" "int" "Exception" "protected") ("p" #269="file" #269# "S" "string" "Exception" "protected") ("p" #270="code" #270# "S" "int" "Exception" "protected") ("p" #271="message" #271# "S" "string" #272# "protected"))) (#474="Traversable" nil) (#273="Iterator" (("m" "valid" "valid(<##>)" "S" "boolean" "Iterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "Iterator" "public") ("m" "next" "next(<##>)" "S" "void" "Iterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "Iterator" "public") ("m" "current" "current(<##>)" "S" "mixed" #273# "public"))) (#274="Countable" (("m" "count" "count(<##>)" "S" "int" #274# "public"))) (#275="RecursiveIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveIterator" #275# "public"))) (#282="RegexIterator" (("m" "setPregFlags" "setPregFlags(<#int $preg_flags#>)" "S" "void" "RegexIterator" "public") ("m" "setMode" "setMode(<#int $mode#>)" "S" "void" "RegexIterator" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "RegexIterator" "public") ("m" "getRegex" "getRegex(<##>)" "S" "string" "RegexIterator" "public") ("m" "getPregFlags" "getPregFlags(<##>)" "S" "int" "RegexIterator" "public") ("m" "getMode" "getMode(<##>)" "S" "int" "RegexIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "RegexIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" "RegexIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" "S" "void" "RegexIterator" "public") ("d" #276="USE_KEY" #276# "S" #3# "RegexIterator" #4#) ("d" #277="REPLACE" #277# "S" #3# "RegexIterator" #4#) ("d" #278="SPLIT" #278# "S" #3# "RegexIterator" #4#) ("d" #279="ALL_MATCHES" #279# "S" #3# "RegexIterator" #4#) ("d" #280="GET_MATCH" #280# "S" #3# "RegexIterator" #4#) ("d" #281="MATCH" #281# "S" #3# #282# #4#))) (#291="RecursiveTreeIterator" (("m" "valid" "valid(<##>)" "S" "bool" "RecursiveTreeIterator" "public") ("m" "setPrefixPart" "setPrefixPart(<#int $part#>,<#string $value#>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "nextElement" "nextElement(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "key" "key(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "getPrefix" "getPrefix(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "getPostfix" "getPostfix(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "getEntry" "getEntry(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "endIteration" "endIteration(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "endChildren" "endChildren(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "current" "current(<##>)" "S" "string" "RecursiveTreeIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator_IteratorAggregate $it#>,<#int $flags = RecursiveTreeIterator::BYPASS_KEY#>,<#int $cit_flags = CachingIterator::CATCH_GET_CHILD#>,<#int $mode = RecursiveIteratorIterator::SELF_FIRST#>)" "S" "void" "RecursiveTreeIterator" "public") ("m" "callHasChildren" "callHasChildren(<##>)" "S" "bool" "RecursiveTreeIterator" "public") ("m" "callGetChildren" "callGetChildren(<##>)" "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginIteration" "beginIteration(<##>)" "S" "RecursiveIterator" "RecursiveTreeIterator" "public") ("m" "beginChildren" "beginChildren(<##>)" "S" "void" "RecursiveTreeIterator" "public") ("d" #283="PREFIX_RIGHT" #283# "S" #3# "RecursiveTreeIterator" #4#) ("d" #284="PREFIX_END_LAST" #284# "S" #3# "RecursiveTreeIterator" #4#) ("d" #285="PREFIX_END_HAS_NEXT" #285# "S" #3# "RecursiveTreeIterator" #4#) ("d" #286="PREFIX_MID_LAST" #286# "S" #3# "RecursiveTreeIterator" #4#) ("d" #287="PREFIX_MID_HAS_NEXT" #287# "S" #3# "RecursiveTreeIterator" #4#) ("d" #288="PREFIX_LEFT" #288# "S" #3# "RecursiveTreeIterator" #4#) ("d" #289="BYPASS_KEY" #289# "S" #3# "RecursiveTreeIterator" #4#) ("d" #290="BYPASS_CURRENT" #290# "S" #3# #291# #4#))) (#292="RecursiveRegexIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveRegexIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveRegexIterator" "RecursiveRegexIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #384="S" #385="void" #292# "public"))) (#297="RecursiveIteratorIterator" (("m" "valid" "valid(<##>)" "S" "bool" "RecursiveIteratorIterator" "public") ("m" "setMaxDepth" "setMaxDepth(<#string $max_depth = -1#>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "nextElement" "nextElement(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getSubIterator" "getSubIterator(<#int $level#>)" "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "getMaxDepth" "getMaxDepth(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "iterator" "RecursiveIteratorIterator" "public") ("m" "getDepth" "getDepth(<##>)" "S" "int" "RecursiveIteratorIterator" "public") ("m" "endIteration" "endIteration(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "endChildren" "endChildren(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "RecursiveIteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>,<#int $mode = RecursiveIteratorIterator::LEAVES_ONLY#>,<#int $flags = 0#>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "callHasChildren" "callHasChildren(<##>)" "S" "bool" "RecursiveIteratorIterator" "public") ("m" "callGetChildren" "callGetChildren(<##>)" "S" "RecursiveIterator" "RecursiveIteratorIterator" "public") ("m" "beginIteration" "beginIteration(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("m" "beginChildren" "beginChildren(<##>)" "S" "void" "RecursiveIteratorIterator" "public") ("d" #293="CATCH_GET_CHILD" #293# "S" #3# "RecursiveIteratorIterator" #4#) ("d" #294="CHILD_FIRST" #294# "S" #3# "RecursiveIteratorIterator" #4#) ("d" #295="SELF_FIRST" #295# "S" #3# "RecursiveIteratorIterator" #4#) ("d" #296="LEAVES_ONLY" #296# "S" #3# #297# #4#))) (#298="RecursiveFilterIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveFilterIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveFilterIterator" "RecursiveFilterIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>)" #382="S" #383="void" #298# "public"))) (#299="RecursiveDirectoryIterator" (("m" "rewind" "rewind(<##>)" "S" "void" "RecursiveDirectoryIterator" "public") ("m" "next" "next(<##>)" "S" "void" "RecursiveDirectoryIterator" "public") ("m" "key" "key(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "hasChildren" "hasChildren(<#bool $allow_links = false#>)" "S" "bool" "RecursiveDirectoryIterator" "public") ("m" "getSubPathname" "getSubPathname(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getSubPath" "getSubPath(<##>)" "S" "string" "RecursiveDirectoryIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "mixed" "RecursiveDirectoryIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #380="S" #381="void" #299# "public"))) (#300="RecursiveCallbackFilterIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "void" "RecursiveCallbackFilterIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveCallbackFilterIterator" "RecursiveCallbackFilterIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>,<#string $callback#>)" #378="S" #379="void" #300# "public"))) (#301="RecursiveCachingIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveCachingIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveCachingIterator" "RecursiveCachingIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #376="S" #377="void" #301# "public"))) (#302="RecursiveArrayIterator" (("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "RecursiveArrayIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "RecursiveArrayIterator" #302# "public"))) (#303="ParentIterator" (("m" "rewind" "rewind(<##>)" "S" "void" "ParentIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ParentIterator" "public") ("m" "hasChildren" "hasChildren(<##>)" "S" "bool" "ParentIterator" "public") ("m" "getChildren" "getChildren(<##>)" "S" "ParentIterator" "ParentIterator" "public") ("m" "__construct" "__construct(<#RecursiveIterator $iterator#>)" #374="S" #375="void" "ParentIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" #303# "public"))) (#304="NoRewindIterator" (("m" "valid" "valid(<##>)" "S" "bool" "NoRewindIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "NoRewindIterator" "public") ("m" "next" "next(<##>)" "S" "void" "NoRewindIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "NoRewindIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "iterator" "NoRewindIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "NoRewindIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #372="S" #373="void" #304# "public"))) (#309="MultipleIterator" (("m" "valid" "valid(<##>)" "S" "void" "MultipleIterator" "public") ("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "MultipleIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "MultipleIterator" "public") ("m" "next" "next(<##>)" "S" "void" "MultipleIterator" "public") ("m" "key" "key(<##>)" "S" "array" "MultipleIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "MultipleIterator" "public") ("m" "detachIterator" "detachIterator(<#Iterator $iterator#>)" "S" "void" "MultipleIterator" "public") ("m" "current" "current(<##>)" "S" "array" "MultipleIterator" "public") ("m" "countIterators" "countIterators(<##>)" "S" "void" "MultipleIterator" "public") ("m" "containsIterator" "containsIterator(<#Iterator $iterator#>)" "S" "void" "MultipleIterator" "public") ("m" "attachIterator" "attachIterator(<#Iterator $iterator#>,<#string $infos#>)" "S" "void" "MultipleIterator" "public") ("m" "__construct" "__construct(<#int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC#>)" "S" "void" "MultipleIterator" "public") ("d" #305="MIT_KEYS_ASSOC" #305# "S" #3# "MultipleIterator" #4#) ("d" #306="MIT_KEYS_NUMERIC" #306# "S" #3# "MultipleIterator" #4#) ("d" #307="MIT_NEED_ALL" #307# "S" #3# "MultipleIterator" #4#) ("d" #308="MIT_NEED_ANY" #308# "S" #3# #309# #4#))) (#310="LimitIterator" (("m" "valid" "valid(<##>)" "S" "bool" "LimitIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "int" "LimitIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "LimitIterator" "public") ("m" "next" "next(<##>)" "S" "void" "LimitIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "LimitIterator" "public") ("m" "getPosition" "getPosition(<##>)" "S" "int" "LimitIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "LimitIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "LimitIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#int $offset = 0#>,<#int $count = -1#>)" #370="S" #371="void" #310# "public"))) (#311="InfiniteIterator" (("m" "next" "next(<##>)" "S" "void" "InfiniteIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #368="S" #369="void" #311# "public"))) (#312="GlobIterator" (("m" "count" "count(<##>)" "S" "int" "GlobIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #366="S" #367="void" #312# "public"))) (#313="FilterIterator" (("m" "valid" "valid(<##>)" "S" "bool" "FilterIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "FilterIterator" "public") ("m" "next" "next(<##>)" "S" "void" "FilterIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "FilterIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "FilterIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "FilterIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>)" #364="S" #365="void" "FilterIterator" "public") ("m" "accept" "accept(<##>)" "S" "bool" #313# "public"))) (#325="FilesystemIterator" (("m" "setFlags" "setFlags(<#int $flags#>)" "S" "void" "FilesystemIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "FilesystemIterator" "public") ("m" "next" "next(<##>)" "S" "void" "FilesystemIterator" "public") ("m" "key" "key(<##>)" "S" "string" "FilesystemIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "int" "FilesystemIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "FilesystemIterator" "public") ("m" "__construct" "__construct(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS#>)" "S" "void" "FilesystemIterator" "public") ("d" #314="UNIX_PATHS" #314# "S" #3# "FilesystemIterator" #4#) ("d" #315="SKIP_DOTS" #315# "S" #3# "FilesystemIterator" #4#) ("d" #316="NEW_CURRENT_AND_KEY" #316# "S" #3# "FilesystemIterator" #4#) ("d" #317="KEY_MODE_MASK" #317# "S" #3# "FilesystemIterator" #4#) ("d" #318="FOLLOW_SYMLINKS" #318# "S" #3# "FilesystemIterator" #4#) ("d" #319="KEY_AS_FILENAME" #319# "S" #3# "FilesystemIterator" #4#) ("d" #320="KEY_AS_PATHNAME" #320# "S" #3# "FilesystemIterator" #4#) ("d" #321="CURRENT_MODE_MASK" #321# "S" #3# "FilesystemIterator" #4#) ("d" #322="CURRENT_AS_SELF" #322# "S" #3# "FilesystemIterator" #4#) ("d" #323="CURRENT_AS_FILEINFO" #323# "S" #3# "FilesystemIterator" #4#) ("d" #324="CURRENT_AS_PATHNAME" #324# "S" #3# #325# #4#))) (#326="EmptyIterator" (("m" "valid" "valid(<##>)" "S" "void" "EmptyIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "EmptyIterator" "public") ("m" "next" "next(<##>)" "S" "void" "EmptyIterator" "public") ("m" "key" "key(<##>)" "S" "void" "EmptyIterator" "public") ("m" "current" "current(<##>)" "S" "void" #326# "public"))) (#327="DirectoryIterator" (("m" "valid" "valid(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "__toString" "__toString(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "DirectoryIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "DirectoryIterator" "public") ("m" "next" "next(<##>)" "S" "void" "DirectoryIterator" "public") ("m" "key" "key(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "isWritable" "isWritable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isReadable" "isReadable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isLink" "isLink(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isFile" "isFile(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isExecutable" "isExecutable(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isDot" "isDot(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "isDir" "isDir(<##>)" "S" "bool" "DirectoryIterator" "public") ("m" "getType" "getType(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getPerms" "getPerms(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getPathname" "getPathname(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getPath" "getPath(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getOwner" "getOwner(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getMTime" "getMTime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getInode" "getInode(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getGroup" "getGroup(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getFilename" "getFilename(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getExtension" "getExtension(<##>)" "S" "string" "DirectoryIterator" "public") ("m" "getCTime" "getCTime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "getBasename" "getBasename(<#string $suffix#>)" "S" "string" "DirectoryIterator" "public") ("m" "getATime" "getATime(<##>)" "S" "int" "DirectoryIterator" "public") ("m" "current" "current(<##>)" "S" "DirectoryIterator" "DirectoryIterator" "public") ("m" "__construct" "__construct(<#string $path#>)" #362="S" #363="void" #327# "public"))) (#328="CallbackFilterIterator" (("m" "accept" "accept(<##>)" "S" "string" "CallbackFilterIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#callable $callback#>)" #360="S" #361="void" #328# "public"))) (#335="CachingIterator" (("m" "valid" "valid(<##>)" "S" "void" "CachingIterator" "public") ("m" "__toString" "__toString(<##>)" "S" "void" "CachingIterator" "public") ("m" "setFlags" "setFlags(<#bitmask $flags#>)" "S" "void" "CachingIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "CachingIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "CachingIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "CachingIterator" "public") ("m" "next" "next(<##>)" "S" "void" "CachingIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "CachingIterator" "public") ("m" "hasNext" "hasNext(<##>)" "S" "void" "CachingIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "CachingIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "CachingIterator" "public") ("m" "getCache" "getCache(<##>)" "S" "array" "CachingIterator" "public") ("m" "current" "current(<##>)" "S" "void" "CachingIterator" "public") ("m" "count" "count(<##>)" "S" "int" "CachingIterator" "public") ("m" "__construct" "__construct(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" "S" "void" "CachingIterator" "public") ("d" #329="FULL_CACHE" #329# "S" #3# "CachingIterator" #4#) ("d" #330="TOSTRING_USE_INNER" #330# "S" #3# "CachingIterator" #4#) ("d" #331="TOSTRING_USE_CURRENT" #331# "S" #3# "CachingIterator" #4#) ("d" #332="TOSTRING_USE_KEY" #332# "S" #3# "CachingIterator" #4#) ("d" #333="CATCH_GET_CHILD" #333# "S" #3# "CachingIterator" #4#) ("d" #334="CALL_TOSTRING" #334# "S" #3# #335# #4#))) (#336="SeekableIterator" (("m" "seek" "seek(<#int $position#>)" "S" "void" "SeekableIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" #336# "public"))) (#337="ArrayIterator" (("m" "valid" "valid(<##>)" "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "string" "ArrayIterator" "public") ("m" "uksort" "uksort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "uasort" "uasort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "setFlags(<#string $flags#>)" "S" "void" "ArrayIterator" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "ArrayIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayIterator" "public") ("m" "__construct" "__construct(<#)#>,<#int $flags = 0#>)" #358="S" #359="void" "ArrayIterator" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" "ArrayIterator" "public") ("m" "valid" "valid(<##>)" "S" "bool" "ArrayIterator" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "string" "ArrayIterator" "public") ("m" "uksort" "uksort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "uasort" "uasort(<#string $cmp_function#>)" "S" "void" "ArrayIterator" "public") ("m" "setFlags" "setFlags(<#string $flags#>)" "S" "void" "ArrayIterator" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "ArrayIterator" "public") ("m" "seek" "seek(<#int $position#>)" "S" "void" "ArrayIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "ArrayIterator" "public") ("m" "offsetUnset" "offsetUnset(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetSet" "offsetSet(<#string $index#>,<#string $newval#>)" "S" "void" "ArrayIterator" "public") ("m" "offsetGet" "offsetGet(<#string $index#>)" "S" "mixed" "ArrayIterator" "public") ("m" "offsetExists" "offsetExists(<#string $index#>)" "S" "void" "ArrayIterator" "public") ("m" "next" "next(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natsort" "natsort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "natcasesort" "natcasesort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "ksort" "ksort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "key" "key(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "getFlags" "getFlags(<##>)" "S" "void" "ArrayIterator" "public") ("m" "getArrayCopy" "getArrayCopy(<##>)" "S" "array" "ArrayIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "ArrayIterator" "public") ("m" "count" "count(<##>)" "S" "int" "ArrayIterator" "public") ("m" "__construct" "__construct(<#)#>,<#int $flags = 0#>)" "S" "void" "ArrayIterator" "public") ("m" "asort" "asort(<##>)" "S" "void" "ArrayIterator" "public") ("m" "append" "append(<#mixed $value#>)" "S" "void" #337# "public"))) (#338="OuterIterator" (("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" "OuterIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Iterator" #338# "public"))) (#339="IteratorIterator" (("m" "valid" "valid(<##>)" "S" "bool" "IteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "IteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "IteratorIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Traversable" "IteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>)" #356="S" #357="void" "IteratorIterator" "public") ("m" "valid" "valid(<##>)" "S" "bool" "IteratorIterator" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "IteratorIterator" "public") ("m" "next" "next(<##>)" "S" "void" "IteratorIterator" "public") ("m" "key" "key(<##>)" "S" "scalar" "IteratorIterator" "public") ("m" "getInnerIterator" "getInnerIterator(<##>)" "S" "Traversable" "IteratorIterator" "public") ("m" "current" "current(<##>)" "S" "mixed" "IteratorIterator" "public") ("m" "__construct" "__construct(<#Traversable $iterator#>)" "S" nil #339# "public"))) (#340="SplObjectStorage" (("m" "valid" "valid(<##>)" "S" "bool" "SplObjectStorage" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "SplObjectStorage" "public") ("m" "setInfo" "setInfo(<#mixed $data#>)" "S" "void" "SplObjectStorage" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "SplObjectStorage" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplObjectStorage" "public") ("m" "removeAllExcept" "removeAllExcept(<#SplObjectStorage $storage#>)" "S" "void" "SplObjectStorage" "public") ("m" "removeAll" "removeAll(<#SplObjectStorage $storage#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetUnset" "offsetUnset(<#object $object#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetSet" "offsetSet(<#object $object#>,<#mixed $data = NULL#>)" "S" "void" "SplObjectStorage" "public") ("m" "offsetGet" "offsetGet(<#object $object#>)" "S" "mixed" "SplObjectStorage" "public") ("m" "offsetExists" "offsetExists(<#object $object#>)" "S" "bool" "SplObjectStorage" "public") ("m" "next" "next(<##>)" "S" "void" "SplObjectStorage" "public") ("m" "key" "key(<##>)" "S" "int" "SplObjectStorage" "public") ("m" "getInfo" "getInfo(<##>)" "S" "mixed" "SplObjectStorage" "public") ("m" "getHash" "getHash(<#object $object#>)" "S" "string" "SplObjectStorage" "public") ("m" "detach" "detach(<#object $object#>)" "S" "void" "SplObjectStorage" "public") ("m" "current" "current(<##>)" "S" "object" "SplObjectStorage" "public") ("m" "count" "count(<##>)" "S" "int" "SplObjectStorage" "public") ("m" "contains" "contains(<#object $object#>)" "S" "bool" "SplObjectStorage" "public") ("m" "attach" "attach(<#object $object#>,<#mixed $data = NULL#>)" "S" "void" "SplObjectStorage" "public") ("m" "addAll" "addAll(<#SplObjectStorage $storage#>)" "S" "void" #340# "public"))) (#341="SplFixedArray" (("m" "__wakeup" "__wakeup(<##>)" "S" "void" "SplFixedArray" "public") ("m" "valid" "valid(<##>)" "S" "bool" "SplFixedArray" "public") ("m" "toArray" "toArray(<##>)" "S" "array" "SplFixedArray" "public") ("m" "setSize" "setSize(<#int $size#>)" "S" "int" "SplFixedArray" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplFixedArray" "public") ("m" "offsetUnset" "offsetUnset(<#int $index#>)" "S" "void" "SplFixedArray" "public") ("m" "offsetSet" "offsetSet(<#int $index#>,<#mixed $newval#>)" "S" "void" "SplFixedArray" "public") ("m" "offsetGet" "offsetGet(<#int $index#>)" "S" "mixed" "SplFixedArray" "public") ("m" "offsetExists" "offsetExists(<#int $index#>)" "S" "bool" "SplFixedArray" "public") ("m" "next" "next(<##>)" "S" "void" "SplFixedArray" "public") ("m" "key" "key(<##>)" "S" "int" "SplFixedArray" "public") ("m" "getSize" "getSize(<##>)" "S" "int" "SplFixedArray" "public") ("m" "fromArray" "fromArray(<#array $array#>,<#bool $save_indexes = true#>)" "S" "SplFixedArray" "SplFixedArray" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplFixedArray" "public") ("m" "count" "count(<##>)" "S" "int" "SplFixedArray" "public") ("m" "__construct" "__construct(<#int $size = 0#>)" #355="S" nil #341# "public"))) (#342="SplPriorityQueue" (("m" "valid" "valid(<##>)" "S" "bool" "SplPriorityQueue" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "setExtractFlags" "setExtractFlags(<#int $flags#>)" "S" "void" "SplPriorityQueue" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "recoverFromCorruption" "recoverFromCorruption(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "next" "next(<##>)" "S" "void" "SplPriorityQueue" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplPriorityQueue" "public") ("m" "insert" "insert(<#mixed $value#>,<#mixed $priority#>)" "S" "void" "SplPriorityQueue" "public") ("m" "extract" "extract(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplPriorityQueue" "public") ("m" "count" "count(<##>)" "S" "int" "SplPriorityQueue" "public") ("m" "compare" "compare(<#mixed $priority1#>,<#mixed $priority2#>)" "S" "int" "SplPriorityQueue" "public") ("m" "__construct" "__construct(<##>)" #354="S" nil #342# "public"))) (#343="SplMinHeap" (("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "int" #343# "protected"))) (#344="SplMaxHeap" (("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "int" #344# "protected"))) (#345="SplHeap" (("m" "valid" "valid(<##>)" "S" "bool" "SplHeap" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplHeap" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplHeap" "public") ("m" "recoverFromCorruption" "recoverFromCorruption(<##>)" "S" "void" "SplHeap" "public") ("m" "next" "next(<##>)" "S" "void" "SplHeap" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplHeap" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplHeap" "public") ("m" "insert" "insert(<#mixed $value#>)" "S" "void" "SplHeap" "public") ("m" "extract" "extract(<##>)" "S" "mixed" "SplHeap" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplHeap" "public") ("m" "count" "count(<##>)" "S" "int" "SplHeap" "public") ("m" "compare" "compare(<#mixed $value1#>,<#mixed $value2#>)" "S" "protected" "SplHeap" "public") ("m" "__construct" "__construct(<##>)" #353="S" nil #345# "public"))) (#346="SplQueue" (("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplQueue" "public") ("m" "enqueue" "enqueue(<#mixed $value#>)" "S" "void" "SplQueue" "public") ("m" "dequeue" "dequeue(<##>)" "S" "mixed" "SplQueue" "public") ("m" "__construct" "__construct(<##>)" #352="S" nil #346# "public"))) (#347="SplStack" (("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplStack" "public") ("m" "__construct" "__construct(<##>)" #351="S" nil #347# "public"))) (#348="SplDoublyLinkedList" (("m" "valid" "valid(<##>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "unshift" "unshift(<#mixed $value#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "unserialize" "unserialize(<#string $serialized#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "top" "top(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "shift" "shift(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "setIteratorMode" "setIteratorMode(<#int $mode#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "serialize" "serialize(<##>)" "S" "string" "SplDoublyLinkedList" "public") ("m" "rewind" "rewind(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "push" "push(<#mixed $value#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "prev" "prev(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "pop" "pop(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetUnset" "offsetUnset(<#mixed $index#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetSet" "offsetSet(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "offsetGet" "offsetGet(<#mixed $index#>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "offsetExists" "offsetExists(<#mixed $index#>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "next" "next(<##>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "key" "key(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "isEmpty" "isEmpty(<##>)" "S" "bool" "SplDoublyLinkedList" "public") ("m" "getIteratorMode" "getIteratorMode(<##>)" "S" "int" "SplDoublyLinkedList" "public") ("m" "current" "current(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "count" "count(<##>)" "S" "int" "SplDoublyLinkedList" "public") ("m" "bottom" "bottom(<##>)" "S" "mixed" "SplDoublyLinkedList" "public") ("m" "add" "add(<#mixed $index#>,<#mixed $newval#>)" "S" "void" "SplDoublyLinkedList" "public") ("m" "__construct" "__construct(<##>)" #349="S" nil #348# "public")))) ((#350="f" "SplDoublyLinkedList(" "SplDoublyLinkedList(<##>)" #349# nil) (#350# "SplStack(" "SplStack(<##>)" #351# nil) (#350# "SplQueue(" "SplQueue(<##>)" #352# nil) (#350# "SplHeap(" "SplHeap(<##>)" #353# nil) (#350# "SplMaxHeap(" "SplMaxHeap(<##>)" #353# nil) (#350# "SplMinHeap(" "SplMinHeap(<##>)" #353# nil) (#350# "SplPriorityQueue(" "SplPriorityQueue(<##>)" #354# nil) (#350# "SplFixedArray(" "SplFixedArray(<#int $size = 0#>)" #355# nil) (#350# "IteratorIterator(" "IteratorIterator(<#Traversable $iterator#>)" #356# #357#) (#350# "ArrayIterator(" "ArrayIterator(<#)#>,<#int $flags = 0#>)" #358# #359#) (#350# "CallbackFilterIterator(" "CallbackFilterIterator(<#Iterator $iterator#>,<#callable $callback#>)" #360# #361#) (#350# "DirectoryIterator(" "DirectoryIterator(<#string $path#>)" #362# #363#) (#350# "FilterIterator(" "FilterIterator(<#Iterator $iterator#>)" #364# #365#) (#350# "GlobIterator(" "GlobIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #366# #367#) (#350# "InfiniteIterator(" "InfiniteIterator(<#Iterator $iterator#>)" #368# #369#) (#350# "LimitIterator(" "LimitIterator(<#Iterator $iterator#>,<#int $offset = 0#>,<#int $count = -1#>)" #370# #371#) (#350# "NoRewindIterator(" "NoRewindIterator(<#Iterator $iterator#>)" #372# #373#) (#350# "ParentIterator(" "ParentIterator(<#RecursiveIterator $iterator#>)" #374# #375#) (#350# "RecursiveArrayIterator(" "RecursiveArrayIterator(<#)#>,<#int $flags = 0#>)" #358# #359#) (#350# "RecursiveCachingIterator(" "RecursiveCachingIterator(<#Iterator $iterator#>,<#string $flags = self::CALL_TOSTRING#>)" #376# #377#) (#350# "RecursiveCallbackFilterIterator(" "RecursiveCallbackFilterIterator(<#RecursiveIterator $iterator#>,<#string $callback#>)" #378# #379#) (#350# "RecursiveDirectoryIterator(" "RecursiveDirectoryIterator(<#string $path#>,<#int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO#>)" #380# #381#) (#350# "RecursiveFilterIterator(" "RecursiveFilterIterator(<#RecursiveIterator $iterator#>)" #382# #383#) (#350# "RecursiveRegexIterator(" "RecursiveRegexIterator(<#RecursiveIterator $iterator#>,<#string $regex#>,<#int $mode = self::MATCH#>,<#int $flags = 0#>,<#int $preg_flags = 0#>)" #384# #385#) (#350# "Exception(" "Exception(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "LogicException(" "LogicException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "BadFunctionCallException(" "BadFunctionCallException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "BadMethodCallException(" "BadMethodCallException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "DomainException(" "DomainException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "InvalidArgumentException(" "InvalidArgumentException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "LengthException(" "LengthException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "OutOfBoundsException(" "OutOfBoundsException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "OutOfRangeException(" "OutOfRangeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "OverflowException(" "OverflowException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "RangeException(" "RangeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "RuntimeException(" "RuntimeException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "UnderflowException(" "UnderflowException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "UnexpectedValueException(" "UnexpectedValueException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "SplFileInfo(" "SplFileInfo(<#string $file_name#>)" #388# #389#) (#350# "SplTempFileObject(" "SplTempFileObject(<#int $max_memory#>)" #390# #391#) (#350# "DOMAttr(" "DOMAttr(<#string $name#>,<#string $value#>)" #392# #393#) (#350# "DOMCdataSection(" "DOMCdataSection(<#string $value#>)" #394# #395#) (#350# "DOMComment(" "DOMComment(<#string $value#>)" #396# #397#) (#350# "DOMDocument(" "DOMDocument(<#string $version#>,<#string $encoding#>)" #398# #399#) (#350# "DOMElement(" "DOMElement(<#string $name#>,<#string $value#>,<#string $namespaceURI#>)" #400# #401#) (#350# "DOMEntityReference(" "DOMEntityReference(<#string $name#>)" #402# #403#) (#350# "DOMException(" "DOMException(<#string $message = \"\"#>,<#int $code = 0#>,<#Exception $previous = NULL#>)" #386# #387#) (#350# "DOMImplementation(" "DOMImplementation(<##>)" #404# #405#) (#350# "DOMProcessingInstruction(" "DOMProcessingInstruction(<#string $name#>,<#string $value#>)" #406# #407#) (#350# "DOMText(" "DOMText(<#string $value#>)" #408# #409#) (#350# "DOMXPath(" "DOMXPath(<#DOMDocument $doc#>)" #410# #411#) (#350# "SimpleXMLElement(" "SimpleXMLElement(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #412# #413#) (#350# "SimpleXMLIterator(" "SimpleXMLIterator(<#string $data#>,<#int $options = 0#>,<#bool $data_is_url = false#>,<#string $ns = \"\"#>,<#bool $is_prefix = false#>)" #412# #413#) (#350# "HttpRequestPool(" "HttpRequestPool(<#HttpRequest $request#>,<#HttpRequest $__args__#>)" #414# #415#) ("c" #416="HttpResponse" "HttpResponse" "S" #416#) ("c" #417="HttpRequestPool" "HttpRequestPool" "S" #417#) ("c" #418="HttpRequest" "HttpRequest" "S" #418#) ("c" #419="HttpQueryString" "HttpQueryString" "S" #419#) ("c" #420="HttpMessage" "HttpMessage" "S" #420#) ("c" #421="HttpMessage" "HttpMessage" "S" #421#) ("c" #422="HttpInflateStream" "HttpInflateStream" "S" #422#) ("c" #423="HttpDeflateStream" "HttpDeflateStream" "S" #423#) ("c" #424="Memcache" "Memcache" "S" #424#) ("c" #425="XMLReader" "XMLReader" "S" #425#) ("c" #426="SimpleXMLIterator" "SimpleXMLIterator" "S" #426#) ("c" #427="SimpleXMLElement" "SimpleXMLElement" "S" #427#) ("c" #428="SplString" "SplString" "S" #428#) ("c" #429="SplBool" "SplBool" "S" #429#) ("c" #430="SplEnum" "SplEnum" "S" #430#) ("c" #431="SplFloat" "SplFloat" "S" #431#) ("c" #432="SplInt" "SplInt" "S" #432#) ("c" #433="SplType" "SplType" "S" #433#) ("c" #434="ZipArchive" "ZipArchive" "S" #434#) ("c" #435="DOMXPath" "DOMXPath" "S" #435#) ("c" #436="DOMText" "DOMText" "S" #436#) ("c" #437="DOMProcessingInstruction" "DOMProcessingInstruction" "S" #437#) ("c" #438="DOMNotation" "DOMNotation" "S" #438#) ("c" #439="DOMNodeList" "DOMNodeList" "S" #439#) ("c" #440="DOMNode" "DOMNode" "S" #440#) ("c" #441="DOMNamedNodeMap" "DOMNamedNodeMap" "S" #441#) ("c" #442="DOMImplementation" "DOMImplementation" "S" #442#) ("c" #443="DOMException" "DOMException" "S" #443#) ("c" #444="DOMEntityReference" "DOMEntityReference" "S" #444#) ("c" #445="DOMEntity" "DOMEntity" "S" #445#) ("c" #446="DOMElement" "DOMElement" "S" #446#) ("c" #447="DOMDocumentType" "DOMDocumentType" "S" #447#) ("c" #448="DOMDocumentFragment" "DOMDocumentFragment" "S" #448#) ("c" #449="DOMDocument" "DOMDocument" "S" #449#) ("c" #450="DOMComment" "DOMComment" "S" #450#) ("c" #451="DOMCharacterData" "DOMCharacterData" "S" #451#) ("c" #452="DOMCdataSection" "DOMCdataSection" "S" #452#) ("c" #453="DOMAttr" "DOMAttr" "S" #453#) ("c" #454="SplSubject" "SplSubject" "S" #454#) ("c" #455="SplObserver" "SplObserver" "S" #455#) ("c" #456="ArrayObject" "ArrayObject" "S" #456#) ("c" #457="SplTempFileObject" "SplTempFileObject" "S" #457#) ("c" #458="SplFileObject" "SplFileObject" "S" #458#) ("c" #459="SplFileInfo" "SplFileInfo" "S" #459#) ("c" #460# "UnexpectedValueException" "S" #460#) ("c" #461# "UnderflowException" "S" #461#) ("c" #462# "RuntimeException" "S" #462#) ("c" #463# "RangeException" "S" #463#) ("c" #464# "OverflowException" "S" #464#) ("c" #465# "OutOfRangeException" "S" #465#) ("c" #466# "OutOfBoundsException" "S" #466#) ("c" #467# "LengthException" "S" #467#) ("c" #468# "InvalidArgumentException" "S" #468#) ("c" #469# "DomainException" "S" #469#) ("c" #470# "BadMethodCallException" "S" #470#) ("c" #471# "BadFunctionCallException" "S" #471#) ("c" #472# "LogicException" "S" #472#) ("c" #473="Exception" "Exception" "S" #473#) ("i" #474# "Traversable" "S" #474#) ("i" #475="Iterator" "Iterator" "S" #475#) ("i" #476="SeekableIterator" "SeekableIterator" "S" #476#) ("i" #477="OuterIterator" "OuterIterator" "S" #477#) ("i" #478="Countable" "Countable" "S" #478#) ("i" #479="RecursiveIterator" "RecursiveIterator" "S" #479#) ("c" #480="RegexIterator" "RegexIterator" "S" #480#) ("c" #481="RecursiveTreeIterator" "RecursiveTreeIterator" "S" #481#) ("c" #482="RecursiveRegexIterator" "RecursiveRegexIterator" "S" #482#) ("c" #483="RecursiveIteratorIterator" "RecursiveIteratorIterator" "S" #483#) ("c" #484="RecursiveFilterIterator" "RecursiveFilterIterator" "S" #484#) ("c" #485="RecursiveDirectoryIterator" "RecursiveDirectoryIterator" "S" #485#) ("c" #486="RecursiveCallbackFilterIterator" "RecursiveCallbackFilterIterator" "S" #486#) ("c" #487="RecursiveCachingIterator" "RecursiveCachingIterator" "S" #487#) ("c" #488="RecursiveArrayIterator" "RecursiveArrayIterator" "S" #488#) ("c" #489="ParentIterator" "ParentIterator" "S" #489#) ("c" #490="NoRewindIterator" "NoRewindIterator" "S" #490#) ("c" #491="MultipleIterator" "MultipleIterator" "S" #491#) ("c" #492="LimitIterator" "LimitIterator" "S" #492#) ("c" #493="IteratorIterator" "IteratorIterator" "S" #493#) ("c" #494="InfiniteIterator" "InfiniteIterator" "S" #494#) ("c" #495="GlobIterator" "GlobIterator" "S" #495#) ("c" #496="FilterIterator" "FilterIterator" "S" #496#) ("c" #497="FilesystemIterator" "FilesystemIterator" "S" #497#) ("c" #498="EmptyIterator" "EmptyIterator" "S" #498#) ("c" #499="DirectoryIterator" "DirectoryIterator" "S" #499#) ("c" #500="CallbackFilterIterator" "CallbackFilterIterator" "S" #500#) ("c" #501="CachingIterator" "CachingIterator" "S" #501#) ("c" #502="ArrayIterator" "ArrayIterator" "S" #502#) ("c" #503="SeekableIterator" "SeekableIterator" "S" #503#) ("c" #504="ArrayIterator" "ArrayIterator" "S" #504#) ("c" #505="OuterIterator" "OuterIterator" "S" #505#) ("c" #506="IteratorIterator" "IteratorIterator" "S" #506#) ("c" #507="SplObjectStorage" "SplObjectStorage" "S" #507#) ("c" #508="SplFixedArray" "SplFixedArray" "S" #508#) ("c" #509="SplPriorityQueue" "SplPriorityQueue" "S" #509#) ("c" #510="SplMinHeap" "SplMinHeap" "S" #510#) ("c" #511="SplMaxHeap" "SplMaxHeap" "S" #511#) ("c" #512="SplHeap" "SplHeap" "S" #512#) ("c" #513="SplQueue" "SplQueue" "S" #513#) ("c" #514="SplStack" "SplStack" "S" #514#) ("c" #515="SplDoublyLinkedList" "SplDoublyLinkedList" "S" #515#)) ((#417# "Iterator,Countable") (#419# "ArrayAccess,Serializable") (#420# "Iterator,Countable,Serializable") (#421# "Iterator,Countable,Serializable") (#426# "SimpleXMLElement,RecursiveIterator,Countable") (#427# "Traversable") (#428# "SplType") (#429# "SplEnum") (#430# "SplType") (#431# "SplType") (#432# "SplType") (#436# "DOMCharacterData") (#437# "DOMNode") (#438# "DOMNode") (#439# "Traversable") (#441# "Traversable") (#443# "Exception") (#444# "DOMNode") (#445# "DOMNode") (#446# "DOMNode") (#447# "DOMNode") (#448# "DOMNode") (#449# "DOMNode") (#450# "DOMCharacterData") (#451# "DOMNode") (#452# "DOMText") (#453# "DOMNode") (#456# "IteratorAggregate,ArrayAccess,Serializable,Countable") (#457# "SplFileObject,SeekableIterator,RecursiveIterator") (#458# "SplFileInfo,RecursiveIterator,SeekableIterator") (#460# "RuntimeException") (#461# "RuntimeException") (#462# "Exception") (#463# "RuntimeException") (#464# "RuntimeException") (#465# "LogicException") (#466# "RuntimeException") (#467# "LogicException") (#468# "LogicException") (#469# "LogicException") (#470# "BadFunctionCallException") (#471# "LogicException") (#472# "Exception") (#480# "FilterIterator") (#481# "RecursiveIteratorIterator,OuterIterator") (#482# "RegexIterator,RecursiveIterator") (#483# "OuterIterator") (#484# "FilterIterator,OuterIterator,RecursiveIterator") (#485# "FilesystemIterator,SeekableIterator,RecursiveIterator") (#486# "CallbackFilterIterator,OuterIterator,RecursiveIterator") (#487# "CachingIterator,Countable,ArrayAccess,OuterIterator,RecursiveIterator") (#488# "ArrayIterator,RecursiveIterator") (#489# "RecursiveFilterIterator,RecursiveIterator,OuterIterator") (#490# "IteratorIterator") (#491# "Iterator") (#492# "IteratorIterator,OuterIterator") (#493# "OuterIterator") (#494# "IteratorIterator,OuterIterator") (#495# "FilesystemIterator,SeekableIterator,Countable") (#496# "IteratorIterator,OuterIterator") (#497# "DirectoryIterator,SeekableIterator") (#498# "Iterator") (#499# "SplFileInfo,SeekableIterator") (#500# "FilterIterator,OuterIterator") (#501# "IteratorIterator,OuterIterator,ArrayAccess,Countable") (#502# "ArrayAccess,SeekableIterator,Countable,Serializable") (#503# "Iterator") (#504# "ArrayAccess,SeekableIterator,Countable,Serializable") (#505# "Iterator") (#506# "OuterIterator") (#507# "Countable,Iterator,Serializable,ArrayAccess") (#508# "Iterator,ArrayAccess,Countable") (#509# "Iterator,Countable") (#510# "SplHeap,Iterator,Countable") (#511# "SplHeap,Iterator,Countable") (#512# "Iterator,Countable") (#513# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#514# "SplDoublyLinkedList,Iterator,ArrayAccess,Countable") (#515# "Iterator,ArrayAccess,Countable")))
)
